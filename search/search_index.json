{"config":{"lang":["en","tr","ar","de","es","fr","it","ja"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#welcome-to-the-owasp-top-10-2021","title":"Welcome to the OWASP Top 10 - 2021","text":"<p>Welcome to the latest installment of the OWASP Top 10! The OWASP Top 10 2021 is all-new, with a new graphic design and an available one-page infographic you can print or obtain from our home page.</p> <p>A huge thank you to everyone that contributed their time and data for this iteration. Without you, this installment would not happen. THANK YOU!</p>"},{"location":"#whats-changed-in-the-top-10-for-2021","title":"What's changed in the Top 10 for 2021","text":"<p>There are three new categories, four categories with naming and scoping changes, and some consolidation in the Top 10 for 2021. We've changed names when necessary to focus on the root cause over the symptom.</p> <p></p> <ul> <li>A01:2021-Broken Access Control moves up from the fifth position to the category with the most serious web application security risk; the contributed data indicates that on average, 3.81% of applications tested had one or more Common Weakness Enumerations (CWEs) with more than 318k occurrences of CWEs in this risk category. The 34 CWEs mapped to Broken Access Control had more occurrences in applications than any other category.</li> <li>A02:2021-Cryptographic Failures shifts up one position to #2, previously known as A3:2017-Sensitive Data Exposure, which was broad symptom rather than a root cause. The renewed name focuses on failures related to cryptography as it has been implicitly before. This category often leads to sensitive data exposure or system compromise.</li> <li>A03:2021-Injection slides down to the third position. 94% of the applications were tested for some form of injection with a max incidence rate of 19%, an average incidence rate of 3.37%, and the 33 CWEs mapped into this category have the second most occurrences in applications with 274k occurrences. Cross-site Scripting is now part of this category in this edition.</li> <li>A04:2021-Insecure Design is a new category for 2021, with a focus on risks related to design flaws. If we genuinely want to \"move left\" as an industry, we need more threat modeling, secure design patterns and principles, and reference architectures. An insecure design cannot be fixed by a perfect implementation as by definition, needed security controls were never created to defend against specific attacks.</li> <li>A05:2021-Security Misconfiguration moves up from #6 in the previous edition; 90% of applications were tested for some form of misconfiguration, with an average incidence rate of 4.5%, and over 208k occurrences of CWEs mapped to this risk category. With more shifts into highly configurable software, it's not surprising to see this category move up. The former category for A4:2017-XML External Entities (XXE) is now part of this risk category.</li> <li>A06:2021-Vulnerable and Outdated Components was previously titled Using Components with Known Vulnerabilities and is #2 in the Top 10 community survey, but also had enough data to make the Top 10 via data analysis. This category moves up from #9 in 2017 and is a known issue that we struggle to test and assess risk. It is the only category not to have any Common Vulnerability and Exposures (CVEs) mapped to the included CWEs, so a default exploit and impact weights of 5.0 are factored into their scores.</li> <li>A07:2021-Identification and Authentication Failures was previously Broken Authentication and is sliding down from the second position, and now includes CWEs that are more related to identification failures. This category is still an integral part of the Top 10, but the increased availability of standardized frameworks seems to be helping.</li> <li>A08:2021-Software and Data Integrity Failures is a new category for 2021, focusing on making assumptions related to software updates, critical data, and CI/CD pipelines without verifying integrity. One of the highest weighted impacts from Common Vulnerability and Exposures/Common Vulnerability Scoring System (CVE/CVSS) data mapped to the 10 CWEs in this category. A8:2017-Insecure Deserialization is now a part of this larger category.</li> <li>A09:2021-Security Logging and Monitoring Failures was previously A10:2017-Insufficient Logging &amp; Monitoring and is added from the Top 10 community survey (#3), moving up from #10 previously. This category is expanded to include more types of failures, is challenging to test for, and isn't well represented in the CVE/CVSS data. However, failures in this category can directly impact visibility, incident alerting, and forensics.</li> <li>A10:2021-Server-Side Request Forgery is added from the Top 10 community survey (#1). The data shows a relatively low incidence rate with above average testing coverage, along with above-average ratings for Exploit and Impact potential. This category represents the scenario where the security community members are telling us this is important, even though it's not illustrated in the data at this time.</li> </ul>"},{"location":"#methodology","title":"Methodology","text":"<p>This installment of the Top 10 is more data-driven than ever but not blindly data-driven. We selected eight of the ten categories from contributed data and two categories from the Top 10 community survey at a high level. We do this for a fundamental reason, looking at the contributed data is looking into the past. AppSec researchers take time to find new vulnerabilities and new ways to test for them. It takes time to integrate these tests into tools and processes. By the time we can reliably test a weakness at scale, years have likely passed. To balance that view, we use a community survey to ask application security and development experts on the front lines what they see as essential weaknesses that the data may not show yet.</p> <p>There are a few critical changes that we adopted to continue to mature the Top 10.</p>"},{"location":"#how-the-categories-are-structured","title":"How the categories are structured","text":"<p>A few categories have changed from the previous installment of the OWASP Top Ten. Here is a high-level summary of the category changes.</p> <p>Previous data collection efforts were focused on a prescribed subset of approximately 30 CWEs with a field asking for additional findings. We learned that organizations would primarily focus on just those 30 CWEs and rarely add additional CWEs that they saw. In this iteration, we opened it up and just asked for data, with no restriction on CWEs. We asked for the number of applications tested for a given year (starting in 2017), and the number of applications with at least one instance of a CWE found in testing. This format allows us to track how prevalent each CWE is within the population of applications. We ignore frequency for our purposes; while it may be necessary for other situations, it only hides the actual prevalence in the application population. Whether an application has four instances of a CWE or 4,000 instances is not part of the calculation for the Top 10. We went from approximately 30 CWEs to almost 400 CWEs to analyze in the dataset. We plan to do additional data analysis as a supplement in the future. This significant increase in the number of CWEs necessitates changes to how the categories are structured.</p> <p>We spent several months grouping and categorizing CWEs and could have continued for additional months. We had to stop at some point. There are both root cause and symptom types of CWEs, where root cause types are like \"Cryptographic Failure\" and \"Misconfiguration\" contrasted to symptom types like \"Sensitive Data Exposure\" and \"Denial of Service.\" We decided to focus on the root cause whenever possible as it's more logical for providing identification and remediation guidance. Focusing on the root cause over the symptom isn't a new concept; the Top Ten has been a mix of symptom and root cause. CWEs are also a mix of symptom and root cause; we are simply being more deliberate about it and calling it out. There is an average of 19.6 CWEs per category in this installment, with the lower bounds at 1 CWE for A10:2021-Server-Side Request Forgery (SSRF) to 40 CWEs in A04:2021-Insecure Design. This updated category structure offers additional training benefits as companies can focus on CWEs that make sense for a language/framework.</p>"},{"location":"#how-the-data-is-used-for-selecting-categories","title":"How the data is used for selecting categories","text":"<p>In 2017, we selected categories by incidence rate to determine likelihood, then ranked them by team discussion based on decades of experience for Exploitability, Detectability (also likelihood), and Technical Impact. For 2021, we want to use data for Exploitability and (Technical) Impact if possible.</p> <p>We downloaded OWASP Dependency Check and extracted the CVSS Exploit, and Impact scores grouped by related CWEs. It took a fair bit of research and effort as all the CVEs have CVSSv2 scores, but there are flaws in CVSSv2 that CVSSv3 should address. After a certain point in time, all CVEs are assigned a CVSSv3 score as well. Additionally, the scoring ranges and formulas were updated between CVSSv2 and CVSSv3.</p> <p>In CVSSv2, both Exploit and (Technical) Impact could be up to 10.0, but the formula would knock them down to 60% for Exploit and 40% for Impact. In CVSSv3, the theoretical max was limited to 6.0 for Exploit and 4.0 for Impact. With the weighting considered, the Impact scoring shifted higher, almost a point and a half on average in CVSSv3, and exploitability moved nearly half a point lower on average.</p> <p>There are 125k records of a CVE mapped to a CWE in the National Vulnerability Database (NVD) data extracted from OWASP Dependency Check, and there are 241 unique CWEs mapped to a CVE. 62k CWE maps have a CVSSv3 score, which is approximately half of the population in the data set.</p> <p>For the Top Ten 2021, we calculated average exploit and impact scores in the following manner. We grouped all the CVEs with CVSS scores by CWE and weighted both exploit and impact scored by the percentage of the population that had CVSSv3 + the remaining population of CVSSv2 scores to get an overall average. We mapped these averages to the CWEs in the dataset to use as Exploit and (Technical) Impact scoring for the other half of the risk equation.</p>"},{"location":"#why-not-just-pure-statistical-data","title":"Why not just pure statistical data?","text":"<p>The results in the data are primarily limited to what we can test for in an automated fashion. Talk to a seasoned AppSec professional, and they will tell you about stuff they find and trends they see that aren't yet in the data. It takes time for people to develop testing methodologies for certain vulnerability types and then more time for those tests to be automated and run against a large population of applications. Everything we find is looking back in the past and might be missing trends from the last year, which are not present in the data.</p> <p>Therefore, we only pick eight of ten categories from the data because it's incomplete. The other two categories are from the Top 10 community survey. It allows the practitioners on the front lines to vote for what they see as the highest risks that might not be in the data (and may never be expressed in data).</p>"},{"location":"#why-incidence-rate-instead-of-frequency","title":"Why incidence rate instead of frequency?","text":"<p>There are three primary sources of data. We identify them as Human-assisted Tooling (HaT), Tool-assisted Human (TaH), and raw Tooling.</p> <p>Tooling and HaT are high-frequency finding generators. Tools will look for specific vulnerabilities and tirelessly attempt to find every instance of that vulnerability and will generate high finding counts for some vulnerability types. Look at Cross-Site Scripting, which is typically one of two flavors: it's either a more minor, isolated mistake or a systemic issue. When it's a systemic issue, the finding counts can be in the thousands for a single application. This high frequency drowns out most other vulnerabilities found in reports or data.</p> <p>TaH, on the other hand, will find a broader range of vulnerability types but at a much lower frequency due to time constraints. When humans test an application and see something like Cross-Site Scripting, they will typically find three or four instances and stop. They can determine a systemic finding and write it up with a recommendation to fix on an application-wide scale. There is no need (or time) to find every instance.</p> <p>Suppose we take these two distinct data sets and try to merge them on frequency. In that case, the Tooling and HaT data will drown the more accurate (but broad) TaH data and is a good part of why something like Cross-Site Scripting has been so highly ranked in many lists when the impact is generally low to moderate. It's because of the sheer volume of findings. (Cross-Site Scripting is also reasonably easy to test for, so there are many more tests for it as well).</p> <p>In 2017, we introduced using incidence rate instead to take a fresh look at the data and cleanly merge Tooling and HaT data with TaH data. The incidence rate asks what percentage of the application population had at least one instance of a vulnerability type. We don't care if it was one-off or systemic. That's irrelevant for our purposes; we just need to know how many applications had at least one instance, which helps provide a clearer view of the testing is findings across multiple testing types without drowning the data in high-frequency results. This corresponds to a risk related view as an attacker needs only one instance to attack an application successfully via the category.</p>"},{"location":"#what-is-your-data-collection-and-analysis-process","title":"What is your data collection and analysis process?","text":"<p>We formalized the OWASP Top 10 data collection process at the Open Security Summit in 2017. OWASP Top 10 leaders and the community spent two days working out formalizing a transparent data collection process. The 2021 edition is the second time we have used this methodology.</p> <p>We publish a call for data through social media channels available to us, both project and OWASP. On the OWASP Project page, we list the data elements and structure we are looking for and how to submit them. In the GitHub project, we have example files that serve as templates. We work with organizations as needed to help figure out the structure and mapping to CWEs.</p> <p>We get data from organizations that are testing vendors by trade, bug bounty vendors, and organizations that contribute internal testing data. Once we have the data, we load it together and run a fundamental analysis of what CWEs map to risk categories. There is overlap between some CWEs, and others are very closely related (ex. Cryptographic vulnerabilities). Any decisions related to the raw data submitted are documented and published to be open and transparent with how we normalized the data.</p> <p>We look at the eight categories with the highest incidence rates for inclusion in the Top 10. We also look at the Top 10 community survey results to see which ones may already be present in the data. The top two votes that aren't already present in the data will be selected for the other two places in the Top 10. Once all ten were selected, we applied generalized factors for exploitability and impact; to help rank the Top 10 2021 in a risk based order.</p>"},{"location":"#data-factors","title":"Data Factors","text":"<p>There are data factors that are listed for each of the Top 10 Categories, here is what they mean:</p> <ul> <li>CWEs Mapped: The number of CWEs mapped to a category by the Top 10 team.</li> <li>Incidence Rate: Incidence rate is the percentage of applications vulnerable to that CWE from the population tested by that org for that year.</li> <li>(Testing) Coverage: The percentage of applications tested by all organizations for a given CWE.</li> <li>Weighted Exploit: The Exploit sub-score from CVSSv2 and CVSSv3 scores assigned to CVEs mapped to CWEs, normalized, and placed on a 10pt scale.</li> <li>Weighted Impact: The Impact sub-score from CVSSv2 and CVSSv3 scores assigned to CVEs mapped to CWEs, normalized, and placed on a 10pt scale.</li> <li>Total Occurrences: Total number of applications found to have the CWEs mapped to a category.</li> <li>Total CVEs: Total number of CVEs in the NVD DB that were mapped to the CWEs mapped to a category.</li> </ul>"},{"location":"#thank-you-to-our-data-contributors","title":"Thank you to our data contributors","text":"<p>The following organizations (along with some anonymous donors) kindly donated data for over 500,000 applications to make this the largest and most comprehensive application security data set. Without you, this would not be possible.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"#thank-you-to-our-sponsors","title":"Thank you to our sponsors","text":"<p>The OWASP Top 10 2021 team gratefully acknowledge the financial support of Secure Code Warrior and Just Eat.</p> <p> </p> <p></p>"},{"location":"0x00_2021-notice/","title":"Release","text":"<p>Originally released 24th September 2021, v1.1 released 13 July 2025.</p>"},{"location":"0x00_2021-notice/#lead-authors","title":"Lead Authors","text":"<ul> <li>Andrew van der Stock (twitter: @vanderaj)</li> <li>Brian Glas (twitter: @infosecdad)</li> <li>Neil Smithline (twitter: @appsecneil)</li> <li>Torsten Gigler (twitter: @torsten_tweet)</li> </ul>"},{"location":"0x00_2021-notice/#contributors","title":"Contributors","text":"<ul> <li>Orange Tsai @orange_8361, Author of A10-2021: Server Side Request Forgery</li> <li>Jim Manico @manicode and Jakub Ma\u0107kowski @kubamackowski - OWASP CheatSheets Coordination</li> </ul>"},{"location":"0x00_2021-notice/#how-you-can-help","title":"How you can help","text":"<p>At this stage, we are asking for</p> <ul> <li>Data scientists - please peer review our analysis</li> <li>Web designers - we need to make a mobile friendly version</li> <li>Translators - please review the English text to make sure it's translatable</li> <li>ASVS, Testing Guide, and Code Review Guide leadership - please use our data and help us link our documents and standards together</li> </ul>"},{"location":"0x00_2021-notice/#log-issues-and-pull-requests","title":"Log issues and pull requests","text":"<p>Please log any corrections or issues:</p> <ul> <li>https://github.com/OWASP/Top10/issues</li> </ul>"},{"location":"0x01_2021-about-owasp/","title":"About OWASP","text":"<p>The Open Worldwide Application Security Project (OWASP) is an open community dedicated to enabling organizations to develop, purchase, and maintain applications and APIs that can be trusted.</p> <p>At OWASP, you'll find free and open:</p> <ul> <li>Application security tools and standards</li> <li>Cutting edge research</li> <li>Standard security controls and libraries</li> <li>Complete books on application security testing, secure code development, and secure code review</li> <li>Presentations and videos</li> <li>Cheat sheets on many common topics</li> <li>Chapters meetings</li> <li>Events, training, and conferences.</li> <li>Google Groups Learn more at: https://owasp.org.</li> </ul> <p>All OWASP tools, documents, videos, presentations, and chapters are free and open to anyone interested in improving application security.</p> <p>We advocate approaching application security as a people, process, and technology problem, because the most effective approaches to application security require improvements in these areas.</p> <p>OWASP is a new kind of organization. Our freedom from commercial pressures allows us to provide unbiased, practical, and cost-effective information about application security.</p> <p>OWASP is not affiliated with any technology company, although we support the informed use of commercial security technology. OWASP produces many types of materials in a collaborative, transparent, and open way.</p> <p>The OWASP Foundation is the non-profit entity that ensures the project's long-term success. Almost everyone associated with OWASP is a volunteer, including the OWASP board, chapter leaders, project leaders, and project members. We support innovative security research with grants and infrastructure.</p> <p>Come join us!</p>"},{"location":"0x01_2021-about-owasp/#copyright-and-license","title":"Copyright and License","text":"<p>Copyright \u00a9 2003-2025 The OWASP\u00ae Foundation, Inc. This document is released under the Creative Commons Attribution Share-Alike 4.0 license. For any reuse or distribution, you must make it clear to others the license terms of this work.</p>"},{"location":"A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/","title":"How to start an AppSec Program with the OWASP Top 10","text":"<p>Previously, the OWASP Top 10 was never designed to be the basis for an AppSec program. However, it's essential to start somewhere for many organizations just starting out on their application security journey. The OWASP Top 10 2021 is a good start as a baseline for checklists and so on, but it's not in itself sufficient.</p>"},{"location":"A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#stage-1-identify-the-gaps-and-goals-of-your-appsec-program","title":"Stage 1. Identify the gaps and goals of your appsec program","text":"<p>Many Application Security (AppSec) programs try to run before they can crawl or walk. These efforts are doomed to failure. We strongly encourage CISOs and AppSec leadership to use OWASP Software Assurance Maturity Model (SAMM) to identify weaknesses and areas for improvement over a 1-3 year period. The first step is to evaluate where you are now, identify the gaps in governance, design, implementation, verification, and operations you need to resolve immediately versus those that can wait, and prioritize implementing or improving the fifteen OWASP SAMM security practices. OWASP SAMM can help you build and measure improvements in your software assurance efforts.</p>"},{"location":"A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#stage-2-plan-for-a-paved-road-secure-development-lifecycle","title":"Stage 2. Plan for a paved road secure development lifecycle","text":"<p>Traditionally the preserve of so-called \"unicorns\", the paved road concept is the easiest way to make the most impact and scale AppSec resources with development team velocity, which only increases every year.</p> <p>The paved road concept is \"the easiest way is also the most secure way\" and should involve a culture of deep partnerships between the development team and the security team, preferably such that they are one and the same team. The paved road aims to continuously improve, measure, detect and replace insecure alternatives by having an enterprise-wide library of drop-in secured replacements, with tooling to help see where improvements can be made by adopting the paved road. This allows existing development tools to report on insecure builds and help development teams self-correct away from insecure alternatives.</p> <p>The paved road might seem a lot to take in, but it should be built incrementally over time. There are other forms of appsec programs out there, notably the Microsoft Agile Secure Development Lifecycle. Not every appsec program methodology suits every business.</p>"},{"location":"A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#stage-3-implement-the-paved-road-with-your-development-teams","title":"Stage 3. Implement the paved road with your development teams","text":"<p>Paved roads are built with the consent and direct involvement of the relevant development and operations teams. The paved road should be aligned strategically with the business and help deliver more secure applications faster. Developing the paved road should be a holistic exercise covering the entire enterprise or application ecosystem, not a per-app band-aid, as in the old days.</p>"},{"location":"A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#stage-4-migrate-all-upcoming-and-existing-applications-to-the-paved-road","title":"Stage 4. Migrate all upcoming and existing applications to the paved road","text":"<p>Add paved road detection tools as you develop them and provide information to development teams to improve the security of their applications by how they can directly adopt elements of the paved road. Once an aspect of the paved road has been adopted, organizations should implement continuous integration checks that inspect existing code and check-ins that use prohibited alternatives and warn or reject the build or check-in. This prevents insecure options from creeping into code over time, preventing technical debt and a defective insecure application. Such warnings should link to the secure alternative, so the development team is given the correct answer immediately. They can refactor and adopt the paved road component quickly.</p>"},{"location":"A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#stage-5-test-that-the-paved-road-has-mitigated-the-issues-found-in-the-owasp-top-10","title":"Stage 5. Test that the paved road has mitigated the issues found in the OWASP Top 10","text":"<p>Paved road components should address a significant issue with the OWASP Top 10, for example, how to automatically detect or fix vulnerable components, or a static code analysis IDE plugin to detect injections or even better start using a library that is known safe against injection. The more of these secure drop-in replacements provided to teams, the better. A vital task of the appsec team is to ensure that the security of these components is continuously evaluated and improved. Once they are improved, some form of communication pathway with consumers of the component should indicate that an upgrade should occur, preferably automatically, but if not, at least highlighted on a dashboard or similar.</p>"},{"location":"A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#stage-6-build-your-program-into-a-mature-appsec-program","title":"Stage 6. Build your program into a mature AppSec program","text":"<p>You must not stop at the OWASP Top 10. It only covers 10 risk categories. We strongly encourage organizations to adopt the Application Security Verification Standard and progressively add paved road components and tests for Level 1, 2, and 3, depending on the developed applications' risk level.</p>"},{"location":"A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#going-beyond","title":"Going beyond","text":"<p>All great AppSec programs go beyond the bare minimum. Everyone must keep going if we're ever going to get on top of appsec vulnerabilities.</p> <ul> <li> <p>Conceptual integrity. Mature AppSec programs must contain some     concept of security architecture, whether a formal cloud or     enterprise security architecture or threat modeling</p> </li> <li> <p>Automation and scale. Mature AppSec programs try to automate as     much of their deliverables as possible, using scripts to emulate     complex penetration testing steps, static code analysis tools     directly available to the development teams, assisting dev teams in     building appsec unit and integration tests, and more.</p> </li> <li> <p>Culture. Mature AppSec programs try to build out the insecure     design and eliminate the technical debt of existing code by being a     part of the development team and not to the side. AppSec teams who     see development teams as \"us\" and \"them\" are doomed to failure.</p> </li> <li> <p>Continuous improvement. Mature AppSec programs look to     constantly improve. If something is not working, stop doing it. If     something is clunky or not scalable, work to improve it. If     something is not being used by the development teams and has no or     limited impact, do something different. Just because we've done     testing like desk checks since the 1970s doesn't mean it's a good     idea. Measure, evaluate, and then build or improve.</p> </li> </ul>"},{"location":"A00_2021_How_to_use_the_OWASP_Top_10_as_a_standard/","title":"How to use the OWASP Top 10 as a standard","text":"<p>The OWASP Top 10 is primarily an awareness document. However, this has not stopped organizations from using it as a de facto industry AppSec standard since its inception in 2003. If you want to use the OWASP Top 10 as a coding or testing standard, know that it is the bare minimum and just a starting point.</p> <p>One of the difficulties of using the OWASP Top 10 as a standard is that we document AppSec risks, and not necessarily easily testable issues. For example, A04:2021-Insecure Design is beyond the scope of most forms of testing. Another example is testing whether in-place, in-use, and effective logging and monitoring are implemented, which can only be done with interviews and requesting a sampling of effective incident responses. A static code analysis tool can look for the absence of logging, but it might be impossible to determine if business logic or access control is logging critical security breaches. Penetration testers may only be able to determine that they have invoked incident response in a test environment, which is rarely monitored in the same way as production.</p> <p>Here are our recommendations for when it is appropriate to use the OWASP Top 10:</p> Use Case OWASP Top 10 2021 OWASP Application Security Verification Standard Awareness Yes Training Entry level Comprehensive Design and architecture Occasionally Yes Coding standard Bare minimum Yes Secure Code review Bare minimum Yes Peer review checklist Bare minimum Yes Unit testing Occasionally Yes Integration testing Occasionally Yes Penetration testing Bare minimum Yes Tool support Bare minimum Yes Secure Supply Chain Occasionally Yes <p>We would encourage anyone wanting to adopt an application security standard to use the OWASP Application Security Verification Standard (ASVS), as it\u2019s designed to be verifiable and tested, and can be used in all parts of a secure development lifecycle.</p> <p>The ASVS is the only acceptable choice for tool vendors. Tools cannot comprehensively detect, test, or protect against the OWASP Top 10 due to the nature of several of the OWASP Top 10 risks, with reference to A04:2021-Insecure Design. OWASP discourages any claims of full coverage of the OWASP Top 10, because it\u2019s simply untrue.</p>"},{"location":"A00_2021_Introduction/","title":"Introduction","text":""},{"location":"A00_2021_Introduction/#welcome-to-the-owasp-top-10-2021","title":"Welcome to the OWASP Top 10 - 2021","text":"<p>Welcome to the latest installment of the OWASP Top 10! The OWASP Top 10 2021 is all-new, with a new graphic design and an available one-page infographic you can print or obtain from our home page.</p> <p>A huge thank you to everyone that contributed their time and data for this iteration. Without you, this installment would not happen. THANK YOU!</p>"},{"location":"A00_2021_Introduction/#whats-changed-in-the-top-10-for-2021","title":"What's changed in the Top 10 for 2021","text":"<p>There are three new categories, four categories with naming and scoping changes, and some consolidation in the Top 10 for 2021. We've changed names when necessary to focus on the root cause over the symptom.</p> <p></p> <ul> <li>A01:2021-Broken Access Control moves up from the fifth position to the category with the most serious web application security risk; the contributed data indicates that on average, 3.81% of applications tested had one or more Common Weakness Enumerations (CWEs) with more than 318k occurrences of CWEs in this risk category. The 34 CWEs mapped to Broken Access Control had more occurrences in applications than any other category.</li> <li>A02:2021-Cryptographic Failures shifts up one position to #2, previously known as A3:2017-Sensitive Data Exposure, which was broad symptom rather than a root cause. The renewed name focuses on failures related to cryptography as it has been implicitly before. This category often leads to sensitive data exposure or system compromise.</li> <li>A03:2021-Injection slides down to the third position. 94% of the applications were tested for some form of injection with a max incidence rate of 19%, an average incidence rate of 3.37%, and the 33 CWEs mapped into this category have the second most occurrences in applications with 274k occurrences. Cross-site Scripting is now part of this category in this edition.</li> <li>A04:2021-Insecure Design is a new category for 2021, with a focus on risks related to design flaws. If we genuinely want to \"move left\" as an industry, we need more threat modeling, secure design patterns and principles, and reference architectures. An insecure design cannot be fixed by a perfect implementation as by definition, needed security controls were never created to defend against specific attacks.</li> <li>A05:2021-Security Misconfiguration moves up from #6 in the previous edition; 90% of applications were tested for some form of misconfiguration, with an average incidence rate of 4.5%, and over 208k occurrences of CWEs mapped to this risk category. With more shifts into highly configurable software, it's not surprising to see this category move up. The former category for A4:2017-XML External Entities (XXE) is now part of this risk category.</li> <li>A06:2021-Vulnerable and Outdated Components was previously titled Using Components with Known Vulnerabilities and is #2 in the Top 10 community survey, but also had enough data to make the Top 10 via data analysis. This category moves up from #9 in 2017 and is a known issue that we struggle to test and assess risk. It is the only category not to have any Common Vulnerability and Exposures (CVEs) mapped to the included CWEs, so a default exploit and impact weights of 5.0 are factored into their scores.</li> <li>A07:2021-Identification and Authentication Failures was previously Broken Authentication and is sliding down from the second position, and now includes CWEs that are more related to identification failures. This category is still an integral part of the Top 10, but the increased availability of standardized frameworks seems to be helping.</li> <li>A08:2021-Software and Data Integrity Failures is a new category for 2021, focusing on making assumptions related to software updates, critical data, and CI/CD pipelines without verifying integrity. One of the highest weighted impacts from Common Vulnerability and Exposures/Common Vulnerability Scoring System (CVE/CVSS) data mapped to the 10 CWEs in this category. A8:2017-Insecure Deserialization is now a part of this larger category.</li> <li>A09:2021-Security Logging and Monitoring Failures was previously A10:2017-Insufficient Logging &amp; Monitoring and is added from the Top 10 community survey (#3), moving up from #10 previously. This category is expanded to include more types of failures, is challenging to test for, and isn't well represented in the CVE/CVSS data. However, failures in this category can directly impact visibility, incident alerting, and forensics.</li> <li>A10:2021-Server-Side Request Forgery is added from the Top 10 community survey (#1). The data shows a relatively low incidence rate with above average testing coverage, along with above-average ratings for Exploit and Impact potential. This category represents the scenario where the security community members are telling us this is important, even though it's not illustrated in the data at this time.</li> </ul>"},{"location":"A00_2021_Introduction/#methodology","title":"Methodology","text":"<p>This installment of the Top 10 is more data-driven than ever but not blindly data-driven. We selected eight of the ten categories from contributed data and two categories from the Top 10 community survey at a high level. We do this for a fundamental reason, looking at the contributed data is looking into the past. AppSec researchers take time to find new vulnerabilities and new ways to test for them. It takes time to integrate these tests into tools and processes. By the time we can reliably test a weakness at scale, years have likely passed. To balance that view, we use a community survey to ask application security and development experts on the front lines what they see as essential weaknesses that the data may not show yet.</p> <p>There are a few critical changes that we adopted to continue to mature the Top 10.</p>"},{"location":"A00_2021_Introduction/#how-the-categories-are-structured","title":"How the categories are structured","text":"<p>A few categories have changed from the previous installment of the OWASP Top Ten. Here is a high-level summary of the category changes.</p> <p>Previous data collection efforts were focused on a prescribed subset of approximately 30 CWEs with a field asking for additional findings. We learned that organizations would primarily focus on just those 30 CWEs and rarely add additional CWEs that they saw. In this iteration, we opened it up and just asked for data, with no restriction on CWEs. We asked for the number of applications tested for a given year (starting in 2017), and the number of applications with at least one instance of a CWE found in testing. This format allows us to track how prevalent each CWE is within the population of applications. We ignore frequency for our purposes; while it may be necessary for other situations, it only hides the actual prevalence in the application population. Whether an application has four instances of a CWE or 4,000 instances is not part of the calculation for the Top 10. We went from approximately 30 CWEs to almost 400 CWEs to analyze in the dataset. We plan to do additional data analysis as a supplement in the future. This significant increase in the number of CWEs necessitates changes to how the categories are structured.</p> <p>We spent several months grouping and categorizing CWEs and could have continued for additional months. We had to stop at some point. There are both root cause and symptom types of CWEs, where root cause types are like \"Cryptographic Failure\" and \"Misconfiguration\" contrasted to symptom types like \"Sensitive Data Exposure\" and \"Denial of Service.\" We decided to focus on the root cause whenever possible as it's more logical for providing identification and remediation guidance. Focusing on the root cause over the symptom isn't a new concept; the Top Ten has been a mix of symptom and root cause. CWEs are also a mix of symptom and root cause; we are simply being more deliberate about it and calling it out. There is an average of 19.6 CWEs per category in this installment, with the lower bounds at 1 CWE for A10:2021-Server-Side Request Forgery (SSRF) to 40 CWEs in A04:2021-Insecure Design. This updated category structure offers additional training benefits as companies can focus on CWEs that make sense for a language/framework.</p>"},{"location":"A00_2021_Introduction/#how-the-data-is-used-for-selecting-categories","title":"How the data is used for selecting categories","text":"<p>In 2017, we selected categories by incidence rate to determine likelihood, then ranked them by team discussion based on decades of experience for Exploitability, Detectability (also likelihood), and Technical Impact. For 2021, we want to use data for Exploitability and (Technical) Impact if possible.</p> <p>We downloaded OWASP Dependency Check and extracted the CVSS Exploit, and Impact scores grouped by related CWEs. It took a fair bit of research and effort as all the CVEs have CVSSv2 scores, but there are flaws in CVSSv2 that CVSSv3 should address. After a certain point in time, all CVEs are assigned a CVSSv3 score as well. Additionally, the scoring ranges and formulas were updated between CVSSv2 and CVSSv3.</p> <p>In CVSSv2, both Exploit and (Technical) Impact could be up to 10.0, but the formula would knock them down to 60% for Exploit and 40% for Impact. In CVSSv3, the theoretical max was limited to 6.0 for Exploit and 4.0 for Impact. With the weighting considered, the Impact scoring shifted higher, almost a point and a half on average in CVSSv3, and exploitability moved nearly half a point lower on average.</p> <p>There are 125k records of a CVE mapped to a CWE in the National Vulnerability Database (NVD) data extracted from OWASP Dependency Check, and there are 241 unique CWEs mapped to a CVE. 62k CWE maps have a CVSSv3 score, which is approximately half of the population in the data set.</p> <p>For the Top Ten 2021, we calculated average exploit and impact scores in the following manner. We grouped all the CVEs with CVSS scores by CWE and weighted both exploit and impact scored by the percentage of the population that had CVSSv3 + the remaining population of CVSSv2 scores to get an overall average. We mapped these averages to the CWEs in the dataset to use as Exploit and (Technical) Impact scoring for the other half of the risk equation.</p>"},{"location":"A00_2021_Introduction/#why-not-just-pure-statistical-data","title":"Why not just pure statistical data?","text":"<p>The results in the data are primarily limited to what we can test for in an automated fashion. Talk to a seasoned AppSec professional, and they will tell you about stuff they find and trends they see that aren't yet in the data. It takes time for people to develop testing methodologies for certain vulnerability types and then more time for those tests to be automated and run against a large population of applications. Everything we find is looking back in the past and might be missing trends from the last year, which are not present in the data.</p> <p>Therefore, we only pick eight of ten categories from the data because it's incomplete. The other two categories are from the Top 10 community survey. It allows the practitioners on the front lines to vote for what they see as the highest risks that might not be in the data (and may never be expressed in data).</p>"},{"location":"A00_2021_Introduction/#why-incidence-rate-instead-of-frequency","title":"Why incidence rate instead of frequency?","text":"<p>There are three primary sources of data. We identify them as Human-assisted Tooling (HaT), Tool-assisted Human (TaH), and raw Tooling.</p> <p>Tooling and HaT are high-frequency finding generators. Tools will look for specific vulnerabilities and tirelessly attempt to find every instance of that vulnerability and will generate high finding counts for some vulnerability types. Look at Cross-Site Scripting, which is typically one of two flavors: it's either a more minor, isolated mistake or a systemic issue. When it's a systemic issue, the finding counts can be in the thousands for a single application. This high frequency drowns out most other vulnerabilities found in reports or data.</p> <p>TaH, on the other hand, will find a broader range of vulnerability types but at a much lower frequency due to time constraints. When humans test an application and see something like Cross-Site Scripting, they will typically find three or four instances and stop. They can determine a systemic finding and write it up with a recommendation to fix on an application-wide scale. There is no need (or time) to find every instance.</p> <p>Suppose we take these two distinct data sets and try to merge them on frequency. In that case, the Tooling and HaT data will drown the more accurate (but broad) TaH data and is a good part of why something like Cross-Site Scripting has been so highly ranked in many lists when the impact is generally low to moderate. It's because of the sheer volume of findings. (Cross-Site Scripting is also reasonably easy to test for, so there are many more tests for it as well).</p> <p>In 2017, we introduced using incidence rate instead to take a fresh look at the data and cleanly merge Tooling and HaT data with TaH data. The incidence rate asks what percentage of the application population had at least one instance of a vulnerability type. We don't care if it was one-off or systemic. That's irrelevant for our purposes; we just need to know how many applications had at least one instance, which helps provide a clearer view of the testing is findings across multiple testing types without drowning the data in high-frequency results. This corresponds to a risk related view as an attacker needs only one instance to attack an application successfully via the category.</p>"},{"location":"A00_2021_Introduction/#what-is-your-data-collection-and-analysis-process","title":"What is your data collection and analysis process?","text":"<p>We formalized the OWASP Top 10 data collection process at the Open Security Summit in 2017. OWASP Top 10 leaders and the community spent two days working out formalizing a transparent data collection process. The 2021 edition is the second time we have used this methodology.</p> <p>We publish a call for data through social media channels available to us, both project and OWASP. On the OWASP Project page, we list the data elements and structure we are looking for and how to submit them. In the GitHub project, we have example files that serve as templates. We work with organizations as needed to help figure out the structure and mapping to CWEs.</p> <p>We get data from organizations that are testing vendors by trade, bug bounty vendors, and organizations that contribute internal testing data. Once we have the data, we load it together and run a fundamental analysis of what CWEs map to risk categories. There is overlap between some CWEs, and others are very closely related (ex. Cryptographic vulnerabilities). Any decisions related to the raw data submitted are documented and published to be open and transparent with how we normalized the data.</p> <p>We look at the eight categories with the highest incidence rates for inclusion in the Top 10. We also look at the Top 10 community survey results to see which ones may already be present in the data. The top two votes that aren't already present in the data will be selected for the other two places in the Top 10. Once all ten were selected, we applied generalized factors for exploitability and impact; to help rank the Top 10 2021 in a risk based order.</p>"},{"location":"A00_2021_Introduction/#data-factors","title":"Data Factors","text":"<p>There are data factors that are listed for each of the Top 10 Categories, here is what they mean:</p> <ul> <li>CWEs Mapped: The number of CWEs mapped to a category by the Top 10 team.</li> <li>Incidence Rate: Incidence rate is the percentage of applications vulnerable to that CWE from the population tested by that org for that year.</li> <li>Weighted Exploit: The Exploit sub-score from CVSSv2 and CVSSv3 scores assigned to CVEs mapped to CWEs, normalized, and placed on a 10pt scale.</li> <li>Weighted Impact: The Impact sub-score from CVSSv2 and CVSSv3 scores assigned to CVEs mapped to CWEs, normalized, and placed on a 10pt scale.</li> <li>(Testing) Coverage: The percentage of applications tested by all organizations for a given CWE.</li> <li>Total Occurrences: Total number of applications found to have the CWEs mapped to a category.</li> <li>Total CVEs: Total number of CVEs in the NVD DB that were mapped to the CWEs mapped to a category.</li> </ul>"},{"location":"A00_2021_Introduction/#thank-you-to-our-data-contributors","title":"Thank you to our data contributors","text":"<p>The following organizations (along with some anonymous donors) kindly donated data for over 500,000 applications to make this the largest and most comprehensive application security data set. Without you, this would not be possible.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"A00_2021_Introduction/#thank-you-to-our-sponsor","title":"Thank you to our sponsor","text":"<p>The OWASP Top 10 2021 team gratefully acknowledge the financial support of Secure Code Warrior and Just Eat.</p> <p> </p> <p></p>"},{"location":"A01_2021-Broken_Access_Control/","title":"A01:2021 \u2013 Broken Access Control","text":""},{"location":"A01_2021-Broken_Access_Control/#factors","title":"Factors","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 34 55.97% 3.81% 6.92 5.93 94.55% 47.72% 318,487 19,013"},{"location":"A01_2021-Broken_Access_Control/#overview","title":"Overview","text":"<p>Moving up from the fifth position, 94% of applications were tested for some form of broken access control with the average incidence rate of 3.81%, and has the most occurrences in the contributed dataset with over 318k. Notable Common Weakness Enumerations (CWEs) included are CWE-200: Exposure of Sensitive Information to an Unauthorized Actor, CWE-201: Insertion of Sensitive Information Into Sent Data, and CWE-352: Cross-Site Request Forgery.</p>"},{"location":"A01_2021-Broken_Access_Control/#description","title":"Description","text":"<p>Access control enforces policy such that users cannot act outside of their intended permissions. Failures typically lead to unauthorized information disclosure, modification, or destruction of all data or performing a business function outside the user's limits. Common access control vulnerabilities include:</p> <ul> <li> <p>Violation of the principle of least privilege or deny by default,     where access should only be granted for particular capabilities,     roles, or users, but is available to anyone.</p> </li> <li> <p>Bypassing access control checks by modifying the URL (parameter     tampering or force browsing), internal application state, or the     HTML page, or by using an attack tool modifying API requests.</p> </li> <li> <p>Permitting viewing or editing someone else's account, by providing     its unique identifier (insecure direct object references)</p> </li> <li> <p>Accessing API with missing access controls for POST, PUT and DELETE.</p> </li> <li> <p>Elevation of privilege. Acting as a user without being logged in or     acting as an admin when logged in as a user.</p> </li> <li> <p>Metadata manipulation, such as replaying or tampering with a JSON     Web Token (JWT) access control token, or a cookie or hidden field     manipulated to elevate privileges or abusing JWT invalidation.</p> </li> <li> <p>CORS misconfiguration allows API access from unauthorized/untrusted     origins.</p> </li> <li> <p>Force browsing to authenticated pages as an unauthenticated user or     to privileged pages as a standard user.</p> </li> </ul>"},{"location":"A01_2021-Broken_Access_Control/#how-to-prevent","title":"How to Prevent","text":"<p>Access control is only effective in trusted server-side code or server-less API, where the attacker cannot modify the access control check or metadata.</p> <ul> <li> <p>Except for public resources, deny by default.</p> </li> <li> <p>Implement access control mechanisms once and re-use them throughout     the application, including minimizing Cross-Origin Resource Sharing (CORS) usage.</p> </li> <li> <p>Model access controls should enforce record ownership rather than     accepting that the user can create, read, update, or delete any     record.</p> </li> <li> <p>Unique application business limit requirements should be enforced by     domain models.</p> </li> <li> <p>Disable web server directory listing and ensure file metadata (e.g.,     .git) and backup files are not present within web roots.</p> </li> <li> <p>Log access control failures, alert admins when appropriate (e.g.,     repeated failures).</p> </li> <li> <p>Rate limit API and controller access to minimize the harm from     automated attack tooling.</p> </li> <li> <p>Stateful session identifiers should be invalidated on the server after logout.     Stateless JWT tokens should rather be short-lived so that the window of      opportunity for an attacker is minimized. For longer lived JWTs it's highly recommended to     follow the OAuth standards to revoke access.</p> </li> </ul> <p>Developers and QA staff should include functional access control unit and integration tests.</p>"},{"location":"A01_2021-Broken_Access_Control/#example-attack-scenarios","title":"Example Attack Scenarios","text":"<p>Scenario #1: The application uses unverified data in a SQL call that is accessing account information:</p> <pre><code> pstmt.setString(1, request.getParameter(\"acct\"));\n ResultSet results = pstmt.executeQuery( );\n</code></pre> <p>An attacker simply modifies the browser's 'acct' parameter to send whatever account number they want. If not correctly verified, the attacker can access any user's account.</p> <pre><code> https://example.com/app/accountInfo?acct=notmyacct\n</code></pre> <p>Scenario #2: An attacker simply force browses to target URLs. Admin rights are required for access to the admin page.</p> <pre><code> https://example.com/app/getappInfo\n https://example.com/app/admin_getappInfo\n</code></pre> <p>If an unauthenticated user can access either page, it's a flaw. If a non-admin can access the admin page, this is a flaw.</p>"},{"location":"A01_2021-Broken_Access_Control/#references","title":"References","text":"<ul> <li> <p>OWASP Proactive Controls: Enforce Access     Controls</p> </li> <li> <p>OWASP Application Security Verification Standard: V4 Access     Control</p> </li> <li> <p>OWASP Testing Guide: Authorization     Testing</p> </li> <li> <p>OWASP Cheat Sheet: Authorization</p> </li> <li> <p>PortSwigger: Exploiting CORS     misconfiguration</p> </li> <li> <p>OAuth: Revoking Access</p> </li> </ul>"},{"location":"A01_2021-Broken_Access_Control/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":"<p>CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</p> <p>CWE-23 Relative Path Traversal</p> <p>CWE-35 Path Traversal: '.../...//'</p> <p>CWE-59 Improper Link Resolution Before File Access ('Link Following')</p> <p>CWE-200 Exposure of Sensitive Information to an Unauthorized Actor</p> <p>CWE-201 Exposure of Sensitive Information Through Sent Data</p> <p>CWE-219 Storage of File with Sensitive Data Under Web Root</p> <p>CWE-264 Permissions, Privileges, and Access Controls (should no longer be used)</p> <p>CWE-275 Permission Issues</p> <p>CWE-276 Incorrect Default Permissions</p> <p>CWE-284 Improper Access Control</p> <p>CWE-285 Improper Authorization</p> <p>CWE-352 Cross-Site Request Forgery (CSRF)</p> <p>CWE-359 Exposure of Private Personal Information to an Unauthorized Actor</p> <p>CWE-377 Insecure Temporary File</p> <p>CWE-402 Transmission of Private Resources into a New Sphere ('Resource Leak')</p> <p>CWE-425 Direct Request ('Forced Browsing')</p> <p>CWE-441 Unintended Proxy or Intermediary ('Confused Deputy')</p> <p>CWE-497 Exposure of Sensitive System Information to an Unauthorized Control Sphere</p> <p>CWE-538 Insertion of Sensitive Information into Externally-Accessible File or Directory</p> <p>CWE-540 Inclusion of Sensitive Information in Source Code</p> <p>CWE-548 Exposure of Information Through Directory Listing</p> <p>CWE-552 Files or Directories Accessible to External Parties</p> <p>CWE-566 Authorization Bypass Through User-Controlled SQL Primary Key</p> <p>CWE-601 URL Redirection to Untrusted Site ('Open Redirect')</p> <p>CWE-639 Authorization Bypass Through User-Controlled Key</p> <p>CWE-651 Exposure of WSDL File Containing Sensitive Information</p> <p>CWE-668 Exposure of Resource to Wrong Sphere</p> <p>CWE-706 Use of Incorrectly-Resolved Name or Reference</p> <p>CWE-862 Missing Authorization</p> <p>CWE-863 Incorrect Authorization</p> <p>CWE-913 Improper Control of Dynamically-Managed Code Resources</p> <p>CWE-922 Insecure Storage of Sensitive Information</p> <p>CWE-1275 Sensitive Cookie with Improper SameSite Attribute</p>"},{"location":"A02_2021-Cryptographic_Failures/","title":"A02:2021 \u2013 Cryptographic Failures","text":""},{"location":"A02_2021-Cryptographic_Failures/#factors","title":"Factors","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 29 46.44% 4.49% 7.29 6.81 79.33% 34.85% 233,788 3,075"},{"location":"A02_2021-Cryptographic_Failures/#overview","title":"Overview","text":"<p>Shifting up one position to #2, previously known as Sensitive Data Exposure, which is more of a broad symptom rather than a root cause, the focus is on failures related to cryptography (or lack thereof). Which often lead to exposure of sensitive data. Notable Common Weakness Enumerations (CWEs) included are CWE-259: Use of Hard-coded Password, CWE-327: Broken or Risky Crypto Algorithm, and CWE-331 Insufficient Entropy.</p>"},{"location":"A02_2021-Cryptographic_Failures/#description","title":"Description","text":"<p>The first thing is to determine the protection needs of data in transit and at rest. For example, passwords, credit card numbers, health records, personal information, and business secrets require extra protection, mainly if that data falls under privacy laws, e.g., EU's General Data Protection Regulation (GDPR), or regulations, e.g., financial data protection such as PCI Data Security Standard (PCI DSS). For all such data:</p> <ul> <li> <p>Is any data transmitted in clear text? This concerns protocols such     as HTTP, SMTP, FTP also using TLS upgrades like STARTTLS. External      internet traffic is hazardous. Verify all internal traffic, e.g.,      between load balancers, web servers, or back-end systems.</p> </li> <li> <p>Are any old or weak cryptographic algorithms or protocols used either      by default or in older code?</p> </li> <li> <p>Are default crypto keys in use, weak crypto keys generated or     re-used, or is proper key management or rotation missing?     Are crypto keys checked into source code repositories?</p> </li> <li> <p>Is encryption not enforced, e.g., are any HTTP headers (browser)     security directives or headers missing?</p> </li> <li> <p>Is the received server certificate and the trust chain properly validated? </p> </li> <li> <p>Are initialization vectors ignored, reused, or not generated     sufficiently secure for the cryptographic mode of operation?     Is an insecure mode of operation such as ECB in use? Is encryption     used when authenticated encryption is more appropriate?</p> </li> <li> <p>Are passwords being used as cryptographic keys in absence of a     password base key derivation function?</p> </li> <li> <p>Is randomness used for cryptographic purposes that was not designed     to meet cryptographic requirements? Even if the correct function is     chosen, does it need to be seeded by the developer, and if not, has     the developer over-written the strong seeding functionality built into     it with a seed that lacks sufficient entropy/unpredictability?</p> </li> <li> <p>Are deprecated hash functions such as MD5 or SHA1 in use, or are     non-cryptographic hash functions used when cryptographic hash functions     are needed?</p> </li> <li> <p>Are deprecated cryptographic padding methods such as PKCS number 1 v1.5     in use?</p> </li> <li> <p>Are cryptographic error messages or side channel information     exploitable, for example in the form of padding oracle attacks?</p> </li> </ul> <p>See ASVS Crypto (V7), Data Protection (V9), and SSL/TLS (V10)</p>"},{"location":"A02_2021-Cryptographic_Failures/#how-to-prevent","title":"How to Prevent","text":"<p>Do the following, at a minimum, and consult the references:</p> <ul> <li> <p>Classify data processed, stored, or transmitted by an application.     Identify which data is sensitive according to privacy laws,     regulatory requirements, or business needs.</p> </li> <li> <p>Don't store sensitive data unnecessarily. Discard it as soon as     possible or use PCI DSS compliant tokenization or even truncation.     Data that is not retained cannot be stolen.</p> </li> <li> <p>Make sure to encrypt all sensitive data at rest.</p> </li> <li> <p>Ensure up-to-date and strong standard algorithms, protocols, and     keys are in place; use proper key management.</p> </li> <li> <p>Encrypt all data in transit with secure protocols such as TLS with     forward secrecy (FS) ciphers, cipher prioritization by the     server, and secure parameters. Enforce encryption using directives     like HTTP Strict Transport Security (HSTS).</p> </li> <li> <p>Disable caching for response that contain sensitive data.</p> </li> <li> <p>Apply required security controls as per the data classification.</p> </li> <li> <p>Do not use legacy protocols such as FTP and SMTP for transporting     sensitive data.</p> </li> <li> <p>Store passwords using strong adaptive and salted hashing functions     with a work factor (delay factor), such as Argon2, scrypt, bcrypt or     PBKDF2.</p> </li> <li> <p>Initialization vectors must be chosen appropriate for the mode of     operation.  For many modes, this means using a CSPRNG (cryptographically     secure pseudo random number generator).  For modes that require a     nonce, then the initialization vector (IV) does not need a CSPRNG.  In all cases, the IV     should never be used twice for a fixed key.</p> </li> <li> <p>Always use authenticated encryption instead of just encryption.</p> </li> <li> <p>Keys should be generated cryptographically randomly and stored in     memory as byte arrays. If a password is used, then it must be converted     to a key via an appropriate password base key derivation function.</p> </li> <li> <p>Ensure that cryptographic randomness is used where appropriate, and     that it has not been seeded in a predictable way or with low entropy.     Most modern APIs do not require the developer to seed the CSPRNG to     get security.</p> </li> <li> <p>Avoid deprecated cryptographic functions and padding schemes, such as     MD5, SHA1, PKCS number 1 v1.5.</p> </li> <li> <p>Verify independently the effectiveness of configuration and     settings.</p> </li> </ul>"},{"location":"A02_2021-Cryptographic_Failures/#example-attack-scenarios","title":"Example Attack Scenarios","text":"<p>Scenario #1: An application encrypts credit card numbers in a database using automatic database encryption. However, this data is automatically decrypted when retrieved, allowing a SQL injection flaw to retrieve credit card numbers in clear text.</p> <p>Scenario #2: A site doesn't use or enforce TLS for all pages or supports weak encryption. An attacker monitors network traffic (e.g., at an insecure wireless network), downgrades connections from HTTPS to HTTP, intercepts requests, and steals the user's session cookie. The attacker then replays this cookie and hijacks the user's (authenticated) session, accessing or modifying the user's private data. Instead of the above they could alter all transported data, e.g., the recipient of a money transfer.</p> <p>Scenario #3: The password database uses unsalted or simple hashes to store everyone's passwords. A file upload flaw allows an attacker to retrieve the password database. All the unsalted hashes can be exposed with a rainbow table of pre-calculated hashes. Hashes generated by simple or fast hash functions may be cracked by GPUs, even if they were salted.</p>"},{"location":"A02_2021-Cryptographic_Failures/#references","title":"References","text":"<ul> <li> <p>OWASP Proactive Controls: Protect Data Everywhere</p> </li> <li> <p>OWASP Application Security Verification Standard (V7, 9, 10)</p> </li> <li> <p>OWASP Cheat Sheet: Transport Layer Protection</p> </li> <li> <p>OWASP Cheat Sheet: User Privacy Protection</p> </li> <li> <p>OWASP Cheat Sheet: Password Storage</p> </li> <li> <p>OWASP Cheat Sheet: Cryptographic Storage</p> </li> <li> <p>OWASP Cheat Sheet: HSTS</p> </li> <li> <p>OWASP Testing Guide: Testing for weak cryptography</p> </li> </ul>"},{"location":"A02_2021-Cryptographic_Failures/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":"<p>CWE-259 Use of Hard-coded Password</p> <p>CWE-261 Weak Encoding for Password</p> <p>CWE-296 Improper Following of a Certificate's Chain of Trust</p> <p>CWE-310 Cryptographic Issues</p> <p>CWE-319 Cleartext Transmission of Sensitive Information</p> <p>CWE-321 Use of Hard-coded Cryptographic Key</p> <p>CWE-322 Key Exchange without Entity Authentication</p> <p>CWE-323 Reusing a Nonce, Key Pair in Encryption</p> <p>CWE-324 Use of a Key Past its Expiration Date</p> <p>CWE-325 Missing Required Cryptographic Step</p> <p>CWE-326 Inadequate Encryption Strength</p> <p>CWE-327 Use of a Broken or Risky Cryptographic Algorithm</p> <p>CWE-328 Reversible One-Way Hash</p> <p>CWE-329 Not Using a Random IV with CBC Mode</p> <p>CWE-330 Use of Insufficiently Random Values</p> <p>CWE-331 Insufficient Entropy</p> <p>CWE-335 Incorrect Usage of Seeds in Pseudo-Random Number Generator(PRNG)</p> <p>CWE-336 Same Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-337 Predictable Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-338 Use of Cryptographically Weak Pseudo-Random Number Generator(PRNG)</p> <p>CWE-340 Generation of Predictable Numbers or Identifiers</p> <p>CWE-347 Improper Verification of Cryptographic Signature</p> <p>CWE-523 Unprotected Transport of Credentials</p> <p>CWE-720 OWASP Top Ten 2007 Category A9 - Insecure Communications</p> <p>CWE-757 Selection of Less-Secure Algorithm During Negotiation('Algorithm Downgrade')</p> <p>CWE-759 Use of a One-Way Hash without a Salt</p> <p>CWE-760 Use of a One-Way Hash with a Predictable Salt</p> <p>CWE-780 Use of RSA Algorithm without OAEP</p> <p>CWE-818 Insufficient Transport Layer Protection</p> <p>CWE-916 Use of Password Hash With Insufficient Computational Effort</p>"},{"location":"A03_2021-Injection/","title":"A03:2021 \u2013 Injection","text":""},{"location":"A03_2021-Injection/#factors","title":"Factors","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 33 19.09% 3.37% 7.25 7.15 94.04% 47.90% 274,228 32,078"},{"location":"A03_2021-Injection/#overview","title":"Overview","text":"<p>Injection slides down to the third position. 94% of the applications were tested for some form of injection with a max incidence rate of 19%, an average incidence rate of 3%, and 274k occurrences. Notable Common Weakness Enumerations (CWEs) included are CWE-79: Cross-site Scripting, CWE-89: SQL Injection, and CWE-73: External Control of File Name or Path.</p>"},{"location":"A03_2021-Injection/#description","title":"Description","text":"<p>An application is vulnerable to attack when:</p> <ul> <li> <p>User-supplied data is not validated, filtered, or sanitized by the     application.</p> </li> <li> <p>Dynamic queries or non-parameterized calls without context-aware     escaping are used directly in the interpreter.</p> </li> <li> <p>Hostile data is used within object-relational mapping (ORM) search     parameters to extract additional, sensitive records.</p> </li> <li> <p>Hostile data is directly used or concatenated. The SQL or command     contains the structure and malicious data in dynamic queries,     commands, or stored procedures.</p> </li> </ul> <p>Some of the more common injections are SQL, NoSQL, OS command, Object Relational Mapping (ORM), LDAP, and Expression Language (EL) or Object Graph Navigation Library (OGNL) injection. The concept is identical among all interpreters. Source code review is the best method of detecting if applications are vulnerable to injections. Automated testing of all parameters, headers, URL, cookies, JSON, SOAP, and XML data inputs is strongly encouraged. Organizations can include static (SAST), dynamic (DAST), and interactive (IAST) application security testing tools into the CI/CD pipeline to identify introduced injection flaws before production deployment.</p>"},{"location":"A03_2021-Injection/#how-to-prevent","title":"How to Prevent","text":"<p>Preventing injection requires keeping data separate from commands and queries:</p> <ul> <li> <p>The preferred option is to use a safe API, which avoids using the     interpreter entirely, provides a parameterized interface, or     migrates to Object Relational Mapping Tools (ORMs). Note: Even when parameterized, stored procedures can still introduce     SQL injection if PL/SQL or T-SQL concatenates queries and data or     executes hostile data with EXECUTE IMMEDIATE or exec().</p> </li> <li> <p>Use positive server-side input validation. This is     not a complete defense as many applications require special     characters, such as text areas or APIs for mobile applications.</p> </li> <li> <p>For any residual dynamic queries, escape special characters using     the specific escape syntax for that interpreter. Note: SQL structures such as table names, column names, and so on     cannot be escaped, and thus user-supplied structure names are     dangerous. This is a common issue in report-writing software.</p> </li> </ul>"},{"location":"A03_2021-Injection/#example-attack-scenarios","title":"Example Attack Scenarios","text":"<p>Scenario #1: An application uses untrusted data in the construction of the following vulnerable SQL call:</p> <pre><code>String query = \"SELECT \\* FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\";\n</code></pre> <p>Scenario #2: Similarly, an application\u2019s blind trust in frameworks may result in queries that are still vulnerable, (e.g., Hibernate Query Language (HQL)):</p> <pre><code> Query HQLQuery = session.createQuery(\"FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\");\n</code></pre> <p>In both cases, the attacker modifies the \u2018id\u2019 parameter value in their browser to send: ' UNION SLEEP(10);--. For example:</p> <pre><code> http://example.com/app/accountView?id=' UNION SELECT SLEEP(10);--\n</code></pre> <p>This changes the meaning of both queries to return all the records from the accounts table. More dangerous attacks could modify or delete data or even invoke stored procedures.</p>"},{"location":"A03_2021-Injection/#references","title":"References","text":"<ul> <li> <p>OWASP Proactive Controls: Secure Database Access</p> </li> <li> <p>OWASP ASVS: V5 Input Validation and Encoding</p> </li> <li> <p>OWASP Testing Guide: SQL Injection, Command Injection,     and\u00a0ORM Injection</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: SQL Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention in Java</p> </li> <li> <p>OWASP Cheat Sheet: Query Parameterization</p> </li> <li> <p>OWASP Automated Threats to Web Applications \u2013 OAT-014</p> </li> <li> <p>PortSwigger: Server-side template injection</p> </li> </ul>"},{"location":"A03_2021-Injection/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":"<p>CWE-20 Improper Input Validation</p> <p>CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')</p> <p>CWE-75 Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)</p> <p>CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection')</p> <p>CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</p> <p>CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</p> <p>CWE-80 Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</p> <p>CWE-83 Improper Neutralization of Script in Attributes in a Web Page</p> <p>CWE-87 Improper Neutralization of Alternate XSS Syntax</p> <p>CWE-88 Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')</p> <p>CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</p> <p>CWE-90 Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</p> <p>CWE-91 XML Injection (aka Blind XPath Injection)</p> <p>CWE-93 Improper Neutralization of CRLF Sequences ('CRLF Injection')</p> <p>CWE-94 Improper Control of Generation of Code ('Code Injection')</p> <p>CWE-95 Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</p> <p>CWE-96 Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')</p> <p>CWE-97 Improper Neutralization of Server-Side Includes (SSI) Within a Web Page</p> <p>CWE-98 Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')</p> <p>CWE-99 Improper Control of Resource Identifiers ('Resource Injection')</p> <p>CWE-100 Deprecated: Was catch-all for input validation issues</p> <p>CWE-113 Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')</p> <p>CWE-116 Improper Encoding or Escaping of Output</p> <p>CWE-138 Improper Neutralization of Special Elements</p> <p>CWE-184 Incomplete List of Disallowed Inputs</p> <p>CWE-470 Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')</p> <p>CWE-471 Modification of Assumed-Immutable Data (MAID)</p> <p>CWE-564 SQL Injection: Hibernate</p> <p>CWE-610 Externally Controlled Reference to a Resource in Another Sphere</p> <p>CWE-643 Improper Neutralization of Data within XPath Expressions ('XPath Injection')</p> <p>CWE-644 Improper Neutralization of HTTP Headers for Scripting Syntax</p> <p>CWE-652 Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')</p> <p>CWE-917 Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')</p>"},{"location":"A04_2021-Insecure_Design/","title":"A04:2021 \u2013 Insecure Design","text":""},{"location":"A04_2021-Insecure_Design/#factors","title":"Factors","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 40 24.19% 3.00% 6.46 6.78 77.25% 42.51% 262,407 2,691"},{"location":"A04_2021-Insecure_Design/#overview","title":"Overview","text":"<p>A new category for 2021 focuses on risks related to design and architectural flaws, with a call for more use of threat modeling, secure design patterns, and reference architectures. As a community we need to move beyond  \"shift-left\" in the coding space to pre-code activities that are critical for the principles of Secure by Design. Notable Common Weakness Enumerations (CWEs) include CWE-209: Generation of Error Message Containing Sensitive Information, CWE-256: Unprotected Storage of Credentials, CWE-501: Trust Boundary Violation, and CWE-522: Insufficiently Protected Credentials.</p>"},{"location":"A04_2021-Insecure_Design/#description","title":"Description","text":"<p>Insecure design is a broad category representing different weaknesses, expressed as \u201cmissing or ineffective control design.\u201d Insecure design is not the source for all other Top 10 risk categories. There is a difference between insecure design and insecure implementation. We differentiate between design flaws and implementation defects for a reason, they have different root causes and remediation. A secure design can still have implementation defects leading to vulnerabilities that may be exploited. An insecure design cannot be fixed by a perfect implementation as by definition, needed security controls were never created to defend against specific attacks. One of the factors that contribute to insecure design is the lack of business risk profiling inherent in the software or system being developed, and thus the failure to determine what level of security design is required.</p>"},{"location":"A04_2021-Insecure_Design/#requirements-and-resource-management","title":"Requirements and Resource Management","text":"<p>Collect and negotiate the business requirements for an application with the business, including the protection requirements concerning confidentiality, integrity, availability, and authenticity of all data assets and the expected business logic. Take into account how exposed your application will be and if you need segregation of tenants (additionally to access control). Compile the technical requirements, including functional and non-functional security requirements. Plan and negotiate the budget covering all design, build, testing, and operation, including security activities.</p>"},{"location":"A04_2021-Insecure_Design/#secure-design","title":"Secure Design","text":"<p>Secure design is a culture and methodology that constantly evaluates threats and ensures that code is robustly designed and tested to prevent known attack methods. Threat modeling should be integrated into refinement sessions (or similar activities); look for changes in data flows and access control or other security controls. In the user story development determine the correct flow and failure states, ensure they are well understood and agreed upon by responsible and impacted parties. Analyze assumptions and conditions for expected and failure flows, ensure they are still accurate and desirable. Determine how to validate the assumptions and enforce conditions needed for proper behaviors. Ensure the results are documented in the user story. Learn from mistakes and offer positive incentives to promote improvements. Secure design is neither an add-on nor a tool that you can add to software.</p>"},{"location":"A04_2021-Insecure_Design/#secure-development-lifecycle","title":"Secure Development Lifecycle","text":"<p>Secure software requires a secure development lifecycle, some form of secure design pattern, paved road methodology, secured component library, tooling, and threat modeling. Reach out for your security specialists at the beginning of a software project throughout the whole project and maintenance of your software. Consider leveraging the OWASP Software Assurance Maturity Model (SAMM) to help structure your secure software development efforts.</p>"},{"location":"A04_2021-Insecure_Design/#how-to-prevent","title":"How to Prevent","text":"<ul> <li> <p>Establish and use a secure development lifecycle with AppSec     professionals to help evaluate and design security and     privacy-related controls</p> </li> <li> <p>Establish and use a library of secure design patterns or paved road     ready to use components</p> </li> <li> <p>Use threat modeling for critical authentication, access control,     business logic, and key flows</p> </li> <li> <p>Integrate security language and controls into user stories</p> </li> <li> <p>Integrate plausibility checks at each tier of your application     (from frontend to backend)</p> </li> <li> <p>Write unit and integration tests to validate that all critical flows      are resistant to the threat model. Compile use-cases and misuse-cases     for each tier of your application.</p> </li> <li> <p>Segregate tier layers on the system and network layers depending on the     exposure and protection needs</p> </li> <li> <p>Segregate tenants robustly by design throughout all tiers</p> </li> <li> <p>Limit resource consumption by user or service</p> </li> </ul>"},{"location":"A04_2021-Insecure_Design/#example-attack-scenarios","title":"Example Attack Scenarios","text":"<p>Scenario #1: A credential recovery workflow might include \u201cquestions and answers,\u201d which is prohibited by NIST 800-63b, the OWASP ASVS, and the OWASP Top 10. Questions and answers cannot be trusted as evidence of identity as more than one person can know the answers, which is why they are prohibited. Such code should be removed and replaced with a more secure design.</p> <p>Scenario #2: A cinema chain allows group booking discounts and has a maximum of fifteen attendees before requiring a deposit. Attackers could threat model this flow and test if they could book six hundred seats and all cinemas at once in a few requests, causing a massive loss of income.</p> <p>Scenario #3: A retail chain\u2019s e-commerce website does not have protection against bots run by scalpers buying high-end video cards to resell auction websites. This creates terrible publicity for the video card makers and retail chain owners and enduring bad blood with enthusiasts who cannot obtain these cards at any price. Careful anti-bot design and domain logic rules, such as purchases made within a few seconds of availability, might identify inauthentic purchases and rejected such transactions.</p>"},{"location":"A04_2021-Insecure_Design/#references","title":"References","text":"<ul> <li> <p>OWASP Cheat Sheet: Secure Design Principles</p> </li> <li> <p>OWASP SAMM: Design:Security Architecture</p> </li> <li> <p>OWASP SAMM: Design:Threat Assessment </p> </li> <li> <p>NIST \u2013 Guidelines on Minimum Standards for Developer Verification of Software</p> </li> <li> <p>The Threat Modeling Manifesto</p> </li> <li> <p>Awesome Threat Modeling</p> </li> </ul>"},{"location":"A04_2021-Insecure_Design/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":"<p>CWE-73 External Control of File Name or Path</p> <p>CWE-183 Permissive List of Allowed Inputs</p> <p>CWE-209 Generation of Error Message Containing Sensitive Information</p> <p>CWE-213 Exposure of Sensitive Information Due to Incompatible Policies</p> <p>CWE-235 Improper Handling of Extra Parameters</p> <p>CWE-256 Unprotected Storage of Credentials</p> <p>CWE-257 Storing Passwords in a Recoverable Format</p> <p>CWE-266 Incorrect Privilege Assignment</p> <p>CWE-269 Improper Privilege Management</p> <p>CWE-280 Improper Handling of Insufficient Permissions or Privileges</p> <p>CWE-311 Missing Encryption of Sensitive Data</p> <p>CWE-312 Cleartext Storage of Sensitive Information</p> <p>CWE-313 Cleartext Storage in a File or on Disk</p> <p>CWE-316 Cleartext Storage of Sensitive Information in Memory</p> <p>CWE-419 Unprotected Primary Channel</p> <p>CWE-430 Deployment of Wrong Handler</p> <p>CWE-434 Unrestricted Upload of File with Dangerous Type</p> <p>CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')</p> <p>CWE-451 User Interface (UI) Misrepresentation of Critical Information</p> <p>CWE-472 External Control of Assumed-Immutable Web Parameter</p> <p>CWE-501 Trust Boundary Violation</p> <p>CWE-522 Insufficiently Protected Credentials</p> <p>CWE-525 Use of Web Browser Cache Containing Sensitive Information</p> <p>CWE-539 Use of Persistent Cookies Containing Sensitive Information</p> <p>CWE-579 J2EE Bad Practices: Non-serializable Object Stored in Session</p> <p>CWE-598 Use of GET Request Method With Sensitive Query Strings</p> <p>CWE-602 Client-Side Enforcement of Server-Side Security</p> <p>CWE-642 External Control of Critical State Data</p> <p>CWE-646 Reliance on File Name or Extension of Externally-Supplied File</p> <p>CWE-650 Trusting HTTP Permission Methods on the Server Side</p> <p>CWE-653 Insufficient Compartmentalization</p> <p>CWE-656 Reliance on Security Through Obscurity</p> <p>CWE-657 Violation of Secure Design Principles</p> <p>CWE-799 Improper Control of Interaction Frequency</p> <p>CWE-807 Reliance on Untrusted Inputs in a Security Decision</p> <p>CWE-840 Business Logic Errors</p> <p>CWE-841 Improper Enforcement of Behavioral Workflow</p> <p>CWE-927 Use of Implicit Intent for Sensitive Communication</p> <p>CWE-1021 Improper Restriction of Rendered UI Layers or Frames</p> <p>CWE-1173 Improper Use of Validation Framework</p>"},{"location":"A05_2021-Security_Misconfiguration/","title":"A05:2021 \u2013 Security Misconfiguration","text":""},{"location":"A05_2021-Security_Misconfiguration/#factors","title":"Factors","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 20 19.84% 4.51% 8.12 6.56 89.58% 44.84% 208,387 789"},{"location":"A05_2021-Security_Misconfiguration/#overview","title":"Overview","text":"<p>Moving up from #6 in the previous edition, 90% of applications were tested for some form of misconfiguration, with an average incidence rate of 4.51%, and over 208k occurrences of a Common Weakness Enumeration (CWE) in this risk category. With more shifts into highly configurable software, it's not surprising to see this category move up. Notable CWEs included are CWE-16 Configuration and CWE-611 Improper Restriction of XML External Entity Reference.</p>"},{"location":"A05_2021-Security_Misconfiguration/#description","title":"Description","text":"<p>The application might be vulnerable if the application is:</p> <ul> <li> <p>Missing appropriate security hardening across any part of the     application stack or improperly configured permissions on cloud     services.</p> </li> <li> <p>Unnecessary features are enabled or installed (e.g., unnecessary     ports, services, pages, accounts, or privileges).</p> </li> <li> <p>Default accounts and their passwords are still enabled and     unchanged.</p> </li> <li> <p>Error handling reveals stack traces or other overly informative     error messages to users.</p> </li> <li> <p>For upgraded systems, the latest security features are disabled or     not configured securely.</p> </li> <li> <p>The security settings in the application servers, application     frameworks (e.g., Struts, Spring, ASP.NET), libraries, databases,     etc., are not set to secure values.</p> </li> <li> <p>The server does not send security headers or directives, or they are     not set to secure values.</p> </li> <li> <p>The software is out of date or vulnerable (see A06:2021-Vulnerable     and Outdated Components).</p> </li> </ul> <p>Without a concerted, repeatable application security configuration process, systems are at a higher risk.</p>"},{"location":"A05_2021-Security_Misconfiguration/#how-to-prevent","title":"How to Prevent","text":"<p>Secure installation processes should be implemented, including:</p> <ul> <li> <p>A repeatable hardening process makes it fast and easy to deploy     another environment that is appropriately locked down. Development,     QA, and production environments should all be configured     identically, with different credentials used in each environment.     This process should be automated to minimize the effort required to     set up a new secure environment.</p> </li> <li> <p>A minimal platform without any unnecessary features, components,     documentation, and samples. Remove or do not install unused features     and frameworks.</p> </li> <li> <p>A task to review and update the configurations appropriate to all     security notes, updates, and patches as part of the patch management     process (see A06:2021-Vulnerable     and Outdated Components). Review     cloud storage permissions (e.g., S3 bucket permissions).</p> </li> <li> <p>A segmented application architecture provides effective and secure     separation between components or tenants, with segmentation,     containerization, or cloud security groups (ACLs).</p> </li> <li> <p>Sending security directives to clients, e.g., Security Headers.</p> </li> <li> <p>An automated process to verify the effectiveness of the     configurations and settings in all environments.</p> </li> </ul>"},{"location":"A05_2021-Security_Misconfiguration/#example-attack-scenarios","title":"Example Attack Scenarios","text":"<p>Scenario #1: The application server comes with sample applications not removed from the production server. These sample applications have known security flaws attackers use to compromise the server. Suppose one of these applications is the admin console, and default accounts weren't changed. In that case, the attacker logs in with default passwords and takes over.</p> <p>Scenario #2: Directory listing is not disabled on the server. An attacker discovers they can simply list directories. The attacker finds and downloads the compiled Java classes, which they decompile and reverse engineer to view the code. The attacker then finds a severe access control flaw in the application.</p> <p>Scenario #3: The application server's configuration allows detailed error messages, e.g., stack traces, to be returned to users. This potentially exposes sensitive information or underlying flaws such as component versions that are known to be vulnerable.</p> <p>Scenario #4: A cloud service provider (CSP) has default sharing permissions open to the Internet by other CSP users. This allows sensitive data stored within cloud storage to be accessed.</p>"},{"location":"A05_2021-Security_Misconfiguration/#references","title":"References","text":"<ul> <li> <p>OWASP Testing Guide: Configuration     Management</p> </li> <li> <p>OWASP Testing Guide: Testing for Error Codes</p> </li> <li> <p>Application Security Verification Standard V14 Configuration</p> </li> <li> <p>NIST Guide to General Server     Hardening</p> </li> <li> <p>CIS Security Configuration     Guides/Benchmarks</p> </li> <li> <p>Amazon S3 Bucket Discovery and     Enumeration</p> </li> </ul>"},{"location":"A05_2021-Security_Misconfiguration/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":"<p>CWE-2 7PK - Environment</p> <p>CWE-11 ASP.NET Misconfiguration: Creating Debug Binary</p> <p>CWE-13 ASP.NET Misconfiguration: Password in Configuration File</p> <p>CWE-15 External Control of System or Configuration Setting</p> <p>CWE-16 Configuration</p> <p>CWE-260 Password in Configuration File</p> <p>CWE-315 Cleartext Storage of Sensitive Information in a Cookie</p> <p>CWE-520 .NET Misconfiguration: Use of Impersonation</p> <p>CWE-526 Exposure of Sensitive Information Through Environmental Variables</p> <p>CWE-537 Java Runtime Error Message Containing Sensitive Information</p> <p>CWE-541 Inclusion of Sensitive Information in an Include File</p> <p>CWE-547 Use of Hard-coded, Security-relevant Constants</p> <p>CWE-611 Improper Restriction of XML External Entity Reference</p> <p>CWE-614 Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</p> <p>CWE-756 Missing Custom Error Page</p> <p>CWE-776 Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')</p> <p>CWE-942 Permissive Cross-domain Policy with Untrusted Domains</p> <p>CWE-1004 Sensitive Cookie Without 'HttpOnly' Flag</p> <p>CWE-1032 OWASP Top Ten 2017 Category A6 - Security Misconfiguration</p> <p>CWE-1174 ASP.NET Misconfiguration: Improper Model Validation</p>"},{"location":"A06_2021-Vulnerable_and_Outdated_Components/","title":"A06:2021 \u2013 Vulnerable and Outdated Components","text":""},{"location":"A06_2021-Vulnerable_and_Outdated_Components/#factors","title":"Factors","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Max Coverage Avg Coverage Avg Weighted Exploit Avg Weighted Impact Total Occurrences Total CVEs 3 27.96% 8.77% 51.78% 22.47% 5.00 5.00 30,457 0"},{"location":"A06_2021-Vulnerable_and_Outdated_Components/#overview","title":"Overview","text":"<p>It was #2 from the Top 10 community survey but also had enough data to make the Top 10 via data. Vulnerable Components are a known issue that we struggle to test and assess risk and is the only category to not have any Common Vulnerability and Exposures (CVEs) mapped to the included CWEs, so a default exploits/impact weight of 5.0 is used. Notable CWEs included are CWE-1104: Use of Unmaintained Third-Party Components and the two CWEs from Top 10 2013 and 2017.</p>"},{"location":"A06_2021-Vulnerable_and_Outdated_Components/#description","title":"Description","text":"<p>You are likely vulnerable:</p> <ul> <li> <p>If you do not know the versions of all components you use (both     client-side and server-side). This includes components you directly     use as well as nested dependencies.</p> </li> <li> <p>If the software is vulnerable, unsupported, or out of date. This     includes the OS, web/application server, database management system     (DBMS), applications, APIs and all components, runtime environments,     and libraries.</p> </li> <li> <p>If you do not scan for vulnerabilities regularly and subscribe to     security bulletins related to the components you use.</p> </li> <li> <p>If you do not fix or upgrade the underlying platform, frameworks,     and dependencies in a risk-based, timely fashion. This commonly     happens in environments when patching is a monthly or quarterly task     under change control, leaving organizations open to days or months     of unnecessary exposure to fixed vulnerabilities.</p> </li> <li> <p>If software developers do not test the compatibility of updated,     upgraded, or patched libraries.</p> </li> <li> <p>If you do not secure the components\u2019 configurations (see     A05:2021-Security Misconfiguration).</p> </li> </ul>"},{"location":"A06_2021-Vulnerable_and_Outdated_Components/#how-to-prevent","title":"How to Prevent","text":"<p>There should be a patch management process in place to:</p> <ul> <li> <p>Remove unused dependencies, unnecessary features, components, files,     and documentation.</p> </li> <li> <p>Continuously inventory the versions of both client-side and     server-side components (e.g., frameworks, libraries) and their     dependencies using tools like versions, OWASP Dependency Check,     retire.js, etc. Continuously monitor sources like Common Vulnerability and      Exposures (CVE) and National Vulnerability Database (NVD) for     vulnerabilities in the components. Use software composition analysis     tools to automate the process. Subscribe to email alerts for     security vulnerabilities related to components you use.</p> </li> <li> <p>Only obtain components from official sources over secure links.     Prefer signed packages to reduce the chance of including a modified,     malicious component (see A08:2021-Software and Data Integrity     Failures).</p> </li> <li> <p>Monitor for libraries and components that are unmaintained or do not     create security patches for older versions. If patching is not     possible, consider deploying a virtual patch to monitor, detect, or     protect against the discovered issue.</p> </li> </ul> <p>Every organization must ensure an ongoing plan for monitoring, triaging, and applying updates or configuration changes for the lifetime of the application or portfolio.</p>"},{"location":"A06_2021-Vulnerable_and_Outdated_Components/#example-attack-scenarios","title":"Example Attack Scenarios","text":"<p>Scenario #1: Components typically run with the same privileges as the application itself, so flaws in any component can result in serious impact. Such flaws can be accidental (e.g., coding error) or intentional (e.g., a backdoor in a component). Some example exploitable component vulnerabilities discovered are:</p> <ul> <li> <p>CVE-2017-5638, a Struts 2 remote code execution vulnerability that     enables the execution of arbitrary code on the server, has been     blamed for significant breaches.</p> </li> <li> <p>While the internet of things (IoT) is frequently difficult or     impossible to patch, the importance of patching them can be great     (e.g., biomedical devices).</p> </li> </ul> <p>There are automated tools to help attackers find unpatched or misconfigured systems. For example, the Shodan IoT search engine can help you find devices that still suffer from Heartbleed vulnerability patched in April 2014.</p>"},{"location":"A06_2021-Vulnerable_and_Outdated_Components/#references","title":"References","text":"<ul> <li> <p>OWASP Application Security Verification Standard: V1 Architecture, design and threat modelling</p> </li> <li> <p>OWASP Dependency Check (for Java and .NET libraries)</p> </li> <li> <p>OWASP Testing Guide - Map Application Architecture (OTG-INFO-010)</p> </li> <li> <p>OWASP Virtual Patching Best Practices</p> </li> <li> <p>The Unfortunate Reality of Insecure Libraries</p> </li> <li> <p>MITRE Common Vulnerabilities and Exposures (CVE) search</p> </li> <li> <p>National Vulnerability Database (NVD)</p> </li> <li> <p>Retire.js for detecting known vulnerable JavaScript libraries</p> </li> <li> <p>GitHub Advisory Database</p> </li> <li> <p>Ruby Libraries Security Advisory Database and Tools</p> </li> <li> <p>SAFECode Software Integrity Controls [PDF]</p> </li> </ul>"},{"location":"A06_2021-Vulnerable_and_Outdated_Components/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":"<p>CWE-937 OWASP Top 10 2013: Using Components with Known Vulnerabilities</p> <p>CWE-1035 2017 Top 10 A9: Using Components with Known Vulnerabilities</p> <p>CWE-1104 Use of Unmaintained Third Party Components</p>"},{"location":"A07_2021-Identification_and_Authentication_Failures/","title":"A07:2021 \u2013 Identification and Authentication Failures","text":""},{"location":"A07_2021-Identification_and_Authentication_Failures/#factors","title":"Factors","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 22 14.84% 2.55% 7.40 6.50 79.51% 45.72% 132,195 3,897"},{"location":"A07_2021-Identification_and_Authentication_Failures/#overview","title":"Overview","text":"<p>Previously known as Broken Authentication, this category slid down from the second position and now includes Common Weakness  Enumerations (CWEs) related to identification failures. Notable CWEs included are CWE-297: Improper Validation of Certificate with Host Mismatch, CWE-287: Improper Authentication, and CWE-384: Session Fixation.</p>"},{"location":"A07_2021-Identification_and_Authentication_Failures/#description","title":"Description","text":"<p>Confirmation of the user's identity, authentication, and session management is critical to protect against authentication-related attacks. There may be authentication weaknesses if the application:</p> <ul> <li> <p>Permits automated attacks such as credential stuffing, where the     attacker has a list of valid usernames and passwords.</p> </li> <li> <p>Permits brute force or other automated attacks.</p> </li> <li> <p>Permits default, weak, or well-known passwords, such as \"Password1\"     or \"admin/admin\".</p> </li> <li> <p>Uses weak or ineffective credential recovery and forgot-password     processes, such as \"knowledge-based answers,\" which cannot be made     safe.</p> </li> <li> <p>Uses plain text, encrypted, or weakly hashed passwords data stores (see     A02:2021-Cryptographic Failures).</p> </li> <li> <p>Has missing or ineffective multi-factor authentication.</p> </li> <li> <p>Exposes session identifier in the URL.</p> </li> <li> <p>Reuse session identifier after successful login.</p> </li> <li> <p>Does not correctly invalidate Session IDs. User sessions or     authentication tokens (mainly single sign-on (SSO) tokens) aren't     properly invalidated during logout or a period of inactivity.</p> </li> </ul>"},{"location":"A07_2021-Identification_and_Authentication_Failures/#how-to-prevent","title":"How to Prevent","text":"<ul> <li> <p>Where possible, implement multi-factor authentication to prevent     automated credential stuffing, brute force, and stolen credential     reuse attacks.</p> </li> <li> <p>Do not ship or deploy with any default credentials, particularly for     admin users.</p> </li> <li> <p>Implement weak password checks, such as testing new or changed     passwords against the top 10,000 worst passwords list.</p> </li> <li> <p>Align password length, complexity, and rotation policies with     National Institute of Standards and Technology (NIST)     800-63b's guidelines in section 5.1.1 for Memorized Secrets or other     modern, evidence-based password policies.</p> </li> <li> <p>Ensure registration, credential recovery, and API pathways are     hardened against account enumeration attacks by using the same     messages for all outcomes.</p> </li> <li> <p>Limit or increasingly delay failed login attempts, but be careful not to create a denial of service scenario. Log all failures     and alert administrators when credential stuffing, brute force, or     other attacks are detected.</p> </li> <li> <p>Use a server-side, secure, built-in session manager that generates a     new random session ID with high entropy after login. Session identifier     should not be in the URL, be securely stored, and invalidated after     logout, idle, and absolute timeouts.</p> </li> </ul>"},{"location":"A07_2021-Identification_and_Authentication_Failures/#example-attack-scenarios","title":"Example Attack Scenarios","text":"<p>Scenario #1: Credential stuffing, the use of lists of known passwords, is a common attack. Suppose an application does not implement automated threat or credential stuffing protection. In that case, the application can be used as a password oracle to determine if the credentials are valid.</p> <p>Scenario #2: Most authentication attacks occur due to the continued use of passwords as a sole factor. Once considered best practices, password rotation and complexity requirements encourage users to use and reuse weak passwords. Organizations are recommended to stop these practices per NIST 800-63 and use multi-factor authentication.</p> <p>Scenario #3: Application session timeouts aren't set correctly. A user uses a public computer to access an application. Instead of selecting \"logout,\" the user simply closes the browser tab and walks away. An attacker uses the same browser an hour later, and the user is still authenticated.</p>"},{"location":"A07_2021-Identification_and_Authentication_Failures/#references","title":"References","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Digital Identity</p> </li> <li> <p>OWASP Application Security Verification Standard: V2 authentication</p> </li> <li> <p>OWASP Application Security Verification Standard: V3 Session Management</p> </li> <li> <p>OWASP Testing Guide: Identity,\u00a0Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Credential Stuffing</p> </li> <li> <p>OWASP Cheat Sheet: Forgot Password</p> </li> <li> <p>OWASP Cheat Sheet: Session Management</p> </li> <li> <p>OWASP Automated Threats Handbook</p> </li> <li> <p>NIST 800-63b: 5.1.1 Memorized Secrets</p> </li> </ul>"},{"location":"A07_2021-Identification_and_Authentication_Failures/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":"<p>CWE-255 Credentials Management Errors</p> <p>CWE-259 Use of Hard-coded Password</p> <p>CWE-287 Improper Authentication</p> <p>CWE-288 Authentication Bypass Using an Alternate Path or Channel</p> <p>CWE-290 Authentication Bypass by Spoofing</p> <p>CWE-294 Authentication Bypass by Capture-replay</p> <p>CWE-295 Improper Certificate Validation</p> <p>CWE-297 Improper Validation of Certificate with Host Mismatch</p> <p>CWE-300 Channel Accessible by Non-Endpoint</p> <p>CWE-302 Authentication Bypass by Assumed-Immutable Data</p> <p>CWE-304 Missing Critical Step in Authentication</p> <p>CWE-306 Missing Authentication for Critical Function</p> <p>CWE-307 Improper Restriction of Excessive Authentication Attempts</p> <p>CWE-346 Origin Validation Error</p> <p>CWE-384 Session Fixation</p> <p>CWE-521 Weak Password Requirements</p> <p>CWE-613 Insufficient Session Expiration</p> <p>CWE-620 Unverified Password Change</p> <p>CWE-640 Weak Password Recovery Mechanism for Forgotten Password</p> <p>CWE-798 Use of Hard-coded Credentials</p> <p>CWE-940 Improper Verification of Source of a Communication Channel</p> <p>CWE-1216 Lockout Mechanism Errors</p>"},{"location":"A08_2021-Software_and_Data_Integrity_Failures/","title":"A08:2021 \u2013 Software and Data Integrity Failures","text":""},{"location":"A08_2021-Software_and_Data_Integrity_Failures/#factors","title":"Factors","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 10 16.67% 2.05% 6.94 7.94 75.04% 45.35% 47,972 1,152"},{"location":"A08_2021-Software_and_Data_Integrity_Failures/#overview","title":"Overview","text":"<p>A new category for 2021 focuses on making assumptions related to software updates, critical data, and CI/CD pipelines without verifying integrity. One of the highest weighted impacts from  Common Vulnerability and Exposures/Common Vulnerability Scoring System (CVE/CVSS)  data. Notable Common Weakness Enumerations (CWEs) include CWE-829: Inclusion of Functionality from Untrusted Control Sphere, CWE-494: Download of Code Without Integrity Check, and  CWE-502: Deserialization of Untrusted Data.</p>"},{"location":"A08_2021-Software_and_Data_Integrity_Failures/#description","title":"Description","text":"<p>Software and data integrity failures relate to code and infrastructure that does not protect against integrity violations. An example of this is where an application relies upon plugins, libraries, or modules from untrusted sources, repositories, and content delivery networks (CDNs). An insecure CI/CD pipeline can introduce the potential for unauthorized access, malicious code, or system compromise. Lastly, many applications now include auto-update functionality, where updates are downloaded without sufficient integrity verification and applied to the previously trusted application. Attackers could potentially upload their own updates to be distributed and run on all installations. Another example is where objects or data are encoded or serialized into a structure that an attacker can see and modify is vulnerable to insecure deserialization.</p>"},{"location":"A08_2021-Software_and_Data_Integrity_Failures/#how-to-prevent","title":"How to Prevent","text":"<ul> <li> <p>Use digital signatures or similar mechanisms to verify the software or data is from the expected source and has not been altered.</p> </li> <li> <p>Ensure libraries and dependencies, such as npm or Maven, are     consuming trusted repositories. If you have a higher risk profile, consider hosting an internal known-good repository that's vetted.</p> </li> <li> <p>Ensure that a software supply chain security tool, such as OWASP     Dependency Check or OWASP CycloneDX, is used to verify that     components do not contain known vulnerabilities</p> </li> <li> <p>Ensure that there is a review process for code and configuration changes to minimize the chance that malicious code or configuration could be introduced into your software pipeline.</p> </li> <li> <p>Ensure that your CI/CD pipeline has proper segregation, configuration, and access     control to ensure the integrity of the code flowing through the     build and deploy processes.</p> </li> <li> <p>Ensure that unsigned or unencrypted serialized data is not sent to     untrusted clients without some form of integrity check or digital     signature to detect tampering or replay of the serialized data</p> </li> </ul>"},{"location":"A08_2021-Software_and_Data_Integrity_Failures/#example-attack-scenarios","title":"Example Attack Scenarios","text":"<p>Scenario #1 Update without signing: Many home routers, set-top boxes, device firmware, and others do not verify updates via signed firmware. Unsigned firmware is a growing target for attackers and is expected to only get worse. This is a major concern as many times there is no mechanism to remediate other than to fix in a future version and wait for previous versions to age out.</p> <p>Scenario #2 SolarWinds malicious update: Nation-states have been known to attack update mechanisms, with a recent notable attack being the SolarWinds Orion attack. The company that develops the software had secure build and update integrity processes. Still, these were able to be subverted, and for several months, the firm distributed a highly targeted malicious update to more than 18,000 organizations, of which around 100 or so were affected. This is one of the most far-reaching and most significant breaches of this nature in history.</p> <p>Scenario #3 Insecure Deserialization: A React application calls a set of Spring Boot microservices. Being functional programmers, they tried to ensure that their code is immutable. The solution they came up with is serializing the user state and passing it back and forth with each request. An attacker notices the \"rO0\" Java object signature (in base64) and uses the Java Serial Killer tool to gain remote code execution on the application server.</p>"},{"location":"A08_2021-Software_and_Data_Integrity_Failures/#references","title":"References","text":"<ul> <li> <p>[OWASP Cheat Sheet: Software Supply Chain Security](Coming Soon)</p> </li> <li> <p>[OWASP Cheat Sheet: Secure build and deployment](Coming Soon)</p> </li> <li> <p>OWASP Cheat Sheet: Infrastructure as Code </p> </li> <li> <p>OWASP Cheat Sheet: Deserialization</p> </li> <li> <p>SAFECode Software Integrity Controls</p> </li> <li> <p>A 'Worst Nightmare' Cyberattack: The Untold Story Of The     SolarWinds     Hack</p> </li> <li> <p>CodeCov Bash Uploader Compromise</p> </li> <li> <p>Securing DevOps by Julien Vehent</p> </li> </ul>"},{"location":"A08_2021-Software_and_Data_Integrity_Failures/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":"<p>CWE-345 Insufficient Verification of Data Authenticity</p> <p>CWE-353 Missing Support for Integrity Check</p> <p>CWE-426 Untrusted Search Path</p> <p>CWE-494 Download of Code Without Integrity Check</p> <p>CWE-502 Deserialization of Untrusted Data</p> <p>CWE-565 Reliance on Cookies without Validation and Integrity Checking</p> <p>CWE-784 Reliance on Cookies without Validation and Integrity Checking in a Security Decision</p> <p>CWE-829 Inclusion of Functionality from Untrusted Control Sphere</p> <p>CWE-830 Inclusion of Web Functionality from an Untrusted Source</p> <p>CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes</p>"},{"location":"A09_2021-Security_Logging_and_Monitoring_Failures/","title":"A09:2021 \u2013 Security Logging and Monitoring Failures","text":""},{"location":"A09_2021-Security_Logging_and_Monitoring_Failures/#factors","title":"Factors","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 4 19.23% 6.51% 6.87 4.99 53.67% 39.97% 53,615 242"},{"location":"A09_2021-Security_Logging_and_Monitoring_Failures/#overview","title":"Overview","text":"<p>Security logging and monitoring came from the Top 10 community survey (#3), up slightly from the tenth position in the OWASP Top 10 2017. Logging and monitoring can be challenging to test, often involving interviews or asking if attacks were detected during a penetration test. There isn't much CVE/CVSS data for this category, but detecting and responding to breaches is critical. Still, it can be very impactful for accountability, visibility, incident alerting, and forensics. This category expands beyond CWE-778 Insufficient Logging to include CWE-117 Improper Output Neutralization for Logs, CWE-223 Omission of Security-relevant Information, and CWE-532 Insertion of Sensitive Information into Log File.</p>"},{"location":"A09_2021-Security_Logging_and_Monitoring_Failures/#description","title":"Description","text":"<p>Returning to the OWASP Top 10 2021, this category is to help detect, escalate, and respond to active breaches. Without logging and monitoring, breaches cannot be detected. Insufficient logging, detection, monitoring, and active response occurs any time:</p> <ul> <li> <p>Auditable events, such as logins, failed logins, and high-value     transactions, are not logged.</p> </li> <li> <p>Warnings and errors generate no, inadequate, or unclear log     messages.</p> </li> <li> <p>Logs of applications and APIs are not monitored for suspicious     activity.</p> </li> <li> <p>Logs are only stored locally.</p> </li> <li> <p>Appropriate alerting thresholds and response escalation processes     are not in place or effective.</p> </li> <li> <p>Penetration testing and scans by dynamic application security testing (DAST) tools (such as OWASP ZAP) do     not trigger alerts.</p> </li> <li> <p>The application cannot detect, escalate, or alert for active attacks     in real-time or near real-time.</p> </li> <li> <p>You are vulnerable to information leakage by making logging and alerting events visible to a user or an attacker (see A01:2021-Broken Access Control).</p> </li> <li> <p>You are vulnerable to injections or     attacks on the logging or monitoring systems if log data is not correctly encoded.</p> </li> </ul>"},{"location":"A09_2021-Security_Logging_and_Monitoring_Failures/#how-to-prevent","title":"How to Prevent","text":"<p>Developers should implement some or all the following controls,  depending on the risk of the application:</p> <ul> <li> <p>Ensure all login, access control, and server-side input validation     failures can be logged with sufficient user context to identify     suspicious or malicious accounts and held for enough time to allow     delayed forensic analysis.</p> </li> <li> <p>Ensure that logs are generated in a format that log management     solutions can easily consume.</p> </li> <li> <p>Ensure log data is encoded correctly to prevent injections or     attacks on the logging or monitoring systems.</p> </li> <li> <p>Ensure high-value transactions have an audit trail with integrity     controls to prevent tampering or deletion, such as append-only     database tables or similar.</p> </li> <li> <p>DevSecOps teams should establish effective monitoring and alerting     such that suspicious activities are detected and responded to     quickly.</p> </li> <li> <p>Establish or adopt an incident response and recovery plan, such as     National Institute of Standards and Technology (NIST) 800-61r2 or later.</p> </li> </ul> <p>There are commercial and open-source application protection frameworks such as the OWASP ModSecurity Core Rule Set, and open-source log correlation software, such as the Elasticsearch, Logstash, Kibana (ELK) stack, that feature custom dashboards and alerting.</p>"},{"location":"A09_2021-Security_Logging_and_Monitoring_Failures/#example-attack-scenarios","title":"Example Attack Scenarios","text":"<p>Scenario #1: A children's health plan provider's website operator couldn't detect a breach due to a lack of monitoring and logging. An external party informed the health plan provider that an attacker had accessed and modified thousands of sensitive health records of more than 3.5 million children. A post-incident review found that the website developers had not addressed significant vulnerabilities. As there was no logging or monitoring of the system, the data breach could have been in progress since 2013, a period of more than seven years.</p> <p>Scenario #2: A major Indian airline had a data breach involving more than ten years' worth of personal data of millions of passengers, including passport and credit card data. The data breach occurred at a third-party cloud hosting provider, who notified the airline of the breach after some time.</p> <p>Scenario #3: A major European airline suffered a GDPR reportable breach. The breach was reportedly caused by payment application security vulnerabilities exploited by attackers, who harvested more than 400,000 customer payment records. The airline was fined 20 million pounds as a result by the privacy regulator.</p>"},{"location":"A09_2021-Security_Logging_and_Monitoring_Failures/#references","title":"References","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Logging and     Monitoring</p> </li> <li> <p>OWASP Application Security Verification Standard: V7 Logging and     Monitoring</p> </li> <li> <p>OWASP Testing Guide: Testing for Detailed Error     Code</p> </li> <li> <p>OWASP Cheat Sheet:     Application Logging Vocabulary</p> </li> <li> <p>OWASP Cheat Sheet:     Logging</p> </li> <li> <p>Data Integrity: Recovering from Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Identifying and Protecting Assets Against     Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Detecting and Responding to Ransomware and Other     Destructive     Events</p> </li> </ul>"},{"location":"A09_2021-Security_Logging_and_Monitoring_Failures/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":"<p>CWE-117 Improper Output Neutralization for Logs</p> <p>CWE-223 Omission of Security-relevant Information</p> <p>CWE-532 Insertion of Sensitive Information into Log File</p> <p>CWE-778 Insufficient Logging</p>"},{"location":"A10_2021-Server-Side_Request_Forgery_%28SSRF%29/","title":"A10:2021 \u2013 Server-Side Request Forgery (SSRF)","text":""},{"location":"A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#factors","title":"Factors","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 1 2.72% 2.72% 8.28 6.72 67.72% 67.72% 9,503 385"},{"location":"A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#overview","title":"Overview","text":"<p>This category is added from the Top 10 community survey (#1). The data shows a relatively low incidence rate with above average testing coverage and above-average Exploit and Impact potential ratings. As new entries are likely to be a single or small cluster of Common Weakness Enumerations (CWEs) for attention and awareness, the hope is that they are subject to focus and can be rolled into a larger category in a future edition.</p>"},{"location":"A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#description","title":"Description","text":"<p>SSRF flaws occur whenever a web application is fetching a remote resource without validating the user-supplied URL. It allows an attacker to coerce the application to send a crafted request to an unexpected destination, even when protected by a firewall, VPN, or another type of network access control list (ACL).</p> <p>As modern web applications provide end-users with convenient features, fetching a URL becomes a common scenario. As a result, the incidence of SSRF is increasing. Also, the severity of SSRF is becoming higher due to cloud services and the complexity of architectures.</p>"},{"location":"A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#how-to-prevent","title":"How to Prevent","text":"<p>Developers can prevent SSRF by implementing some or all the following defense in depth controls:</p>"},{"location":"A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#from-network-layer","title":"From Network layer","text":"<ul> <li> <p>Segment remote resource access functionality in separate networks to     reduce the impact of SSRF</p> </li> <li> <p>Enforce \u201cdeny by default\u201d firewall policies or network access     control rules to block all but essential intranet traffic. Hints:      ~ Establish an ownership and a lifecycle for firewall rules based on applications.     ~ Log all accepted and blocked network flows on firewalls     (see A09:2021-Security Logging and Monitoring Failures).</p> </li> </ul>"},{"location":"A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#from-application-layer","title":"From Application layer:","text":"<ul> <li> <p>Sanitize and validate all client-supplied input data</p> </li> <li> <p>Enforce the URL schema, port, and destination with a positive allow     list</p> </li> <li> <p>Do not send raw responses to clients</p> </li> <li> <p>Disable HTTP redirections</p> </li> <li> <p>Be aware of the URL consistency to avoid attacks such as DNS     rebinding and \u201ctime of check, time of use\u201d (TOCTOU) race conditions</p> </li> </ul> <p>Do not mitigate SSRF via the use of a deny list or regular expression. Attackers have payload lists, tools, and skills to bypass deny lists.</p>"},{"location":"A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#additional-measures-to-consider","title":"Additional Measures to consider:","text":"<ul> <li> <p>Don't deploy other security relevant services on front systems (e.g. OpenID).      Control local traffic on these systems (e.g. localhost)</p> </li> <li> <p>For frontends with dedicated and manageable user groups use network encryption (e.g. VPNs)     on independent systems to consider very high protection needs  </p> </li> </ul>"},{"location":"A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#example-attack-scenarios","title":"Example Attack Scenarios","text":"<p>Attackers can use SSRF to attack systems protected behind web application firewalls, firewalls, or network ACLs, using scenarios such as:</p> <p>Scenario #1: Port scan internal servers \u2013 If the network architecture is unsegmented, attackers can map out internal networks and determine if ports are open or closed on internal servers from connection results or elapsed time to connect or reject SSRF payload connections.</p> <p>Scenario #2: Sensitive data exposure \u2013 Attackers can access local  files or internal services to gain sensitive information such as <code>file:///etc/passwd</code> and <code>http://localhost:28017/</code>.</p> <p>Scenario #3: Access metadata storage of cloud services \u2013 Most cloud providers have metadata storage such as <code>http://169.254.169.254/</code>. An attacker can read the metadata to gain sensitive information.</p> <p>Scenario #4: Compromise internal services \u2013 The attacker can abuse internal services to conduct further attacks such as Remote Code Execution (RCE) or Denial of Service (DoS).</p>"},{"location":"A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#references","title":"References","text":"<ul> <li> <p>OWASP - Server-Side Request Forgery Prevention Cheat     Sheet</p> </li> <li> <p>PortSwigger - Server-side request forgery     (SSRF)</p> </li> <li> <p>Acunetix - What is Server-Side Request Forgery     (SSRF)?</p> </li> <li> <p>SSRF     bible</p> </li> <li> <p>A New Era of SSRF - Exploiting URL Parser in Trending Programming     Languages!</p> </li> </ul>"},{"location":"A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":"<p>CWE-918 Server-Side Request Forgery (SSRF)</p>"},{"location":"A11_2021-Next_Steps/","title":"A11:2021 \u2013 Next Steps","text":"<p>By design, the OWASP Top 10 is innately limited to the ten most significant risks. Every OWASP Top 10 has \u201con the cusp\u201d risks considered at length for inclusion, but in the end, they didn\u2019t make it. No matter how we tried to interpret or twist the data, the other risks were more prevalent and impactful.</p> <p>Organizations working towards a mature appsec program or security consultancies or tool vendors wishing to expand coverage for their offerings, the following three issues are well worth the effort to identify and remediate.</p>"},{"location":"A11_2021-Next_Steps/#code-quality-issues","title":"Code Quality issues","text":"CWEs Mapped\u00a0 Max Incidence Rate\u00a0 Avg Incidence Rate\u00a0 Avg Weighted Exploit\u00a0 Avg Weighted Impact\u00a0 Max Coverage\u00a0 Avg Coverage\u00a0 Total Occurrences\u00a0 Total CVEs\u00a0 38 49.46% 2.22% 7.1 6.7 60.85% 23.42% 101736 7564 <ul> <li> <p>Description. Code quality issues include known security defects     or patterns, reusing variables for multiple purposes, exposure of     sensitive information in debugging output, off-by-one errors, time     of check/time of use (TOCTOU) race conditions, unsigned or signed     conversion errors, use after free, and more. The hallmark of this     section is that they can usually be identified with stringent     compiler flags, static code analysis tools, and linter IDE plugins.     Modern languages by design eliminated many of these issues, such as     Rust\u2019s memory ownership and borrowing concept, Rust\u2019s threading     design, and Go\u2019s strict typing and bounds checking.</p> </li> <li> <p>How to prevent. Enable and use your editor and language\u2019s static     code analysis options. Consider using a static code analysis tool.     Consider if it might be possible to use or migrate to a language or     framework that eliminates bug classes, such as Rust or Go.</p> </li> <li> <p>Example attack scenarios. An attacker might obtain or update     sensitive information by exploiting a race condition using a     statically shared variable across multiple threads.</p> </li> <li> <p>References</p> <ul> <li> <p>OWASP Code Review Guide</p> </li> <li> <p>Google Code Review Guide</p> </li> </ul> </li> </ul>"},{"location":"A11_2021-Next_Steps/#denial-of-service","title":"Denial of Service","text":"CWEs Mapped\u00a0 Max Incidence Rate\u00a0 Avg Incidence Rate\u00a0 Avg Weighted Exploit\u00a0 Avg Weighted Impact\u00a0 Max Coverage\u00a0 Avg Coverage\u00a0 Total Occurrences\u00a0 Total CVEs\u00a0 8 17.54% 4.89% 8.3 5.9 79.58% 33.26% 66985 973 <ul> <li> <p>Description. Denial of service is always possible given     sufficient resources. However, design and coding practices have a     significant bearing on the magnitude of the denial of service.     Suppose anyone with the link can access a large file, or a     computationally expensive transaction occurs on every page. In that     case, denial of service requires less effort to conduct.</p> </li> <li> <p>How to prevent. Performance test code for CPU, I/O, and memory     usage, re-architect, optimize, or cache expensive operations.     Consider access controls for larger objects to ensure that only     authorized individuals can access huge files or objects or serve     them by an edge caching network. </p> </li> <li> <p>Example attack scenarios. An attacker might determine that an     operation takes 5-10 seconds to complete. When running four     concurrent threads, the server seems to stop responding. The     attacker uses 1000 threads and takes the entire system offline.</p> </li> <li> <p>References</p> <ul> <li> <p>OWASP Cheat Sheet: Denial of Service</p> </li> <li> <p>OWASP Attacks: Denial of Service</p> </li> </ul> </li> </ul>"},{"location":"A11_2021-Next_Steps/#memory-management-errors","title":"Memory Management Errors","text":"CWEs Mapped\u00a0 Max Incidence Rate\u00a0 Avg Incidence Rate\u00a0 Avg Weighted Exploit\u00a0 Avg Weighted Impact\u00a0 Max Coverage\u00a0 Avg Coverage\u00a0 Total Occurrences\u00a0 Total CVEs\u00a0 14 7.03% 1.16% 6.7 8.1 56.06% 31.74% 26576 16184 <ul> <li> <p>Description. Web applications tend to be written in managed     memory languages, such as Java, .NET, or node.js (JavaScript or     TypeScript). However, these languages are written in systems     languages that have memory management issues, such as buffer or heap     overflows, use after free, integer overflows, and more. There have     been many sandbox escapes over the years that prove that just     because the web application language is nominally memory \u201csafe,\u201d the     foundations are not.</p> </li> <li> <p>How to prevent. Many modern APIs are now written in memory-safe     languages such as Rust or Go. In the case of Rust, memory safety is     a crucial feature of the language. For existing code, the use of     strict compiler flags, strong typing, static code analysis, and fuzz     testing can be beneficial in identifying memory leaks, memory, and     array overruns, and more.</p> </li> <li> <p>Example attack scenarios. Buffer and heap overflows have been a     mainstay of attackers over the years. The attacker sends data to a program, which it stores in an undersized stack buffer. The result is that information on the call stack is overwritten, including the function\u2019s return pointer. The data sets the value of the return pointer so that when the function returns, it transfers control to malicious code contained in the attacker\u2019s data.</p> </li> <li> <p>References</p> <ul> <li> <p>OWASP Vulnerabilities: Buffer Overflow</p> </li> <li> <p>OWASP Attacks: Buffer Overflow</p> </li> <li> <p>Science Direct: Integer Overflow</p> </li> </ul> </li> </ul>"},{"location":"tr/","title":"Giri\u015f","text":""},{"location":"tr/#owasp-top-10-2021e-hos-geldiniz","title":"OWASP Top 10 - 2021\u2019e Ho\u015f Geldiniz","text":"<p>OWASP Top 10\u2019un en g\u00fcncel s\u00fcr\u00fcm\u00fcne ho\u015f geldiniz! OWASP Top 10 2021 tamamen yenilendi; yeni bir grafik tasar\u0131m ve ana sayfam\u0131zdan indirebilece\u011finiz ya da \u00e7\u0131kt\u0131s\u0131n\u0131 alabilece\u011finiz tek sayfal\u0131k bir infografik ile geliyor.</p> <p>Bu s\u00fcr\u00fcme zaman\u0131n\u0131 ve verisini katan herkese kocaman te\u015fekk\u00fcrler. Siz olmadan bu s\u00fcr\u00fcm m\u00fcmk\u00fcn olmazd\u0131. TE\u015eEKK\u00dcRLER!</p>"},{"location":"tr/#2021-top-10da-neler-degisti","title":"2021 Top 10\u2019da neler de\u011fi\u015fti","text":"<p>Bu s\u00fcr\u00fcmde \u00fc\u00e7 yeni kategori, isimlendirme ve kapsam de\u011fi\u015fiklikleri olan d\u00f6rt kategori ve baz\u0131 konsolidasyonlar var. Gerekli oldu\u011funda isimleri, semptom yerine k\u00f6k nedene odaklanacak \u015fekilde de\u011fi\u015ftirdik.</p> <p></p> <ul> <li>A01:2021-Broken Access Control be\u015finci s\u0131radan, en ciddi web uygulamas\u0131 g\u00fcvenlik riski kategorisine y\u00fckseliyor; katk\u0131 sa\u011flanan veriler ortalama olarak test edilen uygulamalar\u0131n %3,81\u2019inde bu risk kategorisindeki Common Weakness Enumeration (CWE)lerden bir ya da daha fazlas\u0131n\u0131n bulundu\u011funu ve bu risk kategorisinde 318 binden fazla CWE olay\u0131 oldu\u011funu g\u00f6steriyor. Broken Access Control ile e\u015flenen 34 CWE, di\u011fer t\u00fcm kategorilerden daha fazla say\u0131da uygulamada g\u00f6r\u00fclm\u00fc\u015f durumda.</li> <li>A02:2021-Cryptographic Failures bir s\u0131ra y\u00fckselerek #2\u2019ye \u00e7\u0131k\u0131yor; \u00f6nceki ad\u0131 A3:2017-Sensitive Data Exposure idi; bu daha \u00e7ok bir semptomdu, k\u00f6k neden de\u011fil. Yenilenen ad, daha \u00f6nce de \u00f6rt\u00fck olarak oldu\u011fu gibi kriptografiyle ilgili ba\u015far\u0131s\u0131zl\u0131klara odaklan\u0131yor. Bu kategori s\u0131kl\u0131kla hassas veri if\u015fas\u0131na veya sistemin ele ge\u00e7irilmesine yol a\u00e7ar.</li> <li>A03:2021-Injection \u00fc\u00e7\u00fcnc\u00fc s\u0131raya geriliyor. Uygulamalar\u0131n %94\u2019\u00fcnde bir t\u00fcr injection i\u00e7in test yap\u0131ld\u0131; maksimum insidans oran\u0131 %19, ortalama insidans oran\u0131 %3,37 ve bu kategoriye e\u015flenen 33 CWE, uygulamalarda 274 bin olay ile ikinci en y\u00fcksek g\u00f6r\u00fcn\u00fcme sahip. Cross-site Scripting bu s\u00fcr\u00fcmde art\u0131k bu kategorinin bir par\u00e7as\u0131.</li> <li>A04:2021-Insecure Design 2021 i\u00e7in yeni bir kategori; tasar\u0131m kusurlar\u0131yla ili\u015fkili risklere odaklan\u0131r. End\u00fcstri olarak ger\u00e7ekten \u201csola kaymak\u201d istiyorsak daha fazla threat modeling, g\u00fcvenli tasar\u0131m pattern\u2019leri ve prensipleri ile referans mimarilere ihtiya\u00e7 var. G\u00fcvensiz bir tasar\u0131m, ne kadar kusursuz uygulan\u0131rsa uygulans\u0131n d\u00fczeltilemez; tan\u0131m gere\u011fi, belirli sald\u0131r\u0131lara kar\u015f\u0131 gerekli g\u00fcvenlik kontrolleri hi\u00e7 olu\u015fturulmam\u0131\u015ft\u0131r.</li> <li>A05:2021-Security Misconfiguration \u00f6nceki s\u00fcr\u00fcmde #6\u2019dan y\u00fckseliyor; uygulamalar\u0131n %90\u2019\u0131 bir t\u00fcr yanl\u0131\u015f yap\u0131land\u0131rma i\u00e7in test edildi, ortalama insidans oran\u0131 %4,5 ve bu risk kategorisine e\u015flenen 208 binden fazla CWE olay\u0131 var. Y\u00fcksek derecede konfig\u00fcre edilebilir yaz\u0131l\u0131mlara ge\u00e7i\u015f artt\u0131k\u00e7a bu kategorinin y\u00fckselmesi \u015fa\u015f\u0131rt\u0131c\u0131 de\u011fil. \u00d6nceki A4:2017-XML External Entities (XXE) kategorisi art\u0131k bu risk kategorisinin bir par\u00e7as\u0131.</li> <li>A06:2021-Vulnerable and Outdated Components \u00f6nceki ad\u0131 Using Components with Known Vulnerabilities idi ve Top 10 community survey\u2019de #2 oldu; ayr\u0131ca veri analizine g\u00f6re de Top 10\u2019a girecek kadar veri vard\u0131. Bu kategori 2017\u2019deki #9\u2019dan y\u00fckseliyor ve test etmekte ve riski de\u011ferlendirmekte zorland\u0131\u011f\u0131m\u0131z bilinen bir konu. Dahil edilen CWE\u2019lere e\u015flenen herhangi bir CVE\u2019nin bulunmad\u0131\u011f\u0131 tek kategori; bu nedenle skorlamaya varsay\u0131lan exploit ve impact a\u011f\u0131rl\u0131klar\u0131 5.0 olarak dahil edildi.</li> <li>A07:2021-Identification and Authentication Failures \u00f6nceki Broken Authentication kategorisidir; ikinci s\u0131radan geriliyor ve art\u0131k kimlik tespitiyle (identification) daha ili\u015fkili CWE\u2019leri de i\u00e7eriyor. Bu kategori h\u00e2l\u00e2 Top 10\u2019un ayr\u0131lmaz bir par\u00e7as\u0131, ancak standart framework\u2019lerin artan kullan\u0131labilirli\u011fi yard\u0131mc\u0131 oluyor gibi g\u00f6r\u00fcn\u00fcyor.</li> <li>A08:2021-Software and Data Integrity Failures 2021 i\u00e7in yeni bir kategoridir; do\u011frulama yap\u0131lmadan software update\u2019ler, kritik data ve CI/CD pipeline\u2019lar\u0131yla ilgili varsay\u0131mlara odaklan\u0131r. Bu kategoriye e\u015flenen 10 CWE\u2019den CVE/CVSS verilerinde en y\u00fcksek a\u011f\u0131rl\u0131kl\u0131 impact\u2019lerden baz\u0131lar\u0131 geliyor. A8:2017-Insecure Deserialization art\u0131k bu daha geni\u015f kategorinin bir par\u00e7as\u0131.</li> <li>A09:2021-Security Logging and Monitoring Failures \u00f6nceki A10:2017-Insufficient Logging &amp; Monitoring kategorisidir; Top 10 community survey (#3) ile eklendi ve \u00f6nceki #10\u2019dan y\u00fckseliyor. Bu kategori daha fazla failure t\u00fcr\u00fcn\u00fc i\u00e7erecek \u015fekilde geni\u015fletildi, test edilmesi zorlu ve CVE/CVSS verilerinde iyi temsil edilmiyor. Ancak bu kategorideki ba\u015far\u0131s\u0131zl\u0131klar do\u011frudan g\u00f6r\u00fcn\u00fcrl\u00fc\u011f\u00fc, incident alerting\u2019i ve adli analizleri etkileyebilir.</li> <li>A10:2021-Server-Side Request Forgery Top 10 community survey (#1) ile eklendi. Veriler, ortalaman\u0131n \u00fczerinde test kapsam\u0131yla birlikte nispeten d\u00fc\u015f\u00fck bir insidans oran\u0131 ve Exploit ile Impact potansiyeli i\u00e7in ortalaman\u0131n \u00fczerinde puanlar g\u00f6steriyor. Bu kategori, g\u00fcvenlik toplulu\u011fu \u00fcyelerinin bunun \u00f6nemli oldu\u011funu s\u00f6yledi\u011fi, ancak \u015fu an i\u00e7in verilerde tam yans\u0131mayan bir senaryoyu temsil ediyor.</li> </ul>"},{"location":"tr/#metodoloji","title":"Metodoloji","text":"<p>Bu s\u00fcr\u00fcm her zamankinden daha veri odakl\u0131, ancak k\u00f6r\u00fc k\u00f6r\u00fcne veri odakl\u0131 de\u011fil. On kategorinin sekizini katk\u0131 verilerinden, ikisini de y\u00fcksek seviyede Top 10 community survey\u2019den se\u00e7tik. Bunu temel bir nedenle yap\u0131yoruz: katk\u0131 verilerine bakmak ge\u00e7mi\u015fe bakmakt\u0131r. AppSec ara\u015ft\u0131rmac\u0131lar\u0131n\u0131n yeni zafiyetler ve onlar\u0131 test etmenin yeni yollar\u0131n\u0131 bulmas\u0131 zaman al\u0131r. Bu testlerin ara\u00e7lara ve s\u00fcre\u00e7lere entegre edilmesi de zaman al\u0131r. Bir zay\u0131fl\u0131\u011f\u0131 \u00f6l\u00e7ekli \u015fekilde g\u00fcvenilir bi\u00e7imde test edebildi\u011fimiz zamana kadar y\u0131llar ge\u00e7mi\u015f olabilir. Bu bak\u0131\u015f\u0131 dengelemek i\u00e7in, application security ve development uzmanlar\u0131na, verilerin hen\u00fcz g\u00f6stermeyebilece\u011fi ama sahada g\u00f6rd\u00fckleri temel zay\u0131fl\u0131klar\u0131n neler oldu\u011funu sormak \u00fczere bir community survey kullan\u0131yoruz.</p> <p>Top 10\u2019u olgunla\u015ft\u0131rmaya devam etmek i\u00e7in benimsedi\u011fimiz birka\u00e7 kritik de\u011fi\u015fiklik var.</p>"},{"location":"tr/#kategoriler-nasl-yaplandrld","title":"Kategoriler nas\u0131l yap\u0131land\u0131r\u0131ld\u0131","text":"<p>OWASP Top Ten\u2019in \u00f6nceki s\u00fcr\u00fcm\u00fcne g\u00f6re baz\u0131 kategoriler de\u011fi\u015fti. \u0130\u015fte de\u011fi\u015fikliklerin y\u00fcksek seviyeli \u00f6zeti.</p> <p>\u00d6nceki veri toplama \u00e7abalar\u0131, yakla\u015f\u0131k 30 CWE\u2019nin belirlenmi\u015f bir alt k\u00fcmesine odaklan\u0131yordu ve ek bulgular i\u00e7in bir alan vard\u0131. Organizasyonlar\u0131n \u00e7o\u011funlukla yaln\u0131zca bu 30 CWE\u2019ye odakland\u0131\u011f\u0131n\u0131 ve g\u00f6rd\u00fckleri ek CWE\u2019leri nadiren eklediklerini \u00f6\u011frendik. Bu s\u00fcr\u00fcmde konuyu serbest b\u0131rakt\u0131k ve herhangi bir k\u0131s\u0131tlama olmaks\u0131z\u0131n yaln\u0131zca veri istedik. 2017\u2019den ba\u015flayarak belirli bir y\u0131l i\u00e7in test edilen uygulama say\u0131s\u0131n\u0131 ve testlerde en az bir CWE \u00f6rne\u011fi bulunan uygulama say\u0131s\u0131n\u0131 istedik. Bu format, her bir CWE\u2019nin uygulama pop\u00fclasyonu i\u00e7inde ne kadar yayg\u0131n oldu\u011funu izlememizi sa\u011fl\u0131yor. Bizim ama\u00e7lar\u0131m\u0131z i\u00e7in frekans\u0131 g\u00f6rmezden geliyoruz; ba\u015fka durumlarda \u00f6nemli olabilse de uygulama pop\u00fclasyonundaki ger\u00e7ek yayg\u0131nl\u0131\u011f\u0131 gizliyor. Bir uygulamada bir CWE\u2019nin d\u00f6rt \u00f6rne\u011fi ya da 4.000 \u00f6rne\u011fi olmas\u0131 Top 10 hesaplamas\u0131na dahil de\u011fil. Yakla\u015f\u0131k 30 CWE\u2019den veri setinde analiz etmek \u00fczere neredeyse 400 CWE\u2019ye ge\u00e7tik. Gelecekte ek veri analizi yapmay\u0131 planl\u0131yoruz. CWE say\u0131s\u0131ndaki bu \u00f6nemli art\u0131\u015f, kategorilerin nas\u0131l yap\u0131land\u0131r\u0131ld\u0131\u011f\u0131na ili\u015fkin de\u011fi\u015fiklikleri gerektiriyor.</p> <p>CWE\u2019leri gruplamak ve kategorize etmek i\u00e7in birka\u00e7 ay harcad\u0131k ve birka\u00e7 ay daha devam edebilirdik. Bir noktada durmak zorundayd\u0131k. CWE\u2019lerin hem k\u00f6k neden hem de semptom tipleri vard\u0131r; k\u00f6k neden tiplerine \u201cCryptographic Failure\u201d ve \u201cMisconfiguration\u201d \u00f6rnek verilebilirken, semptom tiplerine \u201cSensitive Data Exposure\u201d ve \u201cDenial of Service\u201d \u00f6rnek verilebilir. M\u00fcmk\u00fcn oldu\u011funda k\u00f6k nedene odaklanmaya karar verdik; \u00e7\u00fcnk\u00fc tan\u0131mlama ve iyile\u015ftirme rehberi sa\u011flamak a\u00e7\u0131s\u0131ndan daha mant\u0131kl\u0131. K\u00f6k nedene semptomdan daha fazla odaklanmak yeni bir konsept de\u011fil; Top Ten zaten semptom ve k\u00f6k neden kar\u0131\u015f\u0131m\u0131yd\u0131. CWE\u2019ler de bir kar\u0131\u015f\u0131md\u0131r; biz sadece bunu daha kas\u0131tl\u0131 hale getiriyor ve vurguluyoruz. Bu s\u00fcr\u00fcmde kategori ba\u015f\u0131na ortalama 19,6 CWE var; alt s\u0131n\u0131rlar A10:2021-Server-Side Request Forgery (SSRF) i\u00e7in 1 CWE ve A04:2021-Insecure Design i\u00e7in 40 CWE. Bu g\u00fcncellenmi\u015f kategori yap\u0131s\u0131, \u015firketlerin dillerine/framework\u2019lerine uygun CWE\u2019lere odaklanabilmesi a\u00e7\u0131s\u0131ndan ek e\u011fitim faydalar\u0131 sunuyor.</p>"},{"location":"tr/#kategorilerin-secimi-icin-veriler-nasl-kullanld","title":"Kategorilerin se\u00e7imi i\u00e7in veriler nas\u0131l kullan\u0131ld\u0131","text":"<p>2017\u2019de kategorileri olas\u0131l\u0131\u011f\u0131 belirlemek i\u00e7in insidans oran\u0131na g\u00f6re se\u00e7tik, ard\u0131ndan onlarca y\u0131ll\u0131k deneyime dayanan ekip tart\u0131\u015fmalar\u0131yla Exploitability, Detectability (ayn\u0131 zamanda likelihood) ve Technical Impact temelinde s\u0131ralad\u0131k. 2021 i\u00e7in m\u00fcmk\u00fcnse Exploitability ve (Technical) Impact i\u00e7in veri kullanmak istiyoruz.</p> <p>OWASP Dependency Check\u2019i indirdik ve CVE\u2019lere e\u015flenen CWE\u2019lere g\u00f6re gruplanm\u0131\u015f CVSS Exploit ve Impact skorlar\u0131n\u0131 \u00e7\u0131kard\u0131k. Olduk\u00e7a fazla ara\u015ft\u0131rma ve \u00e7aba gerektirdi; t\u00fcm CVE\u2019lerin CVSSv2 skorlar\u0131 var, ancak CVSSv2\u2019deki kusurlar\u0131n CVSSv3 ile ele al\u0131nmas\u0131 gerekiyordu. Belirli bir noktadan sonra t\u00fcm CVE\u2019lere ayr\u0131ca bir CVSSv3 skoru da atand\u0131. Ek olarak, puan aral\u0131klar\u0131 ve form\u00fcller CVSSv2 ile CVSSv3 aras\u0131nda g\u00fcncellendi.</p> <p>CVSSv2\u2019de hem Exploit hem (Technical) Impact 10,0\u2019a kadar \u00e7\u0131kabiliyordu, ancak form\u00fcl Exploit i\u00e7in %60\u2019a, Impact i\u00e7in %40\u2019a d\u00fc\u015f\u00fcr\u00fcyordu. CVSSv3\u2019te teorik maksimum Exploit i\u00e7in 6,0 ve Impact i\u00e7in 4,0 ile s\u0131n\u0131rland\u0131r\u0131ld\u0131. A\u011f\u0131rl\u0131klar dikkate al\u0131nd\u0131\u011f\u0131nda, CVSSv3\u2019te Impact skoru ortalama olarak neredeyse bir bu\u00e7uk puan yukar\u0131 kayd\u0131 ve exploitability ortalama olarak neredeyse yar\u0131m puan a\u015fa\u011f\u0131 kayd\u0131.</p> <p>National Vulnerability Database (NVD) verilerinde CWE\u2019ye e\u015flenen bir CVE\u2019nin 125 bin kayd\u0131 var ve bir CVE\u2019ye e\u015flenen 241 benzersiz CWE bulunuyor. 62 bin CWE e\u015flemesi bir CVSSv3 skoruna sahip; bu, veri seti pop\u00fclasyonunun yakla\u015f\u0131k yar\u0131s\u0131d\u0131r.</p> <p>Top Ten 2021 i\u00e7in ortalama exploit ve impact skorlar\u0131n\u0131 \u015fu \u015fekilde hesaplad\u0131k. T\u00fcm CVSS skorlar\u0131na sahip CVE\u2019leri CWE\u2019ye g\u00f6re gruplad\u0131k ve hem exploit hem impact skorlar\u0131n\u0131, pop\u00fclasyonun CVSSv3 sahibi y\u00fczdesine + kalan CVSSv2 pop\u00fclasyonuna g\u00f6re a\u011f\u0131rl\u0131kland\u0131rarak genel bir ortalama elde ettik. Bu ortalamalar\u0131, risk denkleminin di\u011fer yar\u0131s\u0131 i\u00e7in Exploit ve (Technical) Impact puanlamas\u0131 olarak kullanmak \u00fczere veri setindeki CWE\u2019lere e\u015fledik.</p>"},{"location":"tr/#neden-saf-istatistiksel-veri-degil","title":"Neden saf istatistiksel veri de\u011fil?","text":"<p>Verilerdeki sonu\u00e7lar, esasen otomatik olarak test edebildiklerimizle s\u0131n\u0131rl\u0131d\u0131r. Deneyimli bir AppSec profesyoneli ile konu\u015fursan\u0131z, verilerde hen\u00fcz bulunmayan ama bulduklar\u0131 \u015feylerden ve g\u00f6rd\u00fckleri trendlerden bahsederler. Belirli zafiyet t\u00fcrleri i\u00e7in test metodolojilerinin geli\u015ftirilmesi zaman al\u0131r ve bu testlerin otomatikle\u015ftirilip \u00e7ok say\u0131da uygulamaya kar\u015f\u0131 \u00e7al\u0131\u015ft\u0131r\u0131lmas\u0131 daha da zaman al\u0131r. Buldu\u011fumuz her \u015fey ge\u00e7mi\u015fe bakmaktad\u0131r ve verilerde olmayan son y\u0131l\u0131n trendlerini ka\u00e7\u0131r\u0131yor olabilir.</p> <p>Bu nedenle veriler eksik oldu\u011fu i\u00e7in on kategoriden yaln\u0131zca sekizini verilerden se\u00e7iyoruz. Di\u011fer iki kategori Top 10 community survey\u2019den geliyor. Bu, sahada \u00e7al\u0131\u015fan uygulay\u0131c\u0131lar\u0131n, verilerde olmayabilecek (ve belki de hi\u00e7 veriye yans\u0131mayacak) en y\u00fcksek riskleri oylamas\u0131na olanak tan\u0131r.</p>"},{"location":"tr/#neden-frekans-yerine-insidans-oran","title":"Neden frekans yerine insidans oran\u0131?","text":"<p>\u00dc\u00e7 birincil veri kayna\u011f\u0131 vard\u0131r: Human-assisted Tooling (HaT), Tool-assisted Human (TaH) ve ham Tooling.</p> <p>Tooling ve HaT, y\u00fcksek frekansl\u0131 bulgu \u00fcreticileridir. Ara\u00e7lar belirli zafiyetleri arar, yorulmadan bu zafiyetin her \u00f6rne\u011fini bulmaya \u00e7al\u0131\u015f\u0131r ve baz\u0131 zafiyet t\u00fcrleri i\u00e7in y\u00fcksek bulgu say\u0131lar\u0131 \u00fcretir. Cross-Site Scripting\u2019e bak\u0131n; genellikle iki \u00e7e\u015fittir: daha k\u00fc\u00e7\u00fck, izole bir hata ya da sistemik bir sorun. Sistemik oldu\u011funda tek bir uygulama i\u00e7in bulgu say\u0131lar\u0131 binlere ula\u015fabilir. Bu y\u00fcksek frekans, raporlardaki ya da verilerdeki di\u011fer \u00e7o\u011fu zafiyeti bast\u0131r\u0131r.</p> <p>\u00d6te yandan TaH, daha geni\u015f bir zafiyet t\u00fcr\u00fc yelpazesi bulur ancak zaman k\u0131s\u0131tlar\u0131 nedeniyle \u00e7ok daha d\u00fc\u015f\u00fck frekanstad\u0131r. \u0130nsanlar bir uygulamay\u0131 test edip Cross-Site Scripting gibi bir \u015fey g\u00f6rd\u00fc\u011f\u00fcnde genellikle \u00fc\u00e7 d\u00f6rt \u00f6rnek bulur ve durur. Sistemik bir bulgu olup olmad\u0131\u011f\u0131n\u0131 belirleyebilir ve uygulama genelinde d\u00fczeltme \u00f6nerisi ile yazabilirler. Her \u00f6rne\u011fi bulmaya gerek (ve zaman) yoktur.</p> <p>Bu iki farkl\u0131 veri setini frekansa g\u00f6re birle\u015ftirmeye \u00e7al\u0131\u015ft\u0131\u011f\u0131m\u0131z\u0131 varsayal\u0131m; Tooling ve HaT verileri daha do\u011fru (ama geni\u015f) TaH verilerini bo\u011far ve bunun \u00f6nemli bir k\u0131sm\u0131, Cross-Site Scripting gibi \u015feylerin \u00e7o\u011fu listede \u00e7ok y\u00fcksek s\u0131ralarda olmas\u0131n\u0131n nedenidir; genellikle etkisi d\u00fc\u015f\u00fck ile orta aras\u0131nda olmas\u0131na ra\u011fmen. Bunun nedeni salt bulgu hacmidir. (Cross-Site Scripting\u2019i test etmek de nispeten kolayd\u0131r, bu nedenle onun i\u00e7in daha fazla test vard\u0131r.)</p> <p>2017\u2019de, verilere taze bir bak\u0131\u015f atmak ve Tooling ile HaT verilerini TaH verileriyle temiz \u015fekilde birle\u015ftirmek i\u00e7in insidans oran\u0131n\u0131 kullanmaya ba\u015flad\u0131k. \u0130nsidans oran\u0131, uygulama pop\u00fclasyonunun y\u00fczde ka\u00e7\u0131nda bir zafiyet t\u00fcr\u00fcn\u00fcn en az bir \u00f6rne\u011finin bulundu\u011funu sorar. Tekil mi yoksa sistemik mi oldu\u011funa ald\u0131rmay\u0131z. Bizim ama\u00e7lar\u0131m\u0131z i\u00e7in bu ilgisizdir; sadece en az bir \u00f6rnek bulunan uygulama say\u0131s\u0131n\u0131 bilmeye ihtiyac\u0131m\u0131z var; bu da, y\u00fcksek frekansl\u0131 sonu\u00e7larla verileri bo\u011fmadan, farkl\u0131 test t\u00fcrleri aras\u0131nda bulgular\u0131n daha net bir g\u00f6r\u00fcn\u00fcm\u00fcn\u00fc sa\u011flar. Bu, bir sald\u0131rgan\u0131n bir kategoriyi ba\u015far\u0131yla istismar etmek i\u00e7in yaln\u0131zca bir \u00f6rne\u011fe ihtiya\u00e7 duydu\u011fu ger\u00e7e\u011fiyle ili\u015fkili risk temelli bir bak\u0131\u015fa kar\u015f\u0131l\u0131k gelir.</p>"},{"location":"tr/#veri-toplama-ve-analiz-sureciniz-nedir","title":"Veri toplama ve analiz s\u00fcreciniz nedir?","text":"<p>Veri toplama s\u00fcrecini 2017\u2019de Open Security Summit\u2019te resmile\u015ftirdik. OWASP Top 10 liderleri ve topluluk, \u015feffaf bir veri toplama s\u00fcreci olu\u015fturmak i\u00e7in iki g\u00fcn harcad\u0131. 2021 s\u00fcr\u00fcm\u00fc, bu metodolojiyi ikinci kez kulland\u0131\u011f\u0131m\u0131z s\u00fcr\u00fcmd\u00fcr.</p> <p>Sosyal medya kanallar\u0131 \u00fczerinden (hem proje hem OWASP) veri \u00e7a\u011fr\u0131s\u0131 yay\u0131nl\u0131yoruz. OWASP Proje sayfas\u0131nda arad\u0131\u011f\u0131m\u0131z veri \u00f6\u011felerini ve yap\u0131lar\u0131n\u0131 ve bunlar\u0131n nas\u0131l g\u00f6nderilece\u011fini listeliyoruz. GitHub projesinde \u015fablon g\u00f6revi g\u00f6ren \u00f6rnek dosyalar\u0131m\u0131z var. CWE\u2019lere yap\u0131 ve e\u015flemeyi anlamak i\u00e7in gerekti\u011finde organizasyonlarla birlikte \u00e7al\u0131\u015f\u0131yoruz.</p> <p>Verileri, i\u015fi gere\u011fi test vendor\u2019\u0131 olan organizasyonlardan, bug bounty vendor\u2019lar\u0131ndan ve i\u00e7 test verilerini katk\u0131layan organizasyonlardan al\u0131yoruz. Veriyi ald\u0131ktan sonra bir araya y\u00fckl\u00fcyor ve CWE\u2019lerin risk kategorilerine nas\u0131l e\u015flendi\u011fine dair temel bir analiz \u00e7al\u0131\u015ft\u0131r\u0131yoruz. Baz\u0131 CWE\u2019ler aras\u0131nda \u00f6rt\u00fc\u015fme var ve di\u011ferleri birbirine \u00e7ok yak\u0131nd\u0131r (\u00f6rn. kriptografik zafiyetler). G\u00f6nderilen ham verilerle ilgili al\u0131nan her karar, verileri nas\u0131l normalize etti\u011fimizi a\u00e7\u0131k ve \u015feffaf olmak i\u00e7in belgelenir ve yay\u0131mlan\u0131r.</p> <p>Top 10\u2019a dahil edilmek \u00fczere en y\u00fcksek insidans oran\u0131na sahip sekiz kategoriye bak\u0131yoruz. Ayr\u0131ca Top 10 community survey sonu\u00e7lar\u0131na bak\u0131yor ve hangilerinin verilerde zaten mevcut olabilece\u011fini g\u00f6r\u00fcyoruz. Verilerde hen\u00fcz yer almayan en \u00e7ok oyu alan iki kategori, Top 10\u2019daki di\u011fer iki yer i\u00e7in se\u00e7ilir. T\u00fcm on kategori se\u00e7ildikten sonra, Top 10 2021\u2019i risk bazl\u0131 bir s\u0131raya koymaya yard\u0131mc\u0131 olmak i\u00e7in genelle\u015ftirilmi\u015f exploitability ve impact fakt\u00f6rlerini uygulad\u0131k.</p>"},{"location":"tr/#veri-faktorleri","title":"Veri Fakt\u00f6rleri","text":"<p>Top 10\u2019daki her kategori i\u00e7in listelenen veri fakt\u00f6rleri ve anlamlar\u0131 \u015funlard\u0131r:</p> <ul> <li>CWEs Mapped: Top 10 ekibi taraf\u0131ndan bir kategoriye e\u015flenen CWE say\u0131s\u0131.</li> <li>Incidence Rate: Belirli bir y\u0131l i\u00e7in, o organizasyon taraf\u0131ndan test edilen pop\u00fclasyondaki uygulamalar\u0131n, ilgili CWE\u2019ye kar\u015f\u0131 zafiyetli olan y\u00fczdesi.</li> <li>(Testing) Coverage: Belirli bir CWE i\u00e7in t\u00fcm organizasyonlar taraf\u0131ndan test edilen uygulamalar\u0131n y\u00fczdesi.</li> <li>Weighted Exploit: CWE\u2019lere e\u015flenen CVE\u2019lerden gelen CVSSv2 ve CVSSv3 Exploit alt-skoru, normalize edilerek 10 puanl\u0131k \u00f6l\u00e7e\u011fe yerle\u015ftirilmi\u015f hali.</li> <li>Weighted Impact: CWE\u2019lere e\u015flenen CVE\u2019lerden gelen CVSSv2 ve CVSSv3 Impact alt-skoru, normalize edilerek 10 puanl\u0131k \u00f6l\u00e7e\u011fe yerle\u015ftirilmi\u015f hali.</li> <li>Total Occurrences: Bir kategoriye e\u015flenen CWE\u2019lerin bulundu\u011fu uygulamalar\u0131n toplam say\u0131s\u0131.</li> <li>Total CVEs: Bir kategoriye e\u015flenen CWE\u2019lere NVD veritaban\u0131nda e\u015flenen toplam CVE say\u0131s\u0131.</li> </ul>"},{"location":"tr/#veri-katkclarmza-tesekkurler","title":"Veri katk\u0131c\u0131lar\u0131m\u0131za te\u015fekk\u00fcrler","text":"<p>A\u015fa\u011f\u0131daki organizasyonlar (ve baz\u0131 anonim ba\u011f\u0131\u015f\u00e7\u0131lar), bu s\u00fcr\u00fcm\u00fc en b\u00fcy\u00fck ve en kapsaml\u0131 uygulama g\u00fcvenli\u011fi veri seti h\u00e2line getiren 500.000\u2019den fazla uygulamaya ait verileri c\u00f6mert\u00e7e ba\u011f\u0131\u015flad\u0131. Siz olmadan bu m\u00fcmk\u00fcn olmazd\u0131.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"tr/#sponsorlarmza-tesekkurler","title":"Sponsorlar\u0131m\u0131za te\u015fekk\u00fcrler","text":"<p>OWASP Top 10 2021 ekibi, Secure Code Warrior ve Just Eat\u2019in finansal deste\u011fini minnetle kabul eder.</p> <p></p> <p></p>"},{"location":"tr/0x00_2021-notice/","title":"Yay\u0131n","text":"<p>\u0130lk olarak 24 Eyl\u00fcl 2021 tarihinde yay\u0131mland\u0131, v1.1 s\u00fcr\u00fcm\u00fc 13 Temmuz 2025'te yay\u0131mland\u0131.</p>"},{"location":"tr/0x00_2021-notice/#bas-yazarlar","title":"Ba\u015f Yazarlar","text":"<ul> <li>Andrew van der Stock (Twitter: @vanderaj)</li> <li>Brian Glas (Twitter: @infosecdad)</li> <li>Neil Smithline (Twitter: @appsecneil)</li> <li>Torsten Gigler (Twitter: @torsten_tweet)</li> </ul>"},{"location":"tr/0x00_2021-notice/#katkda-bulunanlar","title":"Katk\u0131da Bulunanlar","text":"<ul> <li>Orange Tsai @orange_8361, A10-2021: Sunucu Tarafl\u0131 \u0130stek Sahtecili\u011fi (SSRF) yazar\u0131</li> <li>Jim Manico @manicode ve Jakub Ma\u0107kowski @kubamackowski - OWASP CheatSheets Koordinasyonu</li> </ul>"},{"location":"tr/0x00_2021-notice/#nasl-yardmc-olabilirsiniz","title":"Nas\u0131l Yard\u0131mc\u0131 Olabilirsiniz","text":"<p>Bu a\u015famada a\u015fa\u011f\u0131daki konularda destek ar\u0131yoruz:</p> <ul> <li>Veri bilimcileri \u2013 analizimizi g\u00f6zden ge\u00e7irmeniz i\u00e7in</li> <li>Web tasar\u0131mc\u0131lar\u0131 \u2013 mobil uyumlu bir s\u00fcr\u00fcm olu\u015fturmam\u0131z gerekiyor</li> <li>\u00c7evirmenler \u2013 \u0130ngilizce metni g\u00f6zden ge\u00e7irip \u00e7evrilebilirli\u011fini kontrol etmeniz i\u00e7in</li> <li>ASVS, Test Rehberi ve Kod \u0130nceleme Rehberi liderleri \u2013 verilerimizi kullanarak belgelerimizi ve standartlar\u0131m\u0131z\u0131 birbiriyle ili\u015fkilendirmemize yard\u0131mc\u0131 olun</li> </ul>"},{"location":"tr/0x00_2021-notice/#hatalar-ve-istekleri-bildirin","title":"Hatalar\u0131 ve \u0130stekleri Bildirin","text":"<p>Her t\u00fcrl\u00fc d\u00fczeltme veya sorunu \u015fu adresten bildirebilirsiniz:</p> <ul> <li>https://github.com/OWASP/Top10/issues</li> </ul>"},{"location":"tr/0x01_2021-about-owasp/","title":"OWASP Hakk\u0131nda","text":"<p>Open Worldwide Application Security Project (OWASP), kurulu\u015flar\u0131n g\u00fcvenilir uygulamalar ve API\u2019ler geli\u015ftirmesini, sat\u0131n almas\u0131n\u0131 ve bak\u0131m\u0131n\u0131 yapmas\u0131n\u0131 m\u00fcmk\u00fcn k\u0131lmaya adanm\u0131\u015f a\u00e7\u0131k bir topluluktur.</p> <p>OWASP\u2019te \u00fccretsiz ve a\u00e7\u0131k olarak \u015funlar\u0131 bulursunuz:</p> <ul> <li>Uygulama g\u00fcvenli\u011fi ara\u00e7lar\u0131 ve standartlar\u0131</li> <li>En g\u00fcncel ara\u015ft\u0131rmalar</li> <li>Standart g\u00fcvenlik kontrolleri ve k\u00fct\u00fcphaneler</li> <li>Uygulama security testing, secure code development ve secure code review \u00fczerine tam kapsaml\u0131 kitaplar</li> <li>Sunumlar ve videolar</li> <li>Pek \u00e7ok yayg\u0131n konuya dair Cheat Sheets</li> <li>Chapters meetings</li> <li>Etkinlikler, e\u011fitimler ve konferanslar.</li> <li>Google Groups</li> </ul> <p>Daha fazlas\u0131n\u0131 \u00f6\u011frenin: https://owasp.org.</p> <p>T\u00fcm OWASP ara\u00e7lar\u0131, dok\u00fcmanlar\u0131, videolar\u0131, sunumlar\u0131 ve b\u00f6l\u00fcmleri (chapters) uygulama g\u00fcvenli\u011fini geli\u015ftirmekle ilgilenen herkes i\u00e7in \u00fccretsiz ve a\u00e7\u0131kt\u0131r.</p> <p>Uygulama g\u00fcvenli\u011fine insan, s\u00fcre\u00e7 ve teknoloji problemi olarak yakla\u015f\u0131lmas\u0131n\u0131 savunuyoruz; \u00e7\u00fcnk\u00fc en etkili y\u00f6ntemler bu alanlarda iyile\u015ftirmeler gerektirir.</p> <p>OWASP yeni t\u00fcr bir organizasyondur. Ticari bask\u0131lardan ba\u011f\u0131ms\u0131zl\u0131\u011f\u0131m\u0131z, uygulama g\u00fcvenli\u011fi hakk\u0131nda tarafs\u0131z, pratik ve maliyet etkin bilgi sa\u011flamam\u0131za olanak tan\u0131r.</p> <p>OWASP herhangi bir teknoloji \u015firketiyle ba\u011flant\u0131l\u0131 de\u011fildir; ancak ticari security teknolojilerinin bilin\u00e7li kullan\u0131m\u0131n\u0131 destekleriz. OWASP, bir\u00e7ok t\u00fcrde materyali i\u015fbirlik\u00e7i, \u015feffaf ve a\u00e7\u0131k bir \u015fekilde \u00fcretir.</p> <p>OWASP Foundation, projenin uzun vadeli ba\u015far\u0131s\u0131n\u0131 g\u00fcvence alt\u0131na alan kar amac\u0131 g\u00fctmeyen kurulu\u015ftur. OWASP ile ili\u015fkili hemen herkes g\u00f6n\u00fcll\u00fcd\u00fcr; buna OWASP y\u00f6netim kurulu, chapter liderleri, proje liderleri ve proje \u00fcyeleri dahildir. Yenilik\u00e7i security ara\u015ft\u0131rmalar\u0131n\u0131 hibeler ve altyap\u0131 ile destekleriz.</p> <p>Bize kat\u0131l\u0131n!</p>"},{"location":"tr/0x01_2021-about-owasp/#telif-hakk-ve-lisans","title":"Telif Hakk\u0131 ve Lisans","text":"<p>Telif Hakk\u0131 \u00a9 2003-2025 The OWASP\u00ae Foundation, Inc. Bu dok\u00fcman Creative Commons Attribution Share-Alike 4.0 lisans\u0131 alt\u0131nda yay\u0131nlanm\u0131\u015ft\u0131r. Yeniden kullan\u0131m veya da\u011f\u0131t\u0131m i\u00e7in, lisans \u015fartlar\u0131n\u0131 ba\u015fkalar\u0131na a\u00e7\u0131k\u00e7a belirtmeniz gerekir.</p>"},{"location":"tr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/","title":"OWASP Top 10 ile bir AppSec Program\u0131na Nas\u0131l Ba\u015flan\u0131r","text":"<p>Ge\u00e7mi\u015fte, OWASP Top 10 hi\u00e7bir zaman bir AppSec program\u0131n\u0131n temeli olarak tasarlanmam\u0131\u015ft\u0131. Ancak uygulama g\u00fcvenli\u011fi yolculu\u011funa yeni ba\u015flayan bir\u00e7ok organizasyon i\u00e7in bir yerden ba\u015flamak \u015fart. OWASP Top 10 2021, kontrol listeleri vb. i\u00e7in iyi bir ba\u015flang\u0131\u00e7 temeli olsa da tek ba\u015f\u0131na yeterli de\u011fildir.</p>"},{"location":"tr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#asama-1-appsec-programnzn-bosluklarn-ve-hedeflerini-belirleyin","title":"A\u015fama 1. AppSec program\u0131n\u0131z\u0131n bo\u015fluklar\u0131n\u0131 ve hedeflerini belirleyin","text":"<p>Bir\u00e7ok Application Security (AppSec) program\u0131 emeklemeden ya da y\u00fcr\u00fcyemeden ko\u015fmaya \u00e7al\u0131\u015f\u0131r. Bu \u00e7abalar ba\u015far\u0131s\u0131zl\u0131\u011fa mahk\u00fbmdur. CISO\u2019lar ve AppSec liderli\u011finin, 1\u20133 y\u0131ll\u0131k bir d\u00f6nemde zay\u0131fl\u0131klar\u0131 ve iyile\u015ftirme alanlar\u0131n\u0131 belirlemek i\u00e7in OWASP Software Assurance Maturity Model (SAMM) kullanmalar\u0131n\u0131 \u015fiddetle tavsiye ediyoruz. \u0130lk ad\u0131m, \u015fu an nerede oldu\u011funuzu de\u011ferlendirmek, y\u00f6neti\u015fim, tasar\u0131m, implementasyon, do\u011frulama ve operasyonlardaki hemen \u00e7\u00f6zmeniz gereken bo\u015fluklar ile bekleyebilecekleri belirlemek ve on be\u015f OWASP SAMM g\u00fcvenlik prati\u011finin implementasyonunu veya iyile\u015ftirilmesini \u00f6nceliklendirmektir. OWASP SAMM, yaz\u0131l\u0131m g\u00fcvence \u00e7abalar\u0131n\u0131zda iyile\u015ftirmeler yapman\u0131za ve bunlar\u0131 \u00f6l\u00e7menize yard\u0131mc\u0131 olabilir.</p>"},{"location":"tr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#asama-2-paved-road-secure-development-lifecycle-icin-plan-yapn","title":"A\u015fama 2. Paved road secure development lifecycle i\u00e7in plan yap\u0131n","text":"<p>Geleneksel olarak \u201cunicorn\u201dlar\u0131n alan\u0131 olan paved road konsepti, AppSec kaynaklar\u0131n\u0131 her y\u0131l artan development team h\u0131z\u0131na g\u00f6re \u00f6l\u00e7eklemenin ve en b\u00fcy\u00fck etkiyi yaratman\u0131n en kolay yoludur.</p> <p>Paved road konsepti \u201cen kolay yol ayn\u0131 zamanda en g\u00fcvenli yoldur\u201d anlay\u0131\u015f\u0131d\u0131r ve tercihen development team ile security team\u2019in ayn\u0131 ekip olmas\u0131 \u015feklinde derin bir ortakl\u0131k k\u00fclt\u00fcr\u00fcn\u00fc i\u00e7ermelidir. Paved road, insecure alternatifleri tespit edip de\u011fi\u015ftirmek i\u00e7in enterprise genelinde drop-in secured replacements k\u00fct\u00fcphanesi olu\u015fturarak ve iyile\u015ftirmelerin nerede yap\u0131labilece\u011fini g\u00f6rmeye yard\u0131mc\u0131 olacak tooling ile s\u00fcrekli iyile\u015ftirme, \u00f6l\u00e7me ve tespit etmeyi ama\u00e7lar. Bu, mevcut development tool\u2019lar\u0131n\u0131n insecure build\u2019leri raporlamas\u0131na ve development team\u2019lerin insecure alternatiflerden kendi kendine uzakla\u015fmas\u0131na yard\u0131mc\u0131 olur.</p> <p>Paved road g\u00f6z korkutucu g\u00f6r\u00fcnebilir, ancak zaman i\u00e7inde art\u0131ml\u0131 olarak in\u015fa edilmelidir. Orada ba\u015fka AppSec programlar\u0131 da vard\u0131r; \u00f6zellikle Microsoft Agile Secure Development Lifecycle. Her AppSec program metodolojisi her i\u015fletmeye uygun de\u011fildir.</p>"},{"location":"tr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#asama-3-paved-roadu-development-teamlerinizle-implement-edin","title":"A\u015fama 3. Paved road\u2019u development team\u2019lerinizle implement edin","text":"<p>Paved road\u2019lar ilgili development ve operations team\u2019lerinin onay\u0131 ve do\u011frudan kat\u0131l\u0131m\u0131yla in\u015fa edilir. Paved road, i\u015fletme ile stratejik olarak hizalanmal\u0131 ve daha g\u00fcvenli uygulamalar\u0131n daha h\u0131zl\u0131 teslim edilmesine yard\u0131mc\u0131 olmal\u0131d\u0131r. Paved road\u2019un geli\u015ftirilmesi, eski g\u00fcnlerdeki gibi uygulama ba\u015f\u0131na ge\u00e7ici \u00e7\u00f6z\u00fcmler de\u011fil, t\u00fcm enterprise veya uygulama ekosistemini kapsayan b\u00fct\u00fcnsel bir egzersiz olmal\u0131d\u0131r.</p>"},{"location":"tr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#asama-4-yaklasan-ve-mevcut-tum-uygulamalar-paved-roada-tasyn","title":"A\u015fama 4. Yakla\u015fan ve mevcut t\u00fcm uygulamalar\u0131 paved road\u2019a ta\u015f\u0131y\u0131n","text":"<p>Paved road detection tool\u2019lar\u0131n\u0131 geli\u015ftirirken ekleyin ve development team\u2019lere uygulamalar\u0131n\u0131n g\u00fcvenli\u011fini, paved road\u2019un unsurlar\u0131n\u0131 do\u011frudan nas\u0131l benimseyebileceklerine dair bilgi sa\u011flay\u0131n. Paved road\u2019un bir y\u00f6n\u00fc benimsendikten sonra, organizasyonlar mevcut kodu ve yasaklanm\u0131\u015f alternatifleri kullanan check-in\u2019leri inceleyen ve build\u2019i veya check-in\u2019i uyaran ya da reddeden continuous integration kontrolleri implement etmelidir. Bu, zaman i\u00e7inde insecure se\u00e7eneklerin koda s\u0131zmas\u0131n\u0131, teknik borcu ve hatal\u0131, insecure bir uygulamay\u0131 \u00f6nler. Bu uyar\u0131lar secure alternatife link vermeli, b\u00f6ylece development team\u2019e do\u011fru cevap an\u0131nda sunulur. Ekip h\u0131zl\u0131ca refactor edip paved road bile\u015fenini benimseyebilir.</p>"},{"location":"tr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#asama-5-paved-roadun-owasp-top-10da-bulunan-sorunlar-hafiflettigini-test-edin","title":"A\u015fama 5. Paved road\u2019un OWASP Top 10\u2019da bulunan sorunlar\u0131 hafifletti\u011fini test edin","text":"<p>Paved road bile\u015fenleri, OWASP Top 10 ile ilgili \u00f6nemli bir sorunu ele almal\u0131d\u0131r; \u00f6rne\u011fin vulnerable components\u2019\u0131 otomatik tespit etmek veya d\u00fczeltmek, injection\u2019lar\u0131 tespit eden bir static code analysis IDE plugin\u2019i veya daha da iyisi injection\u2019a kar\u015f\u0131 g\u00fcvenli oldu\u011fu bilinen bir library kullanmaya ba\u015flamak gibi. Ekipler i\u00e7in sa\u011flanan bu secure drop-in replacements ne kadar \u00e7ok olursa o kadar iyidir. AppSec ekibinin kritik bir g\u00f6revi, bu bile\u015fenlerin g\u00fcvenli\u011finin s\u00fcrekli olarak de\u011ferlendirilip iyile\u015ftirildi\u011finden emin olmakt\u0131r. \u0130yile\u015ftirildiklerinde, bile\u015fenin t\u00fcketicileriyle bir ileti\u015fim yolu, tercihen otomatik, de\u011filse en az\u0131ndan bir dashboard vb. \u00fczerinde vurgulanarak, bir upgrade ger\u00e7ekle\u015fmesi gerekti\u011fini belirtmelidir.</p>"},{"location":"tr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#asama-6-programnz-olgun-bir-appsec-programna-donusturun","title":"A\u015fama 6. Program\u0131n\u0131z\u0131 olgun bir AppSec program\u0131na d\u00f6n\u00fc\u015ft\u00fcr\u00fcn","text":"<p>OWASP Top 10\u2019da durmamal\u0131s\u0131n\u0131z. Sadece 10 risk kategorisini kapsar. Organizasyonlar\u0131n Application Security Verification Standard\u2019\u0131 benimsemelerini ve geli\u015ftirilen uygulamalar\u0131n risk seviyesine ba\u011fl\u0131 olarak seviye 1, 2 ve 3 i\u00e7in paved road bile\u015fenleri ve testleri kademeli olarak eklemelerini \u015fiddetle tavsiye ediyoruz.</p>"},{"location":"tr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#otesine-gecmek","title":"\u00d6tesine ge\u00e7mek","text":"<p>T\u00fcm harika AppSec programlar\u0131 asgari gerekliliklerin \u00f6tesine ge\u00e7er. AppSec zafiyetlerinin \u00fcstesinden gelebilmemiz i\u00e7in herkesin ilerlemeye devam etmesi gerekir.</p> <ul> <li> <p>Kavramsal b\u00fct\u00fcnl\u00fck. Olgun AppSec programlar\u0131, ister resmi bir cloud ya da enterprise security architecture olsun, ister threat modeling, bir g\u00fcvenlik mimarisi kavram\u0131 i\u00e7ermelidir.</p> </li> <li> <p>Otomasyon ve \u00f6l\u00e7ek. Olgun AppSec programlar\u0131 teslimatlar\u0131n\u0131n m\u00fcmk\u00fcn oldu\u011funca \u00e7o\u011funu otomatikle\u015ftirmeye \u00e7al\u0131\u015f\u0131r; karma\u015f\u0131k penetration testing ad\u0131mlar\u0131n\u0131 betiklerle taklit etmek, development team\u2019lere do\u011frudan sunulan static code analysis tool\u2019lar\u0131, dev team\u2019lere AppSec unit ve integration testleri olu\u015fturmada yard\u0131mc\u0131 olmak ve daha fazlas\u0131.</p> </li> <li> <p>K\u00fclt\u00fcr. Olgun AppSec programlar\u0131, development team\u2019in bir par\u00e7as\u0131 olarak hareket ederek insecure design\u2019\u0131 ortadan kald\u0131rmaya ve mevcut kodun teknik borcunu temizlemeye \u00e7al\u0131\u015f\u0131r; kenarda duran bir ekip olarak de\u011fil. Development team\u2019lerini \u201cbiz\u201d ve \u201conlar\u201d diye g\u00f6ren AppSec ekipleri ba\u015far\u0131s\u0131zl\u0131\u011fa mahk\u00fbmdur.</p> </li> <li> <p>S\u00fcrekli iyile\u015ftirme. Olgun AppSec programlar\u0131 s\u00fcrekli olarak iyile\u015ftirmeye bakar. Bir \u015fey i\u015fe yaram\u0131yorsa yapmay\u0131 b\u0131rak\u0131n. Bir \u015fey hantalsa veya \u00f6l\u00e7eklenebilir de\u011filse, iyile\u015ftirmek i\u00e7in \u00e7al\u0131\u015f\u0131n. Development team\u2019ler taraf\u0131ndan kullan\u0131lmayan ve etkisi olmayan/az olan bir \u015fey varsa, farkl\u0131 bir \u015fey yap\u0131n. 1970\u2019lerden beri desk check gibi testler yap\u0131yor olmam\u0131z bunun iyi bir fikir oldu\u011fu anlam\u0131na gelmez. \u00d6l\u00e7\u00fcn, de\u011ferlendirin ve ard\u0131ndan in\u015fa edin veya iyile\u015ftirin.</p> </li> </ul>"},{"location":"tr/A00_2021_How_to_use_the_OWASP_Top_10_as_a_standard/","title":"OWASP Top 10\u2019u bir standart olarak nas\u0131l kullanmal\u0131","text":"<p>OWASP Top 10 \u00f6ncelikle bir fark\u0131ndal\u0131k dok\u00fcman\u0131d\u0131r. Ancak bu durum, kurulu\u015flar\u0131n 2003\u2019teki ba\u015flang\u0131c\u0131ndan beri onu fiil\u00ee bir AppSec end\u00fcstri standard\u0131 olarak kullanmas\u0131n\u0131 engellemedi. OWASP Top 10\u2019u bir coding veya testing standard\u0131 olarak kullanmak istiyorsan\u0131z, bunun asgari seviye oldu\u011funu ve sadece bir ba\u015flang\u0131\u00e7 noktas\u0131 oldu\u011funu bilin.</p> <p>OWASP Top 10\u2019u bir standart olarak kullanman\u0131n zorluklar\u0131ndan biri, kolay test edilebilir konulardan ziyade AppSec risklerini dok\u00fcmante etmemizdir. \u00d6rne\u011fin, A04:2021\u2013Insecure Design \u00e7o\u011fu testing bi\u00e7iminin kapsam\u0131 d\u0131\u015f\u0131ndad\u0131r. Ba\u015fka bir \u00f6rnek olarak, aktif, kullan\u0131mda ve etkili logging ve monitoring\u2019in uygulan\u0131p uygulanmad\u0131\u011f\u0131n\u0131 test etmek yaln\u0131zca m\u00fclakatlarla ve etkili incident response \u00f6rnekleri talep edilerek yap\u0131labilir. Bir static code analysis tool, logging\u2019in yoklu\u011funu arayabilir; ancak business logic veya access control\u2019\u00fcn kritik security breach\u2019leri loglay\u0131p loglamad\u0131\u011f\u0131n\u0131 belirlemek imk\u00e2ns\u0131z olabilir. Penetration tester\u2019lar yaln\u0131zca test ortam\u0131nda incident response\u2019u tetiklediklerini belirleyebilirler ki bu ortam da nadiren production ile ayn\u0131 \u015fekilde izlenir.</p> <p>OWASP Top 10\u2019un ne zaman kullan\u0131lmas\u0131n\u0131n uygun oldu\u011funa dair \u00f6nerilerimiz:</p> Use Case OWASP Top 10 2021 OWASP Application Security Verification Standard Awareness Yes Training Entry level Comprehensive Design and architecture Occasionally Yes Coding standard Bare minimum Yes Secure Code review Bare minimum Yes Peer review checklist Bare minimum Yes Unit testing Occasionally Yes Integration testing Occasionally Yes Penetration testing Bare minimum Yes Tool support Bare minimum Yes Secure Supply Chain Occasionally Yes <p>Bir application security standard\u0131 benimsemek isteyen herkesi OWASP Application Security Verification Standard\u2019\u0131 (ASVS) kullanmaya te\u015fvik ederiz; \u00e7\u00fcnk\u00fc bu standart do\u011frulanabilir ve test edilebilir olacak \u015fekilde tasarlanm\u0131\u015ft\u0131r ve secure development lifecycle\u2019\u0131n t\u00fcm b\u00f6l\u00fcmlerinde kullan\u0131labilir.</p> <p>ASVS, tool vendor\u2019lar i\u00e7in tek kabul edilebilir se\u00e7imdir. Tool\u2019lar, OWASP Top 10\u2019daki baz\u0131 risklerin do\u011fas\u0131 gere\u011fi (A04:2021\u2013Insecure Design\u2019a at\u0131fla) OWASP Top 10\u2019a kar\u015f\u0131 kapsaml\u0131 \u015fekilde detect, test veya protect sa\u011flayamaz. OWASP, OWASP Top 10\u2019un tam kapsam\u0131na ili\u015fkin her t\u00fcrl\u00fc iddiay\u0131 cayd\u0131r\u0131r; \u00e7\u00fcnk\u00fc bu basit\u00e7e do\u011fru de\u011fildir.</p>"},{"location":"tr/A00_2021_Introduction/","title":"Giri\u015f","text":""},{"location":"tr/A00_2021_Introduction/#owasp-top-10-2021e-hos-geldiniz","title":"OWASP Top 10 - 2021\u2019e Ho\u015f Geldiniz","text":"<p>OWASP Top 10\u2019un en g\u00fcncel s\u00fcr\u00fcm\u00fcne ho\u015f geldiniz! OWASP Top 10 2021 tamamen yenilendi; yeni bir grafik tasar\u0131m ve ana sayfam\u0131zdan indirebilece\u011finiz ya da \u00e7\u0131kt\u0131s\u0131n\u0131 alabilece\u011finiz tek sayfal\u0131k bir infografik ile geliyor.</p> <p>Bu s\u00fcr\u00fcme zaman\u0131n\u0131 ve verisini katan herkese kocaman te\u015fekk\u00fcrler. Siz olmadan bu s\u00fcr\u00fcm m\u00fcmk\u00fcn olmazd\u0131. TE\u015eEKK\u00dcRLER!</p>"},{"location":"tr/A00_2021_Introduction/#2021-top-10da-neler-degisti","title":"2021 Top 10\u2019da neler de\u011fi\u015fti","text":"<p>Bu s\u00fcr\u00fcmde \u00fc\u00e7 yeni kategori, isimlendirme ve kapsam de\u011fi\u015fiklikleri olan d\u00f6rt kategori ve baz\u0131 konsolidasyonlar var. Gerekli oldu\u011funda isimleri, semptom yerine k\u00f6k nedene odaklanacak \u015fekilde de\u011fi\u015ftirdik.</p> <p></p> <ul> <li>A01:2021-Broken Access Control be\u015finci s\u0131radan, en ciddi web uygulamas\u0131 g\u00fcvenlik riski kategorisine y\u00fckseliyor; katk\u0131 sa\u011flanan veriler ortalama olarak test edilen uygulamalar\u0131n %3,81\u2019inde bu risk kategorisindeki Common Weakness Enumeration (CWE)lerden bir ya da daha fazlas\u0131n\u0131n bulundu\u011funu ve bu risk kategorisinde 318 binden fazla CWE olay\u0131 oldu\u011funu g\u00f6steriyor. Broken Access Control ile e\u015flenen 34 CWE, di\u011fer t\u00fcm kategorilerden daha fazla say\u0131da uygulamada g\u00f6r\u00fclm\u00fc\u015f durumda.</li> <li>A02:2021-Cryptographic Failures bir s\u0131ra y\u00fckselerek #2\u2019ye \u00e7\u0131k\u0131yor; \u00f6nceki ad\u0131 A3:2017-Sensitive Data Exposure idi; bu daha \u00e7ok bir semptomdu, k\u00f6k neden de\u011fil. Yenilenen ad, daha \u00f6nce de \u00f6rt\u00fck olarak oldu\u011fu gibi kriptografiyle ilgili ba\u015far\u0131s\u0131zl\u0131klara odaklan\u0131yor. Bu kategori s\u0131kl\u0131kla hassas veri if\u015fas\u0131na veya sistemin ele ge\u00e7irilmesine yol a\u00e7ar.</li> <li>A03:2021-Injection \u00fc\u00e7\u00fcnc\u00fc s\u0131raya geriliyor. Uygulamalar\u0131n %94\u2019\u00fcnde bir t\u00fcr injection i\u00e7in test yap\u0131ld\u0131; maksimum insidans oran\u0131 %19, ortalama insidans oran\u0131 %3,37 ve bu kategoriye e\u015flenen 33 CWE, uygulamalarda 274 bin olay ile ikinci en y\u00fcksek g\u00f6r\u00fcn\u00fcme sahip. Cross-site Scripting bu s\u00fcr\u00fcmde art\u0131k bu kategorinin bir par\u00e7as\u0131.</li> <li>A04:2021-Insecure Design 2021 i\u00e7in yeni bir kategori; tasar\u0131m kusurlar\u0131yla ili\u015fkili risklere odaklan\u0131r. End\u00fcstri olarak ger\u00e7ekten \u201csola kaymak\u201d istiyorsak daha fazla threat modeling, g\u00fcvenli tasar\u0131m pattern\u2019leri ve prensipleri ile referans mimarilere ihtiya\u00e7 var. G\u00fcvensiz bir tasar\u0131m, ne kadar kusursuz uygulan\u0131rsa uygulans\u0131n d\u00fczeltilemez; tan\u0131m gere\u011fi, belirli sald\u0131r\u0131lara kar\u015f\u0131 gerekli g\u00fcvenlik kontrolleri hi\u00e7 olu\u015fturulmam\u0131\u015ft\u0131r.</li> <li>A05:2021-Security Misconfiguration \u00f6nceki s\u00fcr\u00fcmde #6\u2019dan y\u00fckseliyor; uygulamalar\u0131n %90\u2019\u0131 bir t\u00fcr yanl\u0131\u015f yap\u0131land\u0131rma i\u00e7in test edildi, ortalama insidans oran\u0131 %4,5 ve bu risk kategorisine e\u015flenen 208 binden fazla CWE olay\u0131 var. Y\u00fcksek derecede konfig\u00fcre edilebilir yaz\u0131l\u0131mlara ge\u00e7i\u015f artt\u0131k\u00e7a bu kategorinin y\u00fckselmesi \u015fa\u015f\u0131rt\u0131c\u0131 de\u011fil. \u00d6nceki A4:2017-XML External Entities (XXE) kategorisi art\u0131k bu risk kategorisinin bir par\u00e7as\u0131.</li> <li>A06:2021-Vulnerable and Outdated Components \u00f6nceki ad\u0131 Using Components with Known Vulnerabilities idi ve Top 10 community survey\u2019de #2 oldu; ayr\u0131ca veri analizine g\u00f6re de Top 10\u2019a girecek kadar veri vard\u0131. Bu kategori 2017\u2019deki #9\u2019dan y\u00fckseliyor ve test etmekte ve riski de\u011ferlendirmekte zorland\u0131\u011f\u0131m\u0131z bilinen bir konu. Dahil edilen CWE\u2019lere e\u015flenen herhangi bir CVE\u2019nin bulunmad\u0131\u011f\u0131 tek kategori; bu nedenle skorlamaya varsay\u0131lan exploit ve impact a\u011f\u0131rl\u0131klar\u0131 5.0 olarak dahil edildi.</li> <li>A07:2021-Identification and Authentication Failures \u00f6nceki Broken Authentication kategorisidir; ikinci s\u0131radan geriliyor ve art\u0131k kimlik tespitiyle (identification) daha ili\u015fkili CWE\u2019leri de i\u00e7eriyor. Bu kategori h\u00e2l\u00e2 Top 10\u2019un ayr\u0131lmaz bir par\u00e7as\u0131, ancak standart framework\u2019lerin artan kullan\u0131labilirli\u011fi yard\u0131mc\u0131 oluyor gibi g\u00f6r\u00fcn\u00fcyor.</li> <li>A08:2021-Software and Data Integrity Failures 2021 i\u00e7in yeni bir kategoridir; do\u011frulama yap\u0131lmadan software update\u2019ler, kritik data ve CI/CD pipeline\u2019lar\u0131yla ilgili varsay\u0131mlara odaklan\u0131r. Bu kategoriye e\u015flenen 10 CWE\u2019den CVE/CVSS verilerinde en y\u00fcksek a\u011f\u0131rl\u0131kl\u0131 impact\u2019lerden baz\u0131lar\u0131 geliyor. A8:2017-Insecure Deserialization art\u0131k bu daha geni\u015f kategorinin bir par\u00e7as\u0131.</li> <li>A09:2021-Security Logging and Monitoring Failures \u00f6nceki A10:2017-Insufficient Logging &amp; Monitoring kategorisidir; Top 10 community survey (#3) ile eklendi ve \u00f6nceki #10\u2019dan y\u00fckseliyor. Bu kategori daha fazla failure t\u00fcr\u00fcn\u00fc i\u00e7erecek \u015fekilde geni\u015fletildi, test edilmesi zorlu ve CVE/CVSS verilerinde iyi temsil edilmiyor. Ancak bu kategorideki ba\u015far\u0131s\u0131zl\u0131klar do\u011frudan g\u00f6r\u00fcn\u00fcrl\u00fc\u011f\u00fc, incident alerting\u2019i ve adli analizleri etkileyebilir.</li> <li>A10:2021-Server-Side Request Forgery Top 10 community survey (#1) ile eklendi. Veriler, ortalaman\u0131n \u00fczerinde test kapsam\u0131yla birlikte nispeten d\u00fc\u015f\u00fck bir insidans oran\u0131 ve Exploit ile Impact potansiyeli i\u00e7in ortalaman\u0131n \u00fczerinde puanlar g\u00f6steriyor. Bu kategori, g\u00fcvenlik toplulu\u011fu \u00fcyelerinin bunun \u00f6nemli oldu\u011funu s\u00f6yledi\u011fi, ancak \u015fu an i\u00e7in verilerde tam yans\u0131mayan bir senaryoyu temsil ediyor.</li> </ul>"},{"location":"tr/A00_2021_Introduction/#metodoloji","title":"Metodoloji","text":"<p>Bu s\u00fcr\u00fcm her zamankinden daha veri odakl\u0131, ancak k\u00f6r\u00fc k\u00f6r\u00fcne veri odakl\u0131 de\u011fil. On kategorinin sekizini katk\u0131 verilerinden, ikisini de y\u00fcksek seviyede Top 10 community survey\u2019den se\u00e7tik. Bunu temel bir nedenle yap\u0131yoruz: katk\u0131 verilerine bakmak ge\u00e7mi\u015fe bakmakt\u0131r. AppSec ara\u015ft\u0131rmac\u0131lar\u0131n\u0131n yeni zafiyetler ve onlar\u0131 test etmenin yeni yollar\u0131n\u0131 bulmas\u0131 zaman al\u0131r. Bu testlerin ara\u00e7lara ve s\u00fcre\u00e7lere entegre edilmesi de zaman al\u0131r. Bir zay\u0131fl\u0131\u011f\u0131 \u00f6l\u00e7ekli \u015fekilde g\u00fcvenilir bi\u00e7imde test edebildi\u011fimiz zamana kadar y\u0131llar ge\u00e7mi\u015f olabilir. Bu bak\u0131\u015f\u0131 dengelemek i\u00e7in, application security ve development uzmanlar\u0131na, verilerin hen\u00fcz g\u00f6stermeyebilece\u011fi ama sahada g\u00f6rd\u00fckleri temel zay\u0131fl\u0131klar\u0131n neler oldu\u011funu sormak \u00fczere bir community survey kullan\u0131yoruz.</p> <p>Top 10\u2019u olgunla\u015ft\u0131rmaya devam etmek i\u00e7in benimsedi\u011fimiz birka\u00e7 kritik de\u011fi\u015fiklik var.</p>"},{"location":"tr/A00_2021_Introduction/#kategoriler-nasl-yaplandrld","title":"Kategoriler nas\u0131l yap\u0131land\u0131r\u0131ld\u0131","text":"<p>OWASP Top Ten\u2019in \u00f6nceki s\u00fcr\u00fcm\u00fcne g\u00f6re baz\u0131 kategoriler de\u011fi\u015fti. \u0130\u015fte de\u011fi\u015fikliklerin y\u00fcksek seviyeli \u00f6zeti.</p> <p>\u00d6nceki veri toplama \u00e7abalar\u0131, yakla\u015f\u0131k 30 CWE\u2019nin belirlenmi\u015f bir alt k\u00fcmesine odaklan\u0131yordu ve ek bulgular i\u00e7in bir alan vard\u0131. Organizasyonlar\u0131n \u00e7o\u011funlukla yaln\u0131zca bu 30 CWE\u2019ye odakland\u0131\u011f\u0131n\u0131 ve g\u00f6rd\u00fckleri ek CWE\u2019leri nadiren eklediklerini \u00f6\u011frendik. Bu s\u00fcr\u00fcmde konuyu serbest b\u0131rakt\u0131k ve herhangi bir k\u0131s\u0131tlama olmaks\u0131z\u0131n yaln\u0131zca veri istedik. 2017\u2019den ba\u015flayarak belirli bir y\u0131l i\u00e7in test edilen uygulama say\u0131s\u0131n\u0131 ve testlerde en az bir CWE \u00f6rne\u011fi bulunan uygulama say\u0131s\u0131n\u0131 istedik. Bu format, her bir CWE\u2019nin uygulama pop\u00fclasyonu i\u00e7inde ne kadar yayg\u0131n oldu\u011funu izlememizi sa\u011fl\u0131yor. Bizim ama\u00e7lar\u0131m\u0131z i\u00e7in frekans\u0131 g\u00f6rmezden geliyoruz; ba\u015fka durumlarda \u00f6nemli olabilse de uygulama pop\u00fclasyonundaki ger\u00e7ek yayg\u0131nl\u0131\u011f\u0131 gizliyor. Bir uygulamada bir CWE\u2019nin d\u00f6rt \u00f6rne\u011fi ya da 4.000 \u00f6rne\u011fi olmas\u0131 Top 10 hesaplamas\u0131na dahil de\u011fil. Yakla\u015f\u0131k 30 CWE\u2019den veri setinde analiz etmek \u00fczere neredeyse 400 CWE\u2019ye ge\u00e7tik. Gelecekte ek veri analizi yapmay\u0131 planl\u0131yoruz. CWE say\u0131s\u0131ndaki bu \u00f6nemli art\u0131\u015f, kategorilerin nas\u0131l yap\u0131land\u0131r\u0131ld\u0131\u011f\u0131na ili\u015fkin de\u011fi\u015fiklikleri gerektiriyor.</p> <p>CWE\u2019leri gruplamak ve kategorize etmek i\u00e7in birka\u00e7 ay harcad\u0131k ve birka\u00e7 ay daha devam edebilirdik. Bir noktada durmak zorundayd\u0131k. CWE\u2019lerin hem k\u00f6k neden hem de semptom tipleri vard\u0131r; k\u00f6k neden tiplerine \u201cCryptographic Failure\u201d ve \u201cMisconfiguration\u201d \u00f6rnek verilebilirken, semptom tiplerine \u201cSensitive Data Exposure\u201d ve \u201cDenial of Service\u201d \u00f6rnek verilebilir. M\u00fcmk\u00fcn oldu\u011funda k\u00f6k nedene odaklanmaya karar verdik; \u00e7\u00fcnk\u00fc tan\u0131mlama ve iyile\u015ftirme rehberi sa\u011flamak a\u00e7\u0131s\u0131ndan daha mant\u0131kl\u0131. K\u00f6k nedene semptomdan daha fazla odaklanmak yeni bir konsept de\u011fil; Top Ten zaten semptom ve k\u00f6k neden kar\u0131\u015f\u0131m\u0131yd\u0131. CWE\u2019ler de bir kar\u0131\u015f\u0131md\u0131r; biz sadece bunu daha kas\u0131tl\u0131 hale getiriyor ve vurguluyoruz. Bu s\u00fcr\u00fcmde kategori ba\u015f\u0131na ortalama 19,6 CWE var; alt s\u0131n\u0131rlar A10:2021-Server-Side Request Forgery (SSRF) i\u00e7in 1 CWE ve A04:2021-Insecure Design i\u00e7in 40 CWE. Bu g\u00fcncellenmi\u015f kategori yap\u0131s\u0131, \u015firketlerin dillerine/framework\u2019lerine uygun CWE\u2019lere odaklanabilmesi a\u00e7\u0131s\u0131ndan ek e\u011fitim faydalar\u0131 sunuyor.</p>"},{"location":"tr/A00_2021_Introduction/#kategorilerin-secimi-icin-veriler-nasl-kullanld","title":"Kategorilerin se\u00e7imi i\u00e7in veriler nas\u0131l kullan\u0131ld\u0131","text":"<p>2017\u2019de kategorileri olas\u0131l\u0131\u011f\u0131 belirlemek i\u00e7in insidans oran\u0131na g\u00f6re se\u00e7tik, ard\u0131ndan onlarca y\u0131ll\u0131k deneyime dayanan ekip tart\u0131\u015fmalar\u0131yla Exploitability, Detectability (ayn\u0131 zamanda likelihood) ve Technical Impact temelinde s\u0131ralad\u0131k. 2021 i\u00e7in m\u00fcmk\u00fcnse Exploitability ve (Technical) Impact i\u00e7in veri kullanmak istiyoruz.</p> <p>OWASP Dependency Check\u2019i indirdik ve CVE\u2019lere e\u015flenen CWE\u2019lere g\u00f6re gruplanm\u0131\u015f CVSS Exploit ve Impact skorlar\u0131n\u0131 \u00e7\u0131kard\u0131k. Olduk\u00e7a fazla ara\u015ft\u0131rma ve \u00e7aba gerektirdi; t\u00fcm CVE\u2019lerin CVSSv2 skorlar\u0131 var, ancak CVSSv2\u2019deki kusurlar\u0131n CVSSv3 ile ele al\u0131nmas\u0131 gerekiyordu. Belirli bir noktadan sonra t\u00fcm CVE\u2019lere ayr\u0131ca bir CVSSv3 skoru da atand\u0131. Ek olarak, puan aral\u0131klar\u0131 ve form\u00fcller CVSSv2 ile CVSSv3 aras\u0131nda g\u00fcncellendi.</p> <p>CVSSv2\u2019de hem Exploit hem (Technical) Impact 10,0\u2019a kadar \u00e7\u0131kabiliyordu, ancak form\u00fcl Exploit i\u00e7in %60\u2019a, Impact i\u00e7in %40\u2019a d\u00fc\u015f\u00fcr\u00fcyordu. CVSSv3\u2019te teorik maksimum Exploit i\u00e7in 6,0 ve Impact i\u00e7in 4,0 ile s\u0131n\u0131rland\u0131r\u0131ld\u0131. A\u011f\u0131rl\u0131klar dikkate al\u0131nd\u0131\u011f\u0131nda, CVSSv3\u2019te Impact skoru ortalama olarak neredeyse bir bu\u00e7uk puan yukar\u0131 kayd\u0131 ve exploitability ortalama olarak neredeyse yar\u0131m puan a\u015fa\u011f\u0131 kayd\u0131.</p> <p>National Vulnerability Database (NVD) verilerinde CWE\u2019ye e\u015flenen bir CVE\u2019nin 125 bin kayd\u0131 var ve bir CVE\u2019ye e\u015flenen 241 benzersiz CWE bulunuyor. 62 bin CWE e\u015flemesi bir CVSSv3 skoruna sahip; bu, veri seti pop\u00fclasyonunun yakla\u015f\u0131k yar\u0131s\u0131d\u0131r.</p> <p>Top Ten 2021 i\u00e7in ortalama exploit ve impact skorlar\u0131n\u0131 \u015fu \u015fekilde hesaplad\u0131k. T\u00fcm CVSS skorlar\u0131na sahip CVE\u2019leri CWE\u2019ye g\u00f6re gruplad\u0131k ve hem exploit hem impact skorlar\u0131n\u0131, pop\u00fclasyonun CVSSv3 sahibi y\u00fczdesine + kalan CVSSv2 pop\u00fclasyonuna g\u00f6re a\u011f\u0131rl\u0131kland\u0131rarak genel bir ortalama elde ettik. Bu ortalamalar\u0131, risk denkleminin di\u011fer yar\u0131s\u0131 i\u00e7in Exploit ve (Technical) Impact puanlamas\u0131 olarak kullanmak \u00fczere veri setindeki CWE\u2019lere e\u015fledik.</p>"},{"location":"tr/A00_2021_Introduction/#neden-saf-istatistiksel-veri-degil","title":"Neden saf istatistiksel veri de\u011fil?","text":"<p>Verilerdeki sonu\u00e7lar, esasen otomatik olarak test edebildiklerimizle s\u0131n\u0131rl\u0131d\u0131r. Deneyimli bir AppSec profesyoneli ile konu\u015fursan\u0131z, verilerde hen\u00fcz bulunmayan ama bulduklar\u0131 \u015feylerden ve g\u00f6rd\u00fckleri trendlerden bahsederler. Belirli zafiyet t\u00fcrleri i\u00e7in test metodolojilerinin geli\u015ftirilmesi zaman al\u0131r ve bu testlerin otomatikle\u015ftirilip \u00e7ok say\u0131da uygulamaya kar\u015f\u0131 \u00e7al\u0131\u015ft\u0131r\u0131lmas\u0131 daha da zaman al\u0131r. Buldu\u011fumuz her \u015fey ge\u00e7mi\u015fe bakmaktad\u0131r ve verilerde olmayan son y\u0131l\u0131n trendlerini ka\u00e7\u0131r\u0131yor olabilir.</p> <p>Bu nedenle veriler eksik oldu\u011fu i\u00e7in on kategoriden yaln\u0131zca sekizini verilerden se\u00e7iyoruz. Di\u011fer iki kategori Top 10 community survey\u2019den geliyor. Bu, sahada \u00e7al\u0131\u015fan uygulay\u0131c\u0131lar\u0131n, verilerde olmayabilecek (ve belki de hi\u00e7 veriye yans\u0131mayacak) en y\u00fcksek riskleri oylamas\u0131na olanak tan\u0131r.</p>"},{"location":"tr/A00_2021_Introduction/#neden-frekans-yerine-insidans-oran","title":"Neden frekans yerine insidans oran\u0131?","text":"<p>\u00dc\u00e7 birincil veri kayna\u011f\u0131 vard\u0131r: Human-assisted Tooling (HaT), Tool-assisted Human (TaH) ve ham Tooling.</p> <p>Tooling ve HaT, y\u00fcksek frekansl\u0131 bulgu \u00fcreticileridir. Ara\u00e7lar belirli zafiyetleri arar, yorulmadan bu zafiyetin her \u00f6rne\u011fini bulmaya \u00e7al\u0131\u015f\u0131r ve baz\u0131 zafiyet t\u00fcrleri i\u00e7in y\u00fcksek bulgu say\u0131lar\u0131 \u00fcretir. Cross-Site Scripting\u2019e bak\u0131n; genellikle iki \u00e7e\u015fittir: daha k\u00fc\u00e7\u00fck, izole bir hata ya da sistemik bir sorun. Sistemik oldu\u011funda tek bir uygulama i\u00e7in bulgu say\u0131lar\u0131 binlere ula\u015fabilir. Bu y\u00fcksek frekans, raporlardaki ya da verilerdeki di\u011fer \u00e7o\u011fu zafiyeti bast\u0131r\u0131r.</p> <p>\u00d6te yandan TaH, daha geni\u015f bir zafiyet t\u00fcr\u00fc yelpazesi bulur ancak zaman k\u0131s\u0131tlar\u0131 nedeniyle \u00e7ok daha d\u00fc\u015f\u00fck frekanstad\u0131r. \u0130nsanlar bir uygulamay\u0131 test edip Cross-Site Scripting gibi bir \u015fey g\u00f6rd\u00fc\u011f\u00fcnde genellikle \u00fc\u00e7 d\u00f6rt \u00f6rnek bulur ve durur. Sistemik bir bulgu olup olmad\u0131\u011f\u0131n\u0131 belirleyebilir ve uygulama genelinde d\u00fczeltme \u00f6nerisi ile yazabilirler. Her \u00f6rne\u011fi bulmaya gerek (ve zaman) yoktur.</p> <p>Bu iki farkl\u0131 veri setini frekansa g\u00f6re birle\u015ftirmeye \u00e7al\u0131\u015ft\u0131\u011f\u0131m\u0131z\u0131 varsayal\u0131m; Tooling ve HaT verileri daha do\u011fru (ama geni\u015f) TaH verilerini bo\u011far ve bunun \u00f6nemli bir k\u0131sm\u0131, Cross-Site Scripting gibi \u015feylerin \u00e7o\u011fu listede \u00e7ok y\u00fcksek s\u0131ralarda olmas\u0131n\u0131n nedenidir; genellikle etkisi d\u00fc\u015f\u00fck ile orta aras\u0131nda olmas\u0131na ra\u011fmen. Bunun nedeni salt bulgu hacmidir. (Cross-Site Scripting\u2019i test etmek de nispeten kolayd\u0131r, bu nedenle onun i\u00e7in daha fazla test vard\u0131r.)</p> <p>2017\u2019de, verilere taze bir bak\u0131\u015f atmak ve Tooling ile HaT verilerini TaH verileriyle temiz \u015fekilde birle\u015ftirmek i\u00e7in insidans oran\u0131n\u0131 kullanmaya ba\u015flad\u0131k. \u0130nsidans oran\u0131, uygulama pop\u00fclasyonunun y\u00fczde ka\u00e7\u0131nda bir zafiyet t\u00fcr\u00fcn\u00fcn en az bir \u00f6rne\u011finin bulundu\u011funu sorar. Tekil mi yoksa sistemik mi oldu\u011funa ald\u0131rmay\u0131z. Bizim ama\u00e7lar\u0131m\u0131z i\u00e7in bu ilgisizdir; sadece en az bir \u00f6rnek bulunan uygulama say\u0131s\u0131n\u0131 bilmeye ihtiyac\u0131m\u0131z var; bu da, y\u00fcksek frekansl\u0131 sonu\u00e7larla verileri bo\u011fmadan, farkl\u0131 test t\u00fcrleri aras\u0131nda bulgular\u0131n daha net bir g\u00f6r\u00fcn\u00fcm\u00fcn\u00fc sa\u011flar. Bu, bir sald\u0131rgan\u0131n bir kategoriyi ba\u015far\u0131yla istismar etmek i\u00e7in yaln\u0131zca bir \u00f6rne\u011fe ihtiya\u00e7 duydu\u011fu ger\u00e7e\u011fiyle ili\u015fkili risk temelli bir bak\u0131\u015fa kar\u015f\u0131l\u0131k gelir.</p>"},{"location":"tr/A00_2021_Introduction/#veri-toplama-ve-analiz-sureciniz-nedir","title":"Veri toplama ve analiz s\u00fcreciniz nedir?","text":"<p>Veri toplama s\u00fcrecini 2017\u2019de Open Security Summit\u2019te resmile\u015ftirdik. OWASP Top 10 liderleri ve topluluk, \u015feffaf bir veri toplama s\u00fcreci olu\u015fturmak i\u00e7in iki g\u00fcn harcad\u0131. 2021 s\u00fcr\u00fcm\u00fc, bu metodolojiyi ikinci kez kulland\u0131\u011f\u0131m\u0131z s\u00fcr\u00fcmd\u00fcr.</p> <p>Sosyal medya kanallar\u0131 \u00fczerinden (hem proje hem OWASP) veri \u00e7a\u011fr\u0131s\u0131 yay\u0131nl\u0131yoruz. OWASP Proje sayfas\u0131nda arad\u0131\u011f\u0131m\u0131z veri \u00f6\u011felerini ve yap\u0131lar\u0131n\u0131 ve bunlar\u0131n nas\u0131l g\u00f6nderilece\u011fini listeliyoruz. GitHub projesinde \u015fablon g\u00f6revi g\u00f6ren \u00f6rnek dosyalar\u0131m\u0131z var. CWE\u2019lere yap\u0131 ve e\u015flemeyi anlamak i\u00e7in gerekti\u011finde organizasyonlarla birlikte \u00e7al\u0131\u015f\u0131yoruz.</p> <p>Verileri, i\u015fi gere\u011fi test vendor\u2019\u0131 olan organizasyonlardan, bug bounty vendor\u2019lar\u0131ndan ve i\u00e7 test verilerini katk\u0131layan organizasyonlardan al\u0131yoruz. Veriyi ald\u0131ktan sonra bir araya y\u00fckl\u00fcyor ve CWE\u2019lerin risk kategorilerine nas\u0131l e\u015flendi\u011fine dair temel bir analiz \u00e7al\u0131\u015ft\u0131r\u0131yoruz. Baz\u0131 CWE\u2019ler aras\u0131nda \u00f6rt\u00fc\u015fme var ve di\u011ferleri birbirine \u00e7ok yak\u0131nd\u0131r (\u00f6rn. kriptografik zafiyetler). G\u00f6nderilen ham verilerle ilgili al\u0131nan her karar, verileri nas\u0131l normalize etti\u011fimizi a\u00e7\u0131k ve \u015feffaf olmak i\u00e7in belgelenir ve yay\u0131mlan\u0131r.</p> <p>Top 10\u2019a dahil edilmek \u00fczere en y\u00fcksek insidans oran\u0131na sahip sekiz kategoriye bak\u0131yoruz. Ayr\u0131ca Top 10 community survey sonu\u00e7lar\u0131na bak\u0131yor ve hangilerinin verilerde zaten mevcut olabilece\u011fini g\u00f6r\u00fcyoruz. Verilerde hen\u00fcz yer almayan en \u00e7ok oyu alan iki kategori, Top 10\u2019daki di\u011fer iki yer i\u00e7in se\u00e7ilir. T\u00fcm on kategori se\u00e7ildikten sonra, Top 10 2021\u2019i risk bazl\u0131 bir s\u0131raya koymaya yard\u0131mc\u0131 olmak i\u00e7in genelle\u015ftirilmi\u015f exploitability ve impact fakt\u00f6rlerini uygulad\u0131k.</p>"},{"location":"tr/A00_2021_Introduction/#veri-faktorleri","title":"Veri Fakt\u00f6rleri","text":"<p>Top 10\u2019daki her kategori i\u00e7in listelenen veri fakt\u00f6rleri ve anlamlar\u0131 \u015funlard\u0131r:</p> <ul> <li>CWEs Mapped: Top 10 ekibi taraf\u0131ndan bir kategoriye e\u015flenen CWE say\u0131s\u0131.</li> <li>Incidence Rate: Belirli bir y\u0131l i\u00e7in, o organizasyon taraf\u0131ndan test edilen pop\u00fclasyondaki uygulamalar\u0131n, ilgili CWE\u2019ye kar\u015f\u0131 zafiyetli olan y\u00fczdesi.</li> <li>(Testing) Coverage: Belirli bir CWE i\u00e7in t\u00fcm organizasyonlar taraf\u0131ndan test edilen uygulamalar\u0131n y\u00fczdesi.</li> <li>Weighted Exploit: CWE\u2019lere e\u015flenen CVE\u2019lerden gelen CVSSv2 ve CVSSv3 Exploit alt-skoru, normalize edilerek 10 puanl\u0131k \u00f6l\u00e7e\u011fe yerle\u015ftirilmi\u015f hali.</li> <li>Weighted Impact: CWE\u2019lere e\u015flenen CVE\u2019lerden gelen CVSSv2 ve CVSSv3 Impact alt-skoru, normalize edilerek 10 puanl\u0131k \u00f6l\u00e7e\u011fe yerle\u015ftirilmi\u015f hali.</li> <li>Total Occurrences: Bir kategoriye e\u015flenen CWE\u2019lerin bulundu\u011fu uygulamalar\u0131n toplam say\u0131s\u0131.</li> <li>Total CVEs: Bir kategoriye e\u015flenen CWE\u2019lere NVD veritaban\u0131nda e\u015flenen toplam CVE say\u0131s\u0131.</li> </ul>"},{"location":"tr/A00_2021_Introduction/#veri-katkclarmza-tesekkurler","title":"Veri katk\u0131c\u0131lar\u0131m\u0131za te\u015fekk\u00fcrler","text":"<p>A\u015fa\u011f\u0131daki organizasyonlar (ve baz\u0131 anonim ba\u011f\u0131\u015f\u00e7\u0131lar), bu s\u00fcr\u00fcm\u00fc en b\u00fcy\u00fck ve en kapsaml\u0131 uygulama g\u00fcvenli\u011fi veri seti h\u00e2line getiren 500.000\u2019den fazla uygulamaya ait verileri c\u00f6mert\u00e7e ba\u011f\u0131\u015flad\u0131. Siz olmadan bu m\u00fcmk\u00fcn olmazd\u0131.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"tr/A00_2021_Introduction/#sponsorlarmza-tesekkurler","title":"Sponsorlar\u0131m\u0131za te\u015fekk\u00fcrler","text":"<p>OWASP Top 10 2021 ekibi, Secure Code Warrior ve Just Eat\u2019in finansal deste\u011fini minnetle kabul eder.</p> <p></p> <p></p>"},{"location":"tr/A01_2021-Broken_Access_Control/","title":"A01:2021 \u2013 Broken Access Control (K\u0131r\u0131k Eri\u015fim Kontrol\u00fc)","text":""},{"location":"tr/A01_2021-Broken_Access_Control/#faktorler","title":"Fakt\u00f6rler","text":"E\u015flenen CWE'ler Maks. G\u00f6r\u00fclme Oran\u0131 Ort. G\u00f6r\u00fclme Oran\u0131 Ort. A\u011f\u0131rl\u0131kl\u0131 Exploit Ort. A\u011f\u0131rl\u0131kl\u0131 Etki Maks. Kapsama Ort. Kapsama Toplam G\u00f6r\u00fclme Toplam CVE 34 55.97% 3.81% 6.92 5.93 94.55% 47.72% 318,487 19,013"},{"location":"tr/A01_2021-Broken_Access_Control/#genel-baks","title":"Genel Bak\u0131\u015f","text":"<p>Be\u015finci s\u0131radan y\u00fckselerek, uygulamalar\u0131n %94\u2019\u00fc bir t\u00fcr broken access control a\u00e7\u0131s\u0131ndan test edildi; ortalama g\u00f6r\u00fclme oran\u0131 %3.81 olup, katk\u0131 veri setinde 318 bini a\u015fk\u0131n vakayla en \u00e7ok g\u00f6r\u00fclen kategoridir. Dikkat \u00e7eken Common Weakness Enumeration (CWE) \u00f6rnekleri aras\u0131nda CWE-200: Exposure of Sensitive Information to an Unauthorized Actor, CWE-201: Insertion of Sensitive Information Into Sent Data ve CWE-352: Cross-Site Request Forgery bulunur.</p>"},{"location":"tr/A01_2021-Broken_Access_Control/#acklama","title":"A\u00e7\u0131klama","text":"<p>Eri\u015fim kontrol\u00fc, kullan\u0131c\u0131lar\u0131n ama\u00e7lanan yetkilerinin d\u0131\u015f\u0131na \u00e7\u0131kamamas\u0131 i\u00e7in politikay\u0131 uygular. Hatalar genellikle yetkisiz bilgi if\u015fas\u0131na, verilerin de\u011fi\u015ftirilmesine veya yok edilmesine ya da kullan\u0131c\u0131n\u0131n s\u0131n\u0131rlar\u0131 d\u0131\u015f\u0131nda bir i\u015flevin icra edilmesine yol a\u00e7ar. Yayg\u0131n eri\u015fim kontrol\u00fc a\u00e7\u0131klar\u0131 \u015funlard\u0131r:</p> <ul> <li>Asgari ayr\u0131cal\u0131k (least privilege) veya varsay\u0131lan olarak reddet (deny by default) ilkesinin ihlali; belirli yetenekler, roller veya kullan\u0131c\u0131lar i\u00e7in verilmesi gereken eri\u015fimin herkese a\u00e7\u0131k olmas\u0131.</li> <li>URL\u2019yi (parameter tampering/force browsing), uygulaman\u0131n i\u00e7 durumunu veya HTML sayfas\u0131n\u0131 de\u011fi\u015ftirerek ya da API request\u2019lerini de\u011fi\u015ftiren bir attack tool kullanarak eri\u015fim kontrol kontrollerinin atlat\u0131lmas\u0131.</li> <li>Benzersiz tan\u0131mlay\u0131c\u0131y\u0131 vererek ba\u015fkas\u0131n\u0131n hesab\u0131n\u0131 g\u00f6r\u00fcnt\u00fcleme veya d\u00fczenleme (insecure direct object references).</li> <li>POST, PUT ve DELETE i\u00e7in access control eksikli\u011fi bulunan API\u2019lere eri\u015fim.</li> <li>Yetki y\u00fckseltme (privilege escalation). Login olmadan bir kullan\u0131c\u0131 gibi davranmak veya user olarak login iken admin gibi davranmak.</li> <li>Metadata manip\u00fclasyonu; \u00f6rn. bir JSON Web Token (JWT) access control token\u2019\u0131n\u0131, cookie\u2019yi veya hidden field\u2019\u0131 yeniden oynatarak/tahrif ederek yetki y\u00fckseltme ya da JWT invalidation\u2019\u0131n\u0131 suistimal etme.</li> <li>CORS misconfiguration nedeniyle yetkisiz/g\u00fcvenilmeyen origin\u2019lerden API eri\u015fimine izin verilmesi.</li> <li>Auth olmadan authenticated sayfalara ya da standard user iken privileged sayfalara force browsing.</li> </ul>"},{"location":"tr/A01_2021-Broken_Access_Control/#nasl-onlenir","title":"Nas\u0131l \u00d6nlenir","text":"<p>Eri\u015fim kontrol\u00fc yaln\u0131zca g\u00fcvenilen server-side code veya server-less API i\u00e7inde etkilidir; sald\u0131rgan\u0131n access control kontrol\u00fcn\u00fc veya metadata\u2019y\u0131 de\u011fi\u015ftiremeyece\u011fi yerlerde.</p> <ul> <li>Public kaynaklar hari\u00e7, varsay\u0131lan olarak reddet (deny by default).</li> <li>Access control mekanizmalar\u0131n\u0131 bir kez uygulay\u0131p t\u00fcm uygulamada yeniden kullan\u0131n; Cross-Origin Resource Sharing (CORS) kullan\u0131m\u0131n\u0131 en aza indirin.</li> <li>Model access control\u2019leri, herhangi bir kayd\u0131 create/read/update/delete etmesine izin vermek yerine kay\u0131t sahipli\u011fini (record ownership) zorlamal\u0131d\u0131r.</li> <li>Benzersiz application business limit gereksinimleri domain model\u2019lerince zorlanmal\u0131d\u0131r.</li> <li>Web server directory listing\u2019i devre d\u0131\u015f\u0131 b\u0131rak\u0131n ve dosya metadata\u2019s\u0131n\u0131n (\u00f6rn. .git) ve yedek dosyalar\u0131n web root i\u00e7inde bulunmad\u0131\u011f\u0131ndan emin olun.</li> <li>Access control hatalar\u0131n\u0131 log\u2019lay\u0131n, uygun oldu\u011funda (\u00f6rn. tekrar eden hatalarda) admin\u2019leri uyar\u0131n.</li> <li>Otomatize attack tooling\u2019in zarar\u0131n\u0131 en aza indirmek i\u00e7in API ve controller eri\u015fimini rate limit edin.</li> <li>Stateful session identifier\u2019lar\u0131 logout sonras\u0131 server taraf\u0131nda ge\u00e7ersiz k\u0131l\u0131n. Stateless JWT token\u2019lar\u0131 k\u0131sa \u00f6m\u00fcrl\u00fc yap\u0131n ki sald\u0131rgan i\u00e7in f\u0131rsat penceresi minimal olsun. Daha uzun \u00f6m\u00fcrl\u00fc JWT\u2019lerde eri\u015fimi revoke etmek i\u00e7in OAuth standartlar\u0131n\u0131 takip etmek kuvvetle tavsiye edilir.</li> </ul> <p>Geli\u015ftiriciler ve QA ekipleri fonksiyonel access control unit ve integration testlerini dahil etmelidir.</p>"},{"location":"tr/A01_2021-Broken_Access_Control/#ornek-saldr-senaryolar","title":"\u00d6rnek Sald\u0131r\u0131 Senaryolar\u0131","text":"<p>Senaryo #1: Uygulama, account bilgilerine eri\u015fen bir SQL \u00e7a\u011fr\u0131s\u0131nda do\u011frulanmam\u0131\u015f veriyi kullan\u0131yor:</p> <pre><code> pstmt.setString(1, request.getParameter(\"acct\"));\n ResultSet results = pstmt.executeQuery( );\n</code></pre> <p>Sald\u0131rgan, browser\u2019daki 'acct' parametresini istedi\u011fi hesap numaras\u0131n\u0131 g\u00f6nderecek \u015fekilde de\u011fi\u015ftirir. Do\u011fru \u015fekilde do\u011frulanmam\u0131\u015fsa sald\u0131rgan herhangi bir kullan\u0131c\u0131n\u0131n hesab\u0131na eri\u015febilir.</p> <pre><code> https://example.com/app/accountInfo?acct=notmyacct\n</code></pre> <p>Senaryo #2: Sald\u0131rgan hedef URL\u2019lere basit\u00e7e force browse yapar. Admin sayfas\u0131na eri\u015fim i\u00e7in admin haklar\u0131 gerekir.</p> <pre><code> https://example.com/app/getappInfo\n https://example.com/app/admin_getappInfo\n</code></pre> <p>Auth olmayan bir kullan\u0131c\u0131 bu sayfalardan herhangi birine eri\u015febiliyorsa bu bir hatad\u0131r. Non-admin bir kullan\u0131c\u0131 admin sayfas\u0131na eri\u015febiliyorsa bu da bir hatad\u0131r.</p>"},{"location":"tr/A01_2021-Broken_Access_Control/#referanslar","title":"Referanslar","text":"<ul> <li> <p>OWASP Proactive Controls: Enforce Access   Controls</p> </li> <li> <p>OWASP Application Security Verification Standard: V4 Access   Control</p> </li> <li> <p>OWASP Testing Guide: Authorization   Testing</p> </li> <li> <p>OWASP Cheat Sheet: Authorization</p> </li> <li> <p>PortSwigger: Exploiting CORS   misconfiguration</p> </li> <li> <p>OAuth: Revoking Access</p> </li> </ul>"},{"location":"tr/A01_2021-Broken_Access_Control/#eslenen-cwelerin-listesi","title":"E\u015flenen CWE\u2019lerin Listesi","text":"<p>CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</p> <p>CWE-23 Relative Path Traversal</p> <p>CWE-35 Path Traversal: '.../...//'</p> <p>CWE-59 Improper Link Resolution Before File Access ('Link Following')</p> <p>CWE-200 Exposure of Sensitive Information to an Unauthorized Actor</p> <p>CWE-201 Exposure of Sensitive Information Through Sent Data</p> <p>CWE-219 Storage of File with Sensitive Data Under Web Root</p> <p>CWE-264 Permissions, Privileges, and Access Controls (should no longer be used)</p> <p>CWE-275 Permission Issues</p> <p>CWE-276 Incorrect Default Permissions</p> <p>CWE-284 Improper Access Control</p> <p>CWE-285 Improper Authorization</p> <p>CWE-352 Cross-Site Request Forgery (CSRF)</p> <p>CWE-359 Exposure of Private Personal Information to an Unauthorized Actor</p> <p>CWE-377 Insecure Temporary File</p> <p>CWE-402 Transmission of Private Resources into a New Sphere ('Resource Leak')</p> <p>CWE-425 Direct Request ('Forced Browsing')</p> <p>CWE-441 Unintended Proxy or Intermediary ('Confused Deputy')</p> <p>CWE-497 Exposure of Sensitive System Information to an Unauthorized Control Sphere</p> <p>CWE-538 Insertion of Sensitive Information into Externally-Accessible File or Directory</p> <p>CWE-540 Inclusion of Sensitive Information in Source Code</p> <p>CWE-548 Exposure of Information Through Directory Listing</p> <p>CWE-552 Files or Directories Accessible to External Parties</p> <p>CWE-566 Authorization Bypass Through User-Controlled SQL Primary Key</p> <p>CWE-601 URL Redirection to Untrusted Site ('Open Redirect')</p> <p>CWE-639 Authorization Bypass Through User-Controlled Key</p> <p>CWE-651 Exposure of WSDL File Containing Sensitive Information</p> <p>CWE-668 Exposure of Resource to Wrong Sphere</p> <p>CWE-706 Use of Incorrectly-Resolved Name or Reference</p> <p>CWE-862 Missing Authorization</p> <p>CWE-863 Incorrect Authorization</p> <p>CWE-913 Improper Control of Dynamically-Managed Code Resources</p> <p>CWE-922 Insecure Storage of Sensitive Information</p> <p>CWE-1275 Sensitive Cookie with Improper SameSite Attribute</p>"},{"location":"tr/A02_2021-Cryptographic_Failures/#faktorler","title":"Fakt\u00f6rler","text":"CWEs E\u015fle\u015ftirildi Maks G\u00f6r\u00fclme Oran\u0131 Ort. G\u00f6r\u00fclme Oran\u0131 Ort. A\u011f\u0131rl\u0131kl\u0131 Exploit Ort. A\u011f\u0131rl\u0131kl\u0131 Impact Maks Coverage Ort. Coverage Toplam Olay Toplam CVE 29 46.44% 4.49% 7.29 6.81 79.33% 34.85% 233,788 3,075"},{"location":"tr/A02_2021-Cryptographic_Failures/#genel-baks","title":"Genel Bak\u0131\u015f","text":"<p>Daha \u00f6nce Sensitive Data Exposure olarak bilinen ve bir k\u00f6k neden yerine daha \u00e7ok geni\u015f bir semptomu tan\u0131mlayan kategori, bir basamak y\u00fckselerek #2\u2019ye geldi. Odak noktas\u0131, kriptografiyle (veya yoklu\u011fuyla) ilgili hatalard\u0131r. Bunlar \u00e7o\u011fu zaman hassas verilerin a\u00e7\u0131\u011fa \u00e7\u0131kmas\u0131na yol a\u00e7ar. Dikkate de\u011fer Common Weakness Enumeration (CWE) \u00f6rnekleri aras\u0131nda CWE-259: Use of Hard-coded Password, CWE-327: Broken or Risky Crypto Algorithm ve CWE-331: Insufficient Entropy yer al\u0131r.</p>"},{"location":"tr/A02_2021-Cryptographic_Failures/#acklama","title":"A\u00e7\u0131klama","text":"<p>\u0130lk yap\u0131lacak \u015fey, hem transit halinde hem de at rest durumundaki verilerin korunma ihtiyac\u0131n\u0131 belirlemektir. \u00d6rne\u011fin parolalar, kredi kart\u0131 numaralar\u0131, sa\u011fl\u0131k kay\u0131tlar\u0131, ki\u015fisel bilgiler ve ticari s\u0131rlar; \u00f6zellikle bu veriler gizlilik yasalar\u0131na (\u00f6r. AB\u2019nin GDPR\u2019\u0131) veya d\u00fczenlemelere (\u00f6r. finansal veriler i\u00e7in PCI DSS) tabi ise, ekstra koruma gerektirir. B\u00f6yle veriler i\u00e7in:</p> <ul> <li> <p>Herhangi bir veri clear text olarak m\u0131 iletiliyor? Bu, HTTP, SMTP, FTP gibi protokolleri ve STARTTLS gibi TLS upgrade\u2019lerini de kapsar. Harici internet trafi\u011fi tehlikelidir. Load balancer\u2019lar, web server\u2019lar veya back-end sistemler aras\u0131ndaki t\u00fcm internal trafi\u011fi do\u011frulay\u0131n.</p> </li> <li> <p>Varsay\u0131lan olarak veya eski kodlarda herhangi bir eski/zay\u0131f kriptografik algoritma ya da protokol kullan\u0131l\u0131yor mu?</p> </li> <li> <p>Varsay\u0131lan crypto key\u2019ler mi kullan\u0131l\u0131yor, zay\u0131f key\u2019ler mi \u00fcretiliyor veya do\u011fru key management/rotation eksik mi? Crypto key\u2019ler source code repository\u2019lere commitlenmi\u015f mi?</p> </li> <li> <p>Encryption zorunlu k\u0131l\u0131nm\u0131yor mu; \u00f6rne\u011fin (browser) security directive\u2019leri veya HTTP header\u2019lar\u0131 eksik mi?</p> </li> <li> <p>Al\u0131nan server certificate ve trust chain d\u00fczg\u00fcn bi\u00e7imde do\u011frulan\u0131yor mu?</p> </li> <li> <p>Initialization vector\u2019lar (IV) yok say\u0131l\u0131yor, yeniden kullan\u0131l\u0131yor veya ilgili mode of operation i\u00e7in yeterince g\u00fcvenli \u00fcretilmiyor mu? ECB gibi g\u00fcvenli olmayan bir mode kullan\u0131l\u0131yor mu? Sadece encryption yerine authenticated encryption daha uygunken yanl\u0131\u015f kullan\u0131m var m\u0131?</p> </li> <li> <p>Password-based key derivation function olmaks\u0131z\u0131n parolalar crypto key olarak m\u0131 kullan\u0131l\u0131yor?</p> </li> <li> <p>Kriptografik ama\u00e7lar i\u00e7in tasarlanmam\u0131\u015f randomness mi kullan\u0131l\u0131yor? Do\u011fru fonksiyon se\u00e7ilmi\u015f olsa bile developer taraf\u0131ndan seed edilmesi gerekiyor mu ve e\u011fer gerekmiyorsa, developer g\u00fc\u00e7l\u00fc seeding\u2019i d\u00fc\u015f\u00fck entropy/tahmin edilebilir bir seed ile ezmi\u015f olabilir mi?</p> </li> <li> <p>MD5 veya SHA1 gibi deprecated hash fonksiyonlar\u0131 kullan\u0131l\u0131yor mu ya da kriptografik hash gereken yerlerde non-cryptographic hash fonksiyonlar\u0131 m\u0131 kullan\u0131l\u0131yor?</p> </li> <li> <p>PKCS number 1 v1.5 gibi deprecated cryptographic padding y\u00f6ntemleri kullan\u0131l\u0131yor mu?</p> </li> <li> <p>Cryptographic error message\u2019lar veya side-channel bilgiler exploitable m\u0131; \u00f6rne\u011fin padding oracle sald\u0131r\u0131lar\u0131yla?</p> </li> </ul> <p>ASVS Crypto (V7), Data Protection (V9) ve SSL/TLS (V10)\u2019a bak\u0131n.</p>"},{"location":"tr/A02_2021-Cryptographic_Failures/#nasl-onlenir","title":"Nas\u0131l \u00d6nlenir","text":"<p>Minimum olarak \u015funlar\u0131 yap\u0131n ve referanslar\u0131 dan\u0131\u015f\u0131n:</p> <ul> <li> <p>Uygulaman\u0131n i\u015fledi\u011fi, depolad\u0131\u011f\u0131 veya iletti\u011fi verileri s\u0131n\u0131fland\u0131r\u0131n. Hangi verilerin gizlilik yasalar\u0131, d\u00fczenleyici gereklilikler veya i\u015f ihtiya\u00e7lar\u0131 a\u00e7\u0131s\u0131ndan hassas oldu\u011funu belirleyin.</p> </li> <li> <p>Gereksiz yere hassas veri depolamay\u0131n. M\u00fcmk\u00fcn olan en k\u0131sa s\u00fcrede at\u0131n veya PCI DSS uyumlu tokenization ya da truncation kullan\u0131n. Saklanmayan veri \u00e7al\u0131namaz.</p> </li> <li> <p>T\u00fcm hassas verileri at rest durumda encrypt edin.</p> </li> <li> <p>G\u00fcncel ve g\u00fc\u00e7l\u00fc standart algoritma, protokol ve key\u2019leri kullan\u0131n; do\u011fru key management uygulay\u0131n.</p> </li> <li> <p>T\u00fcm verileri in transit durumda TLS gibi secure protocol\u2019lerle encrypt edin; forward secrecy (FS) cipher\u2019lar\u0131, server taraf\u0131nda cipher \u00f6nceliklendirmesi ve secure parametreler kullan\u0131n. HTTP Strict Transport Security (HSTS) gibi directive\u2019lerle encryption\u2019\u0131 zorunlu k\u0131l\u0131n.</p> </li> <li> <p>Hassas veri i\u00e7eren response\u2019lar i\u00e7in caching\u2019i devre d\u0131\u015f\u0131 b\u0131rak\u0131n.</p> </li> <li> <p>Veri s\u0131n\u0131fland\u0131rmas\u0131na g\u00f6re gerekli security control\u2019lerini uygulay\u0131n.</p> </li> <li> <p>Hassas veri ta\u015f\u0131mak i\u00e7in FTP ve SMTP gibi legacy protokolleri kullanmay\u0131n.</p> </li> <li> <p>Parolalar\u0131 Argon2, scrypt, bcrypt veya PBKDF2 gibi g\u00fc\u00e7l\u00fc, adaptive ve salted hashing function\u2019lar\u0131yla, uygun work factor (delay factor) kullanarak saklay\u0131n.</p> </li> <li> <p>Initialization vector (IV) se\u00e7imi mode of operation\u2019a uygun olmal\u0131d\u0131r. Bir\u00e7ok mode i\u00e7in CSPRNG (cryptographically secure pseudo random number generator) uygundur. Nonce gerektiren mode\u2019larda IV i\u00e7in CSPRNG gerekmez. T\u00fcm durumlarda, sabit bir key i\u00e7in ayn\u0131 IV asla iki kez kullan\u0131lmamal\u0131d\u0131r.</p> </li> <li> <p>Sadece encryption yerine her zaman authenticated encryption kullan\u0131n.</p> </li> <li> <p>Key\u2019ler kriptografik olarak rastgele \u00fcretilmeli ve memory\u2019de byte array olarak saklanmal\u0131d\u0131r. E\u011fer password kullan\u0131lacaksa, uygun bir password-based key derivation function ile key\u2019e d\u00f6n\u00fc\u015ft\u00fcr\u00fclmelidir.</p> </li> <li> <p>Gereken yerlerde kriptografik randomness kullan\u0131ld\u0131\u011f\u0131ndan ve tahmin edilebilir/d\u00fc\u015f\u00fck entropy ile seed edilmedi\u011finden emin olun. Modern API\u2019lerin \u00e7o\u011fu g\u00fcvenlik i\u00e7in developer\u2019\u0131n CSPRNG\u2019yi seed etmesini gerektirmez.</p> </li> <li> <p>MD5, SHA1, PKCS number 1 v1.5 gibi deprecated kriptografik fonksiyon ve padding \u015femalar\u0131ndan ka\u00e7\u0131n\u0131n.</p> </li> <li> <p>Konfig\u00fcrasyon ve ayarlar\u0131n etkinli\u011fini ba\u011f\u0131ms\u0131z \u015fekilde do\u011frulay\u0131n.</p> </li> </ul>"},{"location":"tr/A02_2021-Cryptographic_Failures/#ornek-saldr-senaryolar","title":"\u00d6rnek Sald\u0131r\u0131 Senaryolar\u0131","text":"<p>Senaryo #1: Bir uygulama, veritaban\u0131ndaki kredi kart\u0131 numaralar\u0131n\u0131 otomatik veritaban\u0131 encryption\u2019\u0131 ile \u015fifreliyor. Ancak bu veriler geri \u00e7ekildi\u011finde otomatik olarak decrypt ediliyor; bu da bir SQL injection a\u00e7\u0131\u011f\u0131n\u0131n kredi kart\u0131 numaralar\u0131n\u0131 clear text olarak almas\u0131na izin veriyor.</p> <p>Senaryo #2: Bir site t\u00fcm sayfalar i\u00e7in TLS kullanm\u0131yor/enforce etmiyor veya zay\u0131f encryption destekliyor. Bir sald\u0131rgan (\u00f6r. g\u00fcvensiz bir kablosuz a\u011fda) a\u011f trafi\u011fini izliyor, ba\u011flant\u0131lar\u0131 HTTPS\u2019ten HTTP\u2019ye downgrade ediyor, istekleri kesiyor ve kullan\u0131c\u0131n\u0131n session cookie\u2019sini \u00e7al\u0131yor. Sald\u0131rgan daha sonra bu cookie\u2019yi yeniden oynat\u0131p kullan\u0131c\u0131n\u0131n (authenticated) oturumunu ele ge\u00e7iriyor ve \u00f6zel verilere eri\u015fiyor veya bunlar\u0131 de\u011fi\u015ftiriyor. Alternatif olarak ta\u015f\u0131nan t\u00fcm verileri de manip\u00fcle edebilir (\u00f6r. bir para transferinin al\u0131c\u0131s\u0131n\u0131).</p> <p>Senaryo #3: Parola veritaban\u0131, herkesin parolas\u0131n\u0131 unsalted veya basit hash\u2019lerle sakl\u0131yor. Bir file upload a\u00e7\u0131\u011f\u0131, sald\u0131rgan\u0131n parola veritaban\u0131n\u0131 almas\u0131na izin veriyor. T\u00fcm unsalted hash\u2019ler, \u00f6nceden hesaplanm\u0131\u015f hash\u2019lerin bulundu\u011fu rainbow table ile a\u00e7\u0131\u011fa \u00e7\u0131kar\u0131labiliyor. Basit veya h\u0131zl\u0131 hash fonksiyonlar\u0131yla \u00fcretilen hash\u2019ler, salted olsalar bile GPU\u2019larla k\u0131r\u0131labilir.</p>"},{"location":"tr/A02_2021-Cryptographic_Failures/#referanslar","title":"Referanslar","text":"<ul> <li> <p>OWASP Proactive Controls: Protect Data Everywhere</p> </li> <li> <p>OWASP Application Security Verification Standard (V7, 9, 10)</p> </li> <li> <p>OWASP Cheat Sheet: Transport Layer Protection</p> </li> <li> <p>OWASP Cheat Sheet: User Privacy Protection</p> </li> <li> <p>OWASP Cheat Sheet: Password Storage</p> </li> <li> <p>OWASP Cheat Sheet: Cryptographic Storage</p> </li> <li> <p>OWASP Cheat Sheet: HSTS</p> </li> <li> <p>OWASP Testing Guide: Testing for weak cryptography</p> </li> </ul>"},{"location":"tr/A02_2021-Cryptographic_Failures/#eslestirilen-cwe-listesi","title":"E\u015fle\u015ftirilen CWE Listesi","text":"<p>CWE-259 Use of Hard-coded Password</p> <p>CWE-261 Weak Encoding for Password</p> <p>CWE-296 Improper Following of a Certificate's Chain of Trust</p> <p>CWE-310 Cryptographic Issues</p> <p>CWE-319 Cleartext Transmission of Sensitive Information</p> <p>CWE-321 Use of Hard-coded Cryptographic Key</p> <p>CWE-322 Key Exchange without Entity Authentication</p> <p>CWE-323 Reusing a Nonce, Key Pair in Encryption</p> <p>CWE-324 Use of a Key Past its Expiration Date</p> <p>CWE-325 Missing Required Cryptographic Step</p> <p>CWE-326 Inadequate Encryption Strength</p> <p>CWE-327 Use of a Broken or Risky Cryptographic Algorithm</p> <p>CWE-328 Reversible One-Way Hash</p> <p>CWE-329 Not Using a Random IV with CBC Mode</p> <p>CWE-330 Use of Insufficiently Random Values</p> <p>CWE-331 Insufficient Entropy</p> <p>CWE-335 Incorrect Usage of Seeds in Pseudo-Random Number Generator(PRNG)</p> <p>CWE-336 Same Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-337 Predictable Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-338 Use of Cryptographically Weak Pseudo-Random Number Generator(PRNG)</p> <p>CWE-340 Generation of Predictable Numbers or Identifiers</p> <p>CWE-347 Improper Verification of Cryptographic Signature</p> <p>CWE-523 Unprotected Transport of Credentials</p> <p>CWE-720 OWASP Top Ten 2007 Category A9 - Insecure Communications</p> <p>CWE-757 Selection of Less-Secure Algorithm During Negotiation('Algorithm Downgrade')</p> <p>CWE-759 Use of a One-Way Hash without a Salt</p> <p>CWE-760 Use of a One-Way Hash with a Predictable Salt</p> <p>CWE-780 Use of RSA Algorithm without OAEP</p> <p>CWE-818 Insufficient Transport Layer Protection</p> <p>CWE-916 Use of Password Hash With Insufficient Computational Effort</p>"},{"location":"tr/A03_2021-Injection/#faktorler","title":"Fakt\u00f6rler","text":"CWEs E\u015fle\u015ftirildi Maks G\u00f6r\u00fclme Oran\u0131 Ort. G\u00f6r\u00fclme Oran\u0131 Ort. A\u011f\u0131rl\u0131kl\u0131 Exploit Ort. A\u011f\u0131rl\u0131kl\u0131 Impact Maks Coverage Ort. Coverage Toplam Olay Toplam CVE 33 19.09% 3.37% 7.25 7.15 94.04% 47.90% 274,228 32,078"},{"location":"tr/A03_2021-Injection/#genel-baks","title":"Genel Bak\u0131\u015f","text":"<p>Injection \u00fc\u00e7\u00fcnc\u00fc s\u0131raya geriledi. Uygulamalar\u0131n %94\u2019\u00fc bir t\u00fcr injection i\u00e7in test edildi; maksimum g\u00f6r\u00fclme oran\u0131 %19, ortalama g\u00f6r\u00fclme oran\u0131 %3 ve 274k olay kaydedildi. Dikkate de\u011fer Common Weakness Enumeration (CWE) \u00f6rnekleri aras\u0131nda CWE-79: Cross-site Scripting, CWE-89: SQL Injection ve CWE-73: External Control of File Name or Path bulunur.</p>"},{"location":"tr/A03_2021-Injection/#acklama","title":"A\u00e7\u0131klama","text":"<p>Bir uygulama \u015fu durumlarda sald\u0131r\u0131ya a\u00e7\u0131k hale gelir:</p> <ul> <li> <p>Kullan\u0131c\u0131dan gelen veri uygulama taraf\u0131ndan validate, filter veya sanitize edilmiyorsa.</p> </li> <li> <p>Dynamic query\u2019ler veya context-aware escaping olmadan non-parameterized \u00e7a\u011fr\u0131lar do\u011frudan interpreter\u2019da kullan\u0131l\u0131yorsa.</p> </li> <li> <p>Hostile data, ek hassas kay\u0131tlar\u0131 \u00e7\u0131karmak i\u00e7in object-relational mapping (ORM) search parametrelerinde kullan\u0131l\u0131yorsa.</p> </li> <li> <p>Hostile data do\u011frudan kullan\u0131l\u0131yor veya concat ediliyorsa. SQL ya da komut, dynamic query, command veya stored procedure\u2019lerde hem yap\u0131 hem de malicious data\u2019y\u0131 i\u00e7eriyorsa.</p> </li> </ul> <p>En yayg\u0131n injection t\u00fcrleri aras\u0131nda SQL, NoSQL, OS command, ORM, LDAP ve Expression Language (EL) ya da Object Graph Navigation Library (OGNL) injection yer al\u0131r. Kavram t\u00fcm interpreter\u2019larda ayn\u0131d\u0131r. Source code review, uygulamalar\u0131n injection\u2019a a\u00e7\u0131k olup olmad\u0131\u011f\u0131n\u0131 tespit etmenin en iyi y\u00f6ntemidir. T\u00fcm parametrelerin, header\u2019lar\u0131n, URL, cookie\u2019lerin, JSON, SOAP ve XML data input\u2019lar\u0131n\u0131n otomatik test edilmesi \u015fiddetle tavsiye edilir. Kurulu\u015flar, production\u2019a da\u011f\u0131t\u0131mdan \u00f6nce eklenen injection kusurlar\u0131n\u0131 belirlemek i\u00e7in CI/CD pipeline\u2019\u0131na static (SAST), dynamic (DAST) ve interactive (IAST) application security testing tool\u2019lar\u0131n\u0131 dahil edebilir.</p>"},{"location":"tr/A03_2021-Injection/#nasl-onlenir","title":"Nas\u0131l \u00d6nlenir","text":"<p>Injection\u2019\u0131 \u00f6nlemek, veriyi komut ve query\u2019lerden ayr\u0131 tutmay\u0131 gerektirir:</p> <ul> <li> <p>Tercih edilen se\u00e7enek, interpreter kullan\u0131m\u0131n\u0131 tamamen \u00f6nleyen, parameterized aray\u00fcz sa\u011flayan veya ORM\u2019lere migrate eden g\u00fcvenli bir API kullanmakt\u0131r. Not: Parameterized olsalar bile stored procedure\u2019ler, e\u011fer PL/SQL veya T-SQL query ve data\u2019y\u0131 concat ediyorsa ya da hostile data\u2019y\u0131 <code>EXECUTE IMMEDIATE</code> veya <code>exec()</code> ile \u00e7al\u0131\u015ft\u0131r\u0131yorsa, yine SQL injection\u2019a yol a\u00e7abilir.</p> </li> <li> <p>Pozitif (allow-list tabanl\u0131) server-side input validation kullan\u0131n. Bu, tek ba\u015f\u0131na tam bir savunma de\u011fildir; bir\u00e7ok uygulama text area gibi \u00f6zel karakterler veya mobil uygulamalar i\u00e7in API\u2019ler gerektirir.</p> </li> <li> <p>Kalan dynamic query\u2019ler i\u00e7in, ilgili interpreter\u2019\u0131n \u00f6zel escape syntax\u2019\u0131n\u0131 kullanarak special character\u2019lar\u0131 escape edin. Not: Tablo adlar\u0131, kolon adlar\u0131 gibi SQL yap\u0131lar\u0131 escape edilemez; bu nedenle user-supplied yap\u0131 adlar\u0131 tehlikelidir. Bu, raporlama yaz\u0131l\u0131mlar\u0131nda yayg\u0131n bir sorundur.</p> </li> </ul>"},{"location":"tr/A03_2021-Injection/#ornek-saldr-senaryolar","title":"\u00d6rnek Sald\u0131r\u0131 Senaryolar\u0131","text":"<p>Senaryo #1: Bir uygulama, g\u00fcvensiz veriyi a\u015fa\u011f\u0131daki zafiyetli SQL \u00e7a\u011fr\u0131s\u0131n\u0131n olu\u015fturulmas\u0131nda kullan\u0131yor:</p> <pre><code>String query = \"SELECT * FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\";\n</code></pre> <p>Senaryo #2: Benzer \u015fekilde, bir uygulaman\u0131n framework\u2019lere k\u00f6r\u00fc k\u00f6r\u00fcne g\u00fcvenmesi, sorgular\u0131n yine zafiyetli olmas\u0131na yol a\u00e7abilir (\u00f6r. Hibernate Query Language - HQL):</p> <pre><code>Query HQLQuery = session.createQuery(\"FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\");\n</code></pre> <p>Her iki durumda da sald\u0131rgan, taray\u0131c\u0131s\u0131nda \u2018id\u2019 parametre de\u011ferini \u015fu \u015fekilde de\u011fi\u015ftirir: <code>' UNION SELECT SLEEP(10);--</code>. \u00d6rne\u011fin:</p> <pre><code>http://example.com/app/accountView?id=' UNION SELECT SLEEP(10);--\n</code></pre> <p>Bu, her iki sorgunun da anlam\u0131n\u0131 de\u011fi\u015ftirerek accounts tablosundaki t\u00fcm kay\u0131tlar\u0131n d\u00f6nd\u00fcr\u00fclmesine neden olur. Daha tehlikeli sald\u0131r\u0131lar veriyi de\u011fi\u015ftirebilir veya silebilir, hatta stored procedure\u2019leri bile tetikleyebilir.</p>"},{"location":"tr/A03_2021-Injection/#referanslar","title":"Referanslar","text":"<ul> <li> <p>OWASP Proactive Controls: Secure Database Access</p> </li> <li> <p>OWASP ASVS: V5 Input Validation and Encoding</p> </li> <li> <p>OWASP Testing Guide: SQL Injection, Command Injection,     and\u00a0ORM Injection</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: SQL Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention in Java</p> </li> <li> <p>OWASP Cheat Sheet: Query Parameterization</p> </li> <li> <p>OWASP Automated Threats to Web Applications \u2013 OAT-014</p> </li> <li> <p>PortSwigger: Server-side template injection</p> </li> </ul>"},{"location":"tr/A03_2021-Injection/#eslestirilen-cwe-listesi","title":"E\u015fle\u015ftirilen CWE Listesi","text":"<p>CWE-20 Improper Input Validation</p> <p>CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')</p> <p>CWE-75 Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)</p> <p>CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection')</p> <p>CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</p> <p>CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</p> <p>CWE-80 Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</p> <p>CWE-83 Improper Neutralization of Script in Attributes in a Web Page</p> <p>CWE-87 Improper Neutralization of Alternate XSS Syntax</p> <p>CWE-88 Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')</p> <p>CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</p> <p>CWE-90 Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</p> <p>CWE-91 XML Injection (aka Blind XPath Injection)</p> <p>CWE-93 Improper Neutralization of CRLF Sequences ('CRLF Injection')</p> <p>CWE-94 Improper Control of Generation of Code ('Code Injection')</p> <p>CWE-95 Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</p> <p>CWE-96 Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')</p> <p>CWE-97 Improper Neutralization of Server-Side Includes (SSI) Within a Web Page</p> <p>CWE-98 Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')</p> <p>CWE-99 Improper Control of Resource Identifiers ('Resource Injection')</p> <p>CWE-100 Deprecated: Was catch-all for input validation issues</p> <p>CWE-113 Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')</p> <p>CWE-116 Improper Encoding or Escaping of Output</p> <p>CWE-138 Improper Neutralization of Special Elements</p> <p>CWE-184 Incomplete List of Disallowed Inputs</p> <p>CWE-470 Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')</p> <p>CWE-471 Modification of Assumed-Immutable Data (MAID)</p> <p>CWE-564 SQL Injection: Hibernate</p> <p>CWE-610 Externally Controlled Reference to a Resource in Another Sphere</p> <p>CWE-643 Improper Neutralization of Data within XPath Expressions ('XPath Injection')</p> <p>CWE-644 Improper Neutralization of HTTP Headers for Scripting Syntax</p> <p>CWE-652 Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')</p> <p>CWE-917 Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')</p>"},{"location":"tr/A04_2021-Insecure_Design/#faktorler","title":"Fakt\u00f6rler","text":"CWEs E\u015fle\u015ftirildi Maks G\u00f6r\u00fclme Oran\u0131 Ort. G\u00f6r\u00fclme Oran\u0131 Ort. A\u011f\u0131rl\u0131kl\u0131 Exploit Ort. A\u011f\u0131rl\u0131kl\u0131 Impact Maks Coverage Ort. Coverage Toplam Olay Toplam CVE 40 24.19% 3.00% 6.46 6.78 77.25% 42.51% 262,407 2,691"},{"location":"tr/A04_2021-Insecure_Design/#genel-baks","title":"Genel Bak\u0131\u015f","text":"<p>2021 i\u00e7in yeni bir kategori, tasar\u0131m ve mimari hatalarla ilgili risklere odaklan\u0131r ve threat modeling, secure design patterns ve reference architectures kullan\u0131m\u0131n\u0131n art\u0131r\u0131lmas\u0131n\u0131 \u00e7a\u011fr\u0131lar. Topluluk olarak, coding alan\u0131ndaki \u201cshift-left\u201d yakla\u015f\u0131m\u0131n\u0131 a\u015farak, Secure by Design prensipleri i\u00e7in kritik olan kod-\u00f6ncesi aktivitelere y\u00f6nelmemiz gerekir. Dikkate de\u011fer Common Weakness Enumerations (CWE) \u00f6rnekleri aras\u0131nda CWE-209: Generation of Error Message Containing Sensitive Information, CWE-256: Unprotected Storage of Credentials, CWE-501: Trust Boundary Violation ve CWE-522: Insufficiently Protected Credentials bulunur.</p>"},{"location":"tr/A04_2021-Insecure_Design/#acklama","title":"A\u00e7\u0131klama","text":"<p>Insecure design, \u201ceksik veya etkisiz control design\u201d olarak ifade edilen farkl\u0131 zay\u0131fl\u0131klar\u0131 kapsayan geni\u015f bir kategoridir. Insecure design, di\u011fer Top 10 risk kategorilerinin kayna\u011f\u0131 de\u011fildir. Insecure design ile insecure implementation aras\u0131nda fark vard\u0131r; farkl\u0131 root cause\u2019lara ve remediation\u2019lara sahiptirler. G\u00fcvenli bir design, yine de exploit edilebilecek implementation defect\u2019leri i\u00e7erebilir. Tan\u0131m gere\u011fi belirli sald\u0131r\u0131lara kar\u015f\u0131 gerekli security control\u2019leri hi\u00e7 olu\u015fturulmad\u0131\u011f\u0131ndan, insecure design m\u00fckemmel bir implementation ile d\u00fczeltilemez. Insecure design\u2019a katk\u0131da bulunan fakt\u00f6rlerden biri, geli\u015ftirilen yaz\u0131l\u0131m veya sistemin do\u011fas\u0131nda bulunan business risk profiling eksikli\u011fi ve buna ba\u011fl\u0131 olarak hangi seviyede security design gerekti\u011finin belirlenememesidir.</p>"},{"location":"tr/A04_2021-Insecure_Design/#requirements-and-resource-management","title":"Requirements and Resource Management","text":"<p>Bir uygulama i\u00e7in business gereksinimlerini, t\u00fcm data asset\u2019lerinin gizlilik, b\u00fct\u00fcnl\u00fck, s\u00fcreklilik (availability) ve do\u011frulanabilirlik (authenticity) koruma gereksinimleri ve beklenen business logic d\u00e2hil olacak \u015fekilde business taraf\u0131yla toplay\u0131n ve m\u00fczakere edin. Uygulaman\u0131z\u0131n ne kadar exposed olaca\u011f\u0131n\u0131 ve tenant ayr\u0131m\u0131 (access control\u2019a ek olarak) gerekip gerekmedi\u011fini hesaba kat\u0131n. Functional ve non-functional security requirement\u2019lar\u0131 d\u00e2hil teknik gereksinimleri derleyin. Design, build, testing ve operation a\u015famalar\u0131n\u0131n tamam\u0131n\u0131, security aktiviteleriyle birlikte kapsayacak b\u00fct\u00e7eyi planlay\u0131n ve m\u00fczakere edin.</p>"},{"location":"tr/A04_2021-Insecure_Design/#secure-design","title":"Secure Design","text":"<p>Secure design; tehditleri s\u00fcrekli de\u011ferlendiren ve kodu bilinen attack method\u2019lar\u0131na kar\u015f\u0131 sa\u011flam olacak \u015fekilde tasarlay\u0131p test eden bir k\u00fclt\u00fcr ve metodolojidir. Threat modeling, refinement session\u2019lar\u0131na (veya benzer aktivitelere) entegre edilmelidir; data flow\u2019lar ve access control veya di\u011fer security control\u2019lerdeki de\u011fi\u015fikliklere bak\u0131n. User story geli\u015ftirme s\u0131ras\u0131nda do\u011fru ak\u0131\u015f\u0131 ve failure state\u2019lerini belirleyin; sorumlu ve etkilenen taraflarca iyi anla\u015f\u0131ld\u0131\u011f\u0131ndan ve \u00fczerinde mutab\u0131k kal\u0131nd\u0131\u011f\u0131ndan emin olun. Varsay\u0131mlar\u0131 ve ko\u015fullar\u0131 hem beklenen hem de failure flow\u2019lar\u0131 i\u00e7in analiz edin; h\u00e2l\u00e2 do\u011fru ve arzu edilir olduklar\u0131n\u0131 do\u011frulay\u0131n. Varsay\u0131mlar\u0131n nas\u0131l validate edilece\u011fini ve do\u011fru davran\u0131\u015flar i\u00e7in gerekli ko\u015fullar\u0131n nas\u0131l enforce edilece\u011fini belirleyin. Sonu\u00e7lar\u0131n user story i\u00e7inde dok\u00fcmante edilmesini sa\u011flay\u0131n. Hatalardan \u00f6\u011frenin ve iyile\u015ftirmeleri te\u015fvik etmek i\u00e7in pozitif te\u015fvikler sunun. Secure design, yaz\u0131l\u0131ma sonradan eklenebilecek bir eklenti ya da bir tool de\u011fildir.</p>"},{"location":"tr/A04_2021-Insecure_Design/#secure-development-lifecycle","title":"Secure Development Lifecycle","text":"<p>G\u00fcvenli yaz\u0131l\u0131m, bir Secure Development Lifecycle, bir t\u00fcr secure design pattern, paved road methodology, secured component library, tooling ve threat modeling gerektirir. Yaz\u0131l\u0131m projesinin en ba\u015f\u0131ndan t\u00fcm proje ve bak\u0131m s\u00fcreci boyunca security specialist\u2019lerinize ula\u015f\u0131n. G\u00fcvenli yaz\u0131l\u0131m geli\u015ftirme \u00e7abalar\u0131n\u0131z\u0131 yap\u0131land\u0131rmaya yard\u0131mc\u0131 olmas\u0131 i\u00e7in OWASP Software Assurance Maturity Model (SAMM) kullan\u0131lmas\u0131n\u0131 d\u00fc\u015f\u00fcn\u00fcn.</p>"},{"location":"tr/A04_2021-Insecure_Design/#nasl-onlenir","title":"Nas\u0131l \u00d6nlenir","text":"<ul> <li> <p>AppSec profesyonelleriyle birlikte security ve privacy-related control\u2019lerin de\u011ferlendirilip tasarlanaca\u011f\u0131 bir Secure Development Lifecycle kurun ve kullan\u0131n.</p> </li> <li> <p>Kullan\u0131ma haz\u0131r secure design patterns veya paved road component\u2019lar\u0131ndan olu\u015fan bir k\u00fct\u00fcphane olu\u015fturun ve kullan\u0131n.</p> </li> <li> <p>Kritik authentication, access control, business logic ve ana ak\u0131\u015flar i\u00e7in threat modeling uygulay\u0131n.</p> </li> <li> <p>Security dilini ve control\u2019lerini user story\u2019lere entegre edin.</p> </li> <li> <p>Uygulaman\u0131z\u0131n her katman\u0131nda (frontend\u2019den backend\u2019e) plausibility check\u2019leri entegre edin.</p> </li> <li> <p>T\u00fcm kritik ak\u0131\u015flar\u0131n threat model\u2019e kar\u015f\u0131 diren\u00e7li oldu\u011funu validate edecek unit ve integration test\u2019leri yaz\u0131n. Her katman i\u00e7in use-case ve misuse-case\u2019leri derleyin.</p> </li> <li> <p>Maruziyete ve korunma ihtiya\u00e7lar\u0131na ba\u011fl\u0131 olarak system ve network katmanlar\u0131nda tier\u2019lar\u0131 ay\u0131r\u0131n (segregate).</p> </li> <li> <p>T\u00fcm katmanlarda tenant\u2019lar\u0131 tasar\u0131m gere\u011fi g\u00fc\u00e7l\u00fc \u015fekilde ay\u0131r\u0131n.</p> </li> <li> <p>Kullan\u0131c\u0131 veya servis ba\u015f\u0131na resource consumption\u2019\u0131 s\u0131n\u0131rlay\u0131n.</p> </li> </ul>"},{"location":"tr/A04_2021-Insecure_Design/#ornek-saldr-senaryolar","title":"\u00d6rnek Sald\u0131r\u0131 Senaryolar\u0131","text":"<p>Senaryo #1: Bir credential recovery workflow\u2019u \u201cg\u00fcvenlik sorular\u0131 ve cevaplar\u0131\u201d i\u00e7eriyor; bu y\u00f6ntem NIST 800-63b, OWASP ASVS ve OWASP Top 10 taraf\u0131ndan yasakt\u0131r. Birden fazla ki\u015fi cevaplar\u0131 bilebilece\u011fi i\u00e7in kimlik kan\u0131t\u0131 olarak g\u00fcvenilemezler. Bu kod kald\u0131r\u0131lmal\u0131 ve daha g\u00fcvenli bir design ile de\u011fi\u015ftirilmelidir.</p> <p>Senaryo #2: Bir sinema zinciri, grup rezervasyonlar\u0131nda indirim sunuyor ve depozito gerektirmeden \u00f6nce maksimum on be\u015f kat\u0131l\u0131mc\u0131 limiti var. Sald\u0131rganlar bu ak\u0131\u015f\u0131 threat model ile analiz ederek az say\u0131da istekle alt\u0131 y\u00fcz koltuk ve t\u00fcm sinemalar\u0131 ayn\u0131 anda rezerve etmeyi test edebilir; bu da b\u00fcy\u00fck gelir kayb\u0131na yol a\u00e7ar.</p> <p>Senaryo #3: Bir perakende zincirinin e-ticaret sitesi, scalper\u2019lar\u0131n y\u00fcksek seviye ekran kartlar\u0131n\u0131 sat\u0131n almak i\u00e7in \u00e7al\u0131\u015ft\u0131rd\u0131\u011f\u0131 bot\u2019lara kar\u015f\u0131 korumaya sahip de\u011fil. Bu durum, ekran kart\u0131 \u00fcreticileri ve perakende zinciri i\u00e7in k\u00f6t\u00fc bir PR yarat\u0131r ve bu kartlara hi\u00e7bir fiyata ula\u015famayan merakl\u0131larla kal\u0131c\u0131 bir husumete neden olur. Dikkatli anti-bot design ve domain logic kurallar\u0131 (\u00f6rne\u011fin, stok a\u00e7\u0131ld\u0131ktan saniyeler i\u00e7inde yap\u0131lan sat\u0131n al\u0131mlar) sahte sat\u0131n al\u0131mlar\u0131 tespit edip bu i\u015flemleri reddedebilir.</p>"},{"location":"tr/A04_2021-Insecure_Design/#referanslar","title":"Referanslar","text":"<ul> <li> <p>OWASP Cheat Sheet: Secure Design Principles</p> </li> <li> <p>OWASP SAMM: Design\\:Security Architecture</p> </li> <li> <p>OWASP SAMM: Design\\:Threat Assessment</p> </li> <li> <p>NIST \u2013 Guidelines on Minimum Standards for Developer Verification of Software</p> </li> <li> <p>The Threat Modeling Manifesto</p> </li> <li> <p>Awesome Threat Modeling</p> </li> </ul>"},{"location":"tr/A04_2021-Insecure_Design/#eslestirilen-cwe-listesi","title":"E\u015fle\u015ftirilen CWE Listesi","text":"<p>CWE-73 External Control of File Name or Path CWE-183 Permissive List of Allowed Inputs CWE-209 Generation of Error Message Containing Sensitive Information CWE-213 Exposure of Sensitive Information Due to Incompatible Policies CWE-235 Improper Handling of Extra Parameters CWE-256 Unprotected Storage of Credentials CWE-257 Storing Passwords in a Recoverable Format CWE-266 Incorrect Privilege Assignment CWE-269 Improper Privilege Management CWE-280 Improper Handling of Insufficient Permissions or Privileges CWE-311 Missing Encryption of Sensitive Data CWE-312 Cleartext Storage of Sensitive Information CWE-313 Cleartext Storage in a File or on Disk CWE-316 Cleartext Storage of Sensitive Information in Memory CWE-419 Unprotected Primary Channel CWE-430 Deployment of Wrong Handler CWE-434 Unrestricted Upload of File with Dangerous Type CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling') CWE-451 User Interface (UI) Misrepresentation of Critical Information CWE-472 External Control of Assumed-Immutable Web Parameter CWE-501 Trust Boundary Violation CWE-522 Insufficiently Protected Credentials CWE-525 Use of Web Browser Cache Containing Sensitive Information CWE-539 Use of Persistent Cookies Containing Sensitive Information CWE-579 J2EE Bad Practices: Non-serializable Object Stored in Session CWE-598 Use of GET Request Method With Sensitive Query Strings CWE-602 Client-Side Enforcement of Server-Side Security CWE-642 External Control of Critical State Data CWE-646 Reliance on File Name or Extension of Externally-Supplied File CWE-650 Trusting HTTP Permission Methods on the Server Side CWE-653 Insufficient Compartmentalization CWE-656 Reliance on Security Through Obscurity CWE-657 Violation of Secure Design Principles CWE-799 Improper Control of Interaction Frequency CWE-807 Reliance on Untrusted Inputs in a Security Decision CWE-840 Business Logic Errors CWE-841 Improper Enforcement of Behavioral Workflow CWE-927 Use of Implicit Intent for Sensitive Communication CWE-1021 Improper Restriction of Rendered UI Layers or Frames CWE-1173 Improper Use of Validation Framework</p>"},{"location":"tr/A05_2021-Security_Misconfiguration/#faktorler","title":"Fakt\u00f6rler","text":"CWEs E\u015fle\u015ftirildi Maks G\u00f6r\u00fclme Oran\u0131 Ort. G\u00f6r\u00fclme Oran\u0131 Ort. A\u011f\u0131rl\u0131kl\u0131 Exploit Ort. A\u011f\u0131rl\u0131kl\u0131 Impact Maks Coverage Ort. Coverage Toplam Olay Toplam CVE 20 19.84% 4.51% 8.12 6.56 89.58% 44.84% 208,387 789"},{"location":"tr/A05_2021-Security_Misconfiguration/#genel-baks","title":"Genel Bak\u0131\u015f","text":"<p>\u00d6nceki s\u00fcr\u00fcmdeki #6\u2019dan y\u00fckselerek, uygulamalar\u0131n %90\u2019\u0131 bir t\u00fcr misconfiguration i\u00e7in test edildi; ortalama g\u00f6r\u00fclme oran\u0131 %4.51 ve bu risk kategorisinde 208 binden fazla Common Weakness Enumeration (CWE) olay\u0131 kaydedildi. Y\u00fcksek d\u00fczeyde konfig\u00fcre edilebilir yaz\u0131l\u0131mlara ge\u00e7i\u015f artt\u0131k\u00e7a, bu kategorinin y\u00fckselmesi \u015fa\u015f\u0131rt\u0131c\u0131 de\u011fildir. Dikkate de\u011fer CWE\u2019ler aras\u0131nda CWE-16 Configuration ve CWE-611 Improper Restriction of XML External Entity Reference bulunur.</p>"},{"location":"tr/A05_2021-Security_Misconfiguration/#acklama","title":"A\u00e7\u0131klama","text":"<p>Uygulama a\u015fa\u011f\u0131daki durumlarda zafiyete a\u00e7\u0131k olabilir:</p> <ul> <li> <p>Application stack\u2019in herhangi bir b\u00f6l\u00fcm\u00fcnde uygun security hardening eksikse veya cloud servislerinde izinler yanl\u0131\u015f konfig\u00fcre edildiyse.</p> </li> <li> <p>Gereksiz \u00f6zellikler etkinle\u015ftirilmi\u015f ya da kurulmu\u015fsa (\u00f6r. gereksiz port\u2019lar, servisler, sayfalar, hesaplar veya ayr\u0131cal\u0131klar).</p> </li> <li> <p>Varsay\u0131lan hesaplar ve bunlar\u0131n parolalar\u0131 h\u00e2l\u00e2 etkin ve de\u011fi\u015fmemi\u015fse.</p> </li> <li> <p>Error handling, kullan\u0131c\u0131ya stack trace\u2019ler veya a\u015f\u0131r\u0131 bilgi i\u00e7eren hata mesajlar\u0131 g\u00f6steriyorsa.</p> </li> <li> <p>Y\u00fckseltilmi\u015f sistemlerde, en yeni security \u00f6zellikleri devre d\u0131\u015f\u0131ysa veya g\u00fcvenli \u015fekilde konfig\u00fcre edilmemi\u015fse.</p> </li> <li> <p>Application server\u2019lar\u0131, application framework\u2019leri (\u00f6r. Struts, Spring, ASP.NET), k\u00fct\u00fcphaneler, veritabanlar\u0131 vb. i\u00e7indeki security ayarlar\u0131 g\u00fcvenli de\u011ferlere set edilmemi\u015fse.</p> </li> <li> <p>Server, security header\u2019lar\u0131 veya directive\u2019leri g\u00f6ndermiyorsa ya da bunlar g\u00fcvenli de\u011ferlere set edilmemi\u015fse.</p> </li> <li> <p>Yaz\u0131l\u0131m g\u00fcncel de\u011filse veya zafiyetliyse (bkz. A06:2021 \u2013 Vulnerable and Outdated Components).</p> </li> </ul> <p>Planl\u0131 ve tekrarlanabilir bir application security configuration s\u00fcreci olmadan sistemler daha y\u00fcksek risk alt\u0131ndad\u0131r.</p>"},{"location":"tr/A05_2021-Security_Misconfiguration/#nasl-onlenir","title":"Nas\u0131l \u00d6nlenir","text":"<p>G\u00fcvenli kurulum s\u00fcre\u00e7leri uygulanmal\u0131d\u0131r; bunlar \u015funlar\u0131 i\u00e7erir:</p> <ul> <li> <p>Tekrarlanabilir bir hardening s\u00fcreci, uygun \u015fekilde kilitlenmi\u015f ba\u015fka bir ortam\u0131n h\u0131zl\u0131 ve kolay \u015fekilde deploy edilmesini sa\u011flar. Development, QA ve production ortamlar\u0131 ayn\u0131 \u015fekilde konfig\u00fcre edilmeli; her ortamda farkl\u0131 credential\u2019lar kullan\u0131lmal\u0131d\u0131r. Yeni g\u00fcvenli bir ortam kurulumunda eforu minimize etmek i\u00e7in bu s\u00fcre\u00e7 otomatikle\u015ftirilmelidir.</p> </li> <li> <p>Gereksiz \u00f6zellikler, bile\u015fenler, dok\u00fcmantasyon ve \u00f6rnekler olmadan minimal bir platform. Kullan\u0131lmayan feature ve framework\u2019leri kald\u0131r\u0131n ya da hi\u00e7 kurmay\u0131n.</p> </li> <li> <p>Patch management s\u00fcrecinin bir par\u00e7as\u0131 olarak, t\u00fcm security notlar\u0131na, update ve patch\u2019lere uygun konfig\u00fcrasyonlar\u0131 g\u00f6zden ge\u00e7irip g\u00fcncelleme g\u00f6revi (bkz. A06:2021 \u2013 Vulnerable and Outdated Components). Cloud storage izinlerini (\u00f6r. S3 bucket permission\u2019lar\u0131) g\u00f6zden ge\u00e7irin.</p> </li> <li> <p>Segmentasyon, containerization veya cloud security group\u2019lar\u0131 (ACL\u2019ler) ile bile\u015fenler veya tenant\u2019lar aras\u0131nda etkili ve g\u00fcvenli ayr\u0131m sa\u011flayan segmented bir application architecture.</p> </li> <li> <p>Client\u2019lara security directive\u2019leri g\u00f6ndermek; \u00f6r. Security Headers.</p> </li> <li> <p>T\u00fcm ortamlarda konfig\u00fcrasyon ve ayarlar\u0131n etkinli\u011fini do\u011frulayan otomatik bir s\u00fcre\u00e7.</p> </li> </ul>"},{"location":"tr/A05_2021-Security_Misconfiguration/#ornek-saldr-senaryolar","title":"\u00d6rnek Sald\u0131r\u0131 Senaryolar\u0131","text":"<p>Senaryo #1: Application server, production\u2019da kald\u0131r\u0131lmam\u0131\u015f sample application\u2019larla birlikte geliyor. Bu sample\u2019lar\u0131n bilinen security a\u00e7\u0131klar\u0131 vard\u0131r ve sald\u0131rganlar server\u2019\u0131 ele ge\u00e7irmek i\u00e7in bunlar\u0131 kullan\u0131r. Bu uygulamalardan biri admin console ise ve varsay\u0131lan hesaplar de\u011fi\u015ftirilmemi\u015fse, sald\u0131rgan default password\u2019lerle giri\u015f yapar ve kontrol\u00fc ele ge\u00e7irir.</p> <p>Senaryo #2: Server\u2019da directory listing devre d\u0131\u015f\u0131 de\u011fildir. Bir sald\u0131rgan, dizinleri basit\u00e7e listeyebildi\u011fini ke\u015ffeder. Derlenmi\u015f Java class\u2019lar\u0131n\u0131 bulur ve indirir; bunlar\u0131 decompile ederek kodu inceler. Ard\u0131ndan uygulamada ciddi bir access control a\u00e7\u0131\u011f\u0131 bulur.</p> <p>Senaryo #3: Application server konfig\u00fcrasyonu, detayl\u0131 hata mesajlar\u0131n\u0131n (\u00f6r. stack trace\u2019ler) kullan\u0131c\u0131lara d\u00f6nd\u00fcr\u00fclmesine izin verir. Bu, potansiyel olarak hassas bilgileri veya bilinen zafiyetlere sahip bile\u015fen versiyonlar\u0131 gibi temel a\u00e7\u0131klar\u0131 ortaya \u00e7\u0131karabilir.</p> <p>Senaryo #4: Bir cloud service provider (CSP), di\u011fer CSP kullan\u0131c\u0131lar\u0131 taraf\u0131ndan Internet\u2019e a\u00e7\u0131k varsay\u0131lan payla\u015f\u0131m izinlerine sahiptir. Bu durum, cloud storage i\u00e7inde saklanan hassas verilere eri\u015filmesine olanak tan\u0131r.</p>"},{"location":"tr/A05_2021-Security_Misconfiguration/#referanslar","title":"Referanslar","text":"<ul> <li> <p>OWASP Testing Guide: Configuration     Management</p> </li> <li> <p>OWASP Testing Guide: Testing for Error Codes</p> </li> <li> <p>Application Security Verification Standard V14 Configuration</p> </li> <li> <p>NIST Guide to General Server     Hardening</p> </li> <li> <p>CIS Security Configuration     Guides/Benchmarks</p> </li> <li> <p>Amazon S3 Bucket Discovery and     Enumeration</p> </li> </ul>"},{"location":"tr/A05_2021-Security_Misconfiguration/#eslestirilen-cwe-listesi","title":"E\u015fle\u015ftirilen CWE Listesi","text":"<p>CWE-2 7PK - Environment</p> <p>CWE-11 ASP.NET Misconfiguration: Creating Debug Binary</p> <p>CWE-13 ASP.NET Misconfiguration: Password in Configuration File</p> <p>CWE-15 External Control of System or Configuration Setting</p> <p>CWE-16 Configuration</p> <p>CWE-260 Password in Configuration File</p> <p>CWE-315 Cleartext Storage of Sensitive Information in a Cookie</p> <p>CWE-520 .NET Misconfiguration: Use of Impersonation</p> <p>CWE-526 Exposure of Sensitive Information Through Environmental Variables</p> <p>CWE-537 Java Runtime Error Message Containing Sensitive Information</p> <p>CWE-541 Inclusion of Sensitive Information in an Include File</p> <p>CWE-547 Use of Hard-coded, Security-relevant Constants</p> <p>CWE-611 Improper Restriction of XML External Entity Reference</p> <p>CWE-614 Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</p> <p>CWE-756 Missing Custom Error Page</p> <p>CWE-776 Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')</p> <p>CWE-942 Permissive Cross-domain Policy with Untrusted Domains</p> <p>CWE-1004 Sensitive Cookie Without 'HttpOnly' Flag</p> <p>CWE-1032 OWASP Top Ten 2017 Category A6 - Security Misconfiguration</p> <p>CWE-1174 ASP.NET Misconfiguration: Improper Model Validation</p>"},{"location":"tr/A06_2021-Vulnerable_and_Outdated_Components/#faktorler","title":"Fakt\u00f6rler","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Max Coverage Avg Coverage Avg Weighted Exploit Avg Weighted Impact Total Occurrences Total CVEs 3 27.96% 8.77% 51.78% 22.47% 5.00 5.00 30,457 0"},{"location":"tr/A06_2021-Vulnerable_and_Outdated_Components/#genel-baks","title":"Genel Bak\u0131\u015f","text":"<p>Top 10 topluluk anketinde #2 idi ve ayr\u0131ca verilere g\u00f6re de Top 10\u2019a girecek kadar yeterli veriye sahipti. Vulnerable Components, test edilmesi ve riskinin de\u011ferlendirilmesiyle m\u00fccadele etti\u011fimiz bilinen bir sorundur ve d\u00e2hil edilen CWE\u2019lere e\u015flenen herhangi bir Common Vulnerabilities and Exposures (CVEs) bulunmayan tek kategoridir; bu nedenle varsay\u0131lan exploits/impact a\u011f\u0131rl\u0131\u011f\u0131 5.0 olarak kullan\u0131l\u0131r. Dikkate de\u011fer CWE\u2019ler aras\u0131nda CWE-1104: Use of Unmaintained Third-Party Components ile 2013 ve 2017 Top 10\u2019dan iki CWE bulunur.</p>"},{"location":"tr/A06_2021-Vulnerable_and_Outdated_Components/#acklama","title":"A\u00e7\u0131klama","text":"<p>A\u015fa\u011f\u0131daki durumlarda muhtemelen savunmas\u0131zs\u0131n\u0131z:</p> <ul> <li>Kulland\u0131\u011f\u0131n\u0131z t\u00fcm bile\u015fenlerin (hem client-side hem de server-side) versiyonlar\u0131n\u0131 bilmiyorsan\u0131z. Buna do\u011frudan kulland\u0131klar\u0131n\u0131z\u0131n yan\u0131 s\u0131ra nested dependency\u2019ler de dahildir.</li> <li>Yaz\u0131l\u0131m (OS, web/application server, database management system (DBMS), uygulamalar, APIs ve t\u00fcm bile\u015fenler, runtime environment\u2019lar ve k\u00fct\u00fcphaneler d\u00e2hil) savunmas\u0131z, desteklenmiyor veya g\u00fcncel de\u011filse.</li> <li>D\u00fczenli olarak zafiyet taramas\u0131 yapm\u0131yor ve kulland\u0131\u011f\u0131n\u0131z bile\u015fenlerle ilgili security bulletin\u2019lere abone olmuyorsan\u0131z.</li> <li>Temel platformu, framework\u2019leri ve dependency\u2019leri risk temelli ve zaman\u0131nda d\u00fczeltmiyor veya upgrade etmiyorsan\u0131z. Bu genellikle patching\u2019in ayl\u0131k veya \u00fc\u00e7 ayl\u0131k bir change control g\u00f6revi oldu\u011fu ortamlarda ya\u015fan\u0131r ve kurulu\u015flar\u0131 d\u00fczeltilmi\u015f zafiyetlere kar\u015f\u0131 g\u00fcnlerce veya aylarca gereksiz a\u00e7\u0131kta b\u0131rak\u0131r.</li> <li>Yaz\u0131l\u0131m geli\u015ftiriciler, g\u00fcncellenmi\u015f, upgrade edilmi\u015f veya patch uygulanm\u0131\u015f k\u00fct\u00fcphanelerin uyumlulu\u011funu test etmiyorsa.</li> <li>Bile\u015fenlerin configuration\u2019lar\u0131n\u0131 g\u00fcvence alt\u0131na alm\u0131yorsan\u0131z (bkz. A05:2021-Security Misconfiguration).</li> </ul>"},{"location":"tr/A06_2021-Vulnerable_and_Outdated_Components/#nasl-onlenir","title":"Nas\u0131l \u00d6nlenir","text":"<p>A\u015fa\u011f\u0131dakileri kapsayan bir patch management s\u00fcreci olmal\u0131d\u0131r:</p> <ul> <li>Kullan\u0131lmayan dependency\u2019leri, gereksiz \u00f6zellikleri, bile\u015fenleri, dosyalar\u0131 ve dok\u00fcmantasyonu kald\u0131r\u0131n.</li> <li>Hem client-side hem de server-side bile\u015fenlerin (\u00f6rn. framework\u2019ler, k\u00fct\u00fcphaneler) ve dependency\u2019lerinin versiyonlar\u0131n\u0131 s\u00fcrekli olarak envanterleyin; versions, OWASP Dependency Check, retire.js vb. ara\u00e7lar\u0131 kullan\u0131n. Common Vulnerabilities and Exposures (CVE) ve National Vulnerability Database (NVD) gibi kaynaklar\u0131 bile\u015fenlerdeki zafiyetler i\u00e7in s\u00fcrekli izleyin. Bu s\u00fcreci otomatikle\u015ftirmek i\u00e7in software composition analysis ara\u00e7lar\u0131n\u0131 kullan\u0131n. Kulland\u0131\u011f\u0131n\u0131z bile\u015fenlerle ilgili security vulnerability e-posta uyar\u0131lar\u0131na abone olun.</li> <li>Bile\u015fenleri yaln\u0131zca resmi kaynaklardan ve g\u00fcvenli ba\u011flant\u0131lar \u00fczerinden edinin. De\u011fi\u015ftirilmi\u015f, k\u00f6t\u00fc ama\u00e7l\u0131 bir bile\u015fen ekleme olas\u0131l\u0131\u011f\u0131n\u0131 azaltmak i\u00e7in imzal\u0131 paketleri tercih edin (bkz. A08:2021-Software and Data Integrity Failures).</li> <li>Bak\u0131m\u0131 yap\u0131lmayan veya eski versiyonlar i\u00e7in security patch \u00fcretmeyen k\u00fct\u00fcphane ve bile\u015fenleri izleyin. Patching m\u00fcmk\u00fcn de\u011filse, ke\u015ffedilen soruna kar\u015f\u0131 izleme, tespit veya koruma sa\u011flayacak bir virtual patch uygulamay\u0131 de\u011ferlendirin.</li> </ul> <p>Her kurulu\u015f, uygulaman\u0131n veya portf\u00f6y\u00fcn ya\u015fam d\u00f6ng\u00fcs\u00fc boyunca izleme, \u00f6nceliklendirme (triage) ve update/konfig\u00fcrasyon de\u011fi\u015fikliklerini uygulamaya y\u00f6nelik s\u00fcrekli bir plan sa\u011flamal\u0131d\u0131r.</p>"},{"location":"tr/A06_2021-Vulnerable_and_Outdated_Components/#ornek-saldr-senaryolar","title":"\u00d6rnek Sald\u0131r\u0131 Senaryolar\u0131","text":"<p>Senaryo #1: Bile\u015fenler genellikle uygulaman\u0131n kendisiyle ayn\u0131 ayr\u0131cal\u0131klarla \u00e7al\u0131\u015ft\u0131\u011f\u0131ndan, herhangi bir bile\u015fendeki kusurlar ciddi etkilere yol a\u00e7abilir. Bu kusurlar kazara (\u00f6rn. coding error) veya kas\u0131tl\u0131 (\u00f6rn. bir bile\u015fende backdoor) olabilir. Ke\u015ffedilmi\u015f baz\u0131 istismar edilebilir bile\u015fen zafiyetleri \u015funlard\u0131r:</p> <ul> <li>CVE-2017-5638, server \u00fczerinde arbitrary code execution\u2019a imk\u00e2n veren bir Struts 2 remote code execution zafiyeti, b\u00fcy\u00fck ihlallerden sorumlu tutulmu\u015ftur.</li> <li>Internet of Things (IoT) genellikle patch\u2019lenmesi zor veya imk\u00e2ns\u0131z olsa da, bunlar\u0131n patch\u2019lenmesinin \u00f6nemi b\u00fcy\u00fck olabilir (\u00f6rn. biyomedikal cihazlar).</li> </ul> <p>Sald\u0131rganlar\u0131n patch uygulanmam\u0131\u015f veya misconfigured sistemleri bulmas\u0131na yard\u0131mc\u0131 olan otomatik ara\u00e7lar vard\u0131r. \u00d6rne\u011fin, Shodan IoT arama motoru, Nisan 2014\u2019te patch\u2019lenen Heartbleed zafiyetinden h\u00e2l\u00e2 etkilenen cihazlar\u0131 bulman\u0131za yard\u0131mc\u0131 olabilir.</p>"},{"location":"tr/A06_2021-Vulnerable_and_Outdated_Components/#referanslar","title":"Referanslar","text":"<ul> <li> <p>OWASP Application Security Verification Standard: V1 Architecture, design and threat modelling</p> </li> <li> <p>OWASP Dependency Check (for Java and .NET libraries)</p> </li> <li> <p>OWASP Testing Guide - Map Application Architecture (OTG-INFO-010)</p> </li> <li> <p>OWASP Virtual Patching Best Practices</p> </li> <li> <p>The Unfortunate Reality of Insecure Libraries</p> </li> <li> <p>MITRE Common Vulnerabilities and Exposures (CVE) search</p> </li> <li> <p>National Vulnerability Database (NVD)</p> </li> <li> <p>Retire.js for detecting known vulnerable JavaScript libraries</p> </li> <li> <p>GitHub Advisory Database</p> </li> <li> <p>Ruby Libraries Security Advisory Database and Tools</p> </li> <li> <p>SAFECode Software Integrity Controls [PDF]</p> </li> </ul>"},{"location":"tr/A06_2021-Vulnerable_and_Outdated_Components/#eslestirilen-cwe-listesi","title":"E\u015fle\u015ftirilen CWE Listesi","text":"<p>CWE-937 OWASP Top 10 2013: Using Components with Known Vulnerabilities</p> <p>CWE-1035 2017 Top 10 A9: Using Components with Known Vulnerabilities</p> <p>CWE-1104 Use of Unmaintained Third Party Components</p>"},{"location":"tr/A07_2021-Identification_and_Authentication_Failures/#faktorler","title":"Fakt\u00f6rler","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 22 14.84% 2.55% 7.40 6.50 79.51% 45.72% 132,195 3,897"},{"location":"tr/A07_2021-Identification_and_Authentication_Failures/#genel-baks","title":"Genel Bak\u0131\u015f","text":"<p>\u00d6nceden Broken Authentication olarak bilinen bu kategori, ikinci s\u0131radan a\u015fa\u011f\u0131 kayd\u0131 ve art\u0131k kimlik do\u011frulama (authentication) de\u011fil, kimlik tespiti (identification) ile ilgili hatalara dair Common Weakness Enumerations (CWEs) k\u00fcmelerini de i\u00e7eriyor. Dikkate de\u011fer CWE\u2019ler aras\u0131nda CWE-297: Improper Validation of Certificate with Host Mismatch, CWE-287: Improper Authentication ve CWE-384: Session Fixation bulunur.</p>"},{"location":"tr/A07_2021-Identification_and_Authentication_Failures/#acklama","title":"A\u00e7\u0131klama","text":"<p>Kullan\u0131c\u0131n\u0131n kimli\u011finin do\u011frulanmas\u0131, authentication ve session y\u00f6netimi; authentication kaynakl\u0131 sald\u0131r\u0131lara kar\u015f\u0131 korunmak i\u00e7in kritiktir. A\u015fa\u011f\u0131daki durumlar varsa uygulamada authentication zafiyetleri olabilir:</p> <ul> <li>Sald\u0131rgan\u0131n ge\u00e7erli username/password listeleriyle credential stuffing gibi otomatik sald\u0131r\u0131lar yapmas\u0131na izin veriyorsa.</li> <li>Brute force veya di\u011fer otomatik sald\u0131r\u0131lara izin veriyorsa.</li> <li>\u201cPassword1\u201d veya \u201cadmin/admin\u201d gibi varsay\u0131lan, zay\u0131f veya yayg\u0131n parolalara izin veriyorsa.</li> <li>\u201cBilgiye dayal\u0131 sorular\u201d gibi g\u00fcvenli h\u00e2le getirilemeyen zay\u0131f/hatal\u0131 credential recovery ve forgot-password s\u00fcre\u00e7leri kullan\u0131l\u0131yorsa.</li> <li>Parolalar plain text, \u015fifreli ama hatal\u0131 veya zay\u0131f \u015fekilde hash\u2019lenmi\u015f data store\u2019larda tutuluyorsa (bkz. A02:2021-Cryptographic Failures).</li> <li>Multi-factor authentication eksik veya etkisizse.</li> <li>Session identifier URL\u2019de a\u00e7\u0131\u011fa \u00e7\u0131k\u0131yorsa.</li> <li>Ba\u015far\u0131l\u0131 login\u2019den sonra ayn\u0131 session identifier yeniden kullan\u0131l\u0131yorsa.</li> <li>Session ID\u2019ler do\u011fru \u015fekilde ge\u00e7ersiz k\u0131l\u0131nm\u0131yorsa. Kullan\u0131c\u0131 session\u2019lar\u0131 veya authentication token\u2019lar\u0131 (\u00f6zellikle single sign-on (SSO) token\u2019lar\u0131) logout s\u0131ras\u0131nda veya belli bir inactivity s\u00fcresinden sonra d\u00fczg\u00fcn bi\u00e7imde invalid edilmiyorsa.</li> </ul>"},{"location":"tr/A07_2021-Identification_and_Authentication_Failures/#nasl-onlenir","title":"Nas\u0131l \u00d6nlenir","text":"<ul> <li>M\u00fcmk\u00fcn olan yerlerde multi-factor authentication uygulay\u0131n; credential stuffing, brute force ve \u00e7al\u0131nt\u0131 credential tekrar kullan\u0131m\u0131na kar\u015f\u0131 koruma sa\u011flar.</li> <li>\u00d6zellikle admin kullan\u0131c\u0131lar i\u00e7in, varsay\u0131lan credential\u2019larla ship/deploy etmeyin.</li> <li>Yeni veya de\u011fi\u015ftirilen parolalar\u0131 en k\u00f6t\u00fc 10.000 parola listesine kar\u015f\u0131 test etmek gibi zay\u0131f parola kontrollerini uygulay\u0131n.</li> <li>Parola uzunlu\u011fu, karma\u015f\u0131kl\u0131\u011f\u0131 ve rotasyon politikalar\u0131n\u0131 NIST 800-63b\u2019nin 5.1.1 (Memorized Secrets) b\u00f6l\u00fcm\u00fcndeki rehberle veya di\u011fer modern, kan\u0131ta dayal\u0131 parola politikalar\u0131yla hizalay\u0131n.</li> <li>Kay\u0131t, credential recovery ve API ak\u0131\u015flar\u0131n\u0131; t\u00fcm sonu\u00e7lar i\u00e7in ayn\u0131 mesajlar\u0131 kullanarak account enumeration sald\u0131r\u0131lar\u0131na kar\u015f\u0131 sertle\u015ftirin.</li> <li>Ba\u015far\u0131s\u0131z login denemelerini s\u0131n\u0131rlay\u0131n veya giderek geciktirin; ancak bir denial of service senaryosu yaratmamaya dikkat edin. T\u00fcm ba\u015far\u0131s\u0131zl\u0131klar\u0131 log\u2019lay\u0131n ve credential stuffing, brute force veya di\u011fer sald\u0131r\u0131lar tespit edildi\u011finde y\u00f6neticileri uyar\u0131n.</li> <li>Login sonras\u0131nda y\u00fcksek entropili yeni ve rastgele bir session ID \u00fcreten, server-side, g\u00fcvenli ve built-in bir session manager kullan\u0131n. Session identifier URL\u2019de olmamal\u0131, g\u00fcvenli bi\u00e7imde saklanmal\u0131 ve logout, idle ve absolute timeout\u2019lardan sonra invalid edilmelidir.</li> </ul>"},{"location":"tr/A07_2021-Identification_and_Authentication_Failures/#ornek-saldr-senaryolar","title":"\u00d6rnek Sald\u0131r\u0131 Senaryolar\u0131","text":"<p>Senaryo #1: Credential stuffing, bilinen parola listelerinin kullan\u0131m\u0131yla yap\u0131lan yayg\u0131n bir sald\u0131r\u0131d\u0131r. Bir uygulama, otomatik tehdit veya credential stuffing korumas\u0131 uygulam\u0131yorsa; bu uygulama, credential\u2019lar\u0131n ge\u00e7erli olup olmad\u0131\u011f\u0131n\u0131 test etmek i\u00e7in bir \u201cpassword oracle\u201d olarak kullan\u0131labilir.</p> <p>Senaryo #2: \u00c7o\u011fu authentication sald\u0131r\u0131s\u0131, parolalar\u0131n tek fakt\u00f6r olarak kullan\u0131lmaya devam edilmesi nedeniyle ger\u00e7ekle\u015fir. Bir zamanlar en iyi uygulama say\u0131lan parola rotasyonu ve karma\u015f\u0131kl\u0131k gereksinimleri, kullan\u0131c\u0131lar\u0131 zay\u0131f parolalar kullanmaya ve yeniden kullanmaya iter. NIST 800-63\u2019e g\u00f6re bu uygulamalardan vazge\u00e7ilmesi ve multi-factor authentication\u2019a ge\u00e7ilmesi tavsiye edilir.</p> <p>Senaryo #3: Uygulama session timeout\u2019lar\u0131 do\u011fru ayarlanmam\u0131\u015ft\u0131r. Bir kullan\u0131c\u0131, public bir bilgisayardan uygulamaya eri\u015fir. \u201cLogout\u201du se\u00e7mek yerine yaln\u0131zca taray\u0131c\u0131 sekmesini kapat\u0131r ve uzakla\u015f\u0131r. Bir sald\u0131rgan bir saat sonra ayn\u0131 taray\u0131c\u0131y\u0131 kullan\u0131r ve kullan\u0131c\u0131 h\u00e2l\u00e2 authenticated durumdad\u0131r.</p>"},{"location":"tr/A07_2021-Identification_and_Authentication_Failures/#referanslar","title":"Referanslar","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Digital Identity</p> </li> <li> <p>OWASP Application Security Verification Standard: V2 authentication</p> </li> <li> <p>OWASP Application Security Verification Standard: V3 Session Management</p> </li> <li> <p>OWASP Testing Guide: Identity,\u00a0Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Credential Stuffing</p> </li> <li> <p>OWASP Cheat Sheet: Forgot Password</p> </li> <li> <p>OWASP Cheat Sheet: Session Management</p> </li> <li> <p>OWASP Automated Threats Handbook</p> </li> <li> <p>NIST 800-63b: 5.1.1 Memorized Secrets</p> </li> </ul>"},{"location":"tr/A07_2021-Identification_and_Authentication_Failures/#eslestirilen-cwe-listesi","title":"E\u015fle\u015ftirilen CWE Listesi","text":"<p>CWE-255 Credentials Management Errors</p> <p>CWE-259 Use of Hard-coded Password</p> <p>CWE-287 Improper Authentication</p> <p>CWE-288 Authentication Bypass Using an Alternate Path or Channel</p> <p>CWE-290 Authentication Bypass by Spoofing</p> <p>CWE-294 Authentication Bypass by Capture-replay</p> <p>CWE-295 Improper Certificate Validation</p> <p>CWE-297 Improper Validation of Certificate with Host Mismatch</p> <p>CWE-300 Channel Accessible by Non-Endpoint</p> <p>CWE-302 Authentication Bypass by Assumed-Immutable Data</p> <p>CWE-304 Missing Critical Step in Authentication</p> <p>CWE-306 Missing Authentication for Critical Function</p> <p>CWE-307 Improper Restriction of Excessive Authentication Attempts</p> <p>CWE-346 Origin Validation Error</p> <p>CWE-384 Session Fixation</p> <p>CWE-521 Weak Password Requirements</p> <p>CWE-613 Insufficient Session Expiration</p> <p>CWE-620 Unverified Password Change</p> <p>CWE-640 Weak Password Recovery Mechanism for Forgotten Password</p> <p>CWE-798 Use of Hard-coded Credentials</p> <p>CWE-940 Improper Verification of Source of a Communication Channel</p> <p>CWE-1216 Lockout Mechanism Errors</p>"},{"location":"tr/A08_2021-Software_and_Data_Integrity_Failures/#faktorler","title":"Fakt\u00f6rler","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 10 16.67% 2.05% 6.94 7.94 75.04% 45.35% 47,972 1,152"},{"location":"tr/A08_2021-Software_and_Data_Integrity_Failures/#genel-baks","title":"Genel Bak\u0131\u015f","text":"<p>2021 i\u00e7in yeni bir kategori; do\u011frulama yapmadan software update\u2019ler, kritik veriler ve CI/CD pipeline\u2019lar\u0131yla ilgili varsay\u0131mlara odaklan\u0131r. Common Vulnerability and Exposures/Common Vulnerability Scoring System (CVE/CVSS) verilerinde en y\u00fcksek a\u011f\u0131rl\u0131kl\u0131 impact\u2019lerden birine sahiptir. Dikkate de\u011fer Common Weakness Enumerations (CWEs) aras\u0131nda CWE-829: Inclusion of Functionality from Untrusted Control Sphere, CWE-494: Download of Code Without Integrity Check ve CWE-502: Deserialization of Untrusted Data bulunur.</p>"},{"location":"tr/A08_2021-Software_and_Data_Integrity_Failures/#acklama","title":"A\u00e7\u0131klama","text":"<p>Software ve data integrity hatalar\u0131; integrity ihlallerine kar\u015f\u0131 koruma sa\u011flamayan code ve infrastructure ile ilgilidir. \u00d6rne\u011fin bir uygulaman\u0131n, g\u00fcvenilmeyen kaynaklardan, repository\u2019lerden ve content delivery network\u2019lerden (CDN) plugin, library veya module\u2019lere dayanmas\u0131. G\u00fcvensiz bir CI/CD pipeline, yetkisiz eri\u015fim, malicious code veya sistem compromise riskini art\u0131rabilir. Son olarak, bir\u00e7ok uygulamada art\u0131k auto-update fonksiyonu vard\u0131r; burada update\u2019ler yeterli integrity do\u011frulamas\u0131 olmadan indirilir ve daha \u00f6nce trusted olan uygulamaya uygulan\u0131r. Sald\u0131rganlar potansiyel olarak kendi update\u2019lerini y\u00fckleyip t\u00fcm kurulumlara da\u011f\u0131t\u0131lmas\u0131n\u0131 ve \u00e7al\u0131\u015ft\u0131r\u0131lmas\u0131n\u0131 sa\u011flayabilir. Ba\u015fka bir \u00f6rnek; object\u2019lerin veya verilerin attacker\u2019\u0131n g\u00f6r\u00fcp de\u011fi\u015ftirebilece\u011fi bir yap\u0131ya encode veya serialize edilmesi; bu, insecure deserialization\u2019a kar\u015f\u0131 savunmas\u0131zd\u0131r.</p>"},{"location":"tr/A08_2021-Software_and_Data_Integrity_Failures/#nasl-onlenir","title":"Nas\u0131l \u00d6nlenir","text":"<ul> <li> <p>Software veya verinin beklenen kaynaktan geldi\u011fini ve de\u011fi\u015ftirilmedi\u011fini do\u011frulamak i\u00e7in dijital imza (digital signature) veya benzeri mekanizmalar kullan\u0131n.</p> </li> <li> <p>npm veya Maven gibi library ve dependency\u2019lerin trusted repository\u2019lerden t\u00fcketildi\u011finden emin olun. Risk profiliniz y\u00fcksekse, vet edilmi\u015f internal known-good bir repository bar\u0131nd\u0131rmay\u0131 d\u00fc\u015f\u00fcn\u00fcn.</p> </li> <li> <p>OWASP Dependency Check veya OWASP CycloneDX gibi bir software supply chain security arac\u0131 kullanarak bile\u015fenlerin bilinen zafiyetler i\u00e7ermedi\u011fini do\u011frulay\u0131n.</p> </li> <li> <p>Software pipeline\u2019\u0131n\u0131za malicious code veya configuration sokulma olas\u0131l\u0131\u011f\u0131n\u0131 en aza indirmek i\u00e7in code ve configuration de\u011fi\u015fiklikleri i\u00e7in bir review s\u00fcreci sa\u011flay\u0131n.</p> </li> <li> <p>CI/CD pipeline\u2019\u0131n\u0131z\u0131n build ve deploy s\u00fcre\u00e7lerinden ge\u00e7en code\u2019un integrity\u2019sini korumak i\u00e7in uygun ayr\u0131\u015ft\u0131rma (segregation), configuration ve access control\u2019e sahip oldu\u011fundan emin olun.</p> </li> <li> <p>\u0130mzalanmam\u0131\u015f veya encrypt edilmemi\u015f serialized veriyi, integrity check veya digital signature olmaks\u0131z\u0131n untrusted client\u2019lara g\u00f6ndermeyin; serialized verinin kurcalanmas\u0131n\u0131 (tampering) veya replay\u2019ini tespit edecek bir mekanizma kullan\u0131n.</p> </li> </ul>"},{"location":"tr/A08_2021-Software_and_Data_Integrity_Failures/#ornek-saldr-senaryolar","title":"\u00d6rnek Sald\u0131r\u0131 Senaryolar\u0131","text":"<p>Senaryo #1 \u0130mzas\u0131z update: Bir\u00e7ok ev router\u2019\u0131, set-top box, device firmware\u2019i ve di\u011ferleri firmware update\u2019lerini signed olarak do\u011frulamaz. Unsigned firmware, sald\u0131rganlar i\u00e7in b\u00fcy\u00fcyen bir hedeftir ve yaln\u0131zca k\u00f6t\u00fcle\u015fmesi beklenir. \u00c7o\u011fu zaman remediation mekanizmas\u0131 yoktur; bir sonraki versiyonda d\u00fczeltmek ve eski versiyonlar\u0131n kullan\u0131m d\u0131\u015f\u0131 kalmas\u0131n\u0131 beklemekten ba\u015fka \u00e7are olmaz.</p> <p>Senaryo #2 SolarWinds malicious update: Devlet akt\u00f6rlerinin update mekanizmalar\u0131n\u0131 hedef ald\u0131\u011f\u0131 bilinmektedir; yak\u0131n ge\u00e7mi\u015fte dikkat \u00e7eken \u00f6rnek SolarWinds Orion sald\u0131r\u0131s\u0131d\u0131r. Software\u2019\u0131 geli\u015ftiren \u015firketin secure build ve update integrity s\u00fcre\u00e7leri vard\u0131; yine de bunlar atlat\u0131ld\u0131 ve birka\u00e7 ay boyunca 18.000\u2019den fazla kurulu\u015fa y\u00fcksek hedefli malicious bir update da\u011f\u0131t\u0131ld\u0131; bunlar\u0131n yakla\u015f\u0131k 100 kadar\u0131 etkilendi. Bu, t\u00fcr\u00fcn\u00fcn en kapsaml\u0131 ve en \u00f6nemli ihlallerinden biridir.</p> <p>Senaryo #3 Insecure Deserialization: Bir React uygulamas\u0131 bir dizi Spring Boot microservice\u2019i \u00e7a\u011f\u0131r\u0131yor. Fonksiyonel programlama yakla\u015f\u0131m\u0131yla code\u2019u immutable tutmak istiyorlar. \u00c7\u00f6z\u00fcm olarak user state\u2019i serialize edip her istekte ileri-geri ta\u015f\u0131yorlar. Bir sald\u0131rgan, \u201crO0\u201d Java object imzas\u0131n\u0131 (base64 i\u00e7inde) fark ediyor ve Java Serial Killer arac\u0131n\u0131 kullanarak application server \u00fczerinde remote code execution elde ediyor.</p>"},{"location":"tr/A09_2021-Security_Logging_and_Monitoring_Failures/#faktorler","title":"Fakt\u00f6rler","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 4 19.23% 6.51% 6.87 4.99 53.67% 39.97% 53,615 242"},{"location":"tr/A09_2021-Security_Logging_and_Monitoring_Failures/#genel-baks","title":"Genel Bak\u0131\u015f","text":"<p>Security logging ve monitoring, Top 10 topluluk anketinde (#3) yer ald\u0131 ve OWASP Top 10 2017\u2019deki onuncu s\u0131radan biraz y\u00fckseldi. Logging ve monitoring test etmesi zor alanlard\u0131r; \u00e7o\u011fu zaman r\u00f6portajlar veya bir penetration test s\u0131ras\u0131nda sald\u0131r\u0131lar\u0131n tespit edilip edilmedi\u011fini sorma yoluyla de\u011ferlendirilir. Bu kategori i\u00e7in \u00e7ok fazla CVE/CVSS verisi olmasa da ihlallerin tespiti ve yan\u0131tlanmas\u0131 kritiktir. Yine de accountability, g\u00f6r\u00fcn\u00fcrl\u00fck, incident alerting ve forensics a\u00e7\u0131s\u0131ndan \u00e7ok etkili olabilir. Bu kategori, CWE-778 Insufficient Logging\u2019in \u00f6tesine geni\u015fleyerek CWE-117 Improper Output Neutralization for Logs, CWE-223 Omission of Security-relevant Information ve CWE-532 Insertion of Sensitive Information into Log File\u2019\u0131 da kapsar.</p>"},{"location":"tr/A09_2021-Security_Logging_and_Monitoring_Failures/#acklama","title":"A\u00e7\u0131klama","text":"<p>OWASP Top 10 2021\u2019e geri d\u00f6nen bu kategori, aktif ihlallerin tespiti, y\u00fckseltilmesi (escalate) ve bunlara yan\u0131t verilmesine yard\u0131mc\u0131 olur. Logging ve monitoring olmadan ihlaller tespit edilemez. Yetersiz logging, detection, monitoring ve aktif yan\u0131t a\u015fa\u011f\u0131daki durumlar\u0131n herhangi birinde ger\u00e7ekle\u015fir:</p> <ul> <li>Login\u2019ler, ba\u015far\u0131s\u0131z login\u2019ler ve y\u00fcksek de\u011ferli i\u015flemler gibi denetlenebilir (auditable) event\u2019ler log\u2019lanm\u0131yorsa.</li> <li>Uyar\u0131lar ve hatalar hi\u00e7, yetersiz veya belirsiz log mesajlar\u0131 \u00fcretiyorsa.</li> <li>Uygulama ve API log\u2019lar\u0131 \u015f\u00fcpheli aktivite i\u00e7in monitor edilmiyorsa.</li> <li>Log\u2019lar sadece lokal olarak tutuluyorsa.</li> <li>Uygun alerting e\u015fikleri ve response escalation s\u00fcre\u00e7leri yoksa veya etkisizse.</li> <li>Dynamic application security testing (DAST) ara\u00e7lar\u0131 (\u00f6r. OWASP ZAP) ile yap\u0131lan penetration test ve taramalar alert tetiklemiyorsa.</li> <li>Uygulama aktif sald\u0131r\u0131lar\u0131 ger\u00e7ek zamanl\u0131 veya near real-time olarak tespit, escalate veya alert edemiyorsa.</li> <li>Logging ve alerting event\u2019lerini bir kullan\u0131c\u0131ya veya sald\u0131rgana g\u00f6r\u00fcn\u00fcr k\u0131larak bilgi s\u0131z\u0131nt\u0131s\u0131na (information leakage) a\u00e7\u0131k hale geliniyorsa (bkz. A01:2021-Broken Access Control).</li> <li>Log verisi do\u011fru \u015fekilde encode edilmezse logging veya monitoring sistemlerine injection veya sald\u0131r\u0131lara a\u00e7\u0131k olunuyorsa.</li> </ul>"},{"location":"tr/A09_2021-Security_Logging_and_Monitoring_Failures/#nasl-onlenir","title":"Nas\u0131l \u00d6nlenir","text":"<p>Uygulaman\u0131n riskine ba\u011fl\u0131 olarak geli\u015ftiriciler a\u015fa\u011f\u0131daki kontrollerin bir k\u0131sm\u0131n\u0131 veya tamam\u0131n\u0131 uygulamal\u0131d\u0131r:</p> <ul> <li>T\u00fcm login, access control ve server-side input validation hatalar\u0131n\u0131n; \u015f\u00fcpheli veya k\u00f6t\u00fc niyetli hesaplar\u0131 tan\u0131mlayacak yeterli user context ile log\u2019lanmas\u0131n\u0131 ve gecikmeli adli analiz (forensic analysis) i\u00e7in yeterince uzun s\u00fcre tutulmas\u0131n\u0131 sa\u011flay\u0131n.</li> <li>Log\u2019lar\u0131n, log management \u00e7\u00f6z\u00fcmlerinin kolayca t\u00fcketebilece\u011fi bir formatta \u00fcretilmesini sa\u011flay\u0131n.</li> <li>Logging veya monitoring sistemlerine injection/sald\u0131r\u0131lar\u0131 \u00f6nlemek i\u00e7in log verisini do\u011fru \u015fekilde encode edin.</li> <li>Y\u00fcksek de\u011ferli i\u015flemler i\u00e7in, kurcalamay\u0131 (tampering) veya silmeyi \u00f6nleyecek integrity kontrollerine sahip audit trail (\u00f6r. append-only database tablolar\u0131) sa\u011flay\u0131n.</li> <li>DevSecOps ekipleri, \u015f\u00fcpheli aktivitelerin h\u0131zl\u0131ca tespit edilip yan\u0131tlanaca\u011f\u0131 etkili monitoring ve alerting kurmal\u0131d\u0131r.</li> <li>National Institute of Standards and Technology (NIST) 800-61r2 veya daha yenisi gibi bir incident response ve recovery plan\u0131 olu\u015fturun veya benimseyin.</li> </ul> <p>OWASP ModSecurity Core Rule Set gibi ticari ve a\u00e7\u0131k kaynak uygulama koruma framework\u2019leri ile Elasticsearch, Logstash, Kibana (ELK) stack gibi a\u00e7\u0131k kaynak log korelasyon yaz\u0131l\u0131mlar\u0131; custom dashboard ve alerting \u00f6zellikleri sunar.</p>"},{"location":"tr/A09_2021-Security_Logging_and_Monitoring_Failures/#ornek-saldr-senaryolar","title":"\u00d6rnek Sald\u0131r\u0131 Senaryolar\u0131","text":"<p>Senaryo #1: Bir \u00e7ocuk sa\u011fl\u0131k plan\u0131 sa\u011flay\u0131c\u0131s\u0131n\u0131n web sitesi i\u015fletmecisi, monitoring ve logging eksikli\u011fi nedeniyle bir ihlali tespit edemedi. Harici bir taraf, sald\u0131rgan\u0131n 3.5 milyonun \u00fczerinde \u00e7ocu\u011fa ait binlerce hassas sa\u011fl\u0131k kayd\u0131na eri\u015fip bunlar\u0131 de\u011fi\u015ftirdi\u011fini bildirdi. Olay sonras\u0131 incelemede, web sitesi geli\u015ftiricilerinin \u00f6nemli zafiyetleri ele almad\u0131\u011f\u0131 g\u00f6r\u00fcld\u00fc. Sistem \u00fczerinde logging veya monitoring olmad\u0131\u011f\u0131ndan, veri ihlali 2013\u2019ten beri \u2014 yedi y\u0131l\u0131 a\u015fk\u0131n bir s\u00fcre \u2014 devam ediyor olabilirdi.</p> <p>Senaryo #2: B\u00fcy\u00fck bir Hint havayolu \u015firketi, milyonlarca yolcunun on y\u0131l\u0131 a\u015fk\u0131n ki\u015fisel verilerini (pasaport ve kredi kart\u0131 verileri d\u00e2hil) etkileyen bir veri ihlali ya\u015fad\u0131. Veri ihlali, \u00fc\u00e7\u00fcnc\u00fc taraf bir cloud hosting sa\u011flay\u0131c\u0131s\u0131nda meydana geldi ve ihlal bir s\u00fcre sonra havayoluna bildirildi.</p> <p>Senaryo #3: B\u00fcy\u00fck bir Avrupa havayolu \u015firketi GDPR kapsam\u0131nda raporlanabilir bir ihlal ya\u015fad\u0131. \u0130hlalin, sald\u0131rganlar taraf\u0131ndan istismar edilen payment application g\u00fcvenlik zafiyetlerinden kaynakland\u0131\u011f\u0131 ve 400.000\u2019den fazla m\u00fc\u015fteri \u00f6deme kayd\u0131n\u0131n topland\u0131\u011f\u0131 bildirildi. Havayolu, gizlilik d\u00fczenleyicisi taraf\u0131ndan 20 milyon pound para cezas\u0131na \u00e7arpt\u0131r\u0131ld\u0131.</p>"},{"location":"tr/A09_2021-Security_Logging_and_Monitoring_Failures/#referanslar","title":"Referanslar","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Logging and     Monitoring</p> </li> <li> <p>OWASP Application Security Verification Standard: V7 Logging and     Monitoring</p> </li> <li> <p>OWASP Testing Guide: Testing for Detailed Error     Code</p> </li> <li> <p>OWASP Cheat Sheet:     Application Logging Vocabulary</p> </li> <li> <p>OWASP Cheat Sheet:     Logging</p> </li> <li> <p>Data Integrity: Recovering from Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Identifying and Protecting Assets Against     Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Detecting and Responding to Ransomware and Other     Destructive     Events</p> </li> </ul>"},{"location":"tr/A09_2021-Security_Logging_and_Monitoring_Failures/#eslestirilen-cwelerin-listesi","title":"E\u015fle\u015ftirilen CWE'lerin Listesi","text":"<p>CWE-117 Improper Output Neutralization for Logs</p> <p>CWE-223 Omission of Security-relevant Information</p> <p>CWE-532 Insertion of Sensitive Information into Log File</p> <p>CWE-778 Insufficient Logging</p>"},{"location":"tr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#faktorler","title":"Fakt\u00f6rler","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 1 2.72% 2.72% 8.28 6.72 67.72% 67.72% 9,503 385"},{"location":"tr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#genel-baks","title":"Genel Bak\u0131\u015f","text":"<p>Bu kategori, Top 10 topluluk anketinden (#1) eklendi. Veriler, ortalaman\u0131n \u00fczerinde test kapsam\u0131yla birlikte nispeten d\u00fc\u015f\u00fck bir g\u00f6r\u00fclme oran\u0131 ve ortalaman\u0131n \u00fczerinde Exploit ile Impact potansiyel dereceleri g\u00f6stermektedir. Yeni girdiler genellikle dikkat ve fark\u0131ndal\u0131k i\u00e7in tek bir CWE veya k\u00fc\u00e7\u00fck bir CWE k\u00fcmesi olaca\u011f\u0131ndan, odaklanmalar\u0131 ve gelecekteki bir s\u00fcr\u00fcmde daha b\u00fcy\u00fck bir kategoriye katlanmalar\u0131 umulur.</p>"},{"location":"tr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#acklama","title":"A\u00e7\u0131klama","text":"<p>SSRF hatalar\u0131, bir web uygulamas\u0131 kullan\u0131c\u0131 taraf\u0131ndan sa\u011flanan URL\u2019yi do\u011frulamadan uzak bir kayna\u011f\u0131 fetch etti\u011finde ortaya \u00e7\u0131kar. Bu, sald\u0131rgan\u0131n uygulamay\u0131, firewall, VPN veya ba\u015fka bir network access control list (ACL) ile korunuyor olsa bile beklenmeyen bir hedefe crafted bir istek g\u00f6ndermeye zorlamas\u0131na imk\u00e2n tan\u0131r.</p> <p>Modern web uygulamalar\u0131 son kullan\u0131c\u0131lara kullan\u0131\u015fl\u0131 \u00f6zellikler sunduk\u00e7a, bir URL\u2019i fetch etmek yayg\u0131n bir senaryo h\u00e2line gelir. Sonu\u00e7 olarak, SSRF\u2019nin g\u00f6r\u00fclme s\u0131kl\u0131\u011f\u0131 art\u0131yor. Ayr\u0131ca cloud servisleri ve mimarilerin karma\u015f\u0131kl\u0131\u011f\u0131 nedeniyle SSRF\u2019nin ciddiyeti de y\u00fckseliyor.</p>"},{"location":"tr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#nasl-onlenir","title":"Nas\u0131l \u00d6nlenir","text":"<p>Geli\u015ftiriciler, a\u015fa\u011f\u0131daki defense-in-depth kontrollerinin bir k\u0131sm\u0131n\u0131 veya tamam\u0131n\u0131 uygulayarak SSRF\u2019yi \u00f6nleyebilir:</p>"},{"location":"tr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#network-katmanndan","title":"Network katman\u0131ndan","text":"<ul> <li>Uzak kaynak eri\u015fimi fonksiyonelli\u011fini ayr\u0131 network\u2019lere ay\u0131r\u0131n; SSRF\u2019nin etkisini azalt\u0131n.</li> <li>\u201cVarsay\u0131lan olarak reddet (deny by default)\u201d firewall policy\u2019leri veya network access control kurallar\u0131 uygulay\u0131n; temel intranet trafi\u011fi d\u0131\u015f\u0131ndaki her \u015feyi engelleyin. \u0130pu\u00e7lar\u0131:   \\~ Firewall kurallar\u0131 i\u00e7in uygulama bazl\u0131 sahiplik ve lifecycle olu\u015fturun.   \\~ Firewall\u2019larda kabul edilen ve engellenen t\u00fcm network ak\u0131\u015flar\u0131n\u0131 log\u2019lay\u0131n (bkz. A09:2021-Security Logging and Monitoring Failures).</li> </ul>"},{"location":"tr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#application-katmanndan","title":"Application katman\u0131ndan","text":"<ul> <li>T\u00fcm client taraf\u0131ndan sa\u011flanan input verisini sanitize ve validate edin.</li> <li>URL schema, port ve destination\u2019\u0131 pozitif bir allow list ile zorunlu k\u0131l\u0131n.</li> <li>Ham (raw) response\u2019lar\u0131 client\u2019a g\u00f6ndermeyin.</li> <li>HTTP redirection\u2019lar\u0131 devre d\u0131\u015f\u0131 b\u0131rak\u0131n.</li> <li>DNS rebinding ve \u201ctime of check, time of use\u201d (TOCTOU) race condition gibi sald\u0131r\u0131lardan ka\u00e7\u0131nmak i\u00e7in URL tutarl\u0131l\u0131\u011f\u0131n\u0131n fark\u0131nda olun.</li> </ul> <p>SSRF\u2019yi bir deny list veya regular expression kullanarak azaltmay\u0131n. Sald\u0131rganlar\u0131n deny list\u2019leri atlamak i\u00e7in payload listeleri, ara\u00e7lar\u0131 ve yetenekleri vard\u0131r.</p>"},{"location":"tr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#dusunulebilecek-ek-onlemler","title":"D\u00fc\u015f\u00fcn\u00fclebilecek Ek \u00d6nlemler:","text":"<ul> <li>\u00d6ny\u00fcz (front) sistemlerinde ba\u015fka security-relevant servisleri (\u00f6rn. OpenID) deploy etmeyin. Bu sistemlerde local trafi\u011fi (\u00f6rn. localhost) kontrol edin.</li> <li>Y\u00f6netilebilir, dedike kullan\u0131c\u0131 gruplar\u0131na sahip frontend\u2019ler i\u00e7in, \u00e7ok y\u00fcksek koruma ihtiyac\u0131 d\u00fc\u015f\u00fcn\u00fcl\u00fcyorsa ba\u011f\u0131ms\u0131z sistemlerde network encryption (\u00f6rn. VPN) kullan\u0131n.</li> </ul>"},{"location":"tr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#ornek-saldr-senaryolar","title":"\u00d6rnek Sald\u0131r\u0131 Senaryolar\u0131","text":"<p>Sald\u0131rganlar, a\u015fa\u011f\u0131daki senaryolar gibi web application firewall\u2019lar\u0131, firewall\u2019lar veya network ACL\u2019leri ile korunan sistemlere SSRF kullanarak sald\u0131rabilir:</p> <p>Senaryo #1: \u0130\u00e7 sunucular\u0131n port taramas\u0131 \u2013 Network mimarisi segmentlenmemi\u015fse, sald\u0131rganlar ba\u011flant\u0131 sonu\u00e7lar\u0131ndan veya SSRF payload ba\u011flant\u0131lar\u0131n\u0131 kurma/ret etme s\u00fcresinden i\u00e7 a\u011flar\u0131 haritalayabilir ve i\u00e7 sunucularda portlar\u0131n a\u00e7\u0131k m\u0131 kapal\u0131 m\u0131 oldu\u011funu belirleyebilir.</p> <p>Senaryo #2: Hassas veri s\u0131z\u0131nt\u0131s\u0131 \u2013 Sald\u0131rganlar yerel dosyalara veya i\u00e7 servislere eri\u015ferek <code>file:///etc/passwd</code> ve <code>http://localhost:28017/</code> gibi hassas bilgileri elde edebilir.</p> <p>Senaryo #3: Cloud servislerinin metadata storage\u2019\u0131na eri\u015fim \u2013 \u00c7o\u011fu cloud sa\u011flay\u0131c\u0131s\u0131nda <code>http://169.254.169.254/</code> gibi metadata storage bulunur. Bir sald\u0131rgan, metadata\u2019y\u0131 okuyarak hassas bilgiler elde edebilir.</p> <p>Senaryo #4: \u0130\u00e7 servislerin ele ge\u00e7irilmesi \u2013 Sald\u0131rgan, i\u00e7 servisleri k\u00f6t\u00fcye kullanarak Remote Code Execution (RCE) veya Denial of Service (DoS) gibi sonraki sald\u0131r\u0131lar\u0131 ger\u00e7ekle\u015ftirebilir.</p>"},{"location":"tr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#referanslar","title":"Referanslar","text":"<ul> <li>OWASP - Server-Side Request Forgery Prevention Cheat Sheet</li> <li>PortSwigger - Server-side request forgery (SSRF)</li> <li>Acunetix - What is Server-Side Request Forgery (SSRF)?</li> <li>SSRF bible</li> <li>A New Era of SSRF - Exploiting URL Parser in Trending Programming Languages!</li> </ul>"},{"location":"tr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#eslenen-cwe-listesi","title":"E\u015flenen CWE Listesi","text":"<p>CWE-918 Server-Side Request Forgery (SSRF)</p>"},{"location":"tr/A11_2021-Next_Steps/","title":"A11:2021 \u2013 Sonraki Ad\u0131mlar","text":"<p>Tasar\u0131m\u0131 gere\u011fi OWASP Top 10 do\u011fas\u0131 gere\u011fi en \u00f6nemli on riskle s\u0131n\u0131rl\u0131d\u0131r. Her OWASP Top 10 s\u00fcr\u00fcm\u00fcnde, kapsaml\u0131 bi\u00e7imde de\u011ferlendirilmesine ra\u011fmen sonunda listeye giremeyen \u201ce\u015fikte\u201d riskler olur. Verileri nas\u0131l yorumlamaya ya da esnetmeye \u00e7al\u0131\u015f\u0131rsak \u00e7al\u0131\u015fal\u0131m, di\u011fer riskler daha yayg\u0131n ve daha etkiliydi.</p> <p>Olgun bir appsec program\u0131na do\u011fru ilerleyen kurulu\u015flar veya kapsamlar\u0131n\u0131 geni\u015fletmek isteyen g\u00fcvenlik dan\u0131\u015fmanlar\u0131 ya da ara\u00e7 sa\u011flay\u0131c\u0131lar\u0131 i\u00e7in a\u015fa\u011f\u0131daki \u00fc\u00e7 konu tespit ve iyile\u015ftirme \u00e7abas\u0131na fazlas\u0131yla de\u011ferdir.</p>"},{"location":"tr/A11_2021-Next_Steps/#code-quality-issues","title":"Code Quality issues","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 38 49.46% 2.22% 7.1 6.7 60.85% 23.42% 101736 7564 <ul> <li> <p>A\u00e7\u0131klama. Code quality sorunlar\u0131; bilinen g\u00fcvenlik kusurlar\u0131 veya pattern\u2019lar, de\u011fi\u015fkenlerin birden \u00e7ok ama\u00e7 i\u00e7in yeniden kullan\u0131m\u0131, debugging \u00e7\u0131kt\u0131lar\u0131nda hassas bilgilerin if\u015fas\u0131, off-by-one hatalar\u0131, time of check/time of use (TOCTOU) race condition\u2019lar\u0131, signed/unsigned d\u00f6n\u00fc\u015f\u00fcm hatalar\u0131, use-after-free ve daha fazlas\u0131n\u0131 i\u00e7erir. Bu b\u00f6l\u00fcm\u00fcn ay\u0131rt edici \u00f6zelli\u011fi, genellikle s\u0131k\u0131 compiler flag\u2019leri, static code analysis ara\u00e7lar\u0131 ve IDE linter plugin\u2019leriyle tespit edilebilmeleridir. Modern diller tasar\u0131m gere\u011fi bu sorunlar\u0131n \u00e7o\u011funu ortadan kald\u0131rm\u0131\u015ft\u0131r; \u00f6rne\u011fin Rust\u2019\u0131n memory ownership ve borrowing konsepti, Rust\u2019\u0131n threading tasar\u0131m\u0131 ve Go\u2019nun strict typing ile bounds checking yakla\u015f\u0131m\u0131.</p> </li> <li> <p>Nas\u0131l \u00f6nlenir. Editor ve dilinizin static code analysis se\u00e7eneklerini etkinle\u015ftirip kullan\u0131n. Bir static code analysis arac\u0131 kullanmay\u0131 d\u00fc\u015f\u00fcn\u00fcn. Hata s\u0131n\u0131flar\u0131n\u0131 ortadan kald\u0131ran Rust veya Go gibi bir dil ya da framework kullanman\u0131n/migrate etmenin m\u00fcmk\u00fcn olup olmad\u0131\u011f\u0131n\u0131 de\u011ferlendirin.</p> </li> <li> <p>\u00d6rnek sald\u0131r\u0131 senaryolar\u0131. Bir sald\u0131rgan, birden fazla thread aras\u0131nda statik olarak payla\u015f\u0131lan bir de\u011fi\u015fken \u00fczerinden bir race condition\u2019dan yararlanarak hassas bilgilere eri\u015febilir ya da bu bilgileri g\u00fcncelleyebilir.</p> </li> <li> <p>Referanslar</p> </li> <li> <p>OWASP Code Review Guide</p> </li> <li>Google Code Review Guide</li> </ul>"},{"location":"tr/A11_2021-Next_Steps/#denial-of-service","title":"Denial of Service","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 8 17.54% 4.89% 8.3 5.9 79.58% 33.26% 66985 973 <ul> <li> <p>A\u00e7\u0131klama. Yeterli kaynak sa\u011fland\u0131\u011f\u0131nda denial of service her zaman m\u00fcmk\u00fcnd\u00fcr. Ancak tasar\u0131m ve coding pratikleri, denial of service\u2019in b\u00fcy\u00fckl\u00fc\u011f\u00fc \u00fczerinde \u00f6nemli bir etkiye sahiptir. Diyelim ki linke sahip herkes b\u00fcy\u00fck bir dosyaya eri\u015febiliyor veya her sayfada hesaplama a\u00e7\u0131s\u0131ndan pahal\u0131 bir i\u015flem ger\u00e7ekle\u015fiyor. Bu durumda denial of service ger\u00e7ekle\u015ftirmek \u00e7ok daha az \u00e7aba gerektirir.</p> </li> <li> <p>Nas\u0131l \u00f6nlenir. Kodu CPU, I/O ve memory kullan\u0131m\u0131 a\u00e7\u0131s\u0131ndan performans testlerine tabi tutun; pahal\u0131 i\u015flemleri yeniden mimarile\u015ftirin, optimize edin veya cache\u2019leyin. B\u00fcy\u00fck objeler i\u00e7in access control\u2019leri d\u00fc\u015f\u00fcn\u00fcn; yaln\u0131zca yetkili ki\u015filerin devasa dosya/objelere eri\u015febilmesini sa\u011flay\u0131n ya da bu i\u00e7erikleri bir edge caching network \u00fczerinden sunun.</p> </li> <li> <p>\u00d6rnek sald\u0131r\u0131 senaryolar\u0131. Bir sald\u0131rgan, bir i\u015flemin tamamlanmas\u0131n\u0131n 5-10 saniye s\u00fcrd\u00fc\u011f\u00fcn\u00fc tespit eder. D\u00f6rt concurrent thread \u00e7al\u0131\u015ft\u0131\u011f\u0131nda sunucunun yan\u0131t vermeyi kesti\u011fi g\u00f6zlemlenir. Sald\u0131rgan 1000 thread kullan\u0131r ve t\u00fcm sistemi \u00e7evrimd\u0131\u015f\u0131 hale getirir.</p> </li> <li> <p>Referanslar</p> </li> <li> <p>OWASP Cheat Sheet: Denial of Service</p> </li> <li>OWASP Attacks: Denial of Service</li> </ul>"},{"location":"tr/A11_2021-Next_Steps/#memory-management-errors","title":"Memory Management Errors","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Avg Weighted Exploit Avg Weighted Impact Max Coverage Avg Coverage Total Occurrences Total CVEs 14 7.03% 1.16% 6.7 8.1 56.06% 31.74% 26576 16184 <ul> <li> <p>A\u00e7\u0131klama. Web uygulamalar\u0131 genellikle Java, .NET veya node.js (JavaScript ya da TypeScript) gibi managed memory dillerinde yaz\u0131l\u0131r. Ancak bu diller, buffer/heap overflow, use-after-free, integer overflow ve daha fazlas\u0131 gibi memory management sorunlar\u0131na sahip sistem dilleri \u00fczerinde yaz\u0131lm\u0131\u015ft\u0131r. Y\u0131llar i\u00e7inde, web uygulama dili nominal olarak \u201cmemory safe\u201d olsa bile temelin ayn\u0131 olmad\u0131\u011f\u0131n\u0131 kan\u0131tlayan pek \u00e7ok sandbox escape g\u00f6r\u00fclm\u00fc\u015ft\u00fcr.</p> </li> <li> <p>Nas\u0131l \u00f6nlenir. Modern API\u2019lerin bir\u00e7o\u011fu art\u0131k Rust veya Go gibi memory-safe dillerde yaz\u0131l\u0131yor. Rust \u00f6zelinde memory safety dilin kritik bir \u00f6zelli\u011fidir. Mevcut kod i\u00e7in s\u0131k\u0131 compiler flag\u2019leri, strong typing, static code analysis ve fuzz testing; memory leak\u2019leri, memory ve array overrun\u2019lar\u0131 ve daha fazlas\u0131n\u0131 tespit etmede faydal\u0131 olabilir.</p> </li> <li> <p>\u00d6rnek sald\u0131r\u0131 senaryolar\u0131. Buffer ve heap overflow\u2019lar y\u0131llard\u0131r sald\u0131rganlar\u0131n temel ara\u00e7lar\u0131ndan olmu\u015ftur. Sald\u0131rgan, verisini bir programa g\u00f6nderir; program bu veriyi boyutu yetersiz bir stack buffer\u2019a yazar. Sonu\u00e7 olarak call stack \u00fczerindeki bilgiler, fonksiyonun return pointer\u2019\u0131 dahil, overwrite edilir. Veri, return pointer\u2019\u0131n de\u011ferini \u00f6yle ayarlar ki fonksiyon d\u00f6nd\u00fc\u011f\u00fcnde kontrol, sald\u0131rgan\u0131n verisinin i\u00e7inde bulunan k\u00f6t\u00fc niyetli koda aktar\u0131l\u0131r.</p> </li> <li> <p>Referanslar</p> </li> <li> <p>OWASP Vulnerabilities: Buffer Overflow</p> </li> <li>OWASP Attacks: Buffer Overflow</li> <li>Science Direct: Integer Overflow</li> </ul>"},{"location":"ar/","title":"\u0645\u0642\u062f\u0645\u0629","text":""},{"location":"ar/#2021","title":"\u0645\u0631\u062d\u0628\u0627\u064b \u0628\u0643\u0645 \u0641\u064a \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0644\u0639\u0627\u0645 2021","text":"<p>\u0645\u0631\u062d\u0628\u064b\u0627 \u0628\u0643\u0645 \u0641\u064a \u0623\u062d\u062f\u062b \u0625\u0635\u062f\u0627\u0631 \u0645\u0646 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0645\u0646 \u0645\u0646\u0638\u0645\u0629 \u0623\u0648\u0627\u0633\u0628 \u0648\u0647\u064a \u0627\u0644\u0646\u0633\u062e\u0629 \u0627\u0644\u062d\u062f\u064a\u062b\u0629 \u0644\u0639\u0627\u0645 2021\u060c \u0648\u0627\u0644\u062a\u064a \u062a\u0623\u062a\u064a \u0628\u0634\u0643\u0644 \u062c\u062f\u064a\u062f \u062a\u0645\u0627\u0645\u064b\u0627 \u0648\u0645\u062f\u0639\u0645\u0629 \u0628\u0631\u0633\u0648\u0645\u0627\u062a \u0627\u0646\u0641\u0648\u062c\u0631\u0627\u0641\u064a\u0643 \u0627\u0644\u062a\u064a \u062a\u0633\u062a\u0637\u064a\u0639 \u0637\u0628\u0627\u0639\u062a\u0647\u0627 \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 \u0648\u064a\u0645\u0643\u0646 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u064a\u0647\u0627 \u0645\u0646 \u0635\u0641\u062d\u062a\u0646\u0627 \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629.</p> <p>\u0643\u0645\u0627 \u0646\u062a\u0642\u062f\u0645 \u0628\u062c\u0632\u064a\u0644 \u0627\u0644\u0634\u0643\u0631 \u0648\u0627\u0644\u0639\u0631\u0641\u0627\u0646 \u0644\u0643\u0644\u0651 \u0645\u0646 \u0633\u0627\u0647\u0645 \u0628\u0641\u0643\u0631\u0629\u060c \u0623\u0648 \u0648\u0642\u062a\u060c \u0623\u0648 \u062c\u0647\u062f \u0641\u064a \u0633\u0628\u064a\u0644 \u0625\u0646\u062c\u0627\u062d \u0647\u0630\u0627 \u0627\u0644\u0639\u0645\u0644\u060c \u0645\u0645\u062a\u0646\u0651\u0648\u0646 \u0644\u0645\u0627 \u0628\u0630\u0644\u062a\u0645\u0648\u0647\u060c \u0648\u0644\u0645\u0627 \u062d\u0642\u0651\u0642\u0646\u0627\u0647 \u0628\u0641\u0636\u0644 \u0627\u0644\u0644\u0647 \u062b\u0645 \u0628\u0645\u0633\u0627\u0639\u062f\u062a\u0643\u0645 \u0648\u062f\u0639\u0645\u0643\u0645..</p>"},{"location":"ar/#2021_1","title":"\u0645\u0627 \u0647\u064a \u0627\u0644\u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0627\u0644\u062a\u064a \u0637\u0631\u0623\u062a \u0639\u0644\u0649 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0644\u0639\u0627\u0645 2021","text":"<p>\u0628\u0634\u0643\u0644 \u0639\u0627\u0645 \u062a\u0645 \u0625\u0636\u0627\u0641\u0629 3 \u062a\u0635\u0646\u064a\u0641\u0627\u062a \u062c\u062f\u064a\u062f\u0629 \u0648 4 \u062a\u0635\u0646\u064a\u0641\u0627\u062a \u060c \u062a\u0645 \u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0627\u0633\u0645 \u0648\u0643\u0630\u0644\u0643 \u0627\u0644\u0646\u0637\u0627\u0642 \u0627\u0644\u062e\u0627\u0635 \u0628\u0647\u0627\u060c \u0648\u0628\u0639\u0636 \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062f\u0645\u062c \u0627\u0644\u062a\u064a \u062a\u0623\u062a\u064a \u0645\u0639  \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0644\u0639\u0627\u0645 2021</p> <p></p> <p>A01:2021-\u062a\u062e\u0637\u064a \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0648\u0635\u0648\u0644\u0627\u062d\u062a\u0644 (\u062a\u062e\u0637\u064a \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0648\u0635\u0648\u0644) \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0627\u0644\u0623\u0648\u0644\u0649 \u0628\u0639\u062f \u0623\u0646 \u0643\u0627\u0646 \u0641\u064a \u0627\u0644\u062a\u0631\u062a\u064a\u0628 \u0627\u0644\u062e\u0627\u0645\u0633\u060c \u062d\u064a\u062b \u0623\u0646\u0647 \u062a\u0645 \u0625\u062c\u0631\u0627\u0621 \u0627\u062e\u062a\u0628\u0627\u0631 \u0644\u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 \u0648\u0643\u0627\u0646\u062a \u0627\u0644\u0646\u0633\u0628\u0629 \u0647\u064a 94% \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0645\u0635\u0627\u0628\u0647 \u0628\u062a\u062e\u0637\u064a \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0646 \u062a\u062e\u0637\u064a \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0648\u0635\u0648\u0644 \u0648\u0627\u0644\u0645\u0631\u062a\u0628\u0637 \u0628\u0640 34 CWEs \u0647\u0648 \u0645\u0646 \u0623\u0643\u062b\u0631 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u062d\u062f\u062b \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a. </p> <p>A02:2021-\u0641\u0634\u0644 \u0622\u0644\u064a\u0629 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u064a\u0623\u062a\u064a \u0641\u0634\u0644 \u0622\u0644\u064a\u0629 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0641\u064a \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0631\u0642\u0645 #2 \u0648\u0627\u0644\u062a\u064a \u0643\u0627\u0646\u062a \u062a\u0639\u0631\u0641 \u0628\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0627\u0644\u063a\u064a\u0631 \u0645\u062d\u0645\u064a\u0629 \u0623\u0648 \u0627\u0644\u0645\u0643\u0634\u0648\u0641\u0629\u060c \u0648\u0627\u0644\u062a\u064a \u0642\u062f \u062a\u0643\u0648\u0646 \u0623\u0633\u0628\u0627\u0628\u0647\u0627 \u0645\u062a\u0639\u062f\u062f\u0629 \u062f\u0648\u0646 \u0623\u0646 \u062a\u0639\u0648\u062f \u062c\u0645\u064a\u0639\u0647\u0627 \u0644\u0633\u0628\u0628 \u062c\u0630\u0631\u064a \u0648\u0627\u062d\u062f\u060c \u0648\u064a\u0623\u062a\u064a \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0647\u0646\u0627 \u0628\u0634\u0643\u0644 \u0645\u062a\u062c\u062f\u062f \u0639\u0644\u0649 \u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0641\u0634\u0644 \u0641\u064a \u0627\u0644\u0637\u0631\u0642 \u0627\u0644\u0645\u062a\u0639\u0644\u0642\u0629 \u0628\u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0648\u0627\u0644\u062a\u064a \u063a\u0627\u0644\u0628\u064b\u0627 \u0645\u0627 \u062a\u0624\u062f\u064a \u0625\u0644\u0649 \u0643\u0634\u0641 \u063a\u064a\u0631 \u0645\u0635\u0631\u0651\u062d \u0628\u0647 \u0625\u0644\u0649 \u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0633\u0627\u0633\u0629 \u0623\u0648 \u0627\u062e\u062a\u0631\u0627\u0642 \u0627\u0644\u0623\u0646\u0638\u0645\u0629. </p> <p>A03:2021-\u0627\u0644\u062d\u0642\u0646 \u062a\u062a\u0631\u0627\u062c\u0639 \u0627\u0644\u062d\u0642\u0646 \u0627\u0644\u0649 \u0627\u0644\u062e\u0637\u0631 \u0631\u0642\u0645 3. \u062d\u064a\u062b \u0627\u0646\u0647 \u062a\u0645 \u0627\u062c\u0631\u0627\u0621 \u0627\u062e\u062a\u0628\u0627\u0631 \u0644\u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 \u0648\u0643\u0627\u0646\u062a \u0627\u0644\u0646\u0633\u0628\u0629 \u0647\u064a 94% \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0645\u0635\u0627\u0628\u0647 \u0628\u062b\u063a\u0631\u0627\u062a \u0627\u0644\u062d\u0642\u0646. \u0627\u0646 \u062b\u063a\u0631\u0629 \u0627\u0644\u062d\u0642\u0646 \u0648\u0627\u0644\u0645\u0631\u062a\u0628\u0637\u0629 \u0628\u0640 33 CWEs \u062a\u0639\u062a\u0628\u0631 \u062b\u0627\u0646\u064a \u0627\u0639\u0644\u0649 \u062b\u063a\u0631\u0629 \u0645\u0646 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0627\u0644\u062a\u064a \u0645\u0646 \u0627\u0644\u0645\u0645\u0643\u0646 \u0625\u0635\u0627\u0628\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0628\u0647\u0627. \u0648\u0627\u0644\u062c\u062f\u064a\u0631 \u0628\u0627\u0644\u0630\u0643\u0631 \u0627\u0646 \u062b\u063a\u0631\u0627\u062a XSS \u062a\u0645 \u062f\u0645\u062c\u0647\u0627 \u0647\u0646\u0627 \u0645\u0639 \u062b\u063a\u0631\u0629 \u0627\u0644\u062d\u0642\u0646 \u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u0646\u0633\u062e\u0629.</p> <p>A04:2021- \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646 \u0647\u0648 \u062a\u0635\u0646\u064a\u0641 \u062c\u062f\u064a\u062f \u062a\u0645\u062a \u0625\u0636\u0627\u0641\u062a\u0647 \u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u0646\u0633\u062e\u0629 \u0644\u0639\u0627\u0645 2021\u060c \u0648\u0627\u0644\u062a\u064a \u062a\u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u0645\u062a\u0639\u0644\u0642\u0629 \u0628\u0639\u064a\u0648\u0628 \u0648\u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u062a\u0635\u0645\u064a\u0645. \u0648\u0625\u0630\u0627 \u0623\u0631\u062f\u0646\u0627 \u0627\u0644\u062a\u062d\u0631\u0643 \u0644\u0625\u062b\u0628\u0627\u062a \u0623\u0647\u0645\u064a\u0629 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u0622\u0645\u0646 \u0641\u0646\u062d\u0646 \u0628\u062d\u0627\u062c\u0629 \u0625\u0644\u0649 \u0646\u0645\u0630\u062c\u0629 \u0627\u0644\u062a\u0647\u062f\u064a\u062f\u0627\u062a \u0648\u0637\u0631\u0642 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u0622\u0645\u0646\u0629 \u0648\u0643\u0630\u0644\u0643 \u0648\u062c\u0648\u062f \u0628\u0646\u064a\u0629 \u062a\u062d\u062a\u064a\u0629 \u0645\u0628\u0646\u064a\u0629 \u0639\u0644\u0649 \u0623\u0641\u0636\u0644 \u0627\u0644\u0645\u0631\u0627\u062c\u0639 \u0648\u0627\u0644\u0636\u0648\u0627\u0628\u0637. </p> <p>A05:2021- \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0627\u0644\u062e\u0627\u0637\u0626\u0629 \u0628\u0639\u062f \u0623\u0646 \u0643\u0627\u0646 \u0647\u0648 \u0627\u0644\u062e\u0637\u0631 \u0631\u0642\u0645 #6 \u0627\u0644\u0622\u0646 \u0646\u0631\u0627\u0647 \u0641\u064a \u0627\u0644\u0645\u0631\u062a\u0628\u0629 #4\u060c \u062d\u064a\u062b \u0623\u0646\u0647 \u062a\u0645 \u0625\u062c\u0631\u0627\u0621 \u0627\u062e\u062a\u0628\u0627\u0631 \u0644\u0646\u0642\u0627\u0637  \u0627\u0644\u0636\u0639\u0641 \u0648\u0643\u0627\u0646\u062a \u0627\u0644\u0646\u0633\u0628\u0629 \u0647\u064a 90% \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u064a\u0648\u062c\u062f \u0628\u0647\u0627 \u0623\u062e\u0637\u0627\u0621 \u0641\u064a \u0637\u0631\u064a\u0642\u0629 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u0635\u062d\u064a\u062d\u0629. \u0648\u0647\u0630\u0627 \u064a\u062d\u062f\u062b \u0645\u0639 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0627\u0644\u062d\u062f\u064a\u062b\u0629 \u0648\u0627\u0644\u062a\u064a \u062a\u0633\u062a\u0644\u0632\u0645 \u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631 \u0645\u0645\u0627 \u064a\u062c\u0639\u0644 \u0646\u0633\u0628\u0629 \u0627\u0644\u062e\u0637\u0623 \u0641\u064a \u0627\u0631\u062a\u0641\u0627\u0639\u060c \u0648\u0647\u0630\u0627 \u0627\u0644\u0630\u064a \u062c\u0639\u0644 (\u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062e\u0627\u0637\u0626\u0629) \u062a\u0631\u062a\u0641\u0639 \u0645\u0646 \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0627\u0644\u0633\u0627\u062f\u0633\u0629 \u0625\u0644\u0649 \u0627\u0644\u0631\u0627\u0628\u0639\u0629. \u0648\u0627\u0644\u062c\u062f\u064a\u0631 \u0628\u0627\u0644\u0630\u0643\u0631 \u0623\u0646\u0647 \u062a\u0645 \u0636\u0645 \" XML External Entities XXE\" \u0644\u0647\u0630\u0627 \u0627\u0644\u0646\u0648\u0639 \u0645\u0646 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062e\u0627\u0637\u0626\u0629.</p> <p>A06:2021-\u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0648 \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u063a\u064a\u0631 \u0627\u0644\u0645\u062d\u062f\u062b\u0629 \u0633\u0627\u0628\u0642\u064b\u0627 \u0643\u0627\u0646\u062a \u062a\u0639\u0631\u0641 \u0628\u0640 \u201c\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0648\u0627\u0644\u0645\u0646\u062a\u062c\u0627\u062a \u0630\u0627\u062a \u062b\u063a\u0631\u0627\u062a \u0645\u0639\u0631\u0648\u0641\u0629\". \u0648\u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0639\u0644\u0649 \u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0641\u064a \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a  \u0643\u0627\u0646\u062a \u0647\u064a #2 \u0623\u0639\u0644\u0649 \u062b\u063a\u0631\u0629 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u062e\u0637\u0631 \u0627\u0644\u0645\u0646\u062a\u062c\u0627\u062a. \u0648\u0645\u0646 \u062e\u0644\u0627\u0644 \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0628\u0639\u062f \u0623\u0646 \u0643\u0627\u0646\u062a \u0647\u064a \u0627\u0644\u062e\u0637\u0631 \u0631\u0642\u0645 #9 \u0641\u064a \u0627\u0644\u0625\u0635\u062f\u0627\u0631 \u0627\u0644\u0633\u0627\u0628\u0642 \u0644\u0639\u0627\u0645 #2017 \u0627\u0631\u062a\u0641\u0639\u062a \u0641\u064a \u0625\u0635\u062f\u0627\u0631 #2021 \u0625\u0644\u0649 \u0627\u0644\u062e\u0637\u0631 \u0631\u0642\u0645 #6. \u0648\u0639\u0646\u062f \u0627\u0644\u0646\u0638\u0631 \u0625\u0644\u0649 \u0645\u0639\u0627\u064a\u064a\u0631 CVEs \u0623\u0648 CWEs \u0644\u0627 \u0646\u0631\u0649 \u0644\u0647\u0627 \u0623\u064a \u062a\u0635\u0646\u064a\u0641 \u0628\u0627\u0644\u062e\u0637\u0648\u0631\u0629. \u0648\u0644\u0630\u0644\u0643 \u064a\u062a\u0645 \u062a\u0635\u0646\u064a\u0641 \u062e\u0637\u0648\u0631\u062a\u0647\u0627 \u0628\u0634\u0643\u0644 \u0627\u0641\u062a\u0631\u0627\u0636\u064a \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0648\u0647\u0648 5.0.</p> <p>A07:2021-\u0627\u0644\u0647\u0648\u064a\u0629 \u0648 \u0641\u0634\u0644 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u062d\u0642\u0642 \u0648\u0627\u0644\u062a\u064a \u0643\u0627\u0646\u062a \u062a\u0639\u0631\u0641 \u0641\u064a \u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0627\u0644\u0633\u0627\u0628\u0642\u0629 \"\u0636\u0639\u0641 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0647\u0648\u064a\u0629\" \u0648\u0628\u0639\u062f \u0623\u0646 \u0643\u0627\u0646\u062a \u0643\u0630\u0644\u0643 \u0647\u064a \u0627\u0644\u062e\u0637\u0631 \u0631\u0642\u0645 #2. \u0648\u0628\u0639\u062f \u0639\u0645\u0644\u064a\u0629 \u0631\u0628\u0637\u0647\u0627 \u0645\u0639 \u0625\u0637\u0627\u0631 CWEs \u0648\u062a\u0633\u0645\u064a\u062a\u0647\u0627 \u0628\u0640 \u201c\u0641\u0634\u0644 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u062d\u0642\u0642. \u0648\u0643\u0645\u0627 \u0646\u0642\u0648\u0644 \u0623\u0646 \u0632\u064a\u0627\u062f\u0629 \u0627\u0644\u0645\u0639\u0627\u064a\u064a\u0631 \u0623\u062f\u0651\u062a \u0625\u0644\u0649 \u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0648\u0644\u0643\u0646 \u0644\u064a\u0633 \u0628\u0634\u0643\u0644 \u0643\u0627\u0645\u0644 \u0644\u0630\u0644\u0643 \u0646\u0631\u0627\u0647\u0627 \u0647\u0646\u0627 \u0645\u0646 \u0636\u0645\u0646 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631.</p> <p>A08:2021- \u0641\u0634\u0644 \u0633\u0644\u0627\u0645\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u062a\u0645\u062a \u0625\u0636\u0627\u0641\u062a\u0647\u0627 \u062d\u062f\u064a\u062b\u064b\u0627 \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0625\u0635\u062f\u0627\u0631 2021. \u0648\u0627\u0644\u062a\u064a \u062a\u0631\u0643\u0651\u0632 \u0628\u0634\u0643\u0644 \u0643\u0628\u064a\u0631 \u0639\u0644\u0649 \u062a\u062d\u062f\u064a\u062b  \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0648\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0639 \u0627\u0644\u062a\u0623\u0643\u062f \u0639\u0644\u0649 \u0639\u062f\u0645 \u062a\u0623\u062b\u0631 \u0633\u0644\u0627\u0645\u0629 \u062f\u0648\u0631\u0629 \u062d\u064a\u0627\u0629 CI/CD. \u0648\u0639\u0646\u062f \u0627\u0644\u0646\u0638\u0631 \u0625\u0644\u0649 \u062a\u0642\u064a\u064a\u0645 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u0645\u062d\u062a\u0645\u0644\u0629 \u062d\u0633\u0628 \u062a\u0635\u0646\u064a\u0641 CVE/CVSS \u0648\u0627\u0631\u062a\u0628\u0627\u0637\u0647\u0627 \u0645\u0639 CWEs \u0646\u062c\u062f \u0623\u0646 \u062a\u0642\u064a\u064a\u0645 \u0627\u0644\u062e\u0637\u0631 \u0647\u0648 10 \u0648\u064a\u0639\u062a\u0628\u0631 \u0645\u0631\u062a\u0641\u0639 \u062c\u062f\u064b\u0627. \u0627\u0644\u062c\u062f\u064a\u0631 \u0628\u0627\u0644\u0630\u0643\u0631 \u0623\u0646 \"Insecure Deserialization\" \u0623\u0635\u0628\u062d\u062a \u062c\u0632\u0621 \u0645\u0646 \u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641. </p> <p>A09:2021-\u0641\u0634\u0644 \u0641\u064a \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0633\u062c\u0644\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0648\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u0627\u0644\u062a\u064a \u0643\u0627\u0646\u062a \u062a\u0639\u0631\u0641 \u0633\u0627\u0628\u0642\u064b\u0627 \u0628\u0640 \u201c\u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0648\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0628\u0634\u0643\u0644 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d. \u0648\u0628\u0639\u062f \u0639\u0645\u0644 \u0627\u0644\u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u062c\u0631\u0627\u0621\u0647\u0627 \u0641\u064a \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u062d\u062a\u0644\u062a \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0631\u0642\u0645 3 \u0641\u064a \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u0627\u0633\u062a\u0637\u0644\u0627\u0639. \u0648\u0627\u0644\u0630\u064a \u062c\u0639\u0644\u0647\u0627 \u062a\u0635\u0639\u062f \u0645\u0631\u062a\u0628\u0629 \u0648\u0627\u062d\u062f\u0629 \u0628\u0639\u062f \u0623\u0646 \u0643\u0627\u0646\u062a \u0641\u064a \u0627\u0644\u0645\u0631\u062a\u0628\u0629 10. \u0627\u0644\u062c\u062f\u064a\u0631 \u0628\u0627\u0644\u0630\u0643\u0631 \u0623\u0646 \u0647\u0646\u0627\u0643 \u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0641\u0634\u0644 \u0627\u0644\u062a\u064a \u062a\u062d\u062f\u062b \u0641\u064a \u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u062a\u064a \u062a\u0645 \u0636\u0645\u0647\u0627 \u0647\u0646\u0627.  \u0648\u062d\u064a\u0646\u0645\u0627 \u0646\u0631\u0649 CVE/CVSS \u0644\u0627 \u0646\u0631\u0649 \u0644\u0647\u0627 \u0623\u064a \u062a\u0635\u0646\u064a\u0641 \u0648\u0627\u0636\u062d \u0648\u0644\u0643\u0646 \u0645\u0639 \u0627\u0644\u0642\u0635\u0648\u0631 \u0641\u064a \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0648\u0627\u0644\u062a\u064a \u062a\u0634\u0643\u0644 \u062a\u0623\u062b\u064a\u0631\u064b\u0627 \u0628\u0627\u0644\u063a\u064b\u0627 \u0641\u064a \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0623\u0646\u0638\u0645\u0629\u060c \u0648\u0627\u0644\u062a\u0646\u0628\u064a\u0647 \u0641\u064a \u062d\u0627\u0644 \u0648\u062c\u0648\u062f \u062d\u0648\u0627\u062f\u062b \u0623\u0648 \u0627\u0644\u0627\u0633\u062a\u0641\u0627\u062f\u0629 \u0645\u0646\u0647\u0627 \u0641\u064a \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062a\u062d\u0642\u064a\u0642 \u0627\u0644\u062c\u0646\u0627\u0626\u064a \u0627\u0644\u0631\u0642\u0645\u064a.</p> <p>A10:2021-\u062a\u0632\u0648\u064a\u0631 \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0645\u0646 \u062c\u0627\u0646\u0628 \u0627\u0644\u062e\u0627\u062f\u0645 SSRF \u062a\u0645 \u0625\u0636\u0627\u0641\u0629 \u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0631\u0642\u0645 #1. \u0648\u062a\u0638\u0647\u0631 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0633\u0628 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u0625\u062c\u0631\u0627\u0624\u0647\u0627 \u0623\u0646 \u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0645\u0639\u062f\u0644 \u0627\u0644\u0625\u0635\u0627\u0628\u0629 \u0628\u0647 \u0641\u0648\u0642 \u0627\u0644\u0645\u062a\u0648\u0633\u0637 \u0645\u0639 \u0627\u0631\u062a\u0641\u0627\u0639 \u0645\u0646\u062e\u0641\u0636. \u0648\u0645\u062f\u0649 \u0627\u0631\u062a\u0628\u0627\u0637\u0647 \u0628\u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0648\u0625\u0645\u0643\u0627\u0646\u064a\u0629 \u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644. \u0648\u064a\u0641\u064a\u062f \u0627\u0644\u0645\u062e\u062a\u0635\u064a\u0646 \u0641\u064a \u0627\u0644\u0645\u062c\u0627\u0644 \u0623\u0646 \u0648\u062c\u0648\u062f \u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0645\u0646 \u0636\u0645\u0646 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0647\u0648 \u0623\u0645\u0631 \u0645\u0647\u0645 \u062c\u062f\u064b\u0627 \u062d\u062a\u0649 \u0648\u0625\u0646 \u0643\u0627\u0646\u062a \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0627\u0644\u064a\u0629 \u063a\u064a\u0631 \u0645\u0643\u062a\u0645\u0644\u0629 \u0641\u064a \u0627\u0644\u0648\u0642\u062a \u0627\u0644\u062d\u0627\u0644\u064a.</p>"},{"location":"ar/#_2","title":"\u0627\u0644\u0645\u0646\u0647\u062c\u064a\u0629","text":"<p>\u0644\u0623\u0648\u0644 \u0645\u0631\u0629 \u064a\u062a\u0645 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0641\u064a \u062a\u0635\u0646\u064a\u0641 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0648\u064a\u062c\u0628 \u0627\u0644\u062a\u0646\u0648\u064a\u0647 \u0623\u0646\u0647\u0627 \u0644\u0627 \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u0634\u0643\u0644 \u0643\u064f\u0644\u064a. \u062d\u064a\u062b \u062a\u0645 \u0627\u062e\u062a\u064a\u0627\u0631 \u062b\u0645\u0627\u0646\u064a\u0629 \u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0645\u0646 \u0623\u0635\u0644 \u0639\u0634\u0631\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u062b\u0646\u064a\u0646 \u0645\u0646\u0647\u0645 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0627\u0644\u0630\u064a \u062a\u0645 \u0625\u062c\u0631\u0627\u0624\u0647 \u0641\u064a \u0646\u0637\u0627\u0642 \u0627\u0644\u0645\u062e\u0627\u0637\u0631. \u0648\u062a\u0642\u0648\u0645 \u0645\u0646\u0638\u0645\u0629 \u0623\u0648\u0627\u0633\u0628 \u0628\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0633\u0627\u0628\u0642\u0629 \u0623\u0643\u062b\u0631  \u0645\u0646 \u0623\u064a \u0645\u0635\u0627\u062f\u0631 \u0623\u062e\u0631\u0649 \u0648\u0630\u0644\u0643 \u0628\u0633\u0628\u0628 \u0623\u0646 \u0627\u0644\u0628\u0627\u062d\u062b\u064a\u0646 \u0641\u064a \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u064a\u0633\u062a\u063a\u0631\u0642\u0648\u0646 \u0648\u0642\u062a \u0648\u062c\u0647\u062f \u0643\u0628\u064a\u0631 \u0641\u064a \u0625\u064a\u062c\u0627\u062f \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0623\u0648 \u0637\u0631\u0642 \u062c\u062f\u064a\u062f\u0629 \u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644\u0647\u0627. \u0645\u0645\u0627 \u064a\u062c\u0639\u0644 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0646\u062a\u0627\u0626\u062c \u0648\u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0648\u0627\u0644\u0637\u0631\u0642 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u064a\u0633\u062a\u063a\u0631\u0642 \u0648\u0642\u062a \u0623\u0643\u0628\u0631 \u0648\u0642\u062f \u062a\u0635\u0644 \u0625\u0644\u0649 \u0633\u0646\u0648\u0627\u062a. \u0648\u0644\u062a\u062d\u0642\u064a\u0642 \u0627\u0644\u062a\u0648\u0627\u0632\u0646 \u0642\u0645\u0646\u0627 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0639\u0644\u0649 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u062a\u064a \u062a\u0633\u062a\u0647\u062f\u0641 \u0635\u0646\u0627\u0639\u0629 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u0642\u0645\u0646\u0627 \u0628\u062a\u0648\u062c\u064a\u0647 \u0623\u0633\u0626\u0644\u0629 \u0644\u0644\u0645\u062e\u062a\u0635\u0651\u064a\u0646 \u0641\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 \u0627\u0644\u062a\u064a \u0642\u062f \u0644\u0627 \u062a\u0638\u0647\u0631\u0647\u0627 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.</p> <p>\u0648\u0643\u0645\u0627 \u0623\u0646 \u0647\u0646\u0627\u0643 \u0628\u0639\u0636 \u0627\u0644\u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0627\u0644\u062c\u0648\u0647\u0631\u064a\u0629 \u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u0639\u062a\u0645\u0627\u062f\u0647\u0627 \u0645\u0646 \u0642\u0628\u0644 \u0645\u0646\u0638\u0645\u0629 \u0623\u0648\u0627\u0633\u0628 \u0644\u0645\u0648\u0627\u0635\u0644\u0629 \u0627\u0644\u0645\u0646\u0647\u062c\u064a\u0629 \u0627\u0644\u0645\u062a\u0651\u0628\u0639\u0629 \u0641\u064a \u062a\u0635\u0646\u064a\u0641 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631. </p>"},{"location":"ar/#_3","title":"\u0643\u064a\u0641 \u064a\u062a\u0645 \u062a\u0646\u0638\u064a\u0645 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a","text":"<p>\u062a\u0645 \u062a\u063a\u064a\u064a\u0631 \u0628\u0639\u0636 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0645\u0646 \u0627\u0644\u0625\u0635\u062f\u0627\u0631 \u0627\u0644\u0633\u0627\u0628\u0642 \u0644\u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631 \u0648\u0647\u0646\u0627 \u0645\u0644\u062e\u0635 \u0644\u0645\u0627 \u062a\u0645 \u062a\u063a\u064a\u0631\u0647 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a</p> <p>\u062a\u0631\u0643\u0632 \u0627\u0644\u062c\u0647\u0648\u062f \u0627\u0644\u0645\u0628\u0630\u0648\u0644\u0629 \u0641\u064a \u062c\u0645\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0644\u0649 \u0645\u062c\u0645\u0648\u0639\u0627\u062a \u0641\u0631\u0639\u064a\u0629 \u0645\u0646 CWEs \u0628\u0639\u062f\u062f 30 \u0645\u062c\u0627\u0644 \u0645\u0639 \u0627\u0644\u0627\u062e\u0630 \u0628\u0627\u0644\u0627\u0639\u062a\u0628\u0627\u0631 \u0627\u0646 \u0628\u0639\u0636 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0627\u0644\u0641\u0631\u0639\u064a\u0629 \u062a\u062d\u062a\u0627\u062c \u0627\u0644\u0649 \u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0646\u062a\u0627\u0626\u062c \u0625\u0636\u0627\u0641\u064a\u0629. \u0644\u0630\u0644\u0643 \u0642\u0631\u0651\u0631\u062a \u0627\u0644\u0645\u0646\u0638\u0645\u0629 \u0623\u0646\u0647\u0627 \u0633\u062a\u0642\u0648\u0645 \u0628\u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 30 \u062a\u0635\u0646\u064a\u0641 \u0645\u0646 CWEs \u0628\u0634\u0643\u0644 \u0623\u0633\u0627\u0633\u064a \u0648\u0642\u062f \u064a\u062a\u0637\u0644\u0651\u0628 \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u0623\u062d\u064a\u0627\u0646 \u0627\u0644\u0646\u0638\u0631 \u0641\u064a \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0627\u0644\u0645\u062a\u0641\u0631\u0639\u0629 \u0645\u0646\u0647\u0627 \u0648\u0633\u064a\u0643\u0648\u0646 \u0641\u064a \u0646\u0637\u0627\u0642 \u0645\u062d\u062f\u0648\u062f \u0648\u0636\u064a\u0651\u0642. \u0648\u062a\u0628\u0639\u064b\u0627 \u0644\u0644\u0625\u062c\u0631\u0627\u0621\u0627\u062a \u0627\u0644\u0645\u0639\u062a\u0627\u062f\u0629 \u0642\u0645\u0646\u0627 \u0628\u0637\u0644\u0628 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0628\u062f\u0648\u0646 \u0623\u064a \u0642\u064a\u0648\u062f \u0639\u0644\u0649 CWEs. \u0648\u0642\u0645\u0646\u0627 \u0628\u0637\u0644\u0628 \u0639\u062f\u062f \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u062e\u062a\u0628\u0627\u0631\u0647\u0627 \u0644\u0633\u0646\u0648\u0627\u062a \u0645\u062d\u062f\u062f\u0629 (\u0628\u062f\u0621\u064b\u0627 \u0645\u0646 \u0639\u0627\u0645 2017)\u060c \u0648 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u062a\u0642\u064a\u064a\u0645\u0647\u0627 \u0628\u0625\u0635\u0627\u0628\u062a\u0647\u0627 \u0628\u0623\u062d\u062f CWEs \u0639\u0644\u0649 \u0627\u0644\u0623\u0642\u0644. \u0648\u062a\u0633\u0645\u062d \u0644\u0646\u0627 \u0647\u0630\u0647 \u0627\u0644\u0637\u0631\u064a\u0642\u0629 \u0645\u0639\u0631\u0641\u0629 \u0645\u062f\u0649 \u0627\u0631\u062a\u0628\u0627\u0637 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0628\u062a\u0635\u0646\u064a\u0641\u0627\u062a CWEs. \u0645\u0639 \u0627\u0644\u0623\u062e\u0630 \u0628\u0639\u064a\u0646 \u0627\u0644\u0627\u0639\u062a\u0628\u0627\u0631 \u0623\u0646\u0646\u0627 \u062a\u062c\u0627\u0647\u0644\u0646\u0627 \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0644\u0623\u0633\u0628\u0627\u0628 \u0645\u0639\u064a\u0651\u0646\u0629\u060c \u0648\u0623\u0646 \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u062d\u0627\u0644\u0627\u062a \u064a\u0643\u0648\u0646 \u0636\u0631\u0648\u0631\u064a\u064b\u0627 \u0627\u0644\u0623\u062e\u0630 \u0628\u0647 \u0648\u0627\u0644\u0630\u064a \u0642\u062f \u064a\u0624\u062b\u0631 \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u0623\u062d\u064a\u0627\u0646 \u0641\u064a \u062d\u0627\u0644 \u0643\u0627\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0646\u062a\u0634\u0631 \u0648\u0645\u0634\u0647\u0648\u0631 \u0648\u0645\u0633\u062a\u062e\u062f\u0645 \u0628\u0643\u062b\u0631\u0629. \u0648\u0627\u0644\u062c\u062f\u064a\u0631 \u0628\u0627\u0644\u0630\u0643\u0631 \u0623\u0646 \u0645\u0647\u0645\u0627 \u0643\u0627\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0635\u0627\u0628 \u0628\u0640 4 \u0645\u0646 CWEs \u0623\u0648 4,000 \u0641\u0647\u0630\u0627 \u0644\u0627 \u064a\u0624\u062b\u0631 \u0639\u0644\u0649 \u0622\u0644\u064a\u0629 \u0627\u062d\u062a\u0633\u0627\u0628 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0644\u062f\u064a\u0646\u0627. \u0648\u0644\u0642\u062f \u0643\u0627\u0646 \u0644\u062f\u064a\u0646\u0627 \u062d\u0648\u0627\u0644\u064a 400 CWEs \u062a\u0642\u0631\u064a\u0628\u064b\u0627 \u0648\u0642\u0645\u0646\u0627 \u0628\u062d\u0635\u0631\u0647\u0627 \u0648\u062a\u0642\u0644\u064a\u0644\u0647\u0627 \u0625\u0644\u0649 30 CWEs \u0648\u0630\u0644\u0643 \u0645\u0646 \u062e\u0644\u0627\u0644 \u062a\u062d\u0644\u064a\u0644 \u0645\u062c\u0645\u0648\u0639\u0629 \u0645\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \u0648\u0643\u0645\u0627 \u0646\u062e\u0637\u0637 \u0641\u064a \u0627\u0644\u0645\u0633\u062a\u0642\u0628\u0644 \u0641\u064a \u0625\u062c\u0631\u0627\u0621 \u062a\u062d\u0644\u064a\u0644\u0627\u062a \u0625\u0636\u0627\u0641\u064a\u0629 \u0648\u0627\u0644\u062a\u064a \u0628\u062f\u0648\u0631\u0647\u0627 \u0633\u062a\u0646\u0639\u0643\u0633 \u0639\u0644\u0649 \u0625\u0636\u0627\u0641\u0629 \u0628\u0639\u0636 \u0645\u0646 CWEs \u0648\u0642\u062f \u064a\u0643\u0648\u0646 \u0647\u0646\u0627\u0643 \u062a\u063a\u064a\u064a\u0631 \u0643\u0630\u0644\u0643 \u0639\u0644\u0649 \u0647\u064a\u0643\u0644\u0629 \u0648\u062a\u0635\u0646\u064a\u0641 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631.</p> <p>\u0644\u0642\u062f \u0623\u0645\u0636\u064a\u0646\u0627 \u0639\u062f\u0629 \u0623\u0634\u0647\u0631 \u0641\u064a \u062a\u062c\u0645\u064a\u0639 \u0648\u062a\u0635\u0646\u064a\u0641 CWEs \u0648\u0643\u0627\u0646 \u0645\u0646 \u0627\u0644\u0645\u0645\u0643\u0646 \u0623\u0646 \u0646\u0633\u062a\u0645\u0631 \u0644\u0623\u0634\u0647\u0631 \u0625\u0636\u0627\u0641\u064a\u0629. \u0648\u0644\u0643\u0646 \u0643\u0627\u0646 \u0639\u0644\u064a\u0646\u0627 \u0627\u0644\u062a\u0648\u0642\u0641 \u0639\u0646\u062f \u0646\u0642\u0637\u0629 \u0645\u0627. \u0643\u0645\u0627 \u0623\u0646 \u0647\u0646\u0627\u0643 \u0623\u0646\u0648\u0627\u0639 \u0641\u064a CWEs \u0645\u0627 \u064a\u0633\u0645\u0649 \u0628\u0640 \u201c\u0633\u0628\u0628 \u062c\u0630\u0631\u064a\" \u0648 \"\u0627\u0644\u0623\u0639\u0631\u0627\u0636\". \u0648\u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644 \u0639\u0644\u0649 \"\u0633\u0628\u0628 \u062c\u0630\u0631\u064a\" \u0643\u0641\u0634\u0644 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0623\u0648 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062e\u0627\u0637\u0626\u0629 \u0648\u0627\u0644\u0630\u064a \u064a\u062a\u0645 \u0625\u0642\u0631\u0627\u0646\u0647 \u0628\u0627\u0644\u0623\u0639\u0631\u0627\u0636 \u0645\u062b\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0633\u0627\u0633\u0629 \u0645\u0643\u0634\u0648\u0641\u0629 \u0623\u0648 \u062d\u062c\u0628 \u0627\u0644\u062e\u062f\u0645\u0629. \u0644\u0630\u0644\u0643 \u0642\u0631\u0651\u0631\u0646\u0627 \u0623\u0646 \u0646\u0631\u0643\u0632 \u0639\u0644\u0649 \"\u0627\u0644\u0633\u0628\u0628 \u0627\u0644\u062c\u0630\u0631\u064a\" \u0642\u062f\u0631 \u0627\u0644\u0625\u0645\u0643\u0627\u0646 \u0648\u0630\u0644\u0643 \u0644\u062a\u0648\u0641\u0651\u0631 \u0627\u0644\u062a\u0648\u0635\u064a\u0627\u062a \u0648\u0627\u0644\u0625\u0631\u0634\u0627\u062f\u0627\u062a \u0648\u0637\u0631\u0642 \u062a\u0644\u0627\u0641\u064a \u062a\u0644\u0643 \u0627\u0644\u0623\u0633\u0628\u0627\u0628. \u0643\u0645\u0627 \u0623\u0646 \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u0627\u0644\u0623\u0633\u0628\u0627\u0628 \u0627\u0644\u062c\u0630\u0631\u064a\u0629 \u0623\u0643\u062b\u0631 \u0645\u0646 \u0627\u0644\u0623\u0639\u0631\u0627\u0636 \u0644\u064a\u0633 \u0645\u0641\u0647\u0648\u0645 \u062c\u062f\u064a\u062f\u060c \u0643\u0645\u0627 \u0623\u0646 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u062c\u0627\u0621\u062a \u0628\u0634\u0643\u0644 \u0645\u062e\u062a\u0644\u0637 \u0645\u0627 \u0628\u064a\u0646 \"\u0627\u0644\u0623\u0633\u0628\u0627\u0628 \u0627\u0644\u062c\u0630\u0631\u064a\u0629\" \u0648 \"\u0627\u0644\u0623\u0639\u0631\u0627\u0636\" \u0648\u0647\u0648 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 \u0627\u0644\u0645\u062a\u0651\u0628\u0639 \u0641\u064a CWEs \u0643\u0630\u0644\u0643. \u0648\u0647\u062f\u0641\u0646\u0627 \u0623\u0646 \u0646\u0643\u0648\u0646 \u0639\u0644\u0649 \u062a\u0648\u0627\u0632\u0646 \u0628\u064a\u0646\u0647\u0645. \u0625\u0646 \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u062d\u0633\u0628 CWEs \u0647\u0648 19.6 \u062d\u064a\u062b \u062d\u0635\u0644\u062a A10 \u062a\u0632\u0648\u064a\u0631 \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0645\u0646 \u062c\u0627\u0646\u0628 \u0627\u0644\u062e\u0627\u062f\u0645 SSRF \u0639\u0644\u0649 1 CWEs \u0648 40 CWEs \u0644\u0635\u0627\u0644\u062d A04:2021- \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646 . \u0625\u0646 \u0627\u0644\u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0630\u064a \u062c\u0631\u0649 \u0639\u0644\u0649 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0645\u0641\u064a\u062f \u062c\u062f\u064b\u0627 \u0644\u0644\u0645\u0646\u0638\u0645\u0627\u062a \u0645\u0646 \u0646\u0627\u062d\u064a\u0629 \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u0645\u0646\u0627\u0641\u0639 \u0627\u0644\u0627\u0633\u062a\u0641\u0627\u062f\u0629 \u0645\u0646 \u0627\u0644\u062a\u062f\u0631\u064a\u0628 \u0639\u0644\u0649 CWEs \u0648\u0627\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0643\u0644\u063a\u0629 \u0639\u0645\u0644 \u0648\u0625\u0637\u0627\u0631.</p>"},{"location":"ar/#_4","title":"\u0643\u064a\u0641 \u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0644\u0628\u0639\u0636 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0627\u0644\u0645\u062e\u062a\u0627\u0631\u0629","text":"<p>\u0641\u064a \u0627\u0644\u0625\u0635\u062f\u0627\u0631 \u0627\u0644\u0633\u0627\u0628\u0642 \u0644\u0639\u0627\u0645 2017\u060c \u062c\u0639\u0644\u0646\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0645\u0628\u0646\u064a\u0629 \u0639\u0644\u0649 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0644\u062a\u062d\u062f\u064a\u062f \u0627\u062d\u062a\u0645\u0627\u0644\u064a\u062a\u0647\u0627. \u0628\u0639\u062f \u0630\u0644\u0643 \u0642\u0645\u0646\u0627 \u0628\u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0645\u062c\u0645\u0648\u0639\u0629 \u0646\u0642\u0627\u0634 \u0645\u0628\u0646\u064a\u0651\u0629 \u0639\u0644\u0649 \u0639\u0642\u0648\u062f \u0645\u0646 \u0627\u0644\u062e\u0628\u0631\u0627\u062a \u0641\u064a \u0627\u0644\u0627\u062e\u062a\u0631\u0627\u0642 \u0648\u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648\u0627\u0644\u0627\u0643\u062a\u0634\u0627\u0641 \u0648\u0627\u062d\u062a\u0645\u0627\u0644\u064a\u0629 \u062d\u062f\u0648\u062b\u0647\u0627 \u0623\u064a\u0636\u064b\u0627 \u0648\u0645\u0627 \u0647\u0648 \u0627\u0644\u0623\u062b\u0631 \u0627\u0644\u062a\u0642\u0646\u064a \u0627\u0644\u0630\u064a \u0633\u064a\u062d\u062f\u062b. \u0644\u0630\u0644\u0643 \u0623\u0631\u062f\u0646\u0627 \u0641\u064a \u0627\u0644\u0646\u0633\u062e\u0629 \u0627\u0644\u062c\u062f\u064a\u062f\u0629 \u0645\u0646 \u0639\u0627\u0645 2021 \u0645\u0646 \u0627\u0644\u0627\u0633\u062a\u0641\u0627\u062f\u0629 \u0645\u0646 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648\u0627\u0644\u0623\u062b\u0631 \u0625\u0646 \u0623\u0645\u0643\u0646 \u0630\u0644\u0643.</p> <p>\u0642\u0645\u0646\u0627 \u0628\u062a\u0646\u0632\u064a\u0644 \" OWASP Dependency Check\" \u0648\u0627\u0633\u062a\u062e\u0631\u062c\u0646\u0627 \u0646\u062a\u0627\u0626\u062c CVSS \u0644\u0644\u0627\u062e\u062a\u0631\u0627\u0642 \u0648\u0627\u0644\u0622\u062b\u0627\u0631  \u0627\u0644\u062a\u064a \u062a\u0645 \u062c\u0645\u0639\u0647\u0627 \u0633\u0627\u0628\u0642\u0627\u064b \u0645\u0646 CWEs \u0630\u0627\u062a \u0627\u0644\u0639\u0644\u0627\u0642\u0629. \u0648\u0644\u0627 \u064a\u062e\u0641\u0649 \u0639\u0644\u064a\u0643\u0645 \u0627\u0646 \u0647\u0630\u0627 \u0627\u0644\u062c\u0647\u062f \u0645\u0646 \u0627\u0644\u0628\u062d\u062b \u0627\u062e\u0630 \u0642\u062f\u0631 \u0644\u0627 \u0628\u0627\u0633 \u0628\u0647 \u0644\u0627\u0646 \u062c\u0645\u064a\u0639 CVEs \u0644\u062f\u064a\u0647\u0627 \u062f\u0631\u062c\u0627\u062a \u0645\u0646 CVSSv2 \u0643\u0630\u0644\u0643. \u0648\u0644\u0643\u0646 \u0647\u0646\u0627 \u0628\u0639\u0636 \u0627\u0644\u062e\u0644\u0644 \u0645\u0627 \u0628\u064a\u0646 CVSSv2 \u0648CVSSv3 \u0648\u0627\u0644\u0630\u064a \u064a\u062c\u0628 \u0645\u0639\u0627\u0644\u062c\u062a\u0647. \u0648\u0633\u0646\u0631\u0649 \u0641\u064a \u0627\u0644\u0642\u0631\u064a\u0628 \u0627\u0646 \u062c\u0645\u064a\u0639 CVEs \u0633\u062a\u0642\u0648\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 CVSSv3. \u0648\u0646\u0648\u062f \u0627\u0646 \u0646\u0644\u0641\u062a \u0627\u0644\u0627\u0646\u062a\u0628\u0627\u0647 \u0627\u0646 \u0645\u0639\u0627\u062f\u0644\u0629 CVSSv2 \u0648CVSSv3 \u0648\u0627\u0644\u062f\u0631\u062c\u0627\u062a \u0645\u062a\u063a\u064a\u0631\u0629 \u0648\u0645\u062a\u062d\u062f\u062b\u0629.</p> <p>\u0641\u064a CVSSv2\u060c \u0645\u0646 \u0627\u0644\u0645\u0645\u0643\u0646 \u0627\u0646 \u064a\u0635\u0644 \u0627\u0644\u0623\u062b\u0631 \u0648 \u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u0649 10.0\u060c \u0648\u0644\u0643\u0646 \u0628\u0639\u062f \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0639\u0627\u062f\u0644\u0629 \u0642\u062f \u062a\u0646\u062e\u0641\u0636 \u0627\u0644\u0649 60%  \u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648 40% \u0644\u0644\u062a\u0623\u062b\u064a\u0631. \u0648\u0641\u064a CVSSv3 \u0643\u0627\u0646 \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0639\u0644\u0649 \u0647\u0648 6.0  \u0644\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648 4.0 \u0644\u0644\u0623\u062b\u0631. \u0645\u0639 \u0627\u0644\u0627\u062e\u0630 \u0628\u0627\u0644\u0627\u0639\u062a\u0628\u0627\u0631 \u0645\u062f\u0649 \u062b\u0642\u0644 \u0623\u062d\u062f\u0647\u0645\u0627. \u0648\u0639\u0646\u062f \u0627\u0644\u0646\u0638\u0631 \u0627\u0644\u0649 CVSSv3 \u0646\u0631\u0649 \u0627\u0646 \u0627\u0644\u0623\u062b\u0631 \u0627\u0631\u062a\u0641\u0639 \u062d\u0648\u0627\u0644\u064a \u0646\u0642\u0637\u0629 \u0648\u0646\u0635\u0641\u060c \u0648\u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0646\u062e\u0641\u0636 \u0628\u0645\u0642\u062f\u0627\u0631  \u0627\u0644\u0646\u0635\u0641 \u0646\u0642\u0637\u0629 \u062a\u0642\u0631\u064a\u0628\u0627\u064b.</p> <p>\u0647\u0646\u0627\u0643 \u0623\u0643\u062b\u0631 \u0645\u0646 125 \u0623\u0644\u0641 \u0633\u062c\u0644 \u0645\u0646 CVE \u062a\u0645 \u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0641\u064a \u0645\u0646\u0635\u0629 NVD \u0648\u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0641\u064a \" OWASP Dependency Check\". \u0648\u0647\u0646\u0627\u0643 \u0623\u0643\u062b\u0631 \u0645\u0646 241 \u062a\u0635\u0646\u064a\u0641 \u0641\u0631\u0639\u064a \u0641\u0631\u064a\u062f \u0641\u064a CWEs \u062a\u0645 \u0631\u0628\u0637\u0647\u0627 \u0641\u064a \u0623\u0643\u062b\u0631 \u0645\u0646 CVE. \u0648\u0647\u0646\u0627\u0643 \u0623\u0643\u062b\u0631 \u0645\u0646 62 \u0623\u0644\u0641 \u0645\u0646 CWE \u062a\u0645 \u0631\u0628\u0637\u0647\u0627 \u0641\u064a CVSSv3. \u0648\u0627\u0644\u062a\u064a \u062a\u0645\u062b\u0644 \u0646\u0635\u0641 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u062d\u0635\u0631\u0647\u0627.</p> <p>\u0641\u064a \u0642\u0627\u0626\u0645\u0629 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631\u060c \u0642\u0645\u0646\u0627 \u0628\u062d\u0633\u0627\u0628 \u0645\u062a\u0648\u0633\u0637 \u0646\u0642\u0627\u0637 \u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648\u0627\u0644\u0623\u062b\u0631 \u0628\u0627\u0644\u0637\u0631\u0642 \u0627\u0644\u062a\u0627\u0644\u064a\u0629. \u0642\u0645\u0646\u0627 \u0628\u062a\u062c\u0645\u064a\u0639 \u062f\u0631\u062c\u0627\u062a CVEs \u0645\u0639 CVSS \u0628\u0648\u0627\u0633\u0637\u0629 CWE \u0648\u0642\u0645\u0646\u0627 \u0628\u062a\u0642\u064a\u064a\u0645 \u0643\u0644 \u0645\u0646 \u0627\u0644\u0623\u062b\u0631 \u0648\u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0633\u0628\u0629 \u0627\u0644\u0645\u0626\u0648\u064a\u0629  \u0627\u0644\u0645\u0648\u062c\u0648\u062f\u0629 \u0641\u064a CVSSv3 \u0628\u0627\u0644\u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0649 \u062c\u0645\u064a\u0639 \u0645\u0627 \u064a\u0648\u062c\u062f \u0641\u064a CVSSv2 \u0644\u0627\u062d\u062a\u0633\u0627\u0628 \u0627\u0644\u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u0625\u062c\u0645\u0627\u0644\u064a. \u0648\u0628\u0639\u062f \u0630\u0644\u0643 \u0642\u0645\u0646\u0627 \u0628\u0631\u0628\u0637 \u0627\u0644\u0645\u062a\u0648\u0633\u0637 \u0628\u0640 CWEs \u0641\u064a \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0630\u0644\u0643 \u0644\u0627\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0644\u062a\u0642\u064a\u064a\u0645 \u062f\u0631\u062c\u0627\u062a \u0627\u0644\u0623\u062b\u0631 \u0648\u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648\u0627\u0644\u0627\u0633\u062a\u0641\u0627\u062f\u0629 \u0645\u0646\u0647\u0627 \u0643\u0630\u0644\u0643 \u0641\u064a \u0627\u062d\u062a\u0633\u0627\u0628 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0628\u0646\u0627\u0621 \u0639\u0644\u0649 \u0627\u0644\u0645\u0639\u0627\u062f\u0644\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629.</p>"},{"location":"ar/#_5","title":"\u0644\u0645\u0627\u0630\u0627 \u0644\u0627 \u062a\u0643\u0648\u0646 \u0645\u062c\u0631\u062f \u0628\u064a\u0627\u0646\u0627\u062a \u0625\u062d\u0635\u0627\u0626\u064a\u0629 \u0628\u062d\u062a\u0629\u061f","text":"<p>\u062a\u0642\u062a\u0635\u0631 \u0627\u0644\u0646\u062a\u0627\u0626\u062c \u0628\u0634\u0643\u0644 \u0623\u0633\u0627\u0633\u064a \u0639\u0644\u0649 \u0645\u0627 \u064a\u0645\u0643\u0646 \u0627\u062e\u062a\u0628\u0627\u0631\u0647 \u0628\u0634\u0643\u0644 \u0622\u0644\u064a. \u0648\u062d\u064a\u0646\u0645\u0627 \u062a\u062a\u062d\u062f\u062b \u0625\u0644\u0649 \u0623\u062d\u062f \u0627\u0644\u0645\u062e\u062a\u0635\u0651\u064a\u0646 \u0627\u0644\u0645\u062d\u062a\u0631\u0641\u064a\u0646 \u0641\u064a \u0645\u062c\u0627\u0644 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0633\u064a\u062e\u0628\u0631\u0648\u0646\u0643 \u0623\u0646 \u0628\u0639\u0636 \u0627\u0644\u0645\u062e\u0631\u062c\u0627\u062a \u0648\u0627\u0644\u0627\u062d\u0635\u0627\u0626\u064a\u0627\u062a \u0644\u0627 \u064a\u0648\u062c\u062f \u0644\u0647\u0627 \u0628\u064a\u0627\u0646\u0627\u062a \u0628\u0639\u062f. \u0648\u0645\u0639 \u0630\u0644\u0643 \u0639\u0646\u062f \u0625\u0639\u062f\u0627\u062f \u0645\u0646\u0647\u062c\u064a\u0627\u062a \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u060c \u062a\u0633\u062a\u063a\u0631\u0642 \u0641\u062a\u0631\u0629 \u0645\u0646 \u0627\u0644\u0632\u0645\u0646 \u0648\u0645\u0646 \u062b\u0645 \u0623\u0646\u062a \u0628\u062d\u0627\u062c\u0629 \u0625\u0644\u0649 \u0627\u0644\u0645\u0632\u064a\u062f \u0645\u0646 \u0627\u0644\u0648\u0642\u062a \u0644\u0643\u064a \u062a\u0642\u0648\u0645 \u0628\u0623\u062a\u0645\u062a\u0629 \u062a\u0644\u0643 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0648\u062a\u0634\u063a\u064a\u0644\u0647\u0627 \u0639\u0644\u0649 \u0645\u062c\u0645\u0648\u0639\u0629 \u0643\u0628\u064a\u0631\u0629 \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a. </p> <p>\u0648\u0644\u0630\u0644\u0643 \u0642\u0645\u0646\u0627 \u0628\u0627\u062e\u062a\u064a\u0627\u0631 \u062b\u0645\u0627\u0646\u064a\u0629 \u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0645\u0646 \u0623\u0635\u0644 \u0639\u0634\u0631\u0629 \u0645\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u0633\u0628\u0628 \u0639\u062f\u0645 \u0627\u0643\u062a\u0645\u0627\u0644 \u0648\u0646\u0636\u062c \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u0628\u0627\u0644\u0646\u0633\u0628\u0629 \u0644\u0644\u062a\u0635\u0646\u064a\u0641\u064a\u0646 \u0627\u0644\u0645\u062a\u0628\u0642\u064a\u0629 \u0642\u0645\u0646\u0627 \u0628\u0639\u0645\u0644 \u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0641\u064a \u0645\u062c\u0627\u0644 \u0627\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a. \u0645\u0645\u0627 \u064a\u0633\u0645\u062d \u0644\u0644\u0645\u062e\u062a\u0635\u064a\u0646 \u0628\u0627\u0644\u062a\u0635\u0648\u064a\u062a \u0644\u0645\u0627 \u064a\u0631\u0648\u0646\u0647 \u0645\u0646 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u062a\u064a \u062a\u0633\u062a\u062d\u0642 \u0623\u0646 \u062a\u0636\u0627\u0641 \u0625\u0644\u0649 \u0642\u0627\u0626\u0645\u0629 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0648\u0627\u0644\u062a\u064a \u0642\u062f \u0644\u0627 \u064a\u0643\u0648\u0646 \u0644\u0647\u0627 \u0628\u064a\u0627\u0646\u0627\u062a \u0623\u0648 \u0628\u064a\u0627\u0646\u0627\u062a \u063a\u064a\u0631 \u0645\u062a\u0646\u0627\u0633\u0642\u0629 \u0623\u0648 \u063a\u064a\u0631 \u0645\u0646\u0627\u0633\u0628\u0629.</p>"},{"location":"ar/#_6","title":"\u0644\u0645\u0627\u0630\u0627 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0628\u062f\u0644\u0627 \u0645\u0646 \u0627\u0644\u062a\u0643\u0631\u0627\u0631\u061f","text":"<p>\u0647\u0646\u0627\u0643 \u062b\u0644\u0627\u062b\u0629 \u0645\u0635\u0627\u062f\u0631 \u0623\u0633\u0627\u0633\u064a\u0629 \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \u0646\u062d\u062f\u062f\u0647\u0627 \u0639\u0644\u0649 \u0623\u0646\u0647\u0627 \u0627\u0644\u0627\u0646\u0633\u0627\u0646 \u064a\u0633\u0627\u0639\u062f \u0627\u0644\u0623\u062f\u0648\u0627\u062a (HaT) \u060c \u0627\u0648 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u062a\u0633\u0627\u0639\u062f \u0627\u0644\u0625\u0646\u0633\u0627\u0646 (TaH) \u060c \u0627\u0648 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0645\u0646 \u063a\u064a\u0631 \u0623\u064a \u062a\u0639\u062f\u064a\u0644\u0627\u062a.</p> <p>\u062a\u0642\u0648\u0645 HaT \u0648\u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0628\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0643\u062a\u0634\u0627\u0641 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0639\u0627\u0644\u064a. \u062d\u064a\u062b \u0627\u0646 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u062a\u0628\u062d\u062b \u0639\u0646 \u0646\u0642\u0627\u0637 \u0636\u0639\u0641 \u0645\u062d\u062f\u062f\u0629 \u0645\u0639 \u062a\u062c\u0631\u0628\u0629 \u062c\u0645\u064a\u0639 \u0627\u0644\u0627\u062d\u062a\u0645\u0627\u0644\u0627\u062a \u0627\u0644\u0645\u062a\u0648\u0642\u0639\u0629 \u0644\u0627\u0643\u062a\u0634\u0627\u0641 \u0627\u0644\u062b\u063a\u0631\u0629. \u0648\u0639\u0646\u062f \u0627\u0644\u0646\u0638\u0631 \u0627\u0644\u0649 \u062b\u063a\u0631\u0629 XSS \u0648\u0627\u0644\u062a\u064a \u0628\u0627\u0644\u0639\u0627\u062f\u0629 \u0627\u0645\u0627 \u0627\u0646 \u062a\u0643\u0648\u0646 \u0645\u0646\u062e\u0641\u0636\u0629 \u0627\u0644\u062e\u0637\u0648\u0631\u0629 \u0627\u0648 \u0628\u0633\u064a\u0637\u0629 \u0648\u0627\u0644\u062a\u064a \u062a\u0623\u062a\u064a \u0628\u0633\u0628\u0628 \u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0648 \u0623\u062e\u0637\u0627\u0621 \u0641\u064a \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u0635\u0641\u064a\u0629. \u0648\u0639\u0646\u062f\u0645\u0627 \u062a\u0643\u0648\u0646 \u0627\u0644\u062b\u063a\u0631\u0629 \u0628\u0633\u0628\u0628 \u062e\u0637\u0627\u0621 \u0641\u064a \u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u062a\u0631\u062a\u0641\u0639 \u0628\u0627\u0644\u0646\u0633\u0628\u0629  \u062a\u0643\u0631\u0627\u0631 \u0627\u0644\u0627\u0643\u062a\u0634\u0627\u0641 \u0644\u0647\u0630\u0647 \u0627\u0644\u062b\u063a\u0631\u0629 \u0648\u0627\u0644\u062a\u064a \u0645\u0646 \u0627\u0644\u0645\u0645\u0643\u0646 \u0627\u0646 \u062a\u0624\u062b\u0631 \u0639\u0644\u0649 \u0645\u062e\u0631\u062c\u0627\u062a \u0627\u0644\u062a\u0642\u0631\u064a\u0631 \u0627\u0648 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.</p> <p>\u0648\u0645\u0646 \u0646\u0627\u062d\u064a\u0629 \u0623\u062e\u0631\u0649\u060c \u0646\u062c\u062f \u0623\u0646 TaH \u0623\u062e\u0631\u062c\u062a \u0644\u0646\u0627 \u0646\u0637\u0627\u0642 \u0648\u0627\u0633\u0639 \u0645\u0646 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0648\u0644\u0643\u0646 \u0645\u0639 \u062a\u0643\u0631\u0627\u0631 \u0623\u0642\u0644 \u0628\u0643\u062b\u064a\u0631 \u0628\u0633\u0628\u0628 \u0636\u064a\u0642 \u0627\u0644\u0648\u0642\u062a. \u0648\u0630\u0644\u0643 \u0628\u0633\u0628\u0628 \u0642\u064a\u0627\u0645 \u0627\u0644\u0645\u062e\u062a\u0635\u064a\u0646 \u0628\u0641\u062d\u0635 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u064a\u0631\u0648\u0646 \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u0623\u062d\u064a\u0627\u0646 \u0645\u062b\u0644 XSS \u0633\u064a\u0642\u0648\u0645\u0648\u0646 \u0628\u0625\u064a\u062c\u0627\u062f \u0663 \u0623\u0648 \u0664 \u0648\u0628\u0639\u062f \u0630\u0644\u0643 \u064a\u062a\u0648\u0642\u0641\u0648\u0646 \u0639\u0646 \u0627\u0644\u0628\u062d\u062b \u0639\u0646\u0647\u0627 \u0648\u0625\u064a\u062c\u0627\u062f \u0633\u0628\u0628 \u0627\u0644\u062e\u0637\u0623 \u0648\u0643\u062a\u0627\u0628\u0629 \u062a\u0642\u0631\u064a\u0631 \u0639\u0646\u0647\u0627 \u0648\u0627\u0644\u062a\u0648\u0635\u064a\u0627\u062a \u0627\u0644\u0645\u0645\u0643\u0646\u0629 \u0644\u0643\u064a \u062a\u0642\u0648\u0645 \u0628\u0625\u0635\u0644\u0627\u062d\u0647\u0627 \u0648\u0627\u0644\u062a\u064a \u0633\u062a\u0642\u0648\u0645 \u0628\u0625\u0635\u0644\u0627\u062d \u062c\u0645\u064a\u0639 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a. \u0648\u0644\u064a\u0633 \u0647\u0646\u0627\u0643 \u062d\u0627\u062c\u0629 \u0623\u0648 \u0648\u0642\u062a \u0644\u0644\u0639\u062b\u0648\u0631 \u0639\u0644\u0649 \u062c\u0645\u064a\u0639 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0628\u0634\u0643\u0644 \u0645\u062a\u0643\u0631\u0631.</p> <p>\u0644\u0646\u0641\u062a\u0631\u0636 \u0623\u0646\u0646\u0627 \u0623\u062e\u0630\u0646\u0627 \u0645\u062c\u0645\u0648\u0639\u062a\u064a\u0646 \u0645\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u0645\u064a\u0651\u0632\u0629 \u0648\u0627\u0644\u063a\u064a\u0631 \u0645\u062a\u0634\u0627\u0628\u0647\u0629 \u0648\u062d\u0627\u0648\u0644\u0646\u0627 \u062f\u0645\u062c\u0647\u0627 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u062a\u0643\u0631\u0627\u0631. \u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u062d\u0627\u0644\u0629 \u0633\u0646\u062c\u062f \u0623\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062f\u0642\u064a\u0642\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u0631\u062c\u0629 \u0645\u0646 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0648HaT \u063a\u064a\u0631 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0645\u0644\u0627\u062d\u0638\u0629 \u0645\u0639 \u0628\u064a\u0627\u0646\u0627\u062a TaH. \u0648\u0647\u0630\u0627 \u064a\u0638\u0647\u0631 \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u0623\u062d\u064a\u0627\u0646 \u0628\u0634\u0643\u0644 \u0625\u064a\u062c\u0627\u0628\u064a \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062b\u0644 \u062b\u063a\u0631\u0629 XSS \u0648\u0627\u0644\u0630\u064a \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u0623\u062d\u064a\u0627\u0646 \u064a\u0642\u0648\u0645 \u0628\u0631\u0641\u0639 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0645\u0646 \u0645\u0646\u062e\u0641\u0636 \u0625\u0644\u0649 \u0645\u062a\u0648\u0633\u0637 \u0628\u0633\u0628\u0628 \u0627\u0644\u0639\u062f\u062f \u0627\u0644\u0647\u0627\u0626\u0644 \u0645\u0646 \u0627\u0644\u0646\u062a\u0627\u0626\u062c. (\u062b\u063a\u0631\u0627\u062a \u0645\u062b\u0644 XSS  \u0645\u0646 \u0627\u0644\u0633\u0647\u0644 \u0627\u062e\u062a\u0628\u0627\u0631\u0647\u0627 \u0648\u0627\u0644\u062e\u0631\u0648\u062c \u0628\u0646\u062a\u0627\u0626\u062c \u0645\u0639\u0642\u0648\u0644\u0629)</p> <p>\u0641\u064a \u0639\u0627\u0645 2017 \u0642\u0645\u0646\u0627 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0639\u062f\u0651\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0628\u062f\u0644\u064b\u0627 \u0645\u0646 \u0625\u0644\u0642\u0627\u0621 \u0646\u0638\u0631\u0629 \u0645\u0631\u0629 \u0623\u062e\u0631\u0649 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u062f\u0645\u062c\u0647\u0627 \u0628\u0634\u0643\u0644 \u0645\u0646\u0627\u0633\u0628 \u0645\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u0631\u062c\u0629 \u0645\u0646 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0648HaT \u0648 TaH.  \u062d\u064a\u062b \u064a\u0643\u0648\u0646 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0646\u0633\u0628\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u0644\u062f\u064a\u0647\u0627 \u0646\u0648\u0639 \u0645\u0646 \u0623\u0646\u0648\u0627\u0639 \u0627\u0644\u062b\u063a\u0631\u0627\u062a. \u0648\u062d\u0642\u064a\u0642\u0629 \u0646\u062d\u0646 \u0641\u064a \u0627\u0644\u0645\u0646\u0638\u0645\u0629 \u0644\u0627 \u0646\u0647\u062a\u0645 \u0641\u064a \u062d\u0627\u0644 \u0643\u0627\u0646\u062a \u0627\u0644\u062b\u063a\u0631\u0629 \u0648\u0627\u062d\u062f\u0629 \u0645\u0639\u062f\u0644 \u062d\u062f\u0648\u062b\u0647\u0627 \u0645\u062a\u0643\u0631\u0631. \u0648\u0647\u062f\u0641\u0646\u0627 \u0647\u0648 \u0645\u0639\u0631\u0641\u0629 \u0639\u062f\u062f \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u0644\u062f\u064a\u0647\u0627 \u062b\u063a\u0631\u0629 \u0648\u0627\u062d\u062f\u0629 \u0639\u0644\u0649 \u0627\u0644\u0623\u0642\u0644. \u0648\u0647\u0630\u0627 \u064a\u0639\u0637\u064a\u0646\u0627 \u062a\u0635\u0648\u0651\u0631 \u0648\u0627\u0636\u062d \u0645\u0646 \u0646\u062a\u0627\u0626\u062c \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0627\u0644\u062a\u064a \u062a\u064f\u0639\u062a\u0628\u0631 \u0644\u062f\u064a\u0646\u0627 \u0623\u0641\u0636\u0644 \u0645\u0646 \u0625\u063a\u0631\u0627\u0642 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u062a\u0643\u0631\u0627\u0631 \u0644\u064a\u0633 \u0644\u0647 \u0641\u0627\u0626\u062f\u0629.</p>"},{"location":"ar/#_7","title":"\u0645\u0627 \u0647\u064a \u0639\u0645\u0644\u064a\u0629 \u062c\u0645\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u062a\u062d\u0644\u064a\u0644\u0647\u0627\u061f","text":"<p>\u062a\u0645 \u0625\u0636\u0641\u0627\u0621 \u0627\u0644\u0637\u0627\u0628\u0639 \u0627\u0644\u0631\u0633\u0645\u064a \u0639\u0644\u0649 \u0639\u0645\u0644\u064a\u0629 \u062c\u0645\u0639 \u0628\u064a\u0627\u0646\u0627\u062a \u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631 \u0641\u064a \u0642\u0645\u0629 Open Security Summit \u0641\u064a \u0639\u0627\u0645 2017. \u0648\u0628\u0639\u062f \u0630\u0644\u0643 \u0623\u0645\u0636\u0649 \u0627\u0644\u0645\u0633\u0624\u0648\u0644\u064a\u0646 \u0641\u064a \u0645\u0646\u0638\u0645\u0629 \u0622\u0648\u0627\u0633\u0628   \u064a\u0648\u0645\u064a\u0646 \u0641\u064a \u0627\u0644\u0639\u0645\u0644 \u0639\u0644\u0649 \u062c\u0639\u0644 \u0639\u0645\u0644\u064a\u0629 \u062c\u0645\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0628\u0646\u064a\u0629 \u0639\u0644\u0649 \u0633\u064a\u0627\u0633\u0629 \u0648\u0627\u0636\u062d\u0629 \u0648\u0634\u0641\u0627\u0641\u0629. \u062a\u0639\u062f \u0646\u0633\u062e\u0629 2021 \u0647\u064a \u0627\u0644\u0645\u0631\u0629 \u0627\u0644\u062b\u0627\u0646\u064a\u0629 \u0627\u0644\u062a\u064a \u0646\u0633\u062a\u062e\u062f\u0645 \u0641\u064a\u0647\u0627 \u0647\u0630\u0647 \u0627\u0644\u0645\u0646\u0647\u062c\u064a\u0629.</p> <p>\u0642\u0645\u0646\u0627 \u0628\u062f\u0639\u0648\u0629 \u0644\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0646 \u062e\u0644\u0627\u0644 \u0642\u0646\u0648\u0627\u062a \u0627\u0644\u062a\u0648\u0627\u0635\u0644 \u0627\u0644\u0627\u062c\u062a\u0645\u0627\u0639\u064a \u0627\u0644\u0645\u062a\u0627\u062d\u0629 \u0644\u0646\u0627\u060c \u0644\u0643\u0644\u0651\u064b\u0627 \u0645\u0646 \u0627\u0644\u0645\u0634\u0631\u0648\u0639 \u0648 OWASP. \u0648\u0641\u064a  \u0635\u0641\u062d\u0629 \u0645\u0634\u0631\u0648\u0639 OWASP, \u0646\u0642\u0648\u0645 \u0628\u0625\u062f\u0631\u0627\u062c \u0639\u0646\u0627\u0635\u0631 \u0648\u0647\u064a\u0643\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062a\u064a \u0646\u0628\u062d\u062b \u0639\u0646\u0647\u0627 \u0648\u0643\u064a\u0641\u064a\u0629 \u0625\u0631\u0633\u0627\u0644\u0647\u0627. \u0648\u0641\u064a  \u0645\u0634\u0631\u0648\u0639 GitHub, \u0644\u062f\u064a\u0646\u0627 \u0623\u0645\u062b\u0644\u0629 \u0644\u0645\u0644\u0641\u0627\u062a \u062a\u0639\u0645\u0644 \u0643\u0642\u0648\u0627\u0644\u0628. \u0646\u0639\u0645\u0644 \u0645\u0639 \u0627\u0644\u0645\u0646\u0638\u0645\u0627\u062a \u0627\u0644\u0623\u062e\u0631\u0649  \u062d\u0633\u0628 \u0627\u0644\u062d\u0627\u062c\u0629 \u0644\u0644\u0645\u0633\u0627\u0639\u062f\u0629 \u0641\u064a \u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0647\u064a\u0643\u0644\u0648\u0631\u0633\u0645\u0647 \u0648\u0631\u0628\u0637\u0647 \u0628\u0640 CWEs.</p> <p>\u0646\u062d\u0635\u0644 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0646 \u0627\u0644\u0645\u0624\u0633\u0633\u0627\u062a \u0627\u0644\u062a\u064a \u0628\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0645\u0646 \u062e\u0644\u0627\u0644 \u0627\u0644\u0645\u0628\u0627\u062f\u0644\u0629\u060c \u0648\u0645\u0646 \u062e\u0644\u0627\u0644 \u0645\u0646\u0635\u0627\u062a \u0627\u0643\u062a\u0634\u0627\u0641 \u0627\u0644\u062b\u063a\u0631\u0627\u062a\u060c \u0648\u0627\u0644\u0645\u0624\u0633\u0633\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0633\u0627\u0647\u0645 \u0628\u0628\u064a\u0627\u0646\u0627\u062a\u0647\u0627 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629. \u0648\u0628\u0645\u062c\u0631\u062f \u062d\u0635\u0648\u0644\u0646\u0627 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0646\u0642\u0648\u0645 \u0628\u062a\u062d\u0645\u064a\u0644\u0647\u0627 \u0645\u0639\u064b\u0627 \u0648\u0646\u062c\u0631\u064a \u062a\u062d\u0644\u064a\u0644\u064b\u0627 \u0648\u0641\u0647\u0645\u0627\u064b \u0639\u0646 \u0623\u0633\u0627\u0633\u064a\u064b\u0627\u062a \u0627\u0644\u0631\u0628\u0637 \u0628\u0640 CWEs \u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0627\u0644\u0645\u062e\u0627\u0637\u0631. \u0647\u0646\u0627\u0643 \u062a\u062f\u0627\u062e\u0644 \u0628\u064a\u0646 \u0628\u0639\u0636 CWEs\u060c \u0628\u0633\u0628\u0628 \u0627\u0644\u062a\u0634\u0627\u0628\u0647 \u0628\u064a\u0646\u0647\u0645 (\u0645\u062b\u0644 \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 \u0641\u064a \u0627\u0644\u062a\u0634\u0641\u064a\u0631). \u062d\u064a\u062b \u064a\u062a\u0645 \u062a\u0648\u062b\u064a\u0642 \u0648\u0646\u0634\u0631 \u0623\u064a \u0642\u0631\u0627\u0631\u0627\u062a \u062a\u062a\u0639\u0644\u0642 \u0628\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0623\u0648\u0644\u064a\u0629 \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0644\u062a\u0643\u0648\u0646 \u0645\u0641\u062a\u0648\u062d\u0629 \u0648\u0648\u0627\u0636\u062d\u0629 \u0645\u0639 \u0643\u064a\u0641\u064a\u0629 \u0645\u0648\u0627\u0621\u0645\u0629  \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.</p> <p>\u064a\u062a\u0645 \u0627\u0644\u0646\u0638\u0631 \u0625\u0644\u0649 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0627\u0644\u062b\u0645\u0627\u0646\u064a\u0629 \u0630\u0627\u062a \u0623\u0639\u0644\u0649 \u0645\u0639\u062f\u0644\u0627\u062a \u062d\u062f\u0648\u062b \u0644\u0625\u062f\u0631\u0627\u062c\u0647\u0627 \u0641\u064a \u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631. \u0648\u0646\u0646\u0638\u0631 \u0623\u064a\u0636\u064b\u0627 \u0641\u064a \u0646\u062a\u0627\u0626\u062c \u0627\u0644\u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0641\u064a \u0645\u062c\u0627\u0644 \u0627\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0644\u0645\u0639\u0631\u0641\u0629 \u0641\u064a \u062d\u0627\u0644 \u0648\u062c\u0648\u062f \u0623\u064a \u0645\u0646\u0647\u0627 \u0641\u064a \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \u0633\u064a\u062a\u0645 \u0627\u062e\u062a\u064a\u0627\u0631 \u0623\u0639\u0644\u0649 \u062a\u0642\u064a\u064a\u0645\u064a\u0646 \u063a\u064a\u0631 \u0645\u0648\u062c\u0648\u062f\u064a\u0646 \u0628\u0627\u0644\u0641\u0639\u0644 \u0641\u064a \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u062d\u0644\u0644\u0629 \u0633\u0627\u0628\u0642\u0627\u064b \u0648\u0627\u0636\u0641\u062a\u0647\u0627 \u0627\u0644\u0649 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631. \u0628\u0645\u062c\u0631\u062f \u0627\u062e\u062a\u064a\u0627\u0631 \u062c\u0645\u064a\u0639 \u0627\u0644\u0639\u0634\u0631\u0629 \u060c \u064a\u062a\u0645 \u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u0639\u0648\u0627\u0645\u0644 \u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u0644\u0627\u062a\u0641\u0627\u0642 \u0639\u0644\u064a\u0647\u0627 \u0648\u0647\u064a (\u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648\u0627\u0644\u062a\u0623\u062b\u064a\u0631)\u061b \u0644\u0644\u0645\u0633\u0627\u0639\u062f\u0629 \u0641\u064a \u062a\u0631\u062a\u064a\u0628 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631.</p>"},{"location":"ar/#_8","title":"\u0627\u0644\u0639\u0648\u0627\u0645\u0644 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0645\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a","text":"<p>\u0647\u0646\u0627\u0643 \u0639\u0648\u0627\u0645\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u062f\u0631\u062c\u0629 \u0644\u0643\u0644 \u062a\u0635\u0646\u064a\u0641 \u0645\u0646 \u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631\u060c \u0648\u0625\u0644\u064a\u0643 \u0645\u0627 \u062a\u0639\u0646\u064a\u0647:</p> <ul> <li> <p>\u0631\u0628\u0637 \u0628\u0640 CWEs: \u0639\u062f\u062f CWEs \u0627\u0644\u0630\u064a \u062a\u0645 \u0631\u0628\u0637\u0647\u0627 \u0628\u0648\u0627\u0633\u0637\u0629 \u0627\u0644\u0641\u0631\u064a\u0642.</p> </li> <li> <p>\u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b/\u0627\u0644\u062d\u0648\u0627\u062f\u062b: \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0648\u0647\u0648 \u0627\u0644\u0646\u0633\u0628\u0629 \u0627\u0644\u0645\u0626\u0648\u064a\u0629 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0645\u0639\u0631\u0636\u0629 \u0644\u062b\u063a\u0631\u0627\u062a \u0648\u0645\u0639\u0631\u0641\u0629 \u0645\u062f\u0649 \u0627\u0631\u062a\u0628\u0627\u0637\u0647\u0627  \u0628\u0645\u0639\u064a\u0627\u0631 CWE \u062e\u0644\u0627\u0644 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0627\u0644\u062a\u064a. \u0623\u062c\u0631\u062a\u0647\u0627 \u0627\u0644\u0645\u0624\u0633\u0633\u0627\u062a \u0641\u064a \u0633\u0646\u0629 \u0645\u062d\u062f\u062f\u0629.</p> </li> <li> <p>(\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a) \u0648\u0627\u0644\u062a\u063a\u0637\u064a\u0629:\u0627\u0644\u0646\u0633\u0628\u0629 \u0627\u0644\u0645\u0626\u0648\u064a\u0629 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u062e\u062a\u0628\u0627\u0631\u0647\u0627 \u0645\u0646 \u0642\u0628\u0644 \u062c\u0645\u064a\u0639 \u0627\u0644\u0645\u0646\u0638\u0645\u0627\u062a \u0644\u0640 CWE \u0645\u064f\u0639\u064a\u0651\u0646.</p> </li> <li> <p>\u062e\u0637\u0648\u0631\u0629 \u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644: \u0645\u0639\u0631\u0641\u0629 \u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648 \u0627\u0644\u0646\u0642\u0627\u0637 \u0627\u0644\u0641\u0631\u0639\u064a\u0629  \u0644\u0647 \u0645\u0646 CVSSv2 \u0648 CVSSv3 \u0648\u0627\u0644\u062a\u064a \u0644\u062f\u064a\u0647\u0627 CVEs \u0648\u0645\u0631\u062a\u0628\u0637\u0629 \u0628\u0640 CWEs\u060c \u060c\u0645\u0648\u0627\u0626\u0645\u062a\u0647\u0627  \u060c \u0648\u0648\u0636\u0639\u0647\u0627 \u0639\u0644\u0649 \u0645\u0642\u064a\u0627\u0633 10pt.</p> </li> <li> <p>\u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0627\u0644\u0645\u062a\u0648\u0642\u0639: \u062a\u0623\u062b\u064a\u0631 \u0627\u0644\u0646\u0642\u0627\u0637 \u0627\u0644\u0641\u0631\u0639\u064a\u0629 \u0645\u0646 CVSSv2 \u0648 CVSSv3 \u0648\u0627\u0644\u062a\u064a \u0644\u062f\u064a\u0647\u0627 CVEs \u0648\u0645\u0631\u062a\u0628\u0637\u0629 \u0628\u0640 CWEs\u060c \u060c\u0645\u0648\u0627\u0626\u0645\u062a\u0647\u0627  \u060c \u0648\u0648\u0636\u0639\u0647\u0627 \u0639\u0644\u0649 \u0645\u0642\u064a\u0627\u0633 10pt.</p> </li> <li> <p>\u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631/\u0627\u0644\u062d\u0648\u0627\u062f\u062b: \u0625\u062c\u0645\u0627\u0644\u064a \u0639\u062f\u062f \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u0631\u0628\u0637\u0647\u0627 \u0628\u0640 CWEs \u0648\u062a\u0645 \u0648\u0636\u0639 \u062a\u0635\u0646\u064a\u0641 \u0645\u062d\u062f\u062f \u0644\u0647\u0627.</p> </li> <li> <p>\u0625\u062c\u0645\u0627\u0644\u064a CVEs: \u0625\u062c\u0645\u0627\u0644\u064a \u0639\u062f\u062f CVEs \u0641\u064a NVD DB \u0627\u0644\u062a\u064a \u062a\u0645 \u0631\u0628\u0637\u0647\u0627 \u0628\u0640 CWEs \u0648\u062a\u0645 \u0648\u0636\u0639 \u062a\u0635\u0646\u064a\u0641 \u0645\u062d\u062f\u062f \u0644\u0647\u0627.</p> </li> </ul>"},{"location":"ar/#2021-2017","title":"\u0639\u0644\u0627\u0642\u0627\u062a \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0644\u0639\u0627\u0645 2021 \u0645\u0639 \u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0639\u0627\u0645 2017","text":"<p>\u0647\u0646\u0627\u0643 \u0627\u0644\u0643\u062b\u064a\u0631 \u0645\u0646 \u0627\u0644\u062d\u062f\u064a\u062b \u0639\u0646 \u0627\u0644\u062a\u062f\u0627\u062e\u0644 \u0628\u064a\u0646 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u0639\u0634\u0631\u0629 \u0627\u0644\u0623\u0648\u0644\u0649. \u0648\u0645\u0646 \u062e\u0644\u0627\u0644 \u062a\u0639\u0631\u064a\u0641 \u0643\u0644 (\u0627\u0644\u0642\u0648\u0627\u0626\u0645 \u0627\u0644\u0645\u062f\u0631\u062c\u0629 \u0641\u064a CWEs)\u060c \u0648\u0644\u0643\u0646 \u0627\u0644\u0630\u064a \u064a\u0638\u0647\u0631 \u0644\u0646\u0627 \u0623\u0646\u0647 \u0644\u0627 \u064a\u0648\u062c\u062f \u0623\u064a \u062a\u062f\u0627\u062e\u0644 \u0641\u064a\u0647\u0627 \u0648\u0645\u0639 \u0630\u0644\u0643\u060c \u0645\u0646 \u0627\u0644\u0646\u0627\u062d\u064a\u0629 \u0627\u0644\u0646\u0638\u0631\u064a\u0629\u060c \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0643\u0648\u0646 \u0647\u0646\u0627\u0643 \u062a\u062f\u0627\u062e\u0644 \u0623\u0648 \u062a\u0623\u062b\u0631 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u062a\u0633\u0645\u064a\u0629. \u0648\u0646\u0642\u0648\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u062e\u0637\u0637\u0627\u062a Venn \u0644\u0625\u0638\u0647\u0627\u0631 \u0627\u0644\u062a\u062f\u0627\u062e\u0644 \u0643\u0645\u0627 \u0648\u0631\u062f \u0641\u064a \u0627\u0644\u0645\u062b\u0627\u0644 \u0623\u062f\u0646\u0627\u0647.</p> <p></p> <p>\u064a\u0645\u062b\u0644 \u0645\u062e\u0637\u0637 Venn \u0623\u0639\u0644\u0627\u0647 \u0627\u0644\u062a\u0631\u0627\u0628\u0637 \u0628\u064a\u0646 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0641\u064a \u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631 \u0644\u0639\u0627\u0645 2017. \u0648\u0623\u062b\u0646\u0627\u0621 \u0627\u0644\u0642\u064a\u0627\u0645 \u0628\u0630\u0644\u0643\u060c \u0623\u0635\u0628\u062d\u062a \u0628\u0636\u0639 \u0646\u0642\u0627\u0637 \u0623\u0633\u0627\u0633\u064a\u0629 \u0648\u0627\u0636\u062d\u0629:</p> <ol> <li> <p>\u0643\u0627\u0646 \u064a\u064f\u0631\u0649 \u0628\u0623\u0646 \u0647\u062c\u0648\u0645 - \u062b\u063a\u0631\u0627\u062a XSS  \u062a\u0646\u062a\u0645\u064a \u0641\u064a \u062d\u0642\u064a\u0642\u0629 \u0627\u0644\u0623\u0645\u0631 \u0625\u0644\u0649 \u062b\u063a\u0631\u0627\u062a \u0627\u0644\u062d\u0642\u0646(Injection) \u0644\u0623\u0646\u0647\u0627 \u0641\u064a \u0627\u0644\u0623\u0633\u0627\u0633 \u0639\u0628\u0627\u0631\u0629 \u0639\u0646 \u062d\u0642\u0646 \u0627\u0644\u0645\u062d\u062a\u0648\u0649. \u0628\u0627\u0644\u0646\u0638\u0631 \u0625\u0644\u0649 \u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0627\u0645 2021 \u060c \u0623\u0635\u0628\u062d \u0645\u0646 \u0627\u0644\u0648\u0627\u0636\u062d \u0623\u0646 ( XSS )\u0628\u062d\u0627\u062c\u0629 \u0625\u0644\u0649 \u0627\u0644\u0627\u0646\u062a\u0642\u0627\u0644 \u0625\u0644\u0649 \u0627\u0644\u062d\u0642\u0646(Injection).</p> </li> <li> <p>\u0627\u0644\u062a\u062f\u0627\u062e\u0644 \u0641\u064a\u0645\u0627 \u0628\u064a\u0646\u0647\u0645 \u063a\u0627\u0644\u0628\u064b\u0627 \u064a\u0643\u0648\u0646 \u0641\u064a \u0627\u062a\u062c\u0627\u0647 \u0648\u0627\u062d\u062f. \u063a\u0627\u0644\u0628\u064b\u0627 \u0645\u0627 \u0646\u0635\u0646\u0651\u0641 \u0627\u0644\u062b\u063a\u0631\u0629 \u0645\u0646 \u062e\u0644\u0627\u0644 \"\u0627\u0644\u0639\u064e\u0631\u064e\u0636\"\u060c \u0648\u0644\u064a\u0633 \u0627\u0644\u0633\u0628\u0628 \u0627\u0644\u062c\u0630\u0631\u064a (\u0627\u0644\u0630\u064a \u064a\u062d\u062a\u0645\u0644 \u0623\u0646 \u064a\u0643\u0648\u0646 \u0639\u0645\u064a\u0642\u064b\u0627). \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644\u060c \u0642\u062f \u062a\u0643\u0648\u0646 \" \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0627\u0644\u0645\u0643\u0634\u0648\u0641\u0629 \" \u0646\u062a\u064a\u062c\u0629 \"\u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u062e\u0627\u0637\u0626\u0629 \u0627\u0644\u0623\u0645\u0627\u0646\u060c \u0648\u0641\u064a \u0627\u0644\u063a\u0627\u0644\u0628 \u0644\u0646 \u062a\u0631\u0627\u0647\u0627 \u0628\u0627\u0644\u0625\u062a\u062c\u0627\u0647 \u0627\u0644\u0645\u0639\u0627\u0643\u0633. \u0646\u062a\u064a\u062c\u0629 \u0644\u0630\u0644\u0643\u060c \u064a\u062a\u0645 \u0631\u0633\u0645 \u0627\u0644\u0623\u0633\u0647\u0645 \u0641\u064a \u0645\u0646\u0627\u0637\u0642 \u0627\u0644\u062a\u0623\u062b\u0631 \u0644\u0644\u0625\u0634\u0627\u0631\u0629 \u0625\u0644\u0649 \u0627\u0644\u0625\u062a\u062c\u0627\u0647 \u0627\u0644\u0630\u064a \u064a\u062d\u062f\u062b \u0641\u064a\u0647.</p> </li> <li> <p>\u0623\u062d\u064a\u0627\u0646\u064b\u0627 \u064a\u062a\u0645 \u0631\u0633\u0645 \u0647\u0630\u0647 \u0627\u0644\u0645\u062e\u0637\u0637\u0627\u062a \u0628\u0634\u0643\u0644 \u0643\u0627\u0645\u0644 \u0643\u0645\u0627 \u0641\u064a  A06: 2021 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0648\u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u063a\u064a\u0631 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u062d\u062f\u064a\u062b. \u0641\u064a \u062d\u064a\u0646 \u0623\u0646 \u0628\u0639\u0636 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0645\u0646 \u0647\u0630\u0647 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0642\u062f \u064a\u0643\u0648\u0646 \u0627\u0644\u0633\u0628\u0628 \u0627\u0644\u062c\u0630\u0631\u064a \u0647\u064a \u062b\u063a\u0631\u0627\u062a \u0645\u0646 \u0627\u0644\u0637\u0631\u0641 \u0627\u0644\u062b\u0627\u0644\u062b\u060c \u0641\u0625\u0646\u0647 \u064a\u062a\u0645 \u0625\u062f\u0627\u0631\u062a\u0647\u0627 \u0628\u0634\u0643\u0644 \u0645\u062e\u062a\u0644\u0641 \u0648\u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a \u0645\u062e\u062a\u0644\u0641\u0629. \u0648\u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u0623\u062e\u0631\u0649 \u0627\u0644\u0645\u062a\u0628\u0642\u064a\u0629 \u062a\u0645\u062b\u0651\u0644 \u0627\u0644\u0637\u0631\u0641 \u0627\u0644\u0623\u0648\u0644.</p> </li> </ol>"},{"location":"ar/#_9","title":"\u0634\u0643\u0631\u0627\u064b \u0644\u0643\u0644 \u0645\u0646 \u0633\u0627\u0647\u0645 \u0645\u0639\u0646\u0627 \u0641\u064a \u062c\u0645\u0639 \u0647\u0630\u0647 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a","text":"<p>\u0633\u0627\u0647\u0645\u062a \u0627\u0644\u0645\u0646\u0638\u0645\u0627\u062a \u0627\u0644\u062a\u0627\u0644\u064a\u0629 (\u062c\u0646\u0628\u064b\u0627 \u0625\u0644\u0649 \u062c\u0646\u0628 \u0645\u0639 \u0628\u0639\u0636 \u0627\u0644\u0645\u0633\u0627\u0647\u0645\u064a\u0646-\u0627\u0644\u0645\u062a\u0628\u0631\u0639\u064a\u0646 \u0627\u0644\u0645\u062c\u0647\u0648\u0644\u064a\u0646) \u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0644\u0623\u0643\u062b\u0631 \u0645\u0646 500,000 \u062a\u0637\u0628\u064a\u0642 \u0648\u062c\u0639\u0644\u0647\u0627 \u0647\u064a \u0627\u0644\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0623\u0643\u0628\u0631 \u0648\u0627\u0644\u0623\u0643\u062b\u0631 \u0648\u0627\u0644\u0623\u0634\u0645\u0644 \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u0625\u062c\u0631\u0627\u0621 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0627\u0644\u0623\u0645\u0627\u0646 \u0639\u0644\u064a\u0647\u0627 \u0648\u062c\u0639\u0644\u0647\u0627 \u0641\u064a \u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a. \u0648\u062a\u0623\u0643\u062f \u0623\u0646\u0647 \u0645\u0646 \u063a\u064a\u0631 \u0627\u0633\u0647\u0627\u0645\u0627\u062a\u0643 \u0644\u0646 \u064a\u0643\u0648\u0646 \u0647\u0630\u0627 \u0645\u0645\u0643\u0646.</p> AppSec Labs GitLab Micro Focus Sqreen Cobalt.io HackerOne PenTest-Tools Veracode Contrast Security HCL Technologies Probely WhiteHat (NTT)"},{"location":"ar/#_10","title":"\u0634\u0643\u0631\u0627 \u0644\u062c\u0645\u064a\u0639 \u062f\u0627\u0639\u0645\u064a\u0646\u0627 \u0627\u0644\u0645\u0627\u0644\u064a\u064a\u0646","text":""},{"location":"ar/0x00_2021-notice/","title":"\u0627\u0644\u0627\u0635\u062f\u0627\u0631","text":"<p>24th September 2021</p>"},{"location":"ar/0x00_2021-notice/#_2","title":"\u0627\u0644\u0645\u0624\u0644\u0641\u0648\u0646 \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0648\u0646","text":"<ul> <li>Andrew van der Stock (twitter: @vanderaj)</li> <li>Brian Glas (twitter: @infosecdad)</li> <li>Neil Smithline (twitter: @appsecneil)</li> <li>Torsten Gigler (twitter: @torsten_tweet)</li> </ul>"},{"location":"ar/0x00_2021-notice/#_3","title":"\u0627\u0644\u0645\u0633\u0627\u0647\u0645\u064a\u0646","text":"<ul> <li>Orange Tsai @orange_8361, Author of A10-2021: Server Side Request Forgery</li> <li>Jim Manico @manicode and Jakub Ma\u0107kowski @kubamackowski - OWASP CheatSheets Coordination</li> </ul>"},{"location":"ar/0x00_2021-notice/#_4","title":"\u0627\u0644\u0645\u062a\u0631\u062c\u0645\u064a\u0646","text":"<ul> <li>Malek Aldossary, Mohammed Alsuhaymi,Thamer Alshammeri, Yara Eissa Abdu Ajeebi, Wesal Majeed Alobaidi, Amal Almutairi, Noura Abdulmohsen Alsubaie, Mohammed Ibrahem Alsheky, Zainab Hussain Al Hussain, FAHAD ALOTAIFEE, Nowayer, Saja Alqurashi, Raghad Aljabr, Majed alrhyel, Almaha, Mohammed AL Busaidi, Aljohara Alsubaie, Rana Gharmallah Alzahrani, Haniya, Fahdah Alhadayan , Ibtisam AlTuraif, Abeer Alwelaie , Nasser bin Hasen , Mubark Allaghbi, Roaa Aljohani</li> </ul>"},{"location":"ar/0x00_2021-notice/#_5","title":"\u0643\u064a\u0641 \u062a\u0642\u0648\u0645 \u0628\u0645\u0633\u0627\u0639\u062f\u062a\u0646\u0627","text":"<p>\u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u0645\u0631\u0627\u062d\u0644\u060c \u0646\u0637\u0644\u0628 \u0645\u0633\u0627\u0639\u062f\u062a\u0643 \u0641\u064a\u0645\u0627 \u064a\u0644\u064a:</p> <ul> <li>\u0639\u0644\u0645\u0627\u0621 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a: \u064a\u0631\u062c\u0649 \u0645\u0631\u0627\u062c\u0639\u0629 \u0627\u0644\u062a\u062d\u0644\u064a\u0644\u0627\u062a \u0627\u0644\u062a\u064a \u0642\u0645\u0646\u0627 \u0628\u0647\u0627.</li> <li>\u0645\u0635\u0645\u0651\u0645\u0648 \u0627\u0644\u0648\u064a\u0628: \u0646\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0646\u0633\u062e\u0629 \u0645\u062a\u0648\u0627\u0641\u0642\u0629 \u0645\u0639 \u0627\u0644\u0623\u062c\u0647\u0632\u0629 \u0627\u0644\u0645\u062d\u0645\u0648\u0644\u0629.</li> <li>\u0627\u0644\u0645\u062a\u0631\u062c\u0645\u0648\u0646: \u064a\u0631\u062c\u0649 \u0645\u0631\u0627\u062c\u0639\u0629 \u0627\u0644\u0646\u0635 \u0628\u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0625\u0646\u062c\u0644\u064a\u0632\u064a\u0629 \u0648\u0627\u0644\u062a\u0623\u0643\u062f \u0623\u0646\u0647 \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0631\u062c\u0645\u0629.</li> </ul>"},{"location":"ar/0x00_2021-notice/#_6","title":"\u0637\u0644\u0628\u0627\u062a \u0627\u0644\u0631\u0641\u0639 \u0648\u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062a\u0630\u0627\u0643\u0631","text":"<p>\u0641\u064a \u062d\u0627\u0644 \u0648\u062c\u0648\u062f \u0623\u064a \u0645\u0634\u0643\u0644\u0629 \u0623\u0648 \u062a\u0639\u062f\u064a\u0644\u060c \u064a\u0631\u062c\u0649 \u0632\u064a\u0627\u0631\u0629 \u0627\u0644\u0631\u0627\u0628\u0637 \u0627\u0644\u062a\u0627\u0644\u064a:</p> <ul> <li>https://github.com/OWASP/Top10/issues</li> </ul>"},{"location":"ar/0x01_2021-about-owasp/","title":"\u0639\u0646 \u0623\u0648\u0627\u0633\u0628","text":"<p>\u0645\u0634\u0631\u0648\u0639 \u0623\u0645\u0627\u0646 \u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u0648\u064a\u0628 \u0627\u0644\u0645\u0641\u062a\u0648\u062d \u0623\u0648\u0627\u0633\u0628 (OWASP) \u0647\u0648 \u0645\u062c\u062a\u0645\u0639 \u0645\u0641\u062a\u0648\u062d \u0627\u0644\u0645\u0635\u062f\u0631 \u0648\u064a\u0631\u0643\u0632 \u0639\u0644\u0649 \u062a\u0645\u0643\u064a\u0646 \u0627\u0644\u0645\u0624\u0633\u0633\u0627\u062a \u0645\u0646 \u062a\u0637\u0648\u064a\u0631 \u0648\u0634\u0631\u0627\u0621 \u0648\u0635\u064a\u0627\u0646\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u0648\u0627\u062c\u0647\u0627\u062a \u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a (APIs) \u0627\u0644\u062a\u064a \u064a\u0645\u0643\u0646 \u0627\u0644\u0648\u062b\u0648\u0642 \u0628\u0647\u0627.</p> <p>\u0641\u064a \u0623\u0648\u0627\u0633\u0628 \u0633\u062a\u062c\u062f:</p> <ul> <li>\u0623\u062f\u0648\u0627\u062a \u0648\u0645\u0639\u0627\u064a\u064a\u0631 \u0623\u0645\u0627\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642</li> <li>\u0627\u0644\u0623\u0628\u062d\u0627\u062b \u0627\u0644\u0645\u062a\u0637\u0648\u0631\u0629</li> <li>\u0627\u0644\u0636\u0648\u0627\u0628\u0637 \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629 \u0627\u0644\u0645\u0628\u0646\u064a\u0629 \u0639\u0644\u0649 \u0627\u0641\u0636\u0644 \u0627\u0644\u0633\u064a\u0627\u0633\u0627\u062a.</li> <li>\u0643\u062a\u0628 \u0643\u0627\u0645\u0644\u0629 \u0639\u0646 \u0627\u062e\u062a\u0628\u0627\u0631 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a\u060c \u0648\u062a\u0637\u0648\u064a\u0631 \u0648\u0645\u0631\u0627\u062c\u0639\u0629 \u0627\u0644\u0646\u0635 \u0627\u0644\u0628\u0631\u0645\u062c\u064a \u0627\u0644\u0622\u0645\u0646.</li> <li>\u0627\u0644\u0639\u0631\u0648\u0636 \u0627\u0644\u062a\u0642\u062f\u064a\u0645\u064a\u0629 \u0648  \u0645\u0642\u0627\u0637\u0639 \u0627\u0644\u0641\u064a\u062f\u064a\u0648</li> <li>Cheat sheets \u062d\u0648\u0644 \u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 \u0627\u0644\u0645\u0648\u0636\u0648\u0639\u0627\u062a \u0627\u0644\u0634\u0627\u0626\u0639\u0629</li> <li>\u0627\u062c\u062a\u0645\u0627\u0639\u0627\u062a \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0627\u062a</li> <li>\u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0648\u0627\u0644\u062a\u062f\u0631\u064a\u0628 \u0648\u0627\u0644\u0645\u0624\u062a\u0645\u0631\u0627\u062a.</li> <li> \u0645\u062c\u0645\u0648\u0639\u0627\u062a \u0642\u0648\u0642\u0644 </li> </ul> <p>\u0627\u0639\u0631\u0641 \u0627\u0644\u0645\u0632\u064a\u062f \u0639\u0644\u0649: https://owasp.org.</p> <p>\u062c\u0645\u064a\u0639 \u0623\u062f\u0648\u0627\u062a \u0623\u0648\u0627\u0633\u0628 \u0648\u0627\u0644\u0645\u0633\u062a\u0646\u062f\u0627\u062a \u0648\u0645\u0642\u0627\u0637\u0639 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0627\u0644\u0639\u0631\u0648\u0636 \u0627\u0644\u062a\u0642\u062f\u064a\u0645\u064a\u0629 \u0648\u0627\u0644\u0641\u0635\u0648\u0644 \u0645\u062c\u0627\u0646\u064a\u0629 \u0648\u0645\u0641\u062a\u0648\u062d\u0629 \u0644\u0623\u064a \u0634\u062e\u0635 \u0645\u0647\u062a\u0645 \u0628\u062a\u062d\u0633\u064a\u0646 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a.</p> <p>\u0646\u062d\u0646 \u0646\u062f\u0639\u0648 \u0625\u0644\u0649 \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0628\u0627\u0639\u062a\u0628\u0627\u0631\u0647 \u0645\u0634\u0643\u0644\u0629 \u062a\u062a\u0639\u0644\u0642 \u0628\u0627\u0644\u0623\u0634\u062e\u0627\u0635 \u0648\u0627\u0644\u0633\u064a\u0627\u0633\u0627\u062a \u0627\u0644\u062a\u0642\u0646\u064a\u0629\u060c \u0644\u0623\u0646 \u0627\u0644\u0623\u0633\u0627\u0644\u064a\u0628 \u0627\u0644\u0623\u0643\u062b\u0631 \u0641\u0627\u0639\u0644\u064a\u0629 \u0644\u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u062a\u062a\u0637\u0644\u0651\u0628 \u062a\u062d\u0633\u064a\u0646\u0627\u062a \u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0627\u0644\u0627\u062a.</p> <p>\u0623\u0648\u0627\u0633\u0628 \u0646\u0648\u0639 \u062c\u062f\u064a\u062f \u0645\u0646 \u0627\u0644\u062a\u0646\u0638\u064a\u0645. \u064a\u0633\u0645\u062d \u0644\u0646\u0627 \u0628\u0627\u0644\u062a\u062d\u0631\u0651\u0631  \u0645\u0646 \u0627\u0644\u0636\u063a\u0648\u0637 \u0627\u0644\u062a\u062c\u0627\u0631\u064a\u0629 \u0628\u062a\u0642\u062f\u064a\u0645 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u063a\u064a\u0631 \u0645\u062a\u062d\u064a\u0632\u0629 \u0648\u0639\u0645\u0644\u064a\u0629 \u0648\u0641\u0639\u0627\u0644\u0629 \u0645\u0646 \u062d\u064a\u062b \u0627\u0644\u062a\u0643\u0644\u0641\u0629 \u062d\u0648\u0644 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a.</p> <p>\u0623\u0648\u0627\u0633\u0628 \u0644\u064a\u0633\u062a \u062a\u0627\u0628\u0639\u0629 \u0644\u0623\u064a \u0634\u0631\u0643\u0629 \u062a\u0642\u0646\u064a\u0629\u060c \u0639\u0644\u0649 \u0627\u0644\u0631\u063a\u0645 \u0645\u0646 \u0623\u0646\u0646\u0627 \u0646\u062f\u0639\u0645 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0633\u062a\u0646\u064a\u0631 \u0644\u062a\u0642\u0646\u064a\u0627\u062a \u0627\u0644\u0623\u0645\u0646 \u0627\u0644\u062a\u062c\u0627\u0631\u064a\u0629. \u062a\u0646\u062a\u062c \u0623\u0648\u0627\u0633\u0628 \u0623\u0646\u0648\u0627\u0639\u064b\u0627 \u0639\u062f\u064a\u062f\u0629 \u0645\u0646 \u0627\u0644\u0645\u0648\u0627\u062f \u0628\u0637\u0631\u064a\u0642\u0629 \u062a\u0639\u0627\u0648\u0646\u064a\u0629 \u0648\u0634\u0641\u0627\u0641\u0629 \u0648\u0645\u0646\u0641\u062a\u062d\u0629.</p> <p>\u0645\u0624\u0633\u0633\u0629 \u0623\u0648\u0627\u0633\u0628 \u0647\u064a \u0643\u064a\u0627\u0646 \u063a\u064a\u0631 \u0631\u0628\u062d\u064a \u0648\u0627\u0644\u0630\u064a \u064a\u0636\u0645\u0646 \u0646\u062c\u0627\u062d \u0627\u0644\u0645\u0634\u0631\u0648\u0639 \u0639\u0644\u0649 \u0627\u0644\u0645\u062f\u0649 \u0627\u0644\u0637\u0648\u064a\u0644. \u0643\u0644 \u0634\u062e\u0635 \u0645\u0631\u062a\u0628\u0637 \u0628\u0640 \u0623\u0648\u0627\u0633\u0628 \u062a\u0642\u0631\u064a\u0628\u064b\u0627 \u0645\u062a\u0637\u0648\u0639\u060c \u0628\u0645\u0627 \u0641\u064a \u0630\u0644\u0643 \u0645\u062c\u0644\u0633 \u0623\u0648\u0627\u0633\u0628 \u0648\u0642\u0627\u062f\u0629 \u0627\u0644\u0641\u0631\u0648\u0639 \u0648\u0642\u0627\u062f\u0629 \u0627\u0644\u0645\u0634\u0631\u0648\u0639 \u0648\u0623\u0639\u0636\u0627\u0621 \u0627\u0644\u0645\u0634\u0631\u0648\u0639. \u0646\u062d\u0646 \u0646\u062f\u0639\u0645 \u0627\u0644\u0623\u0628\u062d\u0627\u062b \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0627\u0644\u0645\u064f\u0628\u062a\u0643\u0631\u0629 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0627\u0644\u0645\u0646\u062d \u0648\u0627\u0644\u0628\u0646\u064a\u0629 \u0627\u0644\u062a\u062d\u062a\u064a\u0629.</p>"},{"location":"ar/0x01_2021-about-owasp/#_2","title":"\u062d\u0642\u0648\u0642 \u0627\u0644\u0646\u0634\u0631 \u0648\u0627\u0644\u062a\u0631\u062e\u064a\u0635","text":"<p>\u062d\u0642\u0648\u0642 \u0627\u0644\u0646\u0634\u0631 \u00a9 \u0645\u0624\u0633\u0633\u0629 \u0623\u0648\u0627\u0633\u0628 2003-2025. \u062a\u0645 \u0625\u0635\u062f\u0627\u0631 \u0647\u0630\u0627 \u0627\u0644\u0645\u0633\u062a\u0646\u062f \u0628\u0645\u0648\u062c\u0628 \u062a\u0631\u062e\u064a\u0635 \u0627\u0644\u0625\u0628\u062f\u0627\u0639\u064a \u0627\u0644\u062a\u0631\u062e\u064a\u0635 \u0628\u0627\u0644\u0645\u062b\u0644 4.0. \u0644\u0623\u064a \u0625\u0639\u0627\u062f\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0648 \u062a\u0648\u0632\u064a\u0639\u060c \u064a\u062c\u0628 \u0623\u0646 \u062a\u0648\u0636\u062d \u0644\u0644\u0622\u062e\u0631\u064a\u0646 \u0634\u0631\u0648\u0637 \u062a\u0631\u062e\u064a\u0635 \u0647\u0630\u0627 \u0627\u0644\u0639\u0645\u0644.</p>"},{"location":"ar/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/","title":"\u0643\u064a\u0641 \u062a\u0628\u062f\u0623 \u0628\u0631\u0646\u0627\u0645\u062c \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0645\u0639 \u0623\u0648\u0627\u0633\u0628 \u2013 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631","text":"<p>\u0641\u064a \u0627\u0644\u0633\u0627\u0628\u0642\u060c \u0644\u0645 \u064a\u062a\u0645 \u062a\u0635\u0645\u064a\u0645 \u0623\u0648\u0627\u0633\u0628 \u2013 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0623\u0628\u062f\u064b\u0627 \u0644\u064a\u0643\u0648\u0646 \u0623\u0633\u0627\u0633\u064b\u0627 \u0644\u0628\u0631\u0627\u0645\u062c \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a. \u0648\u0645\u0639 \u0630\u0644\u0643\u060c \u0645\u0646 \u0627\u0644\u0636\u0631\u0648\u0631\u064a \u0623\u0646 \u062a\u0628\u062f\u0623 \u0645\u0646 \u0645\u0643\u0627\u0646\u064d \u0645\u0627\u060c \u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 \u0627\u0644\u0645\u0624\u0633\u0633\u0627\u062a \u0627\u0644\u062a\u064a \u0628\u062f\u0623\u062a \u0644\u0644\u062a\u0648\u0651 \u0641\u064a \u0631\u062d\u0644\u0629 \u0623\u0645\u0627\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0647\u0627. \u062a\u064f\u0639\u062f \u0623\u0648\u0627\u0633\u0628 \u2013 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0644\u0639\u0627\u0645 2021 \u0628\u062f\u0627\u064a\u0629 \u062c\u064a\u0651\u062f\u0629 \u0643\u062e\u0637 \u0623\u0633\u0627\u0633 \u0644\u0642\u0648\u0627\u0626\u0645 \u0627\u0644\u0645\u0631\u0627\u062c\u0639\u0629 \u0648\u0645\u0627 \u0625\u0644\u0649 \u0630\u0644\u0643\u060c \u0648\u0644\u0643\u0646\u0647\u0627 \u0644\u064a\u0633\u062a \u0643\u0627\u0641\u064a\u0629 \u0641\u064a \u062d\u062f \u0630\u0627\u062a\u0647\u0627.</p>"},{"location":"ar/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#_2","title":"\u0627\u0644\u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u0623\u0648\u0644\u0649: \u062a\u062d\u062f\u064a\u062f \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0648\u0627\u0644\u0623\u0647\u062f\u0627\u0641 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0628\u0631\u0646\u0627\u0645\u062c \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a","text":"<p>\u062a\u062d\u0627\u0648\u0644 \u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 \u0628\u0631\u0627\u0645\u062c \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a (AppSec) \u0627\u0644\u062c\u0631\u064a \u0642\u0628\u0644 \u0623\u0646 \u062a\u062a\u0645\u0643\u0646 \u0645\u0646 \u0627\u0644\u0632\u062d\u0641 \u0623\u0648 \u0627\u0644\u0645\u0634\u064a. \u0647\u0630\u0647 \u0627\u0644\u062c\u0647\u0648\u062f \u0645\u062d\u0643\u0648\u0645 \u0639\u0644\u064a\u0647\u0627 \u0628\u0627\u0644\u0641\u0634\u0644. \u0646\u062d\u0646 \u0646\u0634\u062c\u0651\u0639 \u0628\u0634\u062f\u0651\u0629 \u0645\u062f\u0631\u0627\u0621 \u0623\u0645\u0646 \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a CISOs \u0648\u0643\u0628\u0627\u0631 \u0645\u062e\u062a\u0635\u0651\u064a \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0639\u0644\u0649 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u0645\u0648\u0630\u062c \u0623\u0648\u0627\u0633\u0628 \u0644\u0646\u0636\u062c \u0648\u0636\u0645\u0627\u0646 \u0627\u0644\u0628\u0631\u0627\u0645\u062c SAMM \u0644\u062a\u062d\u062f\u064a\u062f \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 \u0648\u0645\u062c\u0627\u0644\u0627\u062a \u0627\u0644\u062a\u062d\u0633\u064a\u0646 \u0639\u0644\u0649 \u0645\u062f\u0649 \u0641\u062a\u0631\u0629 \u062a\u062a\u0631\u0627\u0648\u062d \u0645\u0627  \u0628\u064a\u0646 1-3 \u0633\u0646\u0648\u0627\u062a. \u062a\u062a\u0645\u062b\u0651\u0644 \u0627\u0644\u062e\u0637\u0648\u0629 \u0627\u0644\u0623\u0648\u0644\u0649 \u0641\u064a \u062a\u0642\u064a\u064a\u0645 \u0648\u0636\u0639\u0643 \u0627\u0644\u062d\u0627\u0644\u064a\u060c \u0648\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0641\u064a \u0627\u0644\u062d\u0648\u0643\u0645\u0629 \u0648\u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0648\u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0648\u0627\u0644\u062a\u062d\u0642\u0642 \u0648\u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u062d\u0644\u0651\u0647\u0627 \u0639\u0644\u0649 \u0627\u0644\u0641\u0648\u0631 \u0645\u0642\u0627\u0628\u0644 \u062a\u0644\u0643 \u0627\u0644\u062a\u064a \u064a\u0645\u0643\u0646 \u0623\u0646 \u062a\u0646\u062a\u0638\u0631\u060c \u0648\u062a\u062d\u062f\u064a\u062f \u0623\u0648\u0644\u0648\u064a\u0627\u062a \u062a\u0646\u0641\u064a\u0630 \u0623\u0648 \u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u062e\u0645\u0633\u0629 \u0639\u0634\u0631 \u0644\u0646\u0645\u0648\u0630\u062c \u0623\u0648\u0627\u0633\u0628 \u0644\u0646\u0636\u062c \u0648\u0636\u0645\u0627\u0646 \u0627\u0644\u0628\u0631\u0627\u0645\u062c (SAMM). \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0633\u0627\u0639\u062f\u0643 \u0646\u0645\u0648\u0630\u062c \u0623\u0648\u0627\u0633\u0628 (SAMM) \u0641\u064a \u0628\u0646\u0627\u0621 \u0648\u0642\u064a\u0627\u0633 \u0627\u0644\u062a\u062d\u0633\u064a\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0644\u0636\u0645\u0627\u0646 \u0627\u0644\u062c\u0647\u0648\u062f.</p>"},{"location":"ar/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#_3","title":"\u0627\u0644\u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u062b\u0627\u0646\u064a\u0629: \u0627\u0644\u062a\u062e\u0637\u064a\u0637 \u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f \u0641\u064a \u062f\u0648\u0631\u0629 \u062d\u064a\u0627\u0629 \u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0628\u0637\u0631\u064a\u0642\u0629 \u0622\u0645\u0646\u0629","text":"<p>\u062a\u0642\u0644\u064a\u062f\u064a\u064b\u0627\u060c \u0627\u0644\u062d\u0641\u0627\u0638 \u0639\u0644\u0649 \u0645\u0627 \u064a\u0633\u0645\u0649 \"\u0623\u062d\u0627\u062f\u064a \u0627\u0644\u0642\u0631\u0646\"\u060c \u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f \u0647\u0648 \u0623\u0633\u0647\u0644 \u0637\u0631\u064a\u0642\u0629 \u0644\u062a\u062d\u0642\u064a\u0642 \u0623\u0643\u0628\u0631 \u0642\u062f\u0631 \u0645\u0646 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0648\u062a\u0648\u0633\u064a\u0639 \u0646\u0637\u0627\u0642 \u0645\u0648\u0627\u0631\u062f \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0645\u0639 \u0633\u0631\u0639\u0629 \u0641\u0631\u0642 \u0627\u0644\u062a\u0637\u0648\u064a\u0631\u060c \u0648\u0627\u0644\u062a\u064a \u062a\u0632\u064a\u062f \u0643\u0644 \u0639\u0627\u0645 \u0641\u0642\u0637.</p> <p>\u064a\u0639\u062a\u0628\u0631 \u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f \u0623\u0633\u0647\u0644 \u0637\u0631\u064a\u0642\u0629 \u0648\u0623\u064a\u0636\u064b\u0627 \u0627\u0644\u0637\u0631\u064a\u0642\u0629 \u0627\u0644\u0623\u0643\u062b\u0631 \u0623\u0645\u0627\u0646\u064b\u0627\u060c \u0648\u064a\u062c\u0628 \u0623\u0646 \u062a\u062a\u0636\u0645\u0651\u0646 \u062b\u0642\u0627\u0641\u0629 \u0627\u0644\u0634\u0631\u0627\u0643\u0629 \u0627\u0644\u0639\u0645\u064a\u0642\u0629 \u0628\u064a\u0646 \u0641\u0631\u064a\u0642 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0648\u0627\u0644\u0641\u0631\u064a\u0642 \u0627\u0644\u0623\u0645\u0646\u064a\u060c \u0648\u064a\u064f\u0641\u0636\u0651\u0644 \u0623\u0646 \u064a\u0643\u0648\u0646\u0627 \u0646\u0641\u0633 \u0627\u0644\u0641\u0631\u064a\u0642. \u064a\u0647\u062f\u0641 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f \u0625\u0644\u0649 \u0627\u0644\u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u0645\u064f\u0633\u062a\u0645\u0631 \u0644\u0644\u0628\u062f\u0627\u0626\u0644 \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646\u0629 \u0648\u0642\u064a\u0627\u0633\u0647\u0627 \u0648\u0627\u0643\u062a\u0634\u0627\u0641\u0647\u0627 \u0648\u0627\u0633\u062a\u0628\u062f\u0627\u0644\u0647\u0627 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0648\u062c\u0648\u062f \u0645\u0643\u062a\u0628\u0629 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0645\u0624\u0633\u0633\u0629 \u0645\u0646 \u0627\u0644\u0628\u062f\u0627\u0626\u0644 \u0627\u0644\u0645\u0624\u0645\u0651\u0646\u0629\u060c \u0645\u0639 \u0623\u062f\u0648\u0627\u062a \u0644\u0644\u0645\u0633\u0627\u0639\u062f\u0629 \u0641\u064a \u0645\u0639\u0631\u0641\u0629 \u0623\u064a\u0646 \u064a\u0645\u0643\u0646 \u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u062a\u062d\u0633\u064a\u0646\u0627\u062a \u0645\u0646 \u062e\u0644\u0627\u0644 \u0627\u0639\u062a\u0645\u0627\u062f \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f. \u064a\u0633\u0645\u062d \u0630\u0644\u0643 \u0644\u0623\u062f\u0648\u0627\u062a \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u062d\u0627\u0644\u064a\u0629 \u0628\u0627\u0644\u0625\u0628\u0644\u0627\u063a \u0639\u0646 \u0627\u0644\u0628\u0646\u064a\u0627\u062a \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646\u0629 \u0648\u0645\u0633\u0627\u0639\u062f\u0629 \u0641\u0631\u0642 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0639\u0644\u0649 \u0627\u0644\u062a\u0635\u062d\u064a\u062d \u0627\u0644\u0630\u0627\u062a\u064a \u0628\u0639\u064a\u062f\u064b\u0627 \u0639\u0646 \u0627\u0644\u0628\u062f\u0627\u0626\u0644 \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646\u0629.</p> <p>\u0642\u062f \u064a\u0628\u062f\u0648 \u0623\u0646 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f \u064a\u062a\u0637\u0644\u0651\u0628 \u0627\u0644\u0643\u062b\u064a\u0631 \u0645\u0646 \u0627\u0644\u0648\u0642\u062a\u060c \u0648\u0644\u0643\u0646 \u064a\u062c\u0628 \u0623\u0646 \u064a\u062a\u0645 \u0628\u0646\u0627\u0624\u0647 \u062a\u062f\u0631\u064a\u062c\u064a\u064b\u0627 \u0645\u0639 \u0645\u0631\u0648\u0631 \u0627\u0644\u0648\u0642\u062a. \u0647\u0646\u0627\u0643 \u0623\u0634\u0643\u0627\u0644 \u0623\u062e\u0631\u0649 \u0645\u0646 \u0628\u0631\u0627\u0645\u062c \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a\u060c \u0644\u0627\u0633\u064a\u0645\u0627 \u062f\u0648\u0631\u0629 \u062d\u064a\u0627\u0629 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0622\u0645\u0646 \u0623\u062c\u0627\u064a\u0644 \u0645\u0627\u064a\u0643\u0631\u0648\u0633\u0648\u0641\u062a Microsoft Agile. \u0644\u064a\u0633\u062a \u0628\u0627\u0644\u0636\u0631\u0648\u0631\u0629 \u0623\u0646 \u062a\u0646\u0627\u0633\u0628 \u0645\u0646\u0647\u062c\u064a\u0651\u0629 \u0628\u0631\u0646\u0627\u0645\u062c \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0643\u0644 \u0627\u0644\u0623\u0639\u0645\u0627\u0644.</p>"},{"location":"ar/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#_4","title":"\u0627\u0644\u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u062b\u0627\u0644\u062b\u0629: \u062a\u0646\u0641\u064a\u0630 \u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u0645\u0647\u062f \u0645\u0639 \u0641\u0631\u0642 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643","text":"<p>\u064a\u062a\u0645 \u0628\u0646\u0627\u0621 \u0645\u0646\u0647\u062c\u064a\u0651\u0629 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f \u0628\u0627\u0644\u0645\u0648\u0627\u0641\u0642\u0629 \u0648\u0627\u0644\u0645\u0634\u0627\u0631\u0643\u0629 \u0627\u0644\u0645\u0628\u0627\u0634\u0631\u0629 \u0645\u0646 \u0642\u0628\u0644 \u0641\u0631\u0642 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0648\u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0630\u0627\u062a \u0627\u0644\u0635\u0650\u0644\u0629. \u064a\u062c\u0628 \u0645\u0648\u0627\u0621\u0645\u0629 \u0645\u0646\u0647\u062c\u064a\u0651\u0629 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f \u0628\u0634\u0643\u0644 \u0627\u0633\u062a\u0631\u0627\u062a\u064a\u062c\u064a \u0645\u0639 \u0627\u0644\u0623\u0639\u0645\u0627\u0644 \u0648\u0627\u0644\u0645\u0633\u0627\u0639\u062f\u0629 \u0641\u064a \u062a\u0642\u062f\u064a\u0645 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0623\u0643\u062b\u0631 \u0623\u0645\u0627\u0646\u064b\u0627 \u0628\u0634\u0643\u0644 \u0623\u0633\u0631\u0639. \u064a\u062c\u0628 \u0623\u0646 \u064a\u0643\u0648\u0646 \u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f \u062a\u0645\u0631\u064a\u0646\u064b\u0627 \u0634\u0627\u0645\u0644\u064b\u0627 \u064a\u064f\u063a\u0637\u064a \u0627\u0644\u0646\u0638\u0627\u0645 \u0627\u0644\u0628\u064a\u0626\u064a \u0644\u0644\u0645\u0624\u0633\u0633\u0629 \u0623\u0648 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0628\u0627\u0644\u0643\u0627\u0645\u0644\u060c \u0648\u0644\u064a\u0633 \u0623\u062f\u0627\u0629 \u0645\u0633\u0627\u0639\u062f\u0629 \u0644\u0643\u0644 \u062a\u0637\u0628\u064a\u0642\u060c \u0643\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0627\u0644\u0632\u0645\u0646 \u0627\u0644\u0633\u0627\u0628\u0642.</p>"},{"location":"ar/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#_5","title":"\u0627\u0644\u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u0631\u0627\u0628\u0639\u0629: \u062a\u0631\u062d\u064a\u0644 \u062c\u0645\u064a\u0639 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062d\u0627\u0644\u064a\u0629 \u0648\u0627\u0644\u0642\u0627\u062f\u0645\u0629 \u0625\u0644\u0649 \u0645\u0646\u0647\u062c\u064a\u0629 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u0645\u0647\u062f","text":"<p>\u0623\u0636\u0650\u0641 \u0623\u062f\u0648\u0627\u062a \u0627\u0643\u062a\u0634\u0627\u0641 \u0645\u0646\u0647\u062c\u064a\u0651\u0629 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f \u0623\u062b\u0646\u0627\u0621 \u062a\u0637\u0648\u064a\u0631\u0647\u0627 \u0648\u0642\u0645 \u0628\u062a\u0642\u062f\u064a\u0645 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0644\u0641\u0631\u0642 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0644\u062a\u062d\u0633\u064a\u0646 \u0623\u0645\u0627\u0646 \u062a\u0637\u0628\u064a\u0642\u0627\u062a\u0647\u0645 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0643\u064a\u0641\u064a\u0629 \u0627\u0639\u062a\u0645\u0627\u062f\u0647\u0645 \u0627\u0644\u0645\u0628\u0627\u0634\u0631 \u0644\u0639\u0646\u0627\u0635\u0631 \u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f. \u0648\u0628\u0645\u062c\u0631\u062f \u0627\u0639\u062a\u0645\u0627\u062f \u062c\u0627\u0646\u0628 \u0645\u0646 \u062c\u0648\u0627\u0646\u0628 \u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f\u060c \u064a\u062c\u0628 \u0639\u0644\u0649 \u0627\u0644\u0645\u0624\u0633\u0633\u0627\u062a \u062a\u0646\u0641\u064a\u0630 \u0641\u062d\u0648\u0635\u0627\u062a \u062a\u0643\u0627\u0645\u0644 \u0645\u0633\u062a\u0645\u0631\u0629 \u0644\u0641\u062d\u0635 \u0627\u0644\u0634\u0641\u0631\u0629 \u0627\u0644\u062d\u0627\u0644\u064a\u0629 \u0648\u0639\u0645\u0644\u064a\u0627\u062a \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0648\u0635\u0648\u0644 \u0627\u0644\u062a\u064a \u062a\u0633\u062a\u062e\u062f\u0645 \u0628\u062f\u0627\u0626\u0644 \u0645\u062d\u0638\u0648\u0631\u0629 \u0648\u062a\u062d\u0630\u0651\u0631 \u0623\u0648 \u062a\u0645\u0646\u0639 \u0625\u0646\u0634\u0627\u0624\u0647\u0627 \u0623\u0648 \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0647\u0627. \u0647\u0630\u0627 \u064a\u0645\u0646\u0639 \u0627\u0644\u062e\u064a\u0627\u0631\u0627\u062a \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646\u0629 \u0645\u0646 \u0627\u0644\u062a\u0633\u0644\u0644 \u0625\u0644\u0649 \u0627\u0644\u0634\u0641\u0631\u0629 \u0628\u0645\u0631\u0648\u0631 \u0627\u0644\u0648\u0642\u062a\u060c \u0645\u0645\u0627 \u064a\u0645\u0646\u0639 \u0627\u0644\u0623\u0639\u0628\u0627\u0621 \u0627\u0644\u062a\u0642\u0646\u064a\u0629 \u0648\u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u063a\u064a\u0631 \u0627\u0644\u0622\u0645\u0646 \u0627\u0644\u0645\u064f\u0639\u064a\u0628. \u064a\u062c\u0628 \u0623\u0646 \u062a\u0631\u062a\u0628\u0637 \u0647\u0630\u0647 \u0627\u0644\u062a\u062d\u0630\u064a\u0631\u0627\u062a \u0628\u0627\u0644\u0628\u062f\u064a\u0644 \u0627\u0644\u0622\u0645\u0646\u060c \u062d\u062a\u0649 \u064a\u062a\u0645 \u0625\u0639\u0637\u0627\u0621 \u0641\u0631\u0642 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0625\u062c\u0627\u0628\u0629 \u0627\u0644\u0635\u062d\u064a\u062d\u0629 \u0639\u0644\u0649 \u0627\u0644\u0641\u0648\u0631. \u064a\u0645\u0643\u0646\u0647\u0645 \u0625\u0639\u0627\u062f\u0629 \u0628\u0646\u0627\u0621 \u0648\u0627\u0639\u062a\u0645\u0627\u062f \u0645\u0643\u0648\u0651\u0646 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f \u0628\u0633\u0631\u0639\u0629.</p>"},{"location":"ar/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#_6","title":"\u0627\u0644\u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u062e\u0627\u0645\u0633\u0629: \u0627\u062e\u062a\u0628\u0627\u0631 \u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f \u0625\u0646 \u0643\u0627\u0646 \u0642\u062f \u062e\u0641\u0651\u0641 \u0645\u0646 \u0627\u0644\u0645\u0634\u0627\u0643\u0644 \u0627\u0644\u0645\u0648\u062c\u0648\u062f\u0629 \u0641\u064a \u0623\u0648\u0627\u0633\u0628 \u2013 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631","text":"<p>\u064a\u062c\u0628 \u0623\u0646 \u062a\u0639\u0627\u0644\u062c \u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0645\u064f\u0645\u0647\u062f \u0627\u0644\u0645\u0634\u0627\u0643\u0644 \u0627\u0644\u0643\u0628\u064a\u0631\u0629 \u0641\u064a \u0623\u0648\u0627\u0633\u0628 \u2013 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631\u060c \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644\u060c \u0643\u064a\u0641\u064a\u0629 \u0627\u0643\u062a\u0634\u0627\u0641 \u0623\u0648 \u0625\u0635\u0644\u0627\u062d \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u0636\u0639\u064a\u0641\u0629 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627\u060c \u0623\u0648 \u0645\u0643\u0648\u0651\u0646 \u0628\u064a\u0626\u0629 \u062a\u0637\u0648\u064a\u0631 \u0645\u062a\u0643\u0627\u0645\u0644\u0629 IDE \u0644\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0646\u0635 \u0627\u0644\u0628\u0631\u0645\u062c\u064a \u0627\u0644\u062b\u0627\u0628\u062a \u0644\u0627\u0643\u062a\u0634\u0627\u0641 \u0627\u0644\u062d\u0642\u0646 \u0623\u0648 \u062d\u062a\u0649 \u0645\u0643\u062a\u0628\u0629 \u0645\u0639\u0631\u0648\u0641\u0629 \u0628\u0623\u0646\u0647\u0627 \u0622\u0645\u0646\u0629 \u0636\u062f \u0627\u0644\u062d\u0642\u0646\u060c \u0645\u062b\u0644 \u0645\u0643\u062a\u0628\u0629 React \u0623\u0648 Vue. \u0643\u0644\u0645\u0627 \u0632\u0627\u062f \u0639\u062f\u062f \u0647\u0630\u0647 \u0627\u0644\u0628\u062f\u0627\u0626\u0644 \u0627\u0644\u0622\u0645\u0646\u0629 \u0627\u0644\u062a\u064a \u064a\u062a\u0645 \u062a\u0648\u0641\u064a\u0631\u0647\u0627 \u0644\u0644\u0641\u0631\u0642\u060c \u0643\u0627\u0646 \u0630\u0644\u0643 \u0623\u0641\u0636\u0644. \u062a\u062a\u0645\u062b\u0651\u0644 \u0625\u062d\u062f\u0649 \u0627\u0644\u0645\u0647\u0627\u0645 \u0627\u0644\u062d\u064a\u0648\u064a\u0629 \u0644\u0641\u0631\u064a\u0642 \"\u0623\u0645\u0627\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a\" \u0641\u064a \u0627\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0623\u0646 \u0623\u0645\u0627\u0646 \u0647\u0630\u0647 \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u064a\u062a\u0645 \u062a\u0642\u064a\u064a\u0645\u0647 \u0648\u062a\u062d\u0633\u064a\u0646\u0647 \u0628\u0627\u0633\u062a\u0645\u0631\u0627\u0631. \u0648\u0628\u0645\u062c\u0631\u062f \u062a\u062d\u0633\u064a\u0646\u0647\u0627\u060c \u064a\u062c\u0628 \u0623\u0646 \u064a\u064f\u0634\u064a\u0631 \u0634\u0643\u0644 \u0645\u0646 \u0623\u0634\u0643\u0627\u0644 \u0645\u0633\u0627\u0631 \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0645\u0639 \u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0627\u0644\u0645\u0643\u0648\u0651\u0646 \u0625\u0644\u0649 \u0623\u0646\u0647 \u064a\u062c\u0628 \u0625\u062c\u0631\u0627\u0621 \u062a\u0631\u0642\u064a\u0629\u060c \u0648\u064a\u064f\u0641\u0636\u0651\u0644 \u0623\u0646 \u064a\u0643\u0648\u0646 \u0630\u0644\u0643 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627\u060c \u0648\u0625\u0646 \u0644\u0645 \u064a\u0643\u0646 \u0627\u0644\u0623\u0645\u0631 \u0643\u0630\u0644\u0643\u060c \u064a\u062c\u0628 \u0639\u0644\u0649 \u0627\u0644\u0623\u0642\u0644 \u062a\u0633\u0644\u064a\u0637 \u0627\u0644\u0636\u0648\u0621 \u0639\u0644\u0649 \u0627\u0644\u0644\u0648\u062d\u0629 \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629 \u0644\u0644\u062a\u062d\u0643\u0645 \u0623\u0648 \u0645\u0627 \u0634\u0627\u0628\u0647 \u0630\u0644\u0643.</p>"},{"location":"ar/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#_7","title":"\u0627\u0644\u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u0633\u0627\u062f\u0633\u0629: \u0642\u0645 \u0628\u0628\u0646\u0627\u0621 \u0628\u0631\u0646\u0627\u0645\u062c\u0643 \u0641\u064a \u0628\u064a\u0626\u0629 \u0628\u0631\u0645\u062c\u064a\u0629 \u0622\u0645\u0646\u0629","text":"<p>\u064a\u062c\u0628 \u0623\u0644\u0627 \u064a\u0642\u062a\u0635\u0631 \u0627\u0639\u062a\u0645\u0627\u062f\u0643 \u0639\u0644\u0649 \u0623\u0648\u0627\u0633\u0628- \u0627\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0641\u0642\u0637. \u0641\u0647\u0648 \u064a\u063a\u0637\u064a \u0641\u0642\u0637 10 \u0641\u0626\u0627\u062a \u0645\u0646 \u0627\u0644\u0645\u062e\u0627\u0637\u0631. \u0646\u062d\u0646 \u0646\u0634\u062c\u0639 \u0627\u0644\u0645\u0624\u0633\u0633\u0627\u062a \u0628\u0634\u062f\u0629 \u0639\u0644\u0649 \u0627\u0639\u062a\u0645\u0627\u062f \u0645\u0639\u064a\u0627\u0631 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u0625\u0636\u0627\u0641\u0629 \u0645\u0643\u0648\u0646\u0627\u062a \u0645\u0646\u0647\u062c\u064a\u0629 \u0627\u0644\u0637\u0631\u0642 \u0627\u0644\u0645\u0645\u0647\u062f\u0629 \u0648\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u0648\u0649 1 \u06482 \u06483 \u062a\u062f\u0631\u064a\u062c\u064a\u064b\u0627\u060c \u0627\u0639\u062a\u0645\u0627\u062f\u064b\u0627 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0645\u0637\u0648\u0631\u0629.</p>"},{"location":"ar/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#_8","title":"\u0627\u0644\u0630\u0647\u0627\u0628 \u0625\u0644\u0649 \u0623\u0628\u0639\u062f \u0645\u0646 \u0630\u0644\u0643","text":"<p>\u062c\u0645\u064a\u0639 \u0628\u0631\u0627\u0645\u062c \u062d\u0645\u0627\u064a\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0631\u0627\u0626\u0639\u0629 \u062a\u062a\u062c\u0627\u0648\u0632 \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u062f\u0646\u0649\u060c \u0641\u064a\u062c\u0628 \u0639\u0644\u0649 \u0627\u0644\u062c\u0645\u064a\u0639 \u0627\u0644\u0627\u0633\u062a\u0645\u0631\u0627\u0631 \u0625\u0630\u0627 \u0623\u0631\u062f\u0646\u0627 \u0623\u0646 \u0646\u062a\u063a\u0644\u0651\u0628 \u0639\u0644\u0649 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a.</p> <ul> <li> <p>\u062a\u0643\u0627\u0645\u0644 \u0627\u0644\u0645\u0641\u0627\u0647\u064a\u0645. \u064a\u062c\u0628 \u0623\u0646 \u062a\u062d\u062a\u0648\u064a \u0628\u0631\u0627\u0645\u062c \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0645\u062a\u0637\u0648\u0631\u0629 \u0639\u0644\u0649 \u0628\u0639\u0636 \u0627\u0644\u0645\u0641\u0627\u0647\u064a\u0645 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0647\u0646\u062f\u0633\u0629 \u0627\u0644\u0623\u0645\u0646\u060c \u0633\u0648\u0627\u0621 \u0643\u0627\u0646\u062a \u0628\u0646\u064a\u0629 \u0633\u062d\u0627\u0628\u064a\u0629 \u0631\u0633\u0645\u064a\u0629 \u0623\u0648 \u0628\u0646\u064a\u0629 \u0623\u0645\u0627\u0646 \u0645\u0624\u0633\u0633\u064a\u0629 \u0623\u0648 \u0646\u0645\u0630\u062c\u0629 \u0644\u0644\u062a\u0647\u062f\u064a\u062f\u0627\u062a</p> </li> <li> <p>\u0627\u0644\u0623\u062a\u0645\u062a\u0629 \u0648\u0627\u0644\u0642\u064a\u0627\u0633. \u062a\u062d\u0627\u0648\u0644 \u0628\u0631\u0627\u0645\u062c \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0645\u062a\u0637\u0648\u0651\u0631\u0629 \u0623\u062a\u0645\u062a\u0629 \u0623\u0643\u0628\u0631 \u0642\u062f\u0631 \u0645\u0645\u0643\u0646 \u0645\u0646 \u0645\u062e\u0631\u062c\u0627\u062a\u0647\u0627\u060c \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0628\u0631\u0627\u0645\u062c \u0627\u0644\u0646\u0635\u064a\u0651\u0629 \u0644\u0645\u062d\u0627\u0643\u0627\u0629 \u062e\u0637\u0648\u0627\u062a \u0627\u062e\u062a\u0628\u0627\u0631 \u0627\u0644\u0627\u062e\u062a\u0631\u0627\u0642 \u0627\u0644\u0645\u0639\u0642\u062f\u0629\u060c \u0648\u0623\u062f\u0648\u0627\u062a \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0646\u0635 \u0627\u0644\u0628\u0631\u0645\u062c\u064a \u0627\u0644\u062b\u0627\u0628\u062a \u0627\u0644\u0645\u062a\u0627\u062d \u0644\u0641\u0631\u0642 \u0627\u0644\u062a\u0637\u0648\u064a\u0631\u060c \u0648\u0645\u0633\u0627\u0639\u062f\u0629 \u0641\u0631\u0642 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0641\u064a \u0628\u0646\u0627\u0621 \u0648\u062d\u062f\u0629 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0627\u0644\u062a\u0643\u0627\u0645\u0644\u060c \u0648\u063a\u064a\u0631\u0647\u0627..</p> </li> <li> <p>\u0627\u0644\u062b\u0642\u0627\u0641\u0629.  \u062a\u062d\u0627\u0648\u0644 \u0628\u0631\u0627\u0645\u062c \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0645\u062a\u0637\u0648\u0651\u0631\u0629 \u0628\u0646\u0627\u0621 \u062a\u0635\u0645\u064a\u0645 \u063a\u064a\u0631 \u0622\u0645\u0646 \u0648\u0627\u0644\u0642\u0636\u0627\u0621 \u0639\u0644\u0649 \u0627\u0644\u062f\u064a\u0651\u0646 \u0627\u0644\u062a\u0642\u0646\u064a \u0644\u0644\u0646\u0635 \u0627\u0644\u0628\u0631\u0645\u062c\u064a \u0627\u0644\u062d\u0627\u0644\u064a \u0645\u0646 \u062e\u0644\u0627\u0644 \u0643\u0648\u0646\u0647\u0627 \u062c\u0632\u0621\u064b\u0627 \u0645\u0646 \u0641\u0631\u064a\u0642 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0648\u0644\u064a\u0633 \u0639\u0645\u0644\u064b\u0627 \u062c\u0627\u0646\u0628\u064a\u064b\u0627. \u0641\u0631\u0642 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u062a\u0631\u0649 \u0641\u0631\u0642 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0639\u0644\u0649 \u0623\u0646\u0647\u0627 \"\u0646\u062d\u0646\" \u0648 \"\u0647\u0645\" \u0645\u062d\u0643\u0648\u0645 \u0639\u0644\u064a\u0647\u0645 \u0628\u0627\u0644\u0641\u0634\u0644.</p> </li> <li> <p>\u0627\u0644\u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u0645\u0633\u062a\u0645\u0631. \u062a\u062a\u0637\u0644\u0651\u0639 \u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u0622\u0645\u0646\u0629 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0645\u062a\u0637\u0648\u0651\u0631\u0629 \u0625\u0644\u0649 \u0627\u0644\u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u0645\u0633\u062a\u0645\u0631. \u0625\u0630\u0627 \u0643\u0627\u0646 \u0647\u0646\u0627\u0643 \u0634\u064a\u0621 \u0644\u0627 \u064a\u062a\u062d\u0633\u0651\u0646 \u0623\u0648 \u064a\u062a\u0637\u0648\u0651\u0631\u060c \u0641\u062a\u0648\u0642\u0651\u0641 \u0639\u0646\u0647 \u0623\u0648 \u0625\u0630\u0627 \u0643\u0627\u0646 \u0647\u0646\u0627\u0643 \u0634\u064a\u0621 \u063a\u064a\u0631 \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0637\u0648\u064a\u0631\u060c \u0627\u0639\u0645\u0644 \u0639\u0644\u0649 \u062a\u062d\u0633\u064a\u0646\u0647. \u0625\u0630\u0627 \u0644\u0645 \u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0634\u064a\u0621 \u0645\u0646 \u0642\u0650\u0628\u0644 \u0641\u0631\u0642 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0648\u0644\u0645 \u064a\u0643\u0646 \u0644\u0647 \u062a\u0623\u062b\u064a\u0631 \u0623\u0648 \u062a\u0623\u062b\u064a\u0631 \u0645\u062d\u062f\u0648\u062f\u060c \u0641\u0627\u0641\u0639\u0644 \u0634\u064a\u0626\u064b\u0627 \u0645\u064f\u062e\u062a\u0644\u0641\u064b\u0627. \u0644\u0645\u062c\u0631\u062f \u0623\u0646\u0646\u0627 \u0623\u062c\u0631\u064a\u0646\u0627 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0645\u062b\u0644 \u0627\u0644\u0641\u062d\u0648\u0635\u0627\u062a \u0627\u0644\u0645\u0643\u062a\u0628\u064a\u0629 \u0645\u0646\u0630 \u0627\u0644\u0633\u0628\u0639\u064a\u0646\u0627\u062a \u0644\u0627 \u064a\u0639\u0646\u064a \u0623\u0646\u0647\u0627 \u0641\u0643\u0631\u0629 \u062c\u064a\u0651\u062f\u0629. \u0642\u0645 \u0628\u0627\u0644\u0642\u064a\u0627\u0633 \u0648\u0627\u0644\u062a\u0642\u064a\u064a\u0645 \u062b\u0645 \u0627\u0644\u0628\u0646\u0627\u0621 \u0623\u0648 \u0627\u0644\u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u0645\u0633\u062a\u0645\u0631</p> </li> </ul>"},{"location":"ar/A00_2021-How_to_use_the_OWASP_Top_10_as_a_standard/","title":"\u0643\u064a\u0641 \u062a\u0633\u062a\u062e\u062f\u0645 \u0625\u0637\u0627\u0631 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0645\u0646 \u0623\u0648\u0627\u0633\u0628 \u0643\u0646\u0645\u0648\u0630\u062c \u0645\u0639\u064a\u0627\u0631\u064a.","text":"<p>\u064a\u0639\u062a\u0628\u0631 \u0645\u0634\u0631\u0648\u0639 (\u0623\u0648\u0627\u0633\u0628 \u2013 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631) \u0648\u062b\u064a\u0642\u0629 \u062a\u0648\u0651\u0639\u0648\u064a\u0629\u060c \u0625\u0644\u0627 \u0623\u0646 \u0630\u0644\u0643 \u0644\u0645 \u064a\u0645\u0646\u0639 \u0627\u0644\u0645\u0646\u0638\u0645\u0627\u062a \u0645\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0645\u0639\u064a\u0627\u0631\u064b\u0627 \u0641\u0639\u0644\u064a\u064b\u0627 \u0644\u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0645\u0646\u0630 \u0628\u062f\u0627\u064a\u0629 \u0646\u0634\u0631\u0647 \u0641\u064a \u0639\u0627\u0645 2003. \u0625\u0630\u0627 \u0643\u0646\u062a \u062a\u0631\u063a\u0628 \u0641\u064a \u0627\u0633\u062a\u062e\u062f\u0627\u0645 (\u0623\u0648\u0627\u0633\u0628 \u2013 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631) \u0628\u0635\u0641\u062a\u0647 \u0645\u0639\u064a\u0627\u0631 \u062a\u0631\u0645\u064a\u0632 \u0623\u0648 \u0627\u062e\u062a\u0628\u0627\u0631\u060c \u0641\u0627\u0639\u0644\u0645 \u0623\u0646\u0647 \u064a\u0639\u062a\u0628\u0631 \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u062f\u0646\u0649 \u0648\u0646\u0642\u0637\u0629 \u0627\u0644\u0628\u062f\u0627\u064a\u0629.</p> <p>\u0625\u062d\u062f\u0649 \u0635\u0639\u0648\u0628\u0627\u062a \u0627\u0633\u062a\u062e\u062f\u0627\u0645 (\u0623\u0648\u0627\u0633\u0628 \u2013 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631) \u0643\u0645\u0639\u064a\u0627\u0631 \u0647\u0648 \u0623\u0646\u0646\u0627 \u0646\u0642\u0648\u0645 \u0628\u062a\u0648\u062b\u064a\u0642 \u0645\u062e\u0627\u0637\u0631 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a\u060c \u0648\u0647\u064a \u0644\u064a\u0633\u062a \u0628\u0627\u0644\u0636\u0631\u0648\u0631\u0629 \u0645\u0634\u0627\u0643\u0644 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0628\u0633\u0647\u0648\u0644\u0629. \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644\u060c A04: 2021- \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646 \u062e\u0627\u0631\u062c \u0646\u0637\u0627\u0642 \u0645\u0639\u0638\u0645 \u0646\u0645\u0627\u0630\u062c \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631. \u0645\u062b\u0627\u0644 \u0622\u062e\u0631 \u0647\u0648 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0627\u0644\u0645\u0639\u0645\u0648\u0644 \u0628\u0647 \u0641\u064a \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0627\u0644\u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0641\u0639\u0627\u0644 \u0648\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0644\u0627 \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u062a\u0645 \u0625\u0644\u0627 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0627\u0644\u0645\u0642\u0627\u0628\u0644\u0627\u062a \u0648\u0637\u0644\u0628 \u0639\u064a\u0651\u0646\u0627\u062a \u0645\u0646 \u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0627\u062a \u0627\u0644\u0641\u0639\u0627\u0644\u0629 \u0644\u0644\u062d\u0648\u0627\u062f\u062b. \u064a\u0645\u0643\u0646 \u0644\u0623\u062f\u0627\u0629 \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0631\u0645\u0648\u0632 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0629 \u0627\u0644\u062b\u0627\u0628\u062a\u0629 \u0627\u0644\u0628\u062d\u062b \u0639\u0646 \u0639\u062f\u0645 \u0648\u062c\u0648\u062f \u0627\u0644\u0633\u062c\u0644\u0627\u062a\u060c \u0648\u0644\u0643\u0646 \u0642\u062f \u064a\u0643\u0648\u0646 \u0645\u0646 \u0627\u0644\u0645\u0633\u062a\u062d\u064a\u0644 \u062a\u062d\u062f\u064a\u062f \u0645\u0627 \u0625\u0630\u0627 \u0643\u0627\u0646 \u0637\u0631\u064a\u0642\u0629 \u0627\u0644\u0639\u0645\u0644 \u0623\u0648 \u0627\u0644\u062a\u062d\u0643\u0645 \u0641\u064a \u0627\u0644\u0648\u0635\u0648\u0644 \u064a\u0633\u062c\u0644 \u0627\u0644\u0627\u0646\u062a\u0647\u0627\u0643\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0627\u0644\u062e\u0637\u064a\u0631\u0629. \u0642\u062f \u064a\u062a\u0645\u0643\u0646 \u0645\u062e\u062a\u0628\u0631\u064a\u0646 \u0627\u0644\u0627\u062e\u062a\u0631\u0627\u0642 \u0641\u0642\u0637 \u0645\u0646 \u062a\u062d\u062f\u064a\u062f \u0637\u0631\u064a\u0642\u0629 \u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0644\u0644\u062d\u0648\u0627\u062f\u062b \u0641\u064a \u0628\u064a\u0626\u0629 \u0627\u0644\u0639\u0645\u0644 \u0627\u0644\u062a\u062c\u0631\u064a\u0628\u064a\u0629\u060c \u0648\u0627\u0644\u062a\u064a \u0646\u0627\u062f\u0631\u064b\u0627 \u0645\u0627 \u062a\u062a\u0645 \u0645\u0631\u0627\u0642\u0628\u062a\u0647\u0627 \u0628\u0646\u0641\u0633 \u0627\u0644\u0637\u0631\u064a\u0642\u0629 \u0641\u064a \u0628\u064a\u0626\u0629 \u0627\u0644\u0639\u0645\u0644 \u0627\u0644\u0641\u0639\u0644\u064a\u0629.</p> <p>\u0641\u064a\u0645\u0627 \u064a\u0644\u064a \u062a\u0648\u0635\u064a\u0627\u062a\u0646\u0627 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 (\u0623\u0648\u0627\u0633\u0628 \u2013 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631) \u0639\u0646\u062f\u0645\u0627 \u064a\u0643\u0648\u0646 \u0630\u0644\u0643 \u0645\u062a\u0627\u062d\u064b\u0627</p> \u062d\u0627\u0644\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0648\u0627\u0633\u0628 \u2013\u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 2021 \u0645\u0639\u064a\u0627\u0631 \u0623\u0648\u0627\u0633\u0628 \u0644\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0623\u0645\u0627\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u062a\u0648\u0639\u064a\u0629 \u0646\u0639\u0645 \u0627\u0644\u062a\u062f\u0631\u064a\u0628 \u0627\u0644\u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0623\u0648\u0644 \u0634\u0627\u0645\u0644 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0648\u0627\u0644\u0628\u0646\u064a\u0629 \u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u0629 \u0625\u0644\u0649 \u062d\u062f\u064d \u0645\u0627 \u0646\u0639\u0645 \u0645\u0639\u064a\u0627\u0631 \u0627\u0644\u0646\u0635 \u0627\u0644\u0628\u0631\u0645\u062c\u064a \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u062f\u0646\u0649 \u0646\u0639\u0645 \u0645\u0631\u0627\u062c\u0639\u0629 \u0627\u0644\u0646\u0635 \u0627\u0644\u0628\u0631\u0645\u062c\u064a \u0627\u0644\u0622\u0645\u0646 \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u062f\u0646\u0649 \u0646\u0639\u0645 \u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0627\u0644\u0645\u0634\u0627\u0628\u0647\u0647 \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u062f\u0646\u0649 \u0646\u0639\u0645 \u0627\u062e\u062a\u0628\u0627\u0631 \u0627\u0644\u0648\u062d\u062f\u0629 \u0625\u0644\u0649 \u062d\u062f\u064d \u0645\u0627 \u0646\u0639\u0645 \u0627\u062e\u062a\u0628\u0627\u0631 \u0627\u0644\u062a\u0643\u0627\u0645\u0644 \u0625\u0644\u0649 \u062d\u062f\u064d \u0645\u0627 \u0646\u0639\u0645 \u0627\u062e\u062a\u0628\u0627\u0631 \u0627\u0644\u0627\u062e\u062a\u0631\u0627\u0642 \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u062f\u0646\u0649 \u0646\u0639\u0645 \u062f\u0639\u0645 \u0627\u0644\u0627\u062f\u0648\u0627\u062a \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u062f\u0646\u0649 \u0646\u0639\u0645 \u0633\u0644\u0633\u0629 \u0627\u0644\u062a\u0648\u0631\u064a\u062f \u0627\u0644\u0627\u0645\u0646\u0629 \u0625\u0644\u0649 \u062d\u062f\u064d \u0645\u0627 \u0646\u0639\u0645 <p>\u0646\u0634\u062c\u0651\u0639 \u0623\u064a \u0634\u062e\u0635 \u064a\u0631\u063a\u0628 \u0641\u064a \u0627\u0639\u062a\u0645\u0627\u062f \u0645\u0639\u064a\u0627\u0631 \u0627\u0644\u0623\u0645\u0646 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0639\u0644\u0649 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0639\u064a\u0627\u0631 \u0623\u0648\u0627\u0633\u0628 \u0644\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a (ASVS)\u060c \u062d\u064a\u062b \u0623\u0646\u0647 \u0645\u064f\u0635\u0645\u0651\u0645 \u0644\u0643\u064a \u064a\u0645\u0643\u0646\u0646\u0627 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646\u0647 \u0648\u0627\u062e\u062a\u0628\u0627\u0631\u0647\u060c \u0648\u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0641\u064a \u062c\u0645\u064a\u0639 \u0623\u062c\u0632\u0627\u0621 \u062f\u0648\u0631\u0629 \u062d\u064a\u0627\u0629 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0622\u0645\u0646.</p> <p>\u0645\u0639\u064a\u0627\u0631 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a (ASVS) \u0647\u0648 \u0627\u0644\u062e\u064a\u0627\u0631 \u0627\u0644\u0648\u062d\u064a\u062f \u0627\u0644\u0645\u0642\u0628\u0648\u0644 \u0644\u0645\u0632\u0648\u062f\u064a \u0627\u0644\u0623\u062f\u0648\u0627\u062a. \u0644\u0627 \u064a\u0645\u0643\u0646 \u0644\u0644\u0623\u062f\u0648\u0627\u062a \u0627\u0644\u0643\u0634\u0641 \u0627\u0644\u0634\u0627\u0645\u0644 \u0623\u0648 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0623\u0648 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0636\u062f (\u0623\u0648\u0627\u0633\u0628 \u2013 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631) \u0646\u0638\u0631\u064b\u0627 \u0644\u0637\u0628\u064a\u0639\u0629 \u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 \u0645\u062e\u0627\u0637\u0631 (\u0623\u0648\u0627\u0633\u0628 \u2013\u0627\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 )\u060c \u0645\u0639 \u0627\u0644\u0625\u0634\u0627\u0631\u0629 \u0625\u0644\u0649 A04: 2021-\u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646. \u0644\u0627 \u062a\u062a\u0641\u0642 \u0623\u0648\u0627\u0633\u0628 \u0645\u0639 \u0623\u064a \u0627\u062f\u0639\u0627\u0621\u0627\u062a \u0628\u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0643\u0627\u0645\u0644\u0629 \u0644\u0640 (\u0623\u0648\u0627\u0633\u0628 \u2013 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 )\u060c \u0644\u0623\u0646\u0647\u0627 \u0628\u0628\u0633\u0627\u0637\u0629 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d\u0629.</p>"},{"location":"ar/A00_2021-Introduction/","title":"\u0645\u0642\u062f\u0645\u0629","text":""},{"location":"ar/A00_2021-Introduction/#2021","title":"\u0645\u0631\u062d\u0628\u0627\u064b \u0628\u0643\u0645 \u0641\u064a \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0644\u0639\u0627\u0645 2021","text":"<p>\u0645\u0631\u062d\u0628\u064b\u0627 \u0628\u0643\u0645 \u0641\u064a \u0623\u062d\u062f\u062b \u0625\u0635\u062f\u0627\u0631 \u0645\u0646 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0645\u0646 \u0645\u0646\u0638\u0645\u0629 \u0623\u0648\u0627\u0633\u0628 \u0648\u0647\u064a \u0627\u0644\u0646\u0633\u062e\u0629 \u0627\u0644\u062d\u062f\u064a\u062b\u0629 \u0644\u0639\u0627\u0645 2021\u060c \u0648\u0627\u0644\u062a\u064a \u062a\u0623\u062a\u064a \u0628\u0634\u0643\u0644 \u062c\u062f\u064a\u062f \u062a\u0645\u0627\u0645\u064b\u0627 \u0648\u0645\u062f\u0639\u0645\u0629 \u0628\u0631\u0633\u0648\u0645\u0627\u062a \u0627\u0646\u0641\u0648\u062c\u0631\u0627\u0641\u064a\u0643 \u0627\u0644\u062a\u064a \u062a\u0633\u062a\u0637\u064a\u0639 \u0637\u0628\u0627\u0639\u062a\u0647\u0627 \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 \u0648\u064a\u0645\u0643\u0646 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u064a\u0647\u0627 \u0645\u0646 \u0635\u0641\u062d\u062a\u0646\u0627 \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629.</p> <p>\u0643\u0645\u0627 \u0646\u062a\u0642\u062f\u0645 \u0628\u062c\u0632\u064a\u0644 \u0627\u0644\u0634\u0643\u0631 \u0648\u0627\u0644\u0639\u0631\u0641\u0627\u0646 \u0644\u0643\u0644\u0651 \u0645\u0646 \u0633\u0627\u0647\u0645 \u0628\u0641\u0643\u0631\u0629\u060c \u0623\u0648 \u0648\u0642\u062a\u060c \u0623\u0648 \u062c\u0647\u062f \u0641\u064a \u0633\u0628\u064a\u0644 \u0625\u0646\u062c\u0627\u062d \u0647\u0630\u0627 \u0627\u0644\u0639\u0645\u0644\u060c \u0645\u0645\u062a\u0646\u0651\u0648\u0646 \u0644\u0645\u0627 \u0628\u0630\u0644\u062a\u0645\u0648\u0647\u060c \u0648\u0644\u0645\u0627 \u062d\u0642\u0651\u0642\u0646\u0627\u0647 \u0628\u0641\u0636\u0644 \u0627\u0644\u0644\u0647 \u062b\u0645 \u0628\u0645\u0633\u0627\u0639\u062f\u062a\u0643\u0645 \u0648\u062f\u0639\u0645\u0643\u0645..</p>"},{"location":"ar/A00_2021-Introduction/#2021_1","title":"\u0645\u0627 \u0647\u064a \u0627\u0644\u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0627\u0644\u062a\u064a \u0637\u0631\u0623\u062a \u0639\u0644\u0649 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0644\u0639\u0627\u0645 2021","text":"<p>\u0628\u0634\u0643\u0644 \u0639\u0627\u0645 \u062a\u0645 \u0625\u0636\u0627\u0641\u0629 3 \u062a\u0635\u0646\u064a\u0641\u0627\u062a \u062c\u062f\u064a\u062f\u0629 \u0648 4 \u062a\u0635\u0646\u064a\u0641\u0627\u062a \u060c \u062a\u0645 \u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0627\u0633\u0645 \u0648\u0643\u0630\u0644\u0643 \u0627\u0644\u0646\u0637\u0627\u0642 \u0627\u0644\u062e\u0627\u0635 \u0628\u0647\u0627\u060c \u0648\u0628\u0639\u0636 \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062f\u0645\u062c \u0627\u0644\u062a\u064a \u062a\u0623\u062a\u064a \u0645\u0639  \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0644\u0639\u0627\u0645 2021</p> <p></p> <p>A01:2021-\u062a\u062e\u0637\u064a \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0648\u0635\u0648\u0644\u0627\u062d\u062a\u0644 (\u062a\u062e\u0637\u064a \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0648\u0635\u0648\u0644) \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0627\u0644\u0623\u0648\u0644\u0649 \u0628\u0639\u062f \u0623\u0646 \u0643\u0627\u0646 \u0641\u064a \u0627\u0644\u062a\u0631\u062a\u064a\u0628 \u0627\u0644\u062e\u0627\u0645\u0633\u060c \u062d\u064a\u062b \u0623\u0646\u0647 \u062a\u0645 \u0625\u062c\u0631\u0627\u0621 \u0627\u062e\u062a\u0628\u0627\u0631 \u0644\u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 \u0648\u0643\u0627\u0646\u062a \u0627\u0644\u0646\u0633\u0628\u0629 \u0647\u064a 94% \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0645\u0635\u0627\u0628\u0647 \u0628\u062a\u062e\u0637\u064a \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0646 \u062a\u062e\u0637\u064a \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0648\u0635\u0648\u0644 \u0648\u0627\u0644\u0645\u0631\u062a\u0628\u0637 \u0628\u0640 34 CWEs \u0647\u0648 \u0645\u0646 \u0623\u0643\u062b\u0631 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u062d\u062f\u062b \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a. </p> <p>A02:2021-\u0641\u0634\u0644 \u0622\u0644\u064a\u0629 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u064a\u0623\u062a\u064a \u0641\u0634\u0644 \u0622\u0644\u064a\u0629 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0641\u064a \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0631\u0642\u0645 #2 \u0648\u0627\u0644\u062a\u064a \u0643\u0627\u0646\u062a \u062a\u0639\u0631\u0641 \u0628\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0627\u0644\u063a\u064a\u0631 \u0645\u062d\u0645\u064a\u0629 \u0623\u0648 \u0627\u0644\u0645\u0643\u0634\u0648\u0641\u0629\u060c \u0648\u0627\u0644\u062a\u064a \u0642\u062f \u062a\u0643\u0648\u0646 \u0623\u0633\u0628\u0627\u0628\u0647\u0627 \u0645\u062a\u0639\u062f\u062f\u0629 \u062f\u0648\u0646 \u0623\u0646 \u062a\u0639\u0648\u062f \u062c\u0645\u064a\u0639\u0647\u0627 \u0644\u0633\u0628\u0628 \u062c\u0630\u0631\u064a \u0648\u0627\u062d\u062f\u060c \u0648\u064a\u0623\u062a\u064a \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0647\u0646\u0627 \u0628\u0634\u0643\u0644 \u0645\u062a\u062c\u062f\u062f \u0639\u0644\u0649 \u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0641\u0634\u0644 \u0641\u064a \u0627\u0644\u0637\u0631\u0642 \u0627\u0644\u0645\u062a\u0639\u0644\u0642\u0629 \u0628\u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0648\u0627\u0644\u062a\u064a \u063a\u0627\u0644\u0628\u064b\u0627 \u0645\u0627 \u062a\u0624\u062f\u064a \u0625\u0644\u0649 \u0643\u0634\u0641 \u063a\u064a\u0631 \u0645\u0635\u0631\u0651\u062d \u0628\u0647 \u0625\u0644\u0649 \u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0633\u0627\u0633\u0629 \u0623\u0648 \u0627\u062e\u062a\u0631\u0627\u0642 \u0627\u0644\u0623\u0646\u0638\u0645\u0629. </p> <p>A03:2021-\u0627\u0644\u062d\u0642\u0646 \u062a\u062a\u0631\u0627\u062c\u0639 \u0627\u0644\u062d\u0642\u0646 \u0627\u0644\u0649 \u0627\u0644\u062e\u0637\u0631 \u0631\u0642\u0645 3. \u062d\u064a\u062b \u0627\u0646\u0647 \u062a\u0645 \u0627\u062c\u0631\u0627\u0621 \u0627\u062e\u062a\u0628\u0627\u0631 \u0644\u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 \u0648\u0643\u0627\u0646\u062a \u0627\u0644\u0646\u0633\u0628\u0629 \u0647\u064a 94% \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0645\u0635\u0627\u0628\u0647 \u0628\u062b\u063a\u0631\u0627\u062a \u0627\u0644\u062d\u0642\u0646. \u0627\u0646 \u062b\u063a\u0631\u0629 \u0627\u0644\u062d\u0642\u0646 \u0648\u0627\u0644\u0645\u0631\u062a\u0628\u0637\u0629 \u0628\u0640 33 CWEs \u062a\u0639\u062a\u0628\u0631 \u062b\u0627\u0646\u064a \u0627\u0639\u0644\u0649 \u062b\u063a\u0631\u0629 \u0645\u0646 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0627\u0644\u062a\u064a \u0645\u0646 \u0627\u0644\u0645\u0645\u0643\u0646 \u0625\u0635\u0627\u0628\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0628\u0647\u0627. \u0648\u0627\u0644\u062c\u062f\u064a\u0631 \u0628\u0627\u0644\u0630\u0643\u0631 \u0627\u0646 \u062b\u063a\u0631\u0627\u062a XSS \u062a\u0645 \u062f\u0645\u062c\u0647\u0627 \u0647\u0646\u0627 \u0645\u0639 \u062b\u063a\u0631\u0629 \u0627\u0644\u062d\u0642\u0646 \u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u0646\u0633\u062e\u0629.</p> <p>A04:2021- \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646 \u0647\u0648 \u062a\u0635\u0646\u064a\u0641 \u062c\u062f\u064a\u062f \u062a\u0645\u062a \u0625\u0636\u0627\u0641\u062a\u0647 \u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u0646\u0633\u062e\u0629 \u0644\u0639\u0627\u0645 2021\u060c \u0648\u0627\u0644\u062a\u064a \u062a\u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u0645\u062a\u0639\u0644\u0642\u0629 \u0628\u0639\u064a\u0648\u0628 \u0648\u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u062a\u0635\u0645\u064a\u0645. \u0648\u0625\u0630\u0627 \u0623\u0631\u062f\u0646\u0627 \u0627\u0644\u062a\u062d\u0631\u0643 \u0644\u0625\u062b\u0628\u0627\u062a \u0623\u0647\u0645\u064a\u0629 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u0622\u0645\u0646 \u0641\u0646\u062d\u0646 \u0628\u062d\u0627\u062c\u0629 \u0625\u0644\u0649 \u0646\u0645\u0630\u062c\u0629 \u0627\u0644\u062a\u0647\u062f\u064a\u062f\u0627\u062a \u0648\u0637\u0631\u0642 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u0622\u0645\u0646\u0629 \u0648\u0643\u0630\u0644\u0643 \u0648\u062c\u0648\u062f \u0628\u0646\u064a\u0629 \u062a\u062d\u062a\u064a\u0629 \u0645\u0628\u0646\u064a\u0629 \u0639\u0644\u0649 \u0623\u0641\u0636\u0644 \u0627\u0644\u0645\u0631\u0627\u062c\u0639 \u0648\u0627\u0644\u0636\u0648\u0627\u0628\u0637. </p> <p>A05:2021- \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0627\u0644\u062e\u0627\u0637\u0626\u0629 \u0628\u0639\u062f \u0623\u0646 \u0643\u0627\u0646 \u0647\u0648 \u0627\u0644\u062e\u0637\u0631 \u0631\u0642\u0645 #6 \u0627\u0644\u0622\u0646 \u0646\u0631\u0627\u0647 \u0641\u064a \u0627\u0644\u0645\u0631\u062a\u0628\u0629 #4\u060c \u062d\u064a\u062b \u0623\u0646\u0647 \u062a\u0645 \u0625\u062c\u0631\u0627\u0621 \u0627\u062e\u062a\u0628\u0627\u0631 \u0644\u0646\u0642\u0627\u0637  \u0627\u0644\u0636\u0639\u0641 \u0648\u0643\u0627\u0646\u062a \u0627\u0644\u0646\u0633\u0628\u0629 \u0647\u064a 90% \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u064a\u0648\u062c\u062f \u0628\u0647\u0627 \u0623\u062e\u0637\u0627\u0621 \u0641\u064a \u0637\u0631\u064a\u0642\u0629 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u0635\u062d\u064a\u062d\u0629. \u0648\u0647\u0630\u0627 \u064a\u062d\u062f\u062b \u0645\u0639 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0627\u0644\u062d\u062f\u064a\u062b\u0629 \u0648\u0627\u0644\u062a\u064a \u062a\u0633\u062a\u0644\u0632\u0645 \u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631 \u0645\u0645\u0627 \u064a\u062c\u0639\u0644 \u0646\u0633\u0628\u0629 \u0627\u0644\u062e\u0637\u0623 \u0641\u064a \u0627\u0631\u062a\u0641\u0627\u0639\u060c \u0648\u0647\u0630\u0627 \u0627\u0644\u0630\u064a \u062c\u0639\u0644 (\u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062e\u0627\u0637\u0626\u0629) \u062a\u0631\u062a\u0641\u0639 \u0645\u0646 \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0627\u0644\u0633\u0627\u062f\u0633\u0629 \u0625\u0644\u0649 \u0627\u0644\u0631\u0627\u0628\u0639\u0629. \u0648\u0627\u0644\u062c\u062f\u064a\u0631 \u0628\u0627\u0644\u0630\u0643\u0631 \u0623\u0646\u0647 \u062a\u0645 \u0636\u0645 \" XML External Entities XXE\" \u0644\u0647\u0630\u0627 \u0627\u0644\u0646\u0648\u0639 \u0645\u0646 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062e\u0627\u0637\u0626\u0629.</p> <p>A06:2021-\u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0648 \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u063a\u064a\u0631 \u0627\u0644\u0645\u062d\u062f\u062b\u0629 \u0633\u0627\u0628\u0642\u064b\u0627 \u0643\u0627\u0646\u062a \u062a\u0639\u0631\u0641 \u0628\u0640 \u201c\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0648\u0627\u0644\u0645\u0646\u062a\u062c\u0627\u062a \u0630\u0627\u062a \u062b\u063a\u0631\u0627\u062a \u0645\u0639\u0631\u0648\u0641\u0629\". \u0648\u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0639\u0644\u0649 \u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0641\u064a \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a  \u0643\u0627\u0646\u062a \u0647\u064a #2 \u0623\u0639\u0644\u0649 \u062b\u063a\u0631\u0629 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u062e\u0637\u0631 \u0627\u0644\u0645\u0646\u062a\u062c\u0627\u062a. \u0648\u0645\u0646 \u062e\u0644\u0627\u0644 \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0628\u0639\u062f \u0623\u0646 \u0643\u0627\u0646\u062a \u0647\u064a \u0627\u0644\u062e\u0637\u0631 \u0631\u0642\u0645 #9 \u0641\u064a \u0627\u0644\u0625\u0635\u062f\u0627\u0631 \u0627\u0644\u0633\u0627\u0628\u0642 \u0644\u0639\u0627\u0645 #2017 \u0627\u0631\u062a\u0641\u0639\u062a \u0641\u064a \u0625\u0635\u062f\u0627\u0631 #2021 \u0625\u0644\u0649 \u0627\u0644\u062e\u0637\u0631 \u0631\u0642\u0645 #6. \u0648\u0639\u0646\u062f \u0627\u0644\u0646\u0638\u0631 \u0625\u0644\u0649 \u0645\u0639\u0627\u064a\u064a\u0631 CVEs \u0623\u0648 CWEs \u0644\u0627 \u0646\u0631\u0649 \u0644\u0647\u0627 \u0623\u064a \u062a\u0635\u0646\u064a\u0641 \u0628\u0627\u0644\u062e\u0637\u0648\u0631\u0629. \u0648\u0644\u0630\u0644\u0643 \u064a\u062a\u0645 \u062a\u0635\u0646\u064a\u0641 \u062e\u0637\u0648\u0631\u062a\u0647\u0627 \u0628\u0634\u0643\u0644 \u0627\u0641\u062a\u0631\u0627\u0636\u064a \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0648\u0647\u0648 5.0.</p> <p>A07:2021-\u0627\u0644\u0647\u0648\u064a\u0629 \u0648 \u0641\u0634\u0644 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u062d\u0642\u0642 \u0648\u0627\u0644\u062a\u064a \u0643\u0627\u0646\u062a \u062a\u0639\u0631\u0641 \u0641\u064a \u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0627\u0644\u0633\u0627\u0628\u0642\u0629 \"\u0636\u0639\u0641 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0647\u0648\u064a\u0629\" \u0648\u0628\u0639\u062f \u0623\u0646 \u0643\u0627\u0646\u062a \u0643\u0630\u0644\u0643 \u0647\u064a \u0627\u0644\u062e\u0637\u0631 \u0631\u0642\u0645 #2. \u0648\u0628\u0639\u062f \u0639\u0645\u0644\u064a\u0629 \u0631\u0628\u0637\u0647\u0627 \u0645\u0639 \u0625\u0637\u0627\u0631 CWEs \u0648\u062a\u0633\u0645\u064a\u062a\u0647\u0627 \u0628\u0640 \u201c\u0641\u0634\u0644 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u062d\u0642\u0642. \u0648\u0643\u0645\u0627 \u0646\u0642\u0648\u0644 \u0623\u0646 \u0632\u064a\u0627\u062f\u0629 \u0627\u0644\u0645\u0639\u0627\u064a\u064a\u0631 \u0623\u062f\u0651\u062a \u0625\u0644\u0649 \u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0648\u0644\u0643\u0646 \u0644\u064a\u0633 \u0628\u0634\u0643\u0644 \u0643\u0627\u0645\u0644 \u0644\u0630\u0644\u0643 \u0646\u0631\u0627\u0647\u0627 \u0647\u0646\u0627 \u0645\u0646 \u0636\u0645\u0646 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631.</p> <p>A08:2021- \u0641\u0634\u0644 \u0633\u0644\u0627\u0645\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u062a\u0645\u062a \u0625\u0636\u0627\u0641\u062a\u0647\u0627 \u062d\u062f\u064a\u062b\u064b\u0627 \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0625\u0635\u062f\u0627\u0631 2021. \u0648\u0627\u0644\u062a\u064a \u062a\u0631\u0643\u0651\u0632 \u0628\u0634\u0643\u0644 \u0643\u0628\u064a\u0631 \u0639\u0644\u0649 \u062a\u062d\u062f\u064a\u062b  \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0648\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0639 \u0627\u0644\u062a\u0623\u0643\u062f \u0639\u0644\u0649 \u0639\u062f\u0645 \u062a\u0623\u062b\u0631 \u0633\u0644\u0627\u0645\u0629 \u062f\u0648\u0631\u0629 \u062d\u064a\u0627\u0629 CI/CD. \u0648\u0639\u0646\u062f \u0627\u0644\u0646\u0638\u0631 \u0625\u0644\u0649 \u062a\u0642\u064a\u064a\u0645 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u0645\u062d\u062a\u0645\u0644\u0629 \u062d\u0633\u0628 \u062a\u0635\u0646\u064a\u0641 CVE/CVSS \u0648\u0627\u0631\u062a\u0628\u0627\u0637\u0647\u0627 \u0645\u0639 CWEs \u0646\u062c\u062f \u0623\u0646 \u062a\u0642\u064a\u064a\u0645 \u0627\u0644\u062e\u0637\u0631 \u0647\u0648 10 \u0648\u064a\u0639\u062a\u0628\u0631 \u0645\u0631\u062a\u0641\u0639 \u062c\u062f\u064b\u0627. \u0627\u0644\u062c\u062f\u064a\u0631 \u0628\u0627\u0644\u0630\u0643\u0631 \u0623\u0646 \"Insecure Deserialization\" \u0623\u0635\u0628\u062d\u062a \u062c\u0632\u0621 \u0645\u0646 \u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641. </p> <p>A09:2021-\u0641\u0634\u0644 \u0641\u064a \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0633\u062c\u0644\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0648\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u0627\u0644\u062a\u064a \u0643\u0627\u0646\u062a \u062a\u0639\u0631\u0641 \u0633\u0627\u0628\u0642\u064b\u0627 \u0628\u0640 \u201c\u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0648\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0628\u0634\u0643\u0644 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d. \u0648\u0628\u0639\u062f \u0639\u0645\u0644 \u0627\u0644\u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u062c\u0631\u0627\u0621\u0647\u0627 \u0641\u064a \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u062d\u062a\u0644\u062a \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0631\u0642\u0645 3 \u0641\u064a \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u0627\u0633\u062a\u0637\u0644\u0627\u0639. \u0648\u0627\u0644\u0630\u064a \u062c\u0639\u0644\u0647\u0627 \u062a\u0635\u0639\u062f \u0645\u0631\u062a\u0628\u0629 \u0648\u0627\u062d\u062f\u0629 \u0628\u0639\u062f \u0623\u0646 \u0643\u0627\u0646\u062a \u0641\u064a \u0627\u0644\u0645\u0631\u062a\u0628\u0629 10. \u0627\u0644\u062c\u062f\u064a\u0631 \u0628\u0627\u0644\u0630\u0643\u0631 \u0623\u0646 \u0647\u0646\u0627\u0643 \u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0641\u0634\u0644 \u0627\u0644\u062a\u064a \u062a\u062d\u062f\u062b \u0641\u064a \u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u062a\u064a \u062a\u0645 \u0636\u0645\u0647\u0627 \u0647\u0646\u0627.  \u0648\u062d\u064a\u0646\u0645\u0627 \u0646\u0631\u0649 CVE/CVSS \u0644\u0627 \u0646\u0631\u0649 \u0644\u0647\u0627 \u0623\u064a \u062a\u0635\u0646\u064a\u0641 \u0648\u0627\u0636\u062d \u0648\u0644\u0643\u0646 \u0645\u0639 \u0627\u0644\u0642\u0635\u0648\u0631 \u0641\u064a \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0648\u0627\u0644\u062a\u064a \u062a\u0634\u0643\u0644 \u062a\u0623\u062b\u064a\u0631\u064b\u0627 \u0628\u0627\u0644\u063a\u064b\u0627 \u0641\u064a \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0623\u0646\u0638\u0645\u0629\u060c \u0648\u0627\u0644\u062a\u0646\u0628\u064a\u0647 \u0641\u064a \u062d\u0627\u0644 \u0648\u062c\u0648\u062f \u062d\u0648\u0627\u062f\u062b \u0623\u0648 \u0627\u0644\u0627\u0633\u062a\u0641\u0627\u062f\u0629 \u0645\u0646\u0647\u0627 \u0641\u064a \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062a\u062d\u0642\u064a\u0642 \u0627\u0644\u062c\u0646\u0627\u0626\u064a \u0627\u0644\u0631\u0642\u0645\u064a.</p> <p>A10:2021-\u062a\u0632\u0648\u064a\u0631 \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0645\u0646 \u062c\u0627\u0646\u0628 \u0627\u0644\u062e\u0627\u062f\u0645 SSRF \u062a\u0645 \u0625\u0636\u0627\u0641\u0629 \u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0631\u0642\u0645 #1. \u0648\u062a\u0638\u0647\u0631 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0633\u0628 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u0625\u062c\u0631\u0627\u0624\u0647\u0627 \u0623\u0646 \u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0645\u0639\u062f\u0644 \u0627\u0644\u0625\u0635\u0627\u0628\u0629 \u0628\u0647 \u0641\u0648\u0642 \u0627\u0644\u0645\u062a\u0648\u0633\u0637 \u0645\u0639 \u0627\u0631\u062a\u0641\u0627\u0639 \u0645\u0646\u062e\u0641\u0636. \u0648\u0645\u062f\u0649 \u0627\u0631\u062a\u0628\u0627\u0637\u0647 \u0628\u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0648\u0625\u0645\u0643\u0627\u0646\u064a\u0629 \u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644. \u0648\u064a\u0641\u064a\u062f \u0627\u0644\u0645\u062e\u062a\u0635\u064a\u0646 \u0641\u064a \u0627\u0644\u0645\u062c\u0627\u0644 \u0623\u0646 \u0648\u062c\u0648\u062f \u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0645\u0646 \u0636\u0645\u0646 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0647\u0648 \u0623\u0645\u0631 \u0645\u0647\u0645 \u062c\u062f\u064b\u0627 \u062d\u062a\u0649 \u0648\u0625\u0646 \u0643\u0627\u0646\u062a \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0627\u0644\u064a\u0629 \u063a\u064a\u0631 \u0645\u0643\u062a\u0645\u0644\u0629 \u0641\u064a \u0627\u0644\u0648\u0642\u062a \u0627\u0644\u062d\u0627\u0644\u064a.</p>"},{"location":"ar/A00_2021-Introduction/#_2","title":"\u0627\u0644\u0645\u0646\u0647\u062c\u064a\u0629","text":"<p>\u0644\u0623\u0648\u0644 \u0645\u0631\u0629 \u064a\u062a\u0645 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0641\u064a \u062a\u0635\u0646\u064a\u0641 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0648\u064a\u062c\u0628 \u0627\u0644\u062a\u0646\u0648\u064a\u0647 \u0623\u0646\u0647\u0627 \u0644\u0627 \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u0634\u0643\u0644 \u0643\u064f\u0644\u064a. \u062d\u064a\u062b \u062a\u0645 \u0627\u062e\u062a\u064a\u0627\u0631 \u062b\u0645\u0627\u0646\u064a\u0629 \u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0645\u0646 \u0623\u0635\u0644 \u0639\u0634\u0631\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u062b\u0646\u064a\u0646 \u0645\u0646\u0647\u0645 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0627\u0644\u0630\u064a \u062a\u0645 \u0625\u062c\u0631\u0627\u0624\u0647 \u0641\u064a \u0646\u0637\u0627\u0642 \u0627\u0644\u0645\u062e\u0627\u0637\u0631. \u0648\u062a\u0642\u0648\u0645 \u0645\u0646\u0638\u0645\u0629 \u0623\u0648\u0627\u0633\u0628 \u0628\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0633\u0627\u0628\u0642\u0629 \u0623\u0643\u062b\u0631  \u0645\u0646 \u0623\u064a \u0645\u0635\u0627\u062f\u0631 \u0623\u062e\u0631\u0649 \u0648\u0630\u0644\u0643 \u0628\u0633\u0628\u0628 \u0623\u0646 \u0627\u0644\u0628\u0627\u062d\u062b\u064a\u0646 \u0641\u064a \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u064a\u0633\u062a\u063a\u0631\u0642\u0648\u0646 \u0648\u0642\u062a \u0648\u062c\u0647\u062f \u0643\u0628\u064a\u0631 \u0641\u064a \u0625\u064a\u062c\u0627\u062f \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0623\u0648 \u0637\u0631\u0642 \u062c\u062f\u064a\u062f\u0629 \u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644\u0647\u0627. \u0645\u0645\u0627 \u064a\u062c\u0639\u0644 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0646\u062a\u0627\u0626\u062c \u0648\u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0648\u0627\u0644\u0637\u0631\u0642 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u064a\u0633\u062a\u063a\u0631\u0642 \u0648\u0642\u062a \u0623\u0643\u0628\u0631 \u0648\u0642\u062f \u062a\u0635\u0644 \u0625\u0644\u0649 \u0633\u0646\u0648\u0627\u062a. \u0648\u0644\u062a\u062d\u0642\u064a\u0642 \u0627\u0644\u062a\u0648\u0627\u0632\u0646 \u0642\u0645\u0646\u0627 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0639\u0644\u0649 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u062a\u064a \u062a\u0633\u062a\u0647\u062f\u0641 \u0635\u0646\u0627\u0639\u0629 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u0642\u0645\u0646\u0627 \u0628\u062a\u0648\u062c\u064a\u0647 \u0623\u0633\u0626\u0644\u0629 \u0644\u0644\u0645\u062e\u062a\u0635\u0651\u064a\u0646 \u0641\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 \u0627\u0644\u062a\u064a \u0642\u062f \u0644\u0627 \u062a\u0638\u0647\u0631\u0647\u0627 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.</p> <p>\u0648\u0643\u0645\u0627 \u0623\u0646 \u0647\u0646\u0627\u0643 \u0628\u0639\u0636 \u0627\u0644\u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0627\u0644\u062c\u0648\u0647\u0631\u064a\u0629 \u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u0639\u062a\u0645\u0627\u062f\u0647\u0627 \u0645\u0646 \u0642\u0628\u0644 \u0645\u0646\u0638\u0645\u0629 \u0623\u0648\u0627\u0633\u0628 \u0644\u0645\u0648\u0627\u0635\u0644\u0629 \u0627\u0644\u0645\u0646\u0647\u062c\u064a\u0629 \u0627\u0644\u0645\u062a\u0651\u0628\u0639\u0629 \u0641\u064a \u062a\u0635\u0646\u064a\u0641 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631. </p>"},{"location":"ar/A00_2021-Introduction/#_3","title":"\u0643\u064a\u0641 \u064a\u062a\u0645 \u062a\u0646\u0638\u064a\u0645 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a","text":"<p>\u062a\u0645 \u062a\u063a\u064a\u064a\u0631 \u0628\u0639\u0636 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0645\u0646 \u0627\u0644\u0625\u0635\u062f\u0627\u0631 \u0627\u0644\u0633\u0627\u0628\u0642 \u0644\u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631 \u0648\u0647\u0646\u0627 \u0645\u0644\u062e\u0635 \u0644\u0645\u0627 \u062a\u0645 \u062a\u063a\u064a\u0631\u0647 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a</p> <p>\u062a\u0631\u0643\u0632 \u0627\u0644\u062c\u0647\u0648\u062f \u0627\u0644\u0645\u0628\u0630\u0648\u0644\u0629 \u0641\u064a \u062c\u0645\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0644\u0649 \u0645\u062c\u0645\u0648\u0639\u0627\u062a \u0641\u0631\u0639\u064a\u0629 \u0645\u0646 CWEs \u0628\u0639\u062f\u062f 30 \u0645\u062c\u0627\u0644 \u0645\u0639 \u0627\u0644\u0627\u062e\u0630 \u0628\u0627\u0644\u0627\u0639\u062a\u0628\u0627\u0631 \u0627\u0646 \u0628\u0639\u0636 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0627\u0644\u0641\u0631\u0639\u064a\u0629 \u062a\u062d\u062a\u0627\u062c \u0627\u0644\u0649 \u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0646\u062a\u0627\u0626\u062c \u0625\u0636\u0627\u0641\u064a\u0629. \u0644\u0630\u0644\u0643 \u0642\u0631\u0651\u0631\u062a \u0627\u0644\u0645\u0646\u0638\u0645\u0629 \u0623\u0646\u0647\u0627 \u0633\u062a\u0642\u0648\u0645 \u0628\u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 30 \u062a\u0635\u0646\u064a\u0641 \u0645\u0646 CWEs \u0628\u0634\u0643\u0644 \u0623\u0633\u0627\u0633\u064a \u0648\u0642\u062f \u064a\u062a\u0637\u0644\u0651\u0628 \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u0623\u062d\u064a\u0627\u0646 \u0627\u0644\u0646\u0638\u0631 \u0641\u064a \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0627\u0644\u0645\u062a\u0641\u0631\u0639\u0629 \u0645\u0646\u0647\u0627 \u0648\u0633\u064a\u0643\u0648\u0646 \u0641\u064a \u0646\u0637\u0627\u0642 \u0645\u062d\u062f\u0648\u062f \u0648\u0636\u064a\u0651\u0642. \u0648\u062a\u0628\u0639\u064b\u0627 \u0644\u0644\u0625\u062c\u0631\u0627\u0621\u0627\u062a \u0627\u0644\u0645\u0639\u062a\u0627\u062f\u0629 \u0642\u0645\u0646\u0627 \u0628\u0637\u0644\u0628 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0628\u062f\u0648\u0646 \u0623\u064a \u0642\u064a\u0648\u062f \u0639\u0644\u0649 CWEs. \u0648\u0642\u0645\u0646\u0627 \u0628\u0637\u0644\u0628 \u0639\u062f\u062f \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u062e\u062a\u0628\u0627\u0631\u0647\u0627 \u0644\u0633\u0646\u0648\u0627\u062a \u0645\u062d\u062f\u062f\u0629 (\u0628\u062f\u0621\u064b\u0627 \u0645\u0646 \u0639\u0627\u0645 2017)\u060c \u0648 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u062a\u0642\u064a\u064a\u0645\u0647\u0627 \u0628\u0625\u0635\u0627\u0628\u062a\u0647\u0627 \u0628\u0623\u062d\u062f CWEs \u0639\u0644\u0649 \u0627\u0644\u0623\u0642\u0644. \u0648\u062a\u0633\u0645\u062d \u0644\u0646\u0627 \u0647\u0630\u0647 \u0627\u0644\u0637\u0631\u064a\u0642\u0629 \u0645\u0639\u0631\u0641\u0629 \u0645\u062f\u0649 \u0627\u0631\u062a\u0628\u0627\u0637 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0628\u062a\u0635\u0646\u064a\u0641\u0627\u062a CWEs. \u0645\u0639 \u0627\u0644\u0623\u062e\u0630 \u0628\u0639\u064a\u0646 \u0627\u0644\u0627\u0639\u062a\u0628\u0627\u0631 \u0623\u0646\u0646\u0627 \u062a\u062c\u0627\u0647\u0644\u0646\u0627 \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0644\u0623\u0633\u0628\u0627\u0628 \u0645\u0639\u064a\u0651\u0646\u0629\u060c \u0648\u0623\u0646 \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u062d\u0627\u0644\u0627\u062a \u064a\u0643\u0648\u0646 \u0636\u0631\u0648\u0631\u064a\u064b\u0627 \u0627\u0644\u0623\u062e\u0630 \u0628\u0647 \u0648\u0627\u0644\u0630\u064a \u0642\u062f \u064a\u0624\u062b\u0631 \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u0623\u062d\u064a\u0627\u0646 \u0641\u064a \u062d\u0627\u0644 \u0643\u0627\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0646\u062a\u0634\u0631 \u0648\u0645\u0634\u0647\u0648\u0631 \u0648\u0645\u0633\u062a\u062e\u062f\u0645 \u0628\u0643\u062b\u0631\u0629. \u0648\u0627\u0644\u062c\u062f\u064a\u0631 \u0628\u0627\u0644\u0630\u0643\u0631 \u0623\u0646 \u0645\u0647\u0645\u0627 \u0643\u0627\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0635\u0627\u0628 \u0628\u0640 4 \u0645\u0646 CWEs \u0623\u0648 4,000 \u0641\u0647\u0630\u0627 \u0644\u0627 \u064a\u0624\u062b\u0631 \u0639\u0644\u0649 \u0622\u0644\u064a\u0629 \u0627\u062d\u062a\u0633\u0627\u0628 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0644\u062f\u064a\u0646\u0627. \u0648\u0644\u0642\u062f \u0643\u0627\u0646 \u0644\u062f\u064a\u0646\u0627 \u062d\u0648\u0627\u0644\u064a 400 CWEs \u062a\u0642\u0631\u064a\u0628\u064b\u0627 \u0648\u0642\u0645\u0646\u0627 \u0628\u062d\u0635\u0631\u0647\u0627 \u0648\u062a\u0642\u0644\u064a\u0644\u0647\u0627 \u0625\u0644\u0649 30 CWEs \u0648\u0630\u0644\u0643 \u0645\u0646 \u062e\u0644\u0627\u0644 \u062a\u062d\u0644\u064a\u0644 \u0645\u062c\u0645\u0648\u0639\u0629 \u0645\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \u0648\u0643\u0645\u0627 \u0646\u062e\u0637\u0637 \u0641\u064a \u0627\u0644\u0645\u0633\u062a\u0642\u0628\u0644 \u0641\u064a \u0625\u062c\u0631\u0627\u0621 \u062a\u062d\u0644\u064a\u0644\u0627\u062a \u0625\u0636\u0627\u0641\u064a\u0629 \u0648\u0627\u0644\u062a\u064a \u0628\u062f\u0648\u0631\u0647\u0627 \u0633\u062a\u0646\u0639\u0643\u0633 \u0639\u0644\u0649 \u0625\u0636\u0627\u0641\u0629 \u0628\u0639\u0636 \u0645\u0646 CWEs \u0648\u0642\u062f \u064a\u0643\u0648\u0646 \u0647\u0646\u0627\u0643 \u062a\u063a\u064a\u064a\u0631 \u0643\u0630\u0644\u0643 \u0639\u0644\u0649 \u0647\u064a\u0643\u0644\u0629 \u0648\u062a\u0635\u0646\u064a\u0641 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631.</p> <p>\u0644\u0642\u062f \u0623\u0645\u0636\u064a\u0646\u0627 \u0639\u062f\u0629 \u0623\u0634\u0647\u0631 \u0641\u064a \u062a\u062c\u0645\u064a\u0639 \u0648\u062a\u0635\u0646\u064a\u0641 CWEs \u0648\u0643\u0627\u0646 \u0645\u0646 \u0627\u0644\u0645\u0645\u0643\u0646 \u0623\u0646 \u0646\u0633\u062a\u0645\u0631 \u0644\u0623\u0634\u0647\u0631 \u0625\u0636\u0627\u0641\u064a\u0629. \u0648\u0644\u0643\u0646 \u0643\u0627\u0646 \u0639\u0644\u064a\u0646\u0627 \u0627\u0644\u062a\u0648\u0642\u0641 \u0639\u0646\u062f \u0646\u0642\u0637\u0629 \u0645\u0627. \u0643\u0645\u0627 \u0623\u0646 \u0647\u0646\u0627\u0643 \u0623\u0646\u0648\u0627\u0639 \u0641\u064a CWEs \u0645\u0627 \u064a\u0633\u0645\u0649 \u0628\u0640 \u201c\u0633\u0628\u0628 \u062c\u0630\u0631\u064a\" \u0648 \"\u0627\u0644\u0623\u0639\u0631\u0627\u0636\". \u0648\u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644 \u0639\u0644\u0649 \"\u0633\u0628\u0628 \u062c\u0630\u0631\u064a\" \u0643\u0641\u0634\u0644 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0623\u0648 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062e\u0627\u0637\u0626\u0629 \u0648\u0627\u0644\u0630\u064a \u064a\u062a\u0645 \u0625\u0642\u0631\u0627\u0646\u0647 \u0628\u0627\u0644\u0623\u0639\u0631\u0627\u0636 \u0645\u062b\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0633\u0627\u0633\u0629 \u0645\u0643\u0634\u0648\u0641\u0629 \u0623\u0648 \u062d\u062c\u0628 \u0627\u0644\u062e\u062f\u0645\u0629. \u0644\u0630\u0644\u0643 \u0642\u0631\u0651\u0631\u0646\u0627 \u0623\u0646 \u0646\u0631\u0643\u0632 \u0639\u0644\u0649 \"\u0627\u0644\u0633\u0628\u0628 \u0627\u0644\u062c\u0630\u0631\u064a\" \u0642\u062f\u0631 \u0627\u0644\u0625\u0645\u0643\u0627\u0646 \u0648\u0630\u0644\u0643 \u0644\u062a\u0648\u0641\u0651\u0631 \u0627\u0644\u062a\u0648\u0635\u064a\u0627\u062a \u0648\u0627\u0644\u0625\u0631\u0634\u0627\u062f\u0627\u062a \u0648\u0637\u0631\u0642 \u062a\u0644\u0627\u0641\u064a \u062a\u0644\u0643 \u0627\u0644\u0623\u0633\u0628\u0627\u0628. \u0643\u0645\u0627 \u0623\u0646 \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u0627\u0644\u0623\u0633\u0628\u0627\u0628 \u0627\u0644\u062c\u0630\u0631\u064a\u0629 \u0623\u0643\u062b\u0631 \u0645\u0646 \u0627\u0644\u0623\u0639\u0631\u0627\u0636 \u0644\u064a\u0633 \u0645\u0641\u0647\u0648\u0645 \u062c\u062f\u064a\u062f\u060c \u0643\u0645\u0627 \u0623\u0646 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u062c\u0627\u0621\u062a \u0628\u0634\u0643\u0644 \u0645\u062e\u062a\u0644\u0637 \u0645\u0627 \u0628\u064a\u0646 \"\u0627\u0644\u0623\u0633\u0628\u0627\u0628 \u0627\u0644\u062c\u0630\u0631\u064a\u0629\" \u0648 \"\u0627\u0644\u0623\u0639\u0631\u0627\u0636\" \u0648\u0647\u0648 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 \u0627\u0644\u0645\u062a\u0651\u0628\u0639 \u0641\u064a CWEs \u0643\u0630\u0644\u0643. \u0648\u0647\u062f\u0641\u0646\u0627 \u0623\u0646 \u0646\u0643\u0648\u0646 \u0639\u0644\u0649 \u062a\u0648\u0627\u0632\u0646 \u0628\u064a\u0646\u0647\u0645. \u0625\u0646 \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u062d\u0633\u0628 CWEs \u0647\u0648 19.6 \u062d\u064a\u062b \u062d\u0635\u0644\u062a A10 \u062a\u0632\u0648\u064a\u0631 \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0645\u0646 \u062c\u0627\u0646\u0628 \u0627\u0644\u062e\u0627\u062f\u0645 SSRF \u0639\u0644\u0649 1 CWEs \u0648 40 CWEs \u0644\u0635\u0627\u0644\u062d A04:2021- \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646 . \u0625\u0646 \u0627\u0644\u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0630\u064a \u062c\u0631\u0649 \u0639\u0644\u0649 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0645\u0641\u064a\u062f \u062c\u062f\u064b\u0627 \u0644\u0644\u0645\u0646\u0638\u0645\u0627\u062a \u0645\u0646 \u0646\u0627\u062d\u064a\u0629 \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u0645\u0646\u0627\u0641\u0639 \u0627\u0644\u0627\u0633\u062a\u0641\u0627\u062f\u0629 \u0645\u0646 \u0627\u0644\u062a\u062f\u0631\u064a\u0628 \u0639\u0644\u0649 CWEs \u0648\u0627\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0643\u0644\u063a\u0629 \u0639\u0645\u0644 \u0648\u0625\u0637\u0627\u0631.</p>"},{"location":"ar/A00_2021-Introduction/#_4","title":"\u0643\u064a\u0641 \u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0644\u0628\u0639\u0636 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0627\u0644\u0645\u062e\u062a\u0627\u0631\u0629","text":"<p>\u0641\u064a \u0627\u0644\u0625\u0635\u062f\u0627\u0631 \u0627\u0644\u0633\u0627\u0628\u0642 \u0644\u0639\u0627\u0645 2017\u060c \u062c\u0639\u0644\u0646\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0645\u0628\u0646\u064a\u0629 \u0639\u0644\u0649 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0644\u062a\u062d\u062f\u064a\u062f \u0627\u062d\u062a\u0645\u0627\u0644\u064a\u062a\u0647\u0627. \u0628\u0639\u062f \u0630\u0644\u0643 \u0642\u0645\u0646\u0627 \u0628\u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0645\u062c\u0645\u0648\u0639\u0629 \u0646\u0642\u0627\u0634 \u0645\u0628\u0646\u064a\u0651\u0629 \u0639\u0644\u0649 \u0639\u0642\u0648\u062f \u0645\u0646 \u0627\u0644\u062e\u0628\u0631\u0627\u062a \u0641\u064a \u0627\u0644\u0627\u062e\u062a\u0631\u0627\u0642 \u0648\u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648\u0627\u0644\u0627\u0643\u062a\u0634\u0627\u0641 \u0648\u0627\u062d\u062a\u0645\u0627\u0644\u064a\u0629 \u062d\u062f\u0648\u062b\u0647\u0627 \u0623\u064a\u0636\u064b\u0627 \u0648\u0645\u0627 \u0647\u0648 \u0627\u0644\u0623\u062b\u0631 \u0627\u0644\u062a\u0642\u0646\u064a \u0627\u0644\u0630\u064a \u0633\u064a\u062d\u062f\u062b. \u0644\u0630\u0644\u0643 \u0623\u0631\u062f\u0646\u0627 \u0641\u064a \u0627\u0644\u0646\u0633\u062e\u0629 \u0627\u0644\u062c\u062f\u064a\u062f\u0629 \u0645\u0646 \u0639\u0627\u0645 2021 \u0645\u0646 \u0627\u0644\u0627\u0633\u062a\u0641\u0627\u062f\u0629 \u0645\u0646 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648\u0627\u0644\u0623\u062b\u0631 \u0625\u0646 \u0623\u0645\u0643\u0646 \u0630\u0644\u0643.</p> <p>\u0642\u0645\u0646\u0627 \u0628\u062a\u0646\u0632\u064a\u0644 \" OWASP Dependency Check\" \u0648\u0627\u0633\u062a\u062e\u0631\u062c\u0646\u0627 \u0646\u062a\u0627\u0626\u062c CVSS \u0644\u0644\u0627\u062e\u062a\u0631\u0627\u0642 \u0648\u0627\u0644\u0622\u062b\u0627\u0631  \u0627\u0644\u062a\u064a \u062a\u0645 \u062c\u0645\u0639\u0647\u0627 \u0633\u0627\u0628\u0642\u0627\u064b \u0645\u0646 CWEs \u0630\u0627\u062a \u0627\u0644\u0639\u0644\u0627\u0642\u0629. \u0648\u0644\u0627 \u064a\u062e\u0641\u0649 \u0639\u0644\u064a\u0643\u0645 \u0627\u0646 \u0647\u0630\u0627 \u0627\u0644\u062c\u0647\u062f \u0645\u0646 \u0627\u0644\u0628\u062d\u062b \u0627\u062e\u0630 \u0642\u062f\u0631 \u0644\u0627 \u0628\u0627\u0633 \u0628\u0647 \u0644\u0627\u0646 \u062c\u0645\u064a\u0639 CVEs \u0644\u062f\u064a\u0647\u0627 \u062f\u0631\u062c\u0627\u062a \u0645\u0646 CVSSv2 \u0643\u0630\u0644\u0643. \u0648\u0644\u0643\u0646 \u0647\u0646\u0627 \u0628\u0639\u0636 \u0627\u0644\u062e\u0644\u0644 \u0645\u0627 \u0628\u064a\u0646 CVSSv2 \u0648CVSSv3 \u0648\u0627\u0644\u0630\u064a \u064a\u062c\u0628 \u0645\u0639\u0627\u0644\u062c\u062a\u0647. \u0648\u0633\u0646\u0631\u0649 \u0641\u064a \u0627\u0644\u0642\u0631\u064a\u0628 \u0627\u0646 \u062c\u0645\u064a\u0639 CVEs \u0633\u062a\u0642\u0648\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 CVSSv3. \u0648\u0646\u0648\u062f \u0627\u0646 \u0646\u0644\u0641\u062a \u0627\u0644\u0627\u0646\u062a\u0628\u0627\u0647 \u0627\u0646 \u0645\u0639\u0627\u062f\u0644\u0629 CVSSv2 \u0648CVSSv3 \u0648\u0627\u0644\u062f\u0631\u062c\u0627\u062a \u0645\u062a\u063a\u064a\u0631\u0629 \u0648\u0645\u062a\u062d\u062f\u062b\u0629.</p> <p>\u0641\u064a CVSSv2\u060c \u0645\u0646 \u0627\u0644\u0645\u0645\u0643\u0646 \u0627\u0646 \u064a\u0635\u0644 \u0627\u0644\u0623\u062b\u0631 \u0648 \u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u0649 10.0\u060c \u0648\u0644\u0643\u0646 \u0628\u0639\u062f \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0639\u0627\u062f\u0644\u0629 \u0642\u062f \u062a\u0646\u062e\u0641\u0636 \u0627\u0644\u0649 60%  \u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648 40% \u0644\u0644\u062a\u0623\u062b\u064a\u0631. \u0648\u0641\u064a CVSSv3 \u0643\u0627\u0646 \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0639\u0644\u0649 \u0647\u0648 6.0  \u0644\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648 4.0 \u0644\u0644\u0623\u062b\u0631. \u0645\u0639 \u0627\u0644\u0627\u062e\u0630 \u0628\u0627\u0644\u0627\u0639\u062a\u0628\u0627\u0631 \u0645\u062f\u0649 \u062b\u0642\u0644 \u0623\u062d\u062f\u0647\u0645\u0627. \u0648\u0639\u0646\u062f \u0627\u0644\u0646\u0638\u0631 \u0627\u0644\u0649 CVSSv3 \u0646\u0631\u0649 \u0627\u0646 \u0627\u0644\u0623\u062b\u0631 \u0627\u0631\u062a\u0641\u0639 \u062d\u0648\u0627\u0644\u064a \u0646\u0642\u0637\u0629 \u0648\u0646\u0635\u0641\u060c \u0648\u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0646\u062e\u0641\u0636 \u0628\u0645\u0642\u062f\u0627\u0631  \u0627\u0644\u0646\u0635\u0641 \u0646\u0642\u0637\u0629 \u062a\u0642\u0631\u064a\u0628\u0627\u064b.</p> <p>\u0647\u0646\u0627\u0643 \u0623\u0643\u062b\u0631 \u0645\u0646 125 \u0623\u0644\u0641 \u0633\u062c\u0644 \u0645\u0646 CVE \u062a\u0645 \u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0641\u064a \u0645\u0646\u0635\u0629 NVD \u0648\u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0641\u064a \" OWASP Dependency Check\". \u0648\u0647\u0646\u0627\u0643 \u0623\u0643\u062b\u0631 \u0645\u0646 241 \u062a\u0635\u0646\u064a\u0641 \u0641\u0631\u0639\u064a \u0641\u0631\u064a\u062f \u0641\u064a CWEs \u062a\u0645 \u0631\u0628\u0637\u0647\u0627 \u0641\u064a \u0623\u0643\u062b\u0631 \u0645\u0646 CVE. \u0648\u0647\u0646\u0627\u0643 \u0623\u0643\u062b\u0631 \u0645\u0646 62 \u0623\u0644\u0641 \u0645\u0646 CWE \u062a\u0645 \u0631\u0628\u0637\u0647\u0627 \u0641\u064a CVSSv3. \u0648\u0627\u0644\u062a\u064a \u062a\u0645\u062b\u0644 \u0646\u0635\u0641 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u062d\u0635\u0631\u0647\u0627.</p> <p>\u0641\u064a \u0642\u0627\u0626\u0645\u0629 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631\u060c \u0642\u0645\u0646\u0627 \u0628\u062d\u0633\u0627\u0628 \u0645\u062a\u0648\u0633\u0637 \u0646\u0642\u0627\u0637 \u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648\u0627\u0644\u0623\u062b\u0631 \u0628\u0627\u0644\u0637\u0631\u0642 \u0627\u0644\u062a\u0627\u0644\u064a\u0629. \u0642\u0645\u0646\u0627 \u0628\u062a\u062c\u0645\u064a\u0639 \u062f\u0631\u062c\u0627\u062a CVEs \u0645\u0639 CVSS \u0628\u0648\u0627\u0633\u0637\u0629 CWE \u0648\u0642\u0645\u0646\u0627 \u0628\u062a\u0642\u064a\u064a\u0645 \u0643\u0644 \u0645\u0646 \u0627\u0644\u0623\u062b\u0631 \u0648\u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0633\u0628\u0629 \u0627\u0644\u0645\u0626\u0648\u064a\u0629  \u0627\u0644\u0645\u0648\u062c\u0648\u062f\u0629 \u0641\u064a CVSSv3 \u0628\u0627\u0644\u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0649 \u062c\u0645\u064a\u0639 \u0645\u0627 \u064a\u0648\u062c\u062f \u0641\u064a CVSSv2 \u0644\u0627\u062d\u062a\u0633\u0627\u0628 \u0627\u0644\u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u0625\u062c\u0645\u0627\u0644\u064a. \u0648\u0628\u0639\u062f \u0630\u0644\u0643 \u0642\u0645\u0646\u0627 \u0628\u0631\u0628\u0637 \u0627\u0644\u0645\u062a\u0648\u0633\u0637 \u0628\u0640 CWEs \u0641\u064a \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0630\u0644\u0643 \u0644\u0627\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0644\u062a\u0642\u064a\u064a\u0645 \u062f\u0631\u062c\u0627\u062a \u0627\u0644\u0623\u062b\u0631 \u0648\u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648\u0627\u0644\u0627\u0633\u062a\u0641\u0627\u062f\u0629 \u0645\u0646\u0647\u0627 \u0643\u0630\u0644\u0643 \u0641\u064a \u0627\u062d\u062a\u0633\u0627\u0628 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0628\u0646\u0627\u0621 \u0639\u0644\u0649 \u0627\u0644\u0645\u0639\u0627\u062f\u0644\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629.</p>"},{"location":"ar/A00_2021-Introduction/#_5","title":"\u0644\u0645\u0627\u0630\u0627 \u0644\u0627 \u062a\u0643\u0648\u0646 \u0645\u062c\u0631\u062f \u0628\u064a\u0627\u0646\u0627\u062a \u0625\u062d\u0635\u0627\u0626\u064a\u0629 \u0628\u062d\u062a\u0629\u061f","text":"<p>\u062a\u0642\u062a\u0635\u0631 \u0627\u0644\u0646\u062a\u0627\u0626\u062c \u0628\u0634\u0643\u0644 \u0623\u0633\u0627\u0633\u064a \u0639\u0644\u0649 \u0645\u0627 \u064a\u0645\u0643\u0646 \u0627\u062e\u062a\u0628\u0627\u0631\u0647 \u0628\u0634\u0643\u0644 \u0622\u0644\u064a. \u0648\u062d\u064a\u0646\u0645\u0627 \u062a\u062a\u062d\u062f\u062b \u0625\u0644\u0649 \u0623\u062d\u062f \u0627\u0644\u0645\u062e\u062a\u0635\u0651\u064a\u0646 \u0627\u0644\u0645\u062d\u062a\u0631\u0641\u064a\u0646 \u0641\u064a \u0645\u062c\u0627\u0644 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0633\u064a\u062e\u0628\u0631\u0648\u0646\u0643 \u0623\u0646 \u0628\u0639\u0636 \u0627\u0644\u0645\u062e\u0631\u062c\u0627\u062a \u0648\u0627\u0644\u0627\u062d\u0635\u0627\u0626\u064a\u0627\u062a \u0644\u0627 \u064a\u0648\u062c\u062f \u0644\u0647\u0627 \u0628\u064a\u0627\u0646\u0627\u062a \u0628\u0639\u062f. \u0648\u0645\u0639 \u0630\u0644\u0643 \u0639\u0646\u062f \u0625\u0639\u062f\u0627\u062f \u0645\u0646\u0647\u062c\u064a\u0627\u062a \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u060c \u062a\u0633\u062a\u063a\u0631\u0642 \u0641\u062a\u0631\u0629 \u0645\u0646 \u0627\u0644\u0632\u0645\u0646 \u0648\u0645\u0646 \u062b\u0645 \u0623\u0646\u062a \u0628\u062d\u0627\u062c\u0629 \u0625\u0644\u0649 \u0627\u0644\u0645\u0632\u064a\u062f \u0645\u0646 \u0627\u0644\u0648\u0642\u062a \u0644\u0643\u064a \u062a\u0642\u0648\u0645 \u0628\u0623\u062a\u0645\u062a\u0629 \u062a\u0644\u0643 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0648\u062a\u0634\u063a\u064a\u0644\u0647\u0627 \u0639\u0644\u0649 \u0645\u062c\u0645\u0648\u0639\u0629 \u0643\u0628\u064a\u0631\u0629 \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a. </p> <p>\u0648\u0644\u0630\u0644\u0643 \u0642\u0645\u0646\u0627 \u0628\u0627\u062e\u062a\u064a\u0627\u0631 \u062b\u0645\u0627\u0646\u064a\u0629 \u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0645\u0646 \u0623\u0635\u0644 \u0639\u0634\u0631\u0629 \u0645\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u0633\u0628\u0628 \u0639\u062f\u0645 \u0627\u0643\u062a\u0645\u0627\u0644 \u0648\u0646\u0636\u062c \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u0628\u0627\u0644\u0646\u0633\u0628\u0629 \u0644\u0644\u062a\u0635\u0646\u064a\u0641\u064a\u0646 \u0627\u0644\u0645\u062a\u0628\u0642\u064a\u0629 \u0642\u0645\u0646\u0627 \u0628\u0639\u0645\u0644 \u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0641\u064a \u0645\u062c\u0627\u0644 \u0627\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a. \u0645\u0645\u0627 \u064a\u0633\u0645\u062d \u0644\u0644\u0645\u062e\u062a\u0635\u064a\u0646 \u0628\u0627\u0644\u062a\u0635\u0648\u064a\u062a \u0644\u0645\u0627 \u064a\u0631\u0648\u0646\u0647 \u0645\u0646 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u062a\u064a \u062a\u0633\u062a\u062d\u0642 \u0623\u0646 \u062a\u0636\u0627\u0641 \u0625\u0644\u0649 \u0642\u0627\u0626\u0645\u0629 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0648\u0627\u0644\u062a\u064a \u0642\u062f \u0644\u0627 \u064a\u0643\u0648\u0646 \u0644\u0647\u0627 \u0628\u064a\u0627\u0646\u0627\u062a \u0623\u0648 \u0628\u064a\u0627\u0646\u0627\u062a \u063a\u064a\u0631 \u0645\u062a\u0646\u0627\u0633\u0642\u0629 \u0623\u0648 \u063a\u064a\u0631 \u0645\u0646\u0627\u0633\u0628\u0629.</p>"},{"location":"ar/A00_2021-Introduction/#_6","title":"\u0644\u0645\u0627\u0630\u0627 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0628\u062f\u0644\u0627 \u0645\u0646 \u0627\u0644\u062a\u0643\u0631\u0627\u0631\u061f","text":"<p>\u0647\u0646\u0627\u0643 \u062b\u0644\u0627\u062b\u0629 \u0645\u0635\u0627\u062f\u0631 \u0623\u0633\u0627\u0633\u064a\u0629 \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \u0646\u062d\u062f\u062f\u0647\u0627 \u0639\u0644\u0649 \u0623\u0646\u0647\u0627 \u0627\u0644\u0627\u0646\u0633\u0627\u0646 \u064a\u0633\u0627\u0639\u062f \u0627\u0644\u0623\u062f\u0648\u0627\u062a (HaT) \u060c \u0627\u0648 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u062a\u0633\u0627\u0639\u062f \u0627\u0644\u0625\u0646\u0633\u0627\u0646 (TaH) \u060c \u0627\u0648 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0645\u0646 \u063a\u064a\u0631 \u0623\u064a \u062a\u0639\u062f\u064a\u0644\u0627\u062a.</p> <p>\u062a\u0642\u0648\u0645 HaT \u0648\u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0628\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0643\u062a\u0634\u0627\u0641 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0639\u0627\u0644\u064a. \u062d\u064a\u062b \u0627\u0646 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u062a\u0628\u062d\u062b \u0639\u0646 \u0646\u0642\u0627\u0637 \u0636\u0639\u0641 \u0645\u062d\u062f\u062f\u0629 \u0645\u0639 \u062a\u062c\u0631\u0628\u0629 \u062c\u0645\u064a\u0639 \u0627\u0644\u0627\u062d\u062a\u0645\u0627\u0644\u0627\u062a \u0627\u0644\u0645\u062a\u0648\u0642\u0639\u0629 \u0644\u0627\u0643\u062a\u0634\u0627\u0641 \u0627\u0644\u062b\u063a\u0631\u0629. \u0648\u0639\u0646\u062f \u0627\u0644\u0646\u0638\u0631 \u0627\u0644\u0649 \u062b\u063a\u0631\u0629 XSS \u0648\u0627\u0644\u062a\u064a \u0628\u0627\u0644\u0639\u0627\u062f\u0629 \u0627\u0645\u0627 \u0627\u0646 \u062a\u0643\u0648\u0646 \u0645\u0646\u062e\u0641\u0636\u0629 \u0627\u0644\u062e\u0637\u0648\u0631\u0629 \u0627\u0648 \u0628\u0633\u064a\u0637\u0629 \u0648\u0627\u0644\u062a\u064a \u062a\u0623\u062a\u064a \u0628\u0633\u0628\u0628 \u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0648 \u0623\u062e\u0637\u0627\u0621 \u0641\u064a \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u0635\u0641\u064a\u0629. \u0648\u0639\u0646\u062f\u0645\u0627 \u062a\u0643\u0648\u0646 \u0627\u0644\u062b\u063a\u0631\u0629 \u0628\u0633\u0628\u0628 \u062e\u0637\u0627\u0621 \u0641\u064a \u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u062a\u0631\u062a\u0641\u0639 \u0628\u0627\u0644\u0646\u0633\u0628\u0629  \u062a\u0643\u0631\u0627\u0631 \u0627\u0644\u0627\u0643\u062a\u0634\u0627\u0641 \u0644\u0647\u0630\u0647 \u0627\u0644\u062b\u063a\u0631\u0629 \u0648\u0627\u0644\u062a\u064a \u0645\u0646 \u0627\u0644\u0645\u0645\u0643\u0646 \u0627\u0646 \u062a\u0624\u062b\u0631 \u0639\u0644\u0649 \u0645\u062e\u0631\u062c\u0627\u062a \u0627\u0644\u062a\u0642\u0631\u064a\u0631 \u0627\u0648 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.</p> <p>\u0648\u0645\u0646 \u0646\u0627\u062d\u064a\u0629 \u0623\u062e\u0631\u0649\u060c \u0646\u062c\u062f \u0623\u0646 TaH \u0623\u062e\u0631\u062c\u062a \u0644\u0646\u0627 \u0646\u0637\u0627\u0642 \u0648\u0627\u0633\u0639 \u0645\u0646 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0648\u0644\u0643\u0646 \u0645\u0639 \u062a\u0643\u0631\u0627\u0631 \u0623\u0642\u0644 \u0628\u0643\u062b\u064a\u0631 \u0628\u0633\u0628\u0628 \u0636\u064a\u0642 \u0627\u0644\u0648\u0642\u062a. \u0648\u0630\u0644\u0643 \u0628\u0633\u0628\u0628 \u0642\u064a\u0627\u0645 \u0627\u0644\u0645\u062e\u062a\u0635\u064a\u0646 \u0628\u0641\u062d\u0635 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u064a\u0631\u0648\u0646 \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u0623\u062d\u064a\u0627\u0646 \u0645\u062b\u0644 XSS \u0633\u064a\u0642\u0648\u0645\u0648\u0646 \u0628\u0625\u064a\u062c\u0627\u062f \u0663 \u0623\u0648 \u0664 \u0648\u0628\u0639\u062f \u0630\u0644\u0643 \u064a\u062a\u0648\u0642\u0641\u0648\u0646 \u0639\u0646 \u0627\u0644\u0628\u062d\u062b \u0639\u0646\u0647\u0627 \u0648\u0625\u064a\u062c\u0627\u062f \u0633\u0628\u0628 \u0627\u0644\u062e\u0637\u0623 \u0648\u0643\u062a\u0627\u0628\u0629 \u062a\u0642\u0631\u064a\u0631 \u0639\u0646\u0647\u0627 \u0648\u0627\u0644\u062a\u0648\u0635\u064a\u0627\u062a \u0627\u0644\u0645\u0645\u0643\u0646\u0629 \u0644\u0643\u064a \u062a\u0642\u0648\u0645 \u0628\u0625\u0635\u0644\u0627\u062d\u0647\u0627 \u0648\u0627\u0644\u062a\u064a \u0633\u062a\u0642\u0648\u0645 \u0628\u0625\u0635\u0644\u0627\u062d \u062c\u0645\u064a\u0639 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a. \u0648\u0644\u064a\u0633 \u0647\u0646\u0627\u0643 \u062d\u0627\u062c\u0629 \u0623\u0648 \u0648\u0642\u062a \u0644\u0644\u0639\u062b\u0648\u0631 \u0639\u0644\u0649 \u062c\u0645\u064a\u0639 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0628\u0634\u0643\u0644 \u0645\u062a\u0643\u0631\u0631.</p> <p>\u0644\u0646\u0641\u062a\u0631\u0636 \u0623\u0646\u0646\u0627 \u0623\u062e\u0630\u0646\u0627 \u0645\u062c\u0645\u0648\u0639\u062a\u064a\u0646 \u0645\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u0645\u064a\u0651\u0632\u0629 \u0648\u0627\u0644\u063a\u064a\u0631 \u0645\u062a\u0634\u0627\u0628\u0647\u0629 \u0648\u062d\u0627\u0648\u0644\u0646\u0627 \u062f\u0645\u062c\u0647\u0627 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u062a\u0643\u0631\u0627\u0631. \u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u062d\u0627\u0644\u0629 \u0633\u0646\u062c\u062f \u0623\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062f\u0642\u064a\u0642\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u0631\u062c\u0629 \u0645\u0646 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0648HaT \u063a\u064a\u0631 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0645\u0644\u0627\u062d\u0638\u0629 \u0645\u0639 \u0628\u064a\u0627\u0646\u0627\u062a TaH. \u0648\u0647\u0630\u0627 \u064a\u0638\u0647\u0631 \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u0623\u062d\u064a\u0627\u0646 \u0628\u0634\u0643\u0644 \u0625\u064a\u062c\u0627\u0628\u064a \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062b\u0644 \u062b\u063a\u0631\u0629 XSS \u0648\u0627\u0644\u0630\u064a \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u0623\u062d\u064a\u0627\u0646 \u064a\u0642\u0648\u0645 \u0628\u0631\u0641\u0639 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0645\u0646 \u0645\u0646\u062e\u0641\u0636 \u0625\u0644\u0649 \u0645\u062a\u0648\u0633\u0637 \u0628\u0633\u0628\u0628 \u0627\u0644\u0639\u062f\u062f \u0627\u0644\u0647\u0627\u0626\u0644 \u0645\u0646 \u0627\u0644\u0646\u062a\u0627\u0626\u062c. (\u062b\u063a\u0631\u0627\u062a \u0645\u062b\u0644 XSS  \u0645\u0646 \u0627\u0644\u0633\u0647\u0644 \u0627\u062e\u062a\u0628\u0627\u0631\u0647\u0627 \u0648\u0627\u0644\u062e\u0631\u0648\u062c \u0628\u0646\u062a\u0627\u0626\u062c \u0645\u0639\u0642\u0648\u0644\u0629)</p> <p>\u0641\u064a \u0639\u0627\u0645 2017 \u0642\u0645\u0646\u0627 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0639\u062f\u0651\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0628\u062f\u0644\u064b\u0627 \u0645\u0646 \u0625\u0644\u0642\u0627\u0621 \u0646\u0638\u0631\u0629 \u0645\u0631\u0629 \u0623\u062e\u0631\u0649 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u062f\u0645\u062c\u0647\u0627 \u0628\u0634\u0643\u0644 \u0645\u0646\u0627\u0633\u0628 \u0645\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u0631\u062c\u0629 \u0645\u0646 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0648HaT \u0648 TaH.  \u062d\u064a\u062b \u064a\u0643\u0648\u0646 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0646\u0633\u0628\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u0644\u062f\u064a\u0647\u0627 \u0646\u0648\u0639 \u0645\u0646 \u0623\u0646\u0648\u0627\u0639 \u0627\u0644\u062b\u063a\u0631\u0627\u062a. \u0648\u062d\u0642\u064a\u0642\u0629 \u0646\u062d\u0646 \u0641\u064a \u0627\u0644\u0645\u0646\u0638\u0645\u0629 \u0644\u0627 \u0646\u0647\u062a\u0645 \u0641\u064a \u062d\u0627\u0644 \u0643\u0627\u0646\u062a \u0627\u0644\u062b\u063a\u0631\u0629 \u0648\u0627\u062d\u062f\u0629 \u0645\u0639\u062f\u0644 \u062d\u062f\u0648\u062b\u0647\u0627 \u0645\u062a\u0643\u0631\u0631. \u0648\u0647\u062f\u0641\u0646\u0627 \u0647\u0648 \u0645\u0639\u0631\u0641\u0629 \u0639\u062f\u062f \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u0644\u062f\u064a\u0647\u0627 \u062b\u063a\u0631\u0629 \u0648\u0627\u062d\u062f\u0629 \u0639\u0644\u0649 \u0627\u0644\u0623\u0642\u0644. \u0648\u0647\u0630\u0627 \u064a\u0639\u0637\u064a\u0646\u0627 \u062a\u0635\u0648\u0651\u0631 \u0648\u0627\u0636\u062d \u0645\u0646 \u0646\u062a\u0627\u0626\u062c \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0627\u0644\u062a\u064a \u062a\u064f\u0639\u062a\u0628\u0631 \u0644\u062f\u064a\u0646\u0627 \u0623\u0641\u0636\u0644 \u0645\u0646 \u0625\u063a\u0631\u0627\u0642 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u062a\u0643\u0631\u0627\u0631 \u0644\u064a\u0633 \u0644\u0647 \u0641\u0627\u0626\u062f\u0629.</p>"},{"location":"ar/A00_2021-Introduction/#_7","title":"\u0645\u0627 \u0647\u064a \u0639\u0645\u0644\u064a\u0629 \u062c\u0645\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u062a\u062d\u0644\u064a\u0644\u0647\u0627\u061f","text":"<p>\u062a\u0645 \u0625\u0636\u0641\u0627\u0621 \u0627\u0644\u0637\u0627\u0628\u0639 \u0627\u0644\u0631\u0633\u0645\u064a \u0639\u0644\u0649 \u0639\u0645\u0644\u064a\u0629 \u062c\u0645\u0639 \u0628\u064a\u0627\u0646\u0627\u062a \u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631 \u0641\u064a \u0642\u0645\u0629 Open Security Summit \u0641\u064a \u0639\u0627\u0645 2017. \u0648\u0628\u0639\u062f \u0630\u0644\u0643 \u0623\u0645\u0636\u0649 \u0627\u0644\u0645\u0633\u0624\u0648\u0644\u064a\u0646 \u0641\u064a \u0645\u0646\u0638\u0645\u0629 \u0622\u0648\u0627\u0633\u0628   \u064a\u0648\u0645\u064a\u0646 \u0641\u064a \u0627\u0644\u0639\u0645\u0644 \u0639\u0644\u0649 \u062c\u0639\u0644 \u0639\u0645\u0644\u064a\u0629 \u062c\u0645\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0628\u0646\u064a\u0629 \u0639\u0644\u0649 \u0633\u064a\u0627\u0633\u0629 \u0648\u0627\u0636\u062d\u0629 \u0648\u0634\u0641\u0627\u0641\u0629. \u062a\u0639\u062f \u0646\u0633\u062e\u0629 2021 \u0647\u064a \u0627\u0644\u0645\u0631\u0629 \u0627\u0644\u062b\u0627\u0646\u064a\u0629 \u0627\u0644\u062a\u064a \u0646\u0633\u062a\u062e\u062f\u0645 \u0641\u064a\u0647\u0627 \u0647\u0630\u0647 \u0627\u0644\u0645\u0646\u0647\u062c\u064a\u0629.</p> <p>\u0642\u0645\u0646\u0627 \u0628\u062f\u0639\u0648\u0629 \u0644\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0646 \u062e\u0644\u0627\u0644 \u0642\u0646\u0648\u0627\u062a \u0627\u0644\u062a\u0648\u0627\u0635\u0644 \u0627\u0644\u0627\u062c\u062a\u0645\u0627\u0639\u064a \u0627\u0644\u0645\u062a\u0627\u062d\u0629 \u0644\u0646\u0627\u060c \u0644\u0643\u0644\u0651\u064b\u0627 \u0645\u0646 \u0627\u0644\u0645\u0634\u0631\u0648\u0639 \u0648 OWASP. \u0648\u0641\u064a  \u0635\u0641\u062d\u0629 \u0645\u0634\u0631\u0648\u0639 OWASP, \u0646\u0642\u0648\u0645 \u0628\u0625\u062f\u0631\u0627\u062c \u0639\u0646\u0627\u0635\u0631 \u0648\u0647\u064a\u0643\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062a\u064a \u0646\u0628\u062d\u062b \u0639\u0646\u0647\u0627 \u0648\u0643\u064a\u0641\u064a\u0629 \u0625\u0631\u0633\u0627\u0644\u0647\u0627. \u0648\u0641\u064a  \u0645\u0634\u0631\u0648\u0639 GitHub, \u0644\u062f\u064a\u0646\u0627 \u0623\u0645\u062b\u0644\u0629 \u0644\u0645\u0644\u0641\u0627\u062a \u062a\u0639\u0645\u0644 \u0643\u0642\u0648\u0627\u0644\u0628. \u0646\u0639\u0645\u0644 \u0645\u0639 \u0627\u0644\u0645\u0646\u0638\u0645\u0627\u062a \u0627\u0644\u0623\u062e\u0631\u0649  \u062d\u0633\u0628 \u0627\u0644\u062d\u0627\u062c\u0629 \u0644\u0644\u0645\u0633\u0627\u0639\u062f\u0629 \u0641\u064a \u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0647\u064a\u0643\u0644\u0648\u0631\u0633\u0645\u0647 \u0648\u0631\u0628\u0637\u0647 \u0628\u0640 CWEs.</p> <p>\u0646\u062d\u0635\u0644 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0646 \u0627\u0644\u0645\u0624\u0633\u0633\u0627\u062a \u0627\u0644\u062a\u064a \u0628\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0645\u0646 \u062e\u0644\u0627\u0644 \u0627\u0644\u0645\u0628\u0627\u062f\u0644\u0629\u060c \u0648\u0645\u0646 \u062e\u0644\u0627\u0644 \u0645\u0646\u0635\u0627\u062a \u0627\u0643\u062a\u0634\u0627\u0641 \u0627\u0644\u062b\u063a\u0631\u0627\u062a\u060c \u0648\u0627\u0644\u0645\u0624\u0633\u0633\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0633\u0627\u0647\u0645 \u0628\u0628\u064a\u0627\u0646\u0627\u062a\u0647\u0627 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629. \u0648\u0628\u0645\u062c\u0631\u062f \u062d\u0635\u0648\u0644\u0646\u0627 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0646\u0642\u0648\u0645 \u0628\u062a\u062d\u0645\u064a\u0644\u0647\u0627 \u0645\u0639\u064b\u0627 \u0648\u0646\u062c\u0631\u064a \u062a\u062d\u0644\u064a\u0644\u064b\u0627 \u0648\u0641\u0647\u0645\u0627\u064b \u0639\u0646 \u0623\u0633\u0627\u0633\u064a\u064b\u0627\u062a \u0627\u0644\u0631\u0628\u0637 \u0628\u0640 CWEs \u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0627\u0644\u0645\u062e\u0627\u0637\u0631. \u0647\u0646\u0627\u0643 \u062a\u062f\u0627\u062e\u0644 \u0628\u064a\u0646 \u0628\u0639\u0636 CWEs\u060c \u0628\u0633\u0628\u0628 \u0627\u0644\u062a\u0634\u0627\u0628\u0647 \u0628\u064a\u0646\u0647\u0645 (\u0645\u062b\u0644 \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 \u0641\u064a \u0627\u0644\u062a\u0634\u0641\u064a\u0631). \u062d\u064a\u062b \u064a\u062a\u0645 \u062a\u0648\u062b\u064a\u0642 \u0648\u0646\u0634\u0631 \u0623\u064a \u0642\u0631\u0627\u0631\u0627\u062a \u062a\u062a\u0639\u0644\u0642 \u0628\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0623\u0648\u0644\u064a\u0629 \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0644\u062a\u0643\u0648\u0646 \u0645\u0641\u062a\u0648\u062d\u0629 \u0648\u0648\u0627\u0636\u062d\u0629 \u0645\u0639 \u0643\u064a\u0641\u064a\u0629 \u0645\u0648\u0627\u0621\u0645\u0629  \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.</p> <p>\u064a\u062a\u0645 \u0627\u0644\u0646\u0638\u0631 \u0625\u0644\u0649 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0627\u0644\u062b\u0645\u0627\u0646\u064a\u0629 \u0630\u0627\u062a \u0623\u0639\u0644\u0649 \u0645\u0639\u062f\u0644\u0627\u062a \u062d\u062f\u0648\u062b \u0644\u0625\u062f\u0631\u0627\u062c\u0647\u0627 \u0641\u064a \u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631. \u0648\u0646\u0646\u0638\u0631 \u0623\u064a\u0636\u064b\u0627 \u0641\u064a \u0646\u062a\u0627\u0626\u062c \u0627\u0644\u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0641\u064a \u0645\u062c\u0627\u0644 \u0627\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0644\u0645\u0639\u0631\u0641\u0629 \u0641\u064a \u062d\u0627\u0644 \u0648\u062c\u0648\u062f \u0623\u064a \u0645\u0646\u0647\u0627 \u0641\u064a \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \u0633\u064a\u062a\u0645 \u0627\u062e\u062a\u064a\u0627\u0631 \u0623\u0639\u0644\u0649 \u062a\u0642\u064a\u064a\u0645\u064a\u0646 \u063a\u064a\u0631 \u0645\u0648\u062c\u0648\u062f\u064a\u0646 \u0628\u0627\u0644\u0641\u0639\u0644 \u0641\u064a \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u062d\u0644\u0644\u0629 \u0633\u0627\u0628\u0642\u0627\u064b \u0648\u0627\u0636\u0641\u062a\u0647\u0627 \u0627\u0644\u0649 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631. \u0628\u0645\u062c\u0631\u062f \u0627\u062e\u062a\u064a\u0627\u0631 \u062c\u0645\u064a\u0639 \u0627\u0644\u0639\u0634\u0631\u0629 \u060c \u064a\u062a\u0645 \u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u0639\u0648\u0627\u0645\u0644 \u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u0644\u0627\u062a\u0641\u0627\u0642 \u0639\u0644\u064a\u0647\u0627 \u0648\u0647\u064a (\u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648\u0627\u0644\u062a\u0623\u062b\u064a\u0631)\u061b \u0644\u0644\u0645\u0633\u0627\u0639\u062f\u0629 \u0641\u064a \u062a\u0631\u062a\u064a\u0628 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631.</p>"},{"location":"ar/A00_2021-Introduction/#_8","title":"\u0627\u0644\u0639\u0648\u0627\u0645\u0644 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0645\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a","text":"<p>\u0647\u0646\u0627\u0643 \u0639\u0648\u0627\u0645\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u062f\u0631\u062c\u0629 \u0644\u0643\u0644 \u062a\u0635\u0646\u064a\u0641 \u0645\u0646 \u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631\u060c \u0648\u0625\u0644\u064a\u0643 \u0645\u0627 \u062a\u0639\u0646\u064a\u0647:</p> <ul> <li> <p>\u0631\u0628\u0637 \u0628\u0640 CWEs: \u0639\u062f\u062f CWEs \u0627\u0644\u0630\u064a \u062a\u0645 \u0631\u0628\u0637\u0647\u0627 \u0628\u0648\u0627\u0633\u0637\u0629 \u0627\u0644\u0641\u0631\u064a\u0642.</p> </li> <li> <p>\u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b/\u0627\u0644\u062d\u0648\u0627\u062f\u062b: \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0648\u0647\u0648 \u0627\u0644\u0646\u0633\u0628\u0629 \u0627\u0644\u0645\u0626\u0648\u064a\u0629 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0645\u0639\u0631\u0636\u0629 \u0644\u062b\u063a\u0631\u0627\u062a \u0648\u0645\u0639\u0631\u0641\u0629 \u0645\u062f\u0649 \u0627\u0631\u062a\u0628\u0627\u0637\u0647\u0627  \u0628\u0645\u0639\u064a\u0627\u0631 CWE \u062e\u0644\u0627\u0644 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0627\u0644\u062a\u064a. \u0623\u062c\u0631\u062a\u0647\u0627 \u0627\u0644\u0645\u0624\u0633\u0633\u0627\u062a \u0641\u064a \u0633\u0646\u0629 \u0645\u062d\u062f\u062f\u0629.</p> </li> <li> <p>(\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a) \u0648\u0627\u0644\u062a\u063a\u0637\u064a\u0629:\u0627\u0644\u0646\u0633\u0628\u0629 \u0627\u0644\u0645\u0626\u0648\u064a\u0629 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u062e\u062a\u0628\u0627\u0631\u0647\u0627 \u0645\u0646 \u0642\u0628\u0644 \u062c\u0645\u064a\u0639 \u0627\u0644\u0645\u0646\u0638\u0645\u0627\u062a \u0644\u0640 CWE \u0645\u064f\u0639\u064a\u0651\u0646.</p> </li> <li> <p>\u062e\u0637\u0648\u0631\u0629 \u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644: \u0645\u0639\u0631\u0641\u0629 \u0627\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0648 \u0627\u0644\u0646\u0642\u0627\u0637 \u0627\u0644\u0641\u0631\u0639\u064a\u0629  \u0644\u0647 \u0645\u0646 CVSSv2 \u0648 CVSSv3 \u0648\u0627\u0644\u062a\u064a \u0644\u062f\u064a\u0647\u0627 CVEs \u0648\u0645\u0631\u062a\u0628\u0637\u0629 \u0628\u0640 CWEs\u060c \u060c\u0645\u0648\u0627\u0626\u0645\u062a\u0647\u0627  \u060c \u0648\u0648\u0636\u0639\u0647\u0627 \u0639\u0644\u0649 \u0645\u0642\u064a\u0627\u0633 10pt.</p> </li> <li> <p>\u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0627\u0644\u0645\u062a\u0648\u0642\u0639: \u062a\u0623\u062b\u064a\u0631 \u0627\u0644\u0646\u0642\u0627\u0637 \u0627\u0644\u0641\u0631\u0639\u064a\u0629 \u0645\u0646 CVSSv2 \u0648 CVSSv3 \u0648\u0627\u0644\u062a\u064a \u0644\u062f\u064a\u0647\u0627 CVEs \u0648\u0645\u0631\u062a\u0628\u0637\u0629 \u0628\u0640 CWEs\u060c \u060c\u0645\u0648\u0627\u0626\u0645\u062a\u0647\u0627  \u060c \u0648\u0648\u0636\u0639\u0647\u0627 \u0639\u0644\u0649 \u0645\u0642\u064a\u0627\u0633 10pt.</p> </li> <li> <p>\u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631/\u0627\u0644\u062d\u0648\u0627\u062f\u062b: \u0625\u062c\u0645\u0627\u0644\u064a \u0639\u062f\u062f \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u0631\u0628\u0637\u0647\u0627 \u0628\u0640 CWEs \u0648\u062a\u0645 \u0648\u0636\u0639 \u062a\u0635\u0646\u064a\u0641 \u0645\u062d\u062f\u062f \u0644\u0647\u0627.</p> </li> <li> <p>\u0625\u062c\u0645\u0627\u0644\u064a CVEs: \u0625\u062c\u0645\u0627\u0644\u064a \u0639\u062f\u062f CVEs \u0641\u064a NVD DB \u0627\u0644\u062a\u064a \u062a\u0645 \u0631\u0628\u0637\u0647\u0627 \u0628\u0640 CWEs \u0648\u062a\u0645 \u0648\u0636\u0639 \u062a\u0635\u0646\u064a\u0641 \u0645\u062d\u062f\u062f \u0644\u0647\u0627.</p> </li> </ul>"},{"location":"ar/A00_2021-Introduction/#2021-2017","title":"\u0639\u0644\u0627\u0642\u0627\u062a \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0644\u0639\u0627\u0645 2021 \u0645\u0639 \u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0639\u0627\u0645 2017","text":"<p>\u0647\u0646\u0627\u0643 \u0627\u0644\u0643\u062b\u064a\u0631 \u0645\u0646 \u0627\u0644\u062d\u062f\u064a\u062b \u0639\u0646 \u0627\u0644\u062a\u062f\u0627\u062e\u0644 \u0628\u064a\u0646 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u0639\u0634\u0631\u0629 \u0627\u0644\u0623\u0648\u0644\u0649. \u0648\u0645\u0646 \u062e\u0644\u0627\u0644 \u062a\u0639\u0631\u064a\u0641 \u0643\u0644 (\u0627\u0644\u0642\u0648\u0627\u0626\u0645 \u0627\u0644\u0645\u062f\u0631\u062c\u0629 \u0641\u064a CWEs)\u060c \u0648\u0644\u0643\u0646 \u0627\u0644\u0630\u064a \u064a\u0638\u0647\u0631 \u0644\u0646\u0627 \u0623\u0646\u0647 \u0644\u0627 \u064a\u0648\u062c\u062f \u0623\u064a \u062a\u062f\u0627\u062e\u0644 \u0641\u064a\u0647\u0627 \u0648\u0645\u0639 \u0630\u0644\u0643\u060c \u0645\u0646 \u0627\u0644\u0646\u0627\u062d\u064a\u0629 \u0627\u0644\u0646\u0638\u0631\u064a\u0629\u060c \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0643\u0648\u0646 \u0647\u0646\u0627\u0643 \u062a\u062f\u0627\u062e\u0644 \u0623\u0648 \u062a\u0623\u062b\u0631 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u062a\u0633\u0645\u064a\u0629. \u0648\u0646\u0642\u0648\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u062e\u0637\u0637\u0627\u062a Venn \u0644\u0625\u0638\u0647\u0627\u0631 \u0627\u0644\u062a\u062f\u0627\u062e\u0644 \u0643\u0645\u0627 \u0648\u0631\u062f \u0641\u064a \u0627\u0644\u0645\u062b\u0627\u0644 \u0623\u062f\u0646\u0627\u0647.</p> <p></p> <p>\u064a\u0645\u062b\u0644 \u0645\u062e\u0637\u0637 Venn \u0623\u0639\u0644\u0627\u0647 \u0627\u0644\u062a\u0631\u0627\u0628\u0637 \u0628\u064a\u0646 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0641\u064a \u0623\u0639\u0644\u0649 \u0639\u0634\u0631 \u0645\u062e\u0627\u0637\u0631 \u0644\u0639\u0627\u0645 2017. \u0648\u0623\u062b\u0646\u0627\u0621 \u0627\u0644\u0642\u064a\u0627\u0645 \u0628\u0630\u0644\u0643\u060c \u0623\u0635\u0628\u062d\u062a \u0628\u0636\u0639 \u0646\u0642\u0627\u0637 \u0623\u0633\u0627\u0633\u064a\u0629 \u0648\u0627\u0636\u062d\u0629:</p> <ol> <li> <p>\u0643\u0627\u0646 \u064a\u064f\u0631\u0649 \u0628\u0623\u0646 \u0647\u062c\u0648\u0645 - \u062b\u063a\u0631\u0627\u062a XSS  \u062a\u0646\u062a\u0645\u064a \u0641\u064a \u062d\u0642\u064a\u0642\u0629 \u0627\u0644\u0623\u0645\u0631 \u0625\u0644\u0649 \u062b\u063a\u0631\u0627\u062a \u0627\u0644\u062d\u0642\u0646(Injection) \u0644\u0623\u0646\u0647\u0627 \u0641\u064a \u0627\u0644\u0623\u0633\u0627\u0633 \u0639\u0628\u0627\u0631\u0629 \u0639\u0646 \u062d\u0642\u0646 \u0627\u0644\u0645\u062d\u062a\u0648\u0649. \u0628\u0627\u0644\u0646\u0638\u0631 \u0625\u0644\u0649 \u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0627\u0645 2021 \u060c \u0623\u0635\u0628\u062d \u0645\u0646 \u0627\u0644\u0648\u0627\u0636\u062d \u0623\u0646 ( XSS )\u0628\u062d\u0627\u062c\u0629 \u0625\u0644\u0649 \u0627\u0644\u0627\u0646\u062a\u0642\u0627\u0644 \u0625\u0644\u0649 \u0627\u0644\u062d\u0642\u0646(Injection).</p> </li> <li> <p>\u0627\u0644\u062a\u062f\u0627\u062e\u0644 \u0641\u064a\u0645\u0627 \u0628\u064a\u0646\u0647\u0645 \u063a\u0627\u0644\u0628\u064b\u0627 \u064a\u0643\u0648\u0646 \u0641\u064a \u0627\u062a\u062c\u0627\u0647 \u0648\u0627\u062d\u062f. \u063a\u0627\u0644\u0628\u064b\u0627 \u0645\u0627 \u0646\u0635\u0646\u0651\u0641 \u0627\u0644\u062b\u063a\u0631\u0629 \u0645\u0646 \u062e\u0644\u0627\u0644 \"\u0627\u0644\u0639\u064e\u0631\u064e\u0636\"\u060c \u0648\u0644\u064a\u0633 \u0627\u0644\u0633\u0628\u0628 \u0627\u0644\u062c\u0630\u0631\u064a (\u0627\u0644\u0630\u064a \u064a\u062d\u062a\u0645\u0644 \u0623\u0646 \u064a\u0643\u0648\u0646 \u0639\u0645\u064a\u0642\u064b\u0627). \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644\u060c \u0642\u062f \u062a\u0643\u0648\u0646 \" \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0627\u0644\u0645\u0643\u0634\u0648\u0641\u0629 \" \u0646\u062a\u064a\u062c\u0629 \"\u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u062e\u0627\u0637\u0626\u0629 \u0627\u0644\u0623\u0645\u0627\u0646\u060c \u0648\u0641\u064a \u0627\u0644\u063a\u0627\u0644\u0628 \u0644\u0646 \u062a\u0631\u0627\u0647\u0627 \u0628\u0627\u0644\u0625\u062a\u062c\u0627\u0647 \u0627\u0644\u0645\u0639\u0627\u0643\u0633. \u0646\u062a\u064a\u062c\u0629 \u0644\u0630\u0644\u0643\u060c \u064a\u062a\u0645 \u0631\u0633\u0645 \u0627\u0644\u0623\u0633\u0647\u0645 \u0641\u064a \u0645\u0646\u0627\u0637\u0642 \u0627\u0644\u062a\u0623\u062b\u0631 \u0644\u0644\u0625\u0634\u0627\u0631\u0629 \u0625\u0644\u0649 \u0627\u0644\u0625\u062a\u062c\u0627\u0647 \u0627\u0644\u0630\u064a \u064a\u062d\u062f\u062b \u0641\u064a\u0647.</p> </li> <li> <p>\u0623\u062d\u064a\u0627\u0646\u064b\u0627 \u064a\u062a\u0645 \u0631\u0633\u0645 \u0647\u0630\u0647 \u0627\u0644\u0645\u062e\u0637\u0637\u0627\u062a \u0628\u0634\u0643\u0644 \u0643\u0627\u0645\u0644 \u0643\u0645\u0627 \u0641\u064a  A06: 2021 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0648\u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u063a\u064a\u0631 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u062d\u062f\u064a\u062b. \u0641\u064a \u062d\u064a\u0646 \u0623\u0646 \u0628\u0639\u0636 \u0627\u0644\u062a\u0635\u0646\u064a\u0641\u0627\u062a \u0645\u0646 \u0647\u0630\u0647 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0642\u062f \u064a\u0643\u0648\u0646 \u0627\u0644\u0633\u0628\u0628 \u0627\u0644\u062c\u0630\u0631\u064a \u0647\u064a \u062b\u063a\u0631\u0627\u062a \u0645\u0646 \u0627\u0644\u0637\u0631\u0641 \u0627\u0644\u062b\u0627\u0644\u062b\u060c \u0641\u0625\u0646\u0647 \u064a\u062a\u0645 \u0625\u062f\u0627\u0631\u062a\u0647\u0627 \u0628\u0634\u0643\u0644 \u0645\u062e\u062a\u0644\u0641 \u0648\u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a \u0645\u062e\u062a\u0644\u0641\u0629. \u0648\u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u0623\u062e\u0631\u0649 \u0627\u0644\u0645\u062a\u0628\u0642\u064a\u0629 \u062a\u0645\u062b\u0651\u0644 \u0627\u0644\u0637\u0631\u0641 \u0627\u0644\u0623\u0648\u0644.</p> </li> </ol>"},{"location":"ar/A00_2021-Introduction/#_9","title":"\u0634\u0643\u0631\u0627\u064b \u0644\u0643\u0644 \u0645\u0646 \u0633\u0627\u0647\u0645 \u0645\u0639\u0646\u0627 \u0641\u064a \u062c\u0645\u0639 \u0647\u0630\u0647 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a","text":"<p>\u0633\u0627\u0647\u0645\u062a \u0627\u0644\u0645\u0646\u0638\u0645\u0627\u062a \u0627\u0644\u062a\u0627\u0644\u064a\u0629 (\u062c\u0646\u0628\u064b\u0627 \u0625\u0644\u0649 \u062c\u0646\u0628 \u0645\u0639 \u0628\u0639\u0636 \u0627\u0644\u0645\u0633\u0627\u0647\u0645\u064a\u0646-\u0627\u0644\u0645\u062a\u0628\u0631\u0639\u064a\u0646 \u0627\u0644\u0645\u062c\u0647\u0648\u0644\u064a\u0646) \u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0644\u0623\u0643\u062b\u0631 \u0645\u0646 500,000 \u062a\u0637\u0628\u064a\u0642 \u0648\u062c\u0639\u0644\u0647\u0627 \u0647\u064a \u0627\u0644\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0623\u0643\u0628\u0631 \u0648\u0627\u0644\u0623\u0643\u062b\u0631 \u0648\u0627\u0644\u0623\u0634\u0645\u0644 \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u0625\u062c\u0631\u0627\u0621 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0627\u0644\u0623\u0645\u0627\u0646 \u0639\u0644\u064a\u0647\u0627 \u0648\u062c\u0639\u0644\u0647\u0627 \u0641\u064a \u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a. \u0648\u062a\u0623\u0643\u062f \u0623\u0646\u0647 \u0645\u0646 \u063a\u064a\u0631 \u0627\u0633\u0647\u0627\u0645\u0627\u062a\u0643 \u0644\u0646 \u064a\u0643\u0648\u0646 \u0647\u0630\u0627 \u0645\u0645\u0643\u0646.</p> AppSec Labs GitLab Micro Focus Sqreen Cobalt.io HackerOne PenTest-Tools Veracode Contrast Security HCL Technologies Probely WhiteHat (NTT) <p> </p> <p></p>"},{"location":"ar/A01_2021-Broken_Access_Control/","title":"A01:2021 \u2013  \u062a\u062e\u0637\u064a \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0648\u0635\u0648\u0644","text":""},{"location":"ar/A01_2021-Broken_Access_Control/#_1","title":"\u0627\u0644\u0639\u0648\u0627\u0645\u0644","text":"\u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u062d\u062f\u0648\u062b \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0642\u0635\u0648\u0649 \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0645\u062a\u0648\u0633\u0637 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 CVEs 34 55.97% 3.81% 94.55% 47.72% 6.92 5.93 318,487 19,013"},{"location":"ar/A01_2021-Broken_Access_Control/#_2","title":"\u0646\u0638\u0631\u0629 \u0639\u0627\u0645\u0629","text":"<p>\u0635\u0639\u062f \u0647\u0630\u0627 \u0627\u0644\u0645\u0639\u064a\u0627\u0631 \u0645\u0646 \u0627\u0644\u0645\u0631\u0643\u0632 \u0627\u0644\u062e\u0627\u0645\u0633 \u0641\u064a \u0627\u0644\u0625\u0635\u062f\u0627\u0631 \u0627\u0644\u0633\u0627\u0628\u0642 \u0625\u0644\u0649 \u0627\u0644\u0623\u0648\u0644 \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0625\u0635\u062f\u0627\u0631 \u0628\u0639\u062f \u0627\u062e\u062a\u0628\u0627\u0631 \u062b\u063a\u0631\u0627\u062a \"\u062a\u062e\u0637\u064a \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u062a\u062d\u0643\u0645 \u0628\u0627\u0644\u0648\u0635\u0648\u0644\" \u0639\u0644\u0649 94% \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u0642\u062f \u0644\u0648\u062d\u0638 \u0623\u0646\u0647\u0627 \u062a\u0639\u0627\u0646\u064a \u0645\u0646 \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 \u0627\u0644\u0634\u0627\u0626\u0639\u0629 \"CWEs\u201d \u062a\u0634\u0645\u0644 : CWE-200 \u0648 CWE-201 \u0648 CWE-352</p>"},{"location":"ar/A01_2021-Broken_Access_Control/#_3","title":"\u0627\u0644\u0648\u0635\u0641","text":"<p>\u062a\u0641\u0631\u0636 \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u062a\u062d\u0643\u0645 \u0628\u0627\u0644\u0648\u0635\u0648\u0644 \u0633\u064a\u0627\u0633\u0627\u062a \u0648\u0642\u0648\u0627\u0646\u064a\u0646 \u0645\u062b\u0644 \u0627\u0646 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0644\u0627 \u064a\u0645\u0643\u0646\u0647 \u0627\u0644\u062a\u0635\u0631\u0641 \u062e\u0627\u0631\u062c \u0646\u0637\u0627\u0642 \u0627\u0644\u0623\u0630\u0648\u0646\u0627\u062a \u0627\u0644\u0645\u0645\u0646\u0648\u062d\u0629 \u0644\u0647. \u0639\u0627\u062f\u0629 \u0645\u0627 \u062a\u0624\u062f\u064a \u0647\u0630\u0647 \u0627\u0644\u0627\u062e\u0637\u0627\u0621 \u0627\u0644\u0649 \u0643\u0634\u0641 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u063a\u064a\u0631 \u0645\u0635\u0631\u062d \u0628\u0647\u0627 \u0627\u0648 \u0627\u0644\u062a\u0639\u062f\u064a\u0644 \u0639\u0644\u064a\u0647\u0627\u060c \u0627\u0648 \u062a\u062e\u0631\u064a\u0628 \u062c\u0645\u064a\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0623\u0648 \u062d\u062a\u0649 \u062a\u0646\u0641\u064a\u0630 \u0625\u062c\u0631\u0627\u0621\u0627\u062a \u062e\u0627\u0631\u062c \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0645\u0633\u0645\u0648\u062d\u0629. \u062a\u062a\u0636\u0645\u0646 \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 \u0627\u0644\u0634\u0627\u0626\u0639\u0629 \u0644\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u062a\u062d\u0643\u0645 \u0628\u0627\u0644\u0648\u0635\u0648\u0644:</p> <ul> <li> <p>\u062a\u062c\u0627\u0648\u0632 \u0625\u062c\u0631\u0627\u0621\u0627\u062a \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u062a\u062d\u0643\u0645 \u0641\u064a \u0627\u0644\u0648\u0635\u0648\u0644 \u0645\u0646 \u062e\u0644\u0627\u0644 \u062a\u0639\u062f\u064a\u0644 \u0645\u062d\u062f\u062f \u0641\u064aURL\u060c \u0627\u0648 \u062a\u0639\u062f\u064a\u0644 \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a \u201cobjects\u201d \u0627\u0644\u0645\u0631\u062a\u0628\u0637\u0629 \u0628\u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u062f\u0627\u062e\u0644 \u0627\u0644\u0630\u0627\u0643\u0631\u0629 \u0623\u0648 \u062a\u0639\u062f\u064a\u0644 \u0635\u0641\u062d\u0629 \u0627\u0644\u0640 HTML\u060c \u0623\u0648 \u0628\u0628\u0633\u0627\u0637\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u062f\u0627\u0629 \u0647\u062c\u0648\u0645 \u0645\u062e\u0635\u0635\u0629 \u0644\u0645\u0647\u0627\u062c\u0645\u0629 API </p> </li> <li> <p>\u0627\u0644\u0633\u0645\u0627\u062d \u0628\u0627\u0644\u062a\u0628\u062f\u064a\u0644 \u0628\u064a\u0646 \u0645\u0641\u062a\u0627\u062d \u0631\u0626\u064a\u0633\u064a \u201cprimary key\u201d \u0648\u0633\u062c\u0644\u0627\u062a \u0645\u0633\u062a\u062e\u062f\u0645 \u0622\u062e\u0631 \u201cusers record\u201d\u060c \u0645\u0645\u0627 \u0642\u062f \u064a\u0633\u0645\u062d \u0628\u0627\u0633\u062a\u0639\u0631\u0627\u0636 \u0623\u0648 \u0627\u0644\u062a\u0639\u062f\u064a\u0644 \u0639\u0644\u0649 \u062d\u0633\u0627\u0628\u0627\u062a \u0623\u062e\u0631\u0649   </p> </li> <li> <p>\u062a\u0635\u0639\u064a\u062f \u0627\u0644\u0635\u0644\u0627\u062d\u064a\u0627\u062a: \u0627\u0644\u062a\u0635\u0631\u0641 \u0643\u0645\u0633\u062a\u062e\u062f\u0645 \u0645\u0646 \u062f\u0648\u0646 \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 \u0627\u0648 \u0627\u0644\u062a\u0635\u0631\u0641 \u0643\u0645\u062f\u064a\u0631 \u0639\u0646\u062f \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 \u0628\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0643\u0645\u0633\u062a\u062e\u062f\u0645.</p> </li> <li> <p>\u0627\u0644\u062a\u0644\u0627\u0639\u0628 \u0641\u064a \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0648\u0635\u0641\u064a\u0629 \"meta data\u201d \u0643\u0625\u0639\u0627\u062f\u0629 \u0625\u062f\u062e\u0627\u0644 \u0623\u0648 \u0627\u0644\u062a\u0644\u0627\u0639\u0628 \u0628\u0631\u0645\u0632 \u0627\u0644\u062a\u0648\u062b\u064a\u0642 \"JSON Web Token (JWT)\u060c\" \u0623\u0648 \u0627\u0644\u062a\u0644\u0627\u0639\u0628 \u0641\u064a \u0645\u0644\u0641\u0627\u062a \u0627\u0644\u0627\u0631\u062a\u0628\u0627\u0637 \u0623\u0648 \u0627\u0644\u062d\u0642\u0648\u0644 \u0627\u0644\u0645\u062e\u0641\u064a\u0629 \u0644\u063a\u0631\u0636 \u062a\u0635\u0639\u064a\u062f \u0627\u0644\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0623\u0648 \u0625\u0633\u0627\u0621\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0640 JWT </p> </li> <li> <p>\u0627\u0644\u062a\u0647\u064a\u0626\u0629 \u0627\u0644\u063a\u064a\u0631 \u0635\u062d\u064a\u062d\u0629 \u0644\u0640 CORS \u062a\u0633\u0645\u062d \u0628\u0627\u0644\u062f\u062e\u0648\u0644 \u0627\u0644\u063a\u064a\u0631 \u0645\u0635\u0631\u062d \u0628\u0647 \u0644\u0648\u0627\u062c\u0647\u0629 \u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a API.</p> </li> <li> <p>\u0627\u0633\u062a\u0639\u0631\u0627\u0636 \u0635\u0641\u062d\u0627\u062a \"\u062a\u0633\u062a\u0644\u0632\u0645 \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629\" \u0639\u0628\u0631 \u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \"\u063a\u064a\u0631 \u0645\u0635\u0627\u062f\u0642 \u0639\u0644\u064a\u0647\u0645\" \u0623\u0648 \u0627\u0644\u0648\u0635\u0648\u0644 \u0627\u0644\u0649 \u0635\u0641\u062d\u0627\u062a \u0630\u0627\u062a \u0627\u0645\u062a\u064a\u0627\u0632\u0627\u062a \u0639\u0644\u064a\u0627 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u201c\u062d\u0633\u0627\u0628 \u0645\u0633\u062a\u062e\u062f\u0645 \u201c\u060c \u0623\u0648 \u0627\u0644\u0648\u0635\u0648\u0644 \u0627\u0644\u0649 \u0648\u0627\u062c\u0647\u0629 \u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \"API\u201d \u0628\u0648\u062c\u0648\u062f \u0642\u0635\u0648\u0631 \u0641\u064a \"\u0627\u0644\u062a\u062d\u0643\u0645 \u0641\u064a \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0648\u0635\u0648\u0644\" \u0645\u0645\u0627 \u064a\u0624\u062f\u064a \u0627\u0644\u0649 \u062a\u0646\u0641\u064a\u0630 \u0637\u0644\u0628\u0627\u062aPOST\u060c PUT\u060c DELETE.</p> </li> </ul>"},{"location":"ar/A01_2021-Broken_Access_Control/#_4","title":"\u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646\u0647\u0627","text":"<p>\u064a\u0643\u0648\u0646 \"\u0627\u0644\u062a\u062d\u0643\u0645 \u0628\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0648\u0635\u0648\u0644\" \u0641\u0639\u0627\u0644\u0627 \u0641\u0642\u0637 \u0639\u0646\u062f\u0645\u0627 \u0639\u0646\u062f \u062a\u0637\u0628\u064a\u0642\u0647 \u0639\u0644\u0649 \u0627\u0644\u0634\u0641\u0631\u0629 \u0627\u0644\u0645\u0635\u062f\u0631\u064a\u0629 \u0645\u0646 \u062c\u0647\u0629 \u0627\u0644\u062e\u0648\u0627\u062f\u0645 \u0627\u0644\u0645\u0648\u062b\u0648\u0642\u0629- trusted server-side code\u060c \u0623\u0648 \u0627\u0644\u062e\u0648\u0627\u062f\u0645 \u0627\u0644\u062a\u064a \u0644\u0627 \u062a\u0645\u0644\u0643 \u0648\u0627\u062c\u0647\u0629 \u0628\u0631\u0645\u062c\u0629 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u0627\u0644\u062a\u064a \u064a\u0637\u0644\u0642 \u0639\u0644\u064a\u0647\u0627 (server-less API)\u060c \u062d\u064a\u062b \u0644\u0627 \u064a\u0633\u062a\u0637\u064a\u0639 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u062a\u0639\u062f\u064a\u0644 \"\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u062a\u062d\u0643\u0645 \u0628\u0627\u0644\u0648\u0635\u0648\u0644\" \u0623\u0648 \u0627\u0644\u062a\u0644\u0627\u0639\u0628 \u0641\u064a \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0648\u0635\u0641\u064a\u0629.</p> <ul> <li> <p>\u0628\u0627\u0633\u062a\u062b\u0646\u0627\u0621 \u0637\u0644\u0628\u0627\u062a \u0627\u0644\u0648\u0635\u0648\u0644 \"\u0644\u0644\u0645\u0648\u0627\u0631\u062f \u0627\u0644\u0645\u062a\u0627\u062d\u0629 \u0644\u0644\u0639\u0627\u0645\u0629\" \u064a\u062a\u0645 \u062d\u0638\u0631 \u062c\u0645\u064a\u0639 \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0628\u0634\u0643\u0644 \u0627\u0641\u062a\u0631\u0627\u0636\u064a.</p> </li> <li> <p>\u0648\u0636\u0639 \u0627\u0644\u0623\u0644\u064a\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u062a\u062d\u0643\u0645 \u0628\u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0645\u0631\u0629 \u0648\u0627\u062d\u062f\u0629 \u0641\u064a \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c/\u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0639 \u0625\u0639\u0627\u062f\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 -\u0647\u064a \u0646\u0641\u0633\u0647\u0627- \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629\u060c \u0648\u0623\u064a\u0636\u0627 \u062a\u0642\u0644\u064a\u0644 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 CORS. </p> </li> <li> <p>\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u062a\u062d\u0643\u0645 \u0628\u0627\u0644\u0648\u0635\u0648\u0644 \u064a\u062c\u0628 \u0623\u0646 \u064a\u0641\u0631\u0636 \u0645\u064f\u0644\u0643\u064a\u0629 \u0627\u0644\u0633\u062c\u0644 \" record ownership\" \u0628\u062f\u0644\u064b\u0627 \u0645\u0646 \u0627\u0644\u0645\u0648\u0627\u0641\u0642\u0629 \u0639\u0644\u0649 \u0623\u0646 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u064a\u0633\u062a\u0637\u064a\u0639 \u0625\u0646\u0634\u0627\u0621\u060c \u0642\u0631\u0627\u0621\u0629\u060c \u062a\u062d\u062f\u064a\u062b\u060c \u0623\u0648 \u062d\u0630\u0641 \u0623\u064a \u0633\u062c\u0644.</p> </li> <li> <p>\u0645\u062a\u0637\u0644\u0651\u0628\u0627\u062a \u062d\u062f\u0648\u062f \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0623\u0639\u0645\u0627\u0644 \u0627\u0644\u0641\u0631\u064a\u062f\u0629 \u0645\u0646 \u0646\u0648\u0639\u0647\u0627 \"Unique application business limit\" \u064a\u062c\u0628 \u0623\u0646 \u064a\u062a\u0645 \u0641\u0631\u0636\u0647\u0627 \u062e\u0644\u0627\u0644 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u0645\u0627\u0630\u062c \u0627\u0644\u0645\u062c\u0627\u0644 (domain models).</p> </li> <li> <p>\u062a\u0639\u0637\u064a\u0644 \u0627\u0633\u062a\u0639\u0631\u0627\u0636 \u0645\u062c\u0644\u062f\u0627\u062a \u062e\u0627\u062f\u0645 \u0627\u0644\u0648\u064a\u0628 \u0648\u0627\u0644\u062a\u0623\u0643\u062f \u0628\u0623\u0646 \u0645\u0644\u0641 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0648\u0635\u0641\u064a\u0629 \"Meta Data\u201d \u0648\u0645\u0644\u0641\u0627\u062a \u0627\u0644\u0646\u0633\u062e \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637\u064a \u0644\u0627 \u064a\u062a\u0645 \u0627\u0644\u0648\u0635\u0648\u0644 \u0627\u0644\u064a\u0647\u0627 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0645\u062c\u0644\u062f \u0627\u0644\u0645\u0633\u0627\u0631 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \"Root\".</p> </li> <li> <p>\u062a\u0648\u062b\u064a\u0642 \u0633\u062c\u0644\u0627\u062a \u0641\u0634\u0644 \u0627\u0644\u062a\u062d\u0643\u0645 \u0641\u064a \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0648\u0635\u0648\u0644 \u0648\u062a\u0646\u0628\u064a\u0647 \u0627\u0644\u0645\u0633\u0624\u0648\u0644\u064a\u0646 \u0639\u0646\u062f \u0648\u0642\u0648\u0639 \u0647\u0630\u0647 \u0627\u0644\u0623\u062e\u0637\u0627\u0621.</p> </li> <li> <p>\u062a\u0642\u064a\u064a\u0645 \u062d\u062f \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0648\u0627\u062c\u0647\u0629 \u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a API \u0648\u0648\u0636\u0639 \u062d\u062f \u0644\u0645\u0639\u062f\u0651\u0644 \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0644\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u0636\u0631\u0631 \u0627\u0644\u0646\u0627\u062c\u0645 \u0639\u0646 \u0623\u062f\u0648\u0627\u062a \u0627\u0644\u0647\u062c\u0648\u0645 \u0627\u0644\u0622\u0644\u064a.</p> </li> <li> <p>\u064a\u062c\u0628 \u0627\u0644\u062a\u062e\u0644\u0635 \u0645\u0646 \u0631\u0645\u0648\u0632 JWT \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645 \u0628\u0639\u062f \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062e\u0631\u0648\u062c.</p> </li> </ul> <p>\u064a\u062c\u0628 \u0639\u0644\u0649 \u0641\u0631\u0642 \u0627\u0644\u0645\u0637\u0648\u0651\u0631\u064a\u0646 \u0648\u0645\u0648\u0638\u0641\u064a\u0646 \u0642\u0633\u0645 \u0636\u0645\u0627\u0646 \u0627\u0644\u062c\u0648\u062f\u0629 \"QA\" \u0623\u0646 \u062a\u062a\u0636\u0645\u0651\u0646  \u0648\u062d\u062f\u0629  \u0641\u0639\u0627\u0644\u0629 \u0644\u0644\u062a\u062d\u0643\u0645 \u0641\u064a \u0627\u0644\u0648\u0635\u0648\u0644 \u0648\u0625\u062c\u0631\u0627\u0621 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0627\u0644\u062a\u0643\u0627\u0645\u0644 .</p>"},{"location":"ar/A01_2021-Broken_Access_Control/#_5","title":"\u0623\u0645\u062b\u0644\u0629 \u0639\u0644\u0649 \u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a \u0627\u0644\u0647\u062c\u0648\u0645","text":"<p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #1: \u064a\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0628\u064a\u0627\u0646\u0627\u062a \u0644\u0645 \u064a\u062a\u0645 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646\u0647\u0627 \u0641\u064a \u0627\u0633\u062a\u062f\u0639\u0627\u0621 SQL \u0627\u0644\u062a\u064a \u0628\u062f\u0648\u0631\u0647\u0627 \u062a\u0635\u0644 \u0627\u0644\u0649 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0628:</p> <p>pstmt.setString(1, request.getParameter(\"acct\"));</p> <p>ResultSet results = pstmt.executeQuery( );</p> <p>\u0628\u0628\u0633\u0627\u0637\u0629 \u064a\u0642\u0648\u0645 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0628\u062a\u0639\u062f\u064a\u0644 browser's 'acct' parameter \u0644\u0623\u0631\u0633\u0627\u0644 \u0623\u064a \u0631\u0642\u0645 \u062d\u0633\u0627\u0628 \u064a\u0631\u064a\u062f\u0647. \u0648\u0625\u0630\u0627 \u0644\u0645 \u064a\u062a\u0645 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646\u0647 \u0628\u0634\u0643\u0644 \u0635\u062d\u064a\u062d\u060c \u064a\u0633\u062a\u0637\u064a\u0639 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0623\u064a \u062d\u0633\u0627\u0628 \u0645\u0633\u062a\u062e\u062f\u0645.</p> <p>https://example.com/app/accountInfo?acct=notmyacct</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #2: : \u0628\u0628\u0633\u0627\u0637\u0629 \u064a\u062c\u0628\u0631 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0627\u0644\u0645\u062a\u0635\u0641\u062d\u0627\u062a \u0639\u0644\u0649 \u0632\u064a\u0627\u0631\u0629 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u0640 URLs\u0627\u0644\u0645\u0633\u062a\u0647\u062f\u0641\u0629. \u0648\u0627\u0644\u062a\u064a \u0644\u0627 \u064a\u0633\u062a\u0637\u064a\u0639 \u0627\u0644\u0648\u0635\u0648\u0644 \u0627\u0644\u064a\u0647\u0627 \u0627\u0644\u0627 \u0628\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0645\u0633\u0624\u0648\u0644.</p> <p>https://example.com/app/getappInfo</p> <p>https://example.com/app/admin_getappInfo</p> <p>\u064a\u0639\u062a\u0628\u0631 \u062e\u0644\u0644\u0627 \u0627\u0630\u0627 \u0643\u0627\u0646 \u064a\u0645\u0643\u0646 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u063a\u064a\u0631 \u0627\u0644\u0645\u0635\u0631\u062d \u0644\u0647 \u0627\u0644\u0648\u0635\u0648\u0644 \u0627\u0644\u0649 \u0627\u064a \u0645\u0646 \u0627\u0644\u0635\u0641\u062d\u062a\u064a\u0646. \u064a\u0639\u062a\u0628\u0631 \u062e\u0644\u0644\u0627 \u0627\u0630\u0627 \u0643\u0627\u0646 \u064a\u0645\u0643\u0646 \u0644\u063a\u064a\u0631 \u0627\u0644\u0645\u0633\u0624\u0648\u0644 \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0635\u0641\u062d\u0629 \u0627\u0644\u0645\u0633\u0624\u0648\u0644.</p>"},{"location":"ar/A01_2021-Broken_Access_Control/#_6","title":"\u0627\u0644\u0645\u0635\u0627\u062f\u0631","text":"<ul> <li> <p>OWASP Proactive Controls: Enforce Access Controls</p> </li> <li> <p>OWASP Application Security Verification Standard: V4 Access Control</p> </li> <li> <p>OWASP Testing Guide: Authorization Testing</p> </li> <li> <p>OWASP Cheat Sheet: Authorization</p> </li> <li> <p>PortSwigger: Exploiting CORS     misconfiguration</p> </li> <li> <p>OAuth: Revoking Access</p> </li> </ul>"},{"location":"ar/A01_2021-Broken_Access_Control/#cwes","title":"\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0631\u0628\u0637 \u0645\u0639 \u0625\u0637\u0627\u0631 CWEs","text":"<p>CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</p> <p>CWE-23 Relative Path Traversal</p> <p>CWE-35 Path Traversal: '.../...//'</p> <p>CWE-59 Improper Link Resolution Before File Access ('Link Following')</p> <p>CWE-200 Exposure of Sensitive Information to an Unauthorized Actor</p> <p>CWE-201 Exposure of Sensitive Information Through Sent Data</p> <p>CWE-219 Storage of File with Sensitive Data Under Web Root</p> <p>CWE-264 Permissions, Privileges, and Access Controls (should no longer be used)</p> <p>CWE-275 Permission Issues</p> <p>CWE-276 Incorrect Default Permissions</p> <p>CWE-284 Improper Access Control</p> <p>CWE-285 Improper Authorization</p> <p>CWE-352 Cross-Site Request Forgery (CSRF)</p> <p>CWE-359 Exposure of Private Personal Information to an Unauthorized Actor</p> <p>CWE-377 Insecure Temporary File</p> <p>CWE-402 Transmission of Private Resources into a New Sphere ('Resource Leak')</p> <p>CWE-425 Direct Request ('Forced Browsing')</p> <p>CWE-441 Unintended Proxy or Intermediary ('Confused Deputy')</p> <p>CWE-497 Exposure of Sensitive System Information to an Unauthorized Control Sphere</p> <p>CWE-538 Insertion of Sensitive Information into Externally-Accessible File or Directory</p> <p>CWE-540 Inclusion of Sensitive Information in Source Code</p> <p>CWE-548 Exposure of Information Through Directory Listing</p> <p>CWE-552 Files or Directories Accessible to External Parties</p> <p>CWE-566 Authorization Bypass Through User-Controlled SQL Primary Key</p> <p>CWE-601 URL Redirection to Untrusted Site ('Open Redirect')</p> <p>CWE-639 Authorization Bypass Through User-Controlled Key</p> <p>CWE-651 Exposure of WSDL File Containing Sensitive Information</p> <p>CWE-668 Exposure of Resource to Wrong Sphere</p> <p>CWE-706 Use of Incorrectly-Resolved Name or Reference</p> <p>CWE-862 Missing Authorization</p> <p>CWE-863 Incorrect Authorization</p> <p>CWE-913 Improper Control of Dynamically-Managed Code Resources</p> <p>CWE-922 Insecure Storage of Sensitive Information</p> <p>CWE-1275 Sensitive Cookie with Improper SameSite Attribute</p>"},{"location":"ar/A02_2021-Cryptographic_Failures/","title":"A02:2021 \u2013  \u0641\u0634\u0644 \u0622\u0644\u064a\u0629 \u0627\u0644\u062a\u0634\u0641\u064a\u0631","text":""},{"location":"ar/A02_2021-Cryptographic_Failures/#_1","title":"\u0627\u0644\u0639\u0648\u0627\u0645\u0644","text":"\u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u062d\u062f\u0648\u062b \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0642\u0635\u0648\u0649 \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0645\u062a\u0648\u0633\u0637 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 CVEs 29 46.44% 4.49% 79.33% 34.85% 7.29 6.81 233,788 3,075"},{"location":"ar/A02_2021-Cryptographic_Failures/#_2","title":"\u0646\u0638\u0631\u0629 \u0639\u0627\u0645\u0629","text":"<p>\u064a\u0623\u062a\u064a \u0641\u0634\u0644 \u0622\u0644\u064a\u0629 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0641\u064a \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0631\u0642\u0645 #2 \u0648\u0627\u0644\u062a\u064a \u0643\u0627\u0646\u062a \u062a\u0639\u0631\u0641 \u201c\u0628\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0627\u0644\u063a\u064a\u0631 \u0645\u062d\u0645\u064a\u0629 \u0623\u0648 \u0627\u0644\u0645\u0643\u0634\u0648\u0641\u0629\" \u0648\u0627\u0644\u062a\u064a \u0642\u062f \u062a\u0643\u0648\u0646 \u0623\u0633\u0628\u0627\u0628\u0647\u0627 \u0645\u062a\u0639\u062f\u0651\u062f\u0629 \u0623\u0643\u062b\u0631 \u0645\u0646 \u0643\u0648\u0646\u0647\u0627 \u0646\u0627\u062a\u062c\u0629 \u0639\u0646 \u0633\u0628\u0628 \u062c\u0630\u0631\u064a \u0648\u0627\u062d\u062f\u060c \u0648\u064a\u0623\u062a\u064a \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0647\u0646\u0627 \u0639\u0644\u0649 \u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0641\u0634\u0644 \u0641\u064a \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0648\u0627\u0644\u062a\u064a \u063a\u0627\u0644\u0628\u064b\u0627 \u0645\u0627 \u062a\u0624\u062f\u064a \u0625\u0644\u0649 \u0643\u0634\u0641 \u063a\u064a\u0631 \u0645\u0635\u0631\u0651\u062d \u0628\u0647 \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629. \u062a\u0645 \u0645\u0644\u0627\u062d\u0638\u0629 \u0623\u0646 \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 \u0627\u0644\u0634\u0627\u0626\u0639\u0629 CWEs \u062a\u0634\u0645\u0644: CWE-259: \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u0645\u0636\u0645\u0646\u0629 \u0645\u0633\u0628\u0642\u064b\u0627 \"\"  \u060c CWE-327: \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u062a\u0634\u0641\u064a\u0631 \u0645\u064f\u0639\u0637\u0651\u0644\u0629 \u0623\u0648 \u0645\u062d\u0641\u0648\u0641\u0629 \u0628\u0627\u0644\u0645\u062e\u0627\u0637\u0631\u060c \u0648 CWE-331 \u0627\u0644\u062a\u0634\u062a\u062a \u0627\u0644\u063a\u064a\u0631 \u0641\u0639\u0651\u0627\u0644 \u0623\u0648 \u0628\u0639\u0628\u0627\u0631\u0629 \u0623\u062e\u0631\u0649 -\u0639\u0634\u0648\u0627\u0626\u064a\u0629 \u0628\u0634\u0643\u0644 \u063a\u064a\u0631 \u0643\u0627\u0641\u064a-\u201d Insufficient Entropy\u201d.</p>"},{"location":"ar/A02_2021-Cryptographic_Failures/#_3","title":"\u0627\u0644\u0648\u0635\u0641","text":"<p>\u0623\u0648\u0644\u064b\u0627\u060c \u062a\u062d\u062f\u064a\u062f \u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a \u062d\u0645\u0627\u064a\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0623\u062b\u0646\u0627\u0621 \u0627\u0644\u0646\u0642\u0644 (Data in transit) \u0648\u0623\u062b\u0646\u0627\u0621 \u0627\u0644\u062a\u062e\u0632\u064a\u0646 (Data at rest). \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644\u060c \u062a\u062a\u0637\u0644\u0651\u0628 \u0643\u0644 \u0645\u0646 (\u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0648\u0623\u0631\u0642\u0627\u0645 \u0628\u0637\u0627\u0642\u0627\u062a \u0627\u0644\u0627\u0626\u062a\u0645\u0627\u0646 \u0648\u0627\u0644\u0633\u062c\u0644\u0627\u062a \u0627\u0644\u0635\u062d\u064a\u0651\u0629 \u0648\u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0627\u0644\u0634\u062e\u0635\u064a\u0629 \u0648\u0623\u0633\u0631\u0627\u0631 \u0627\u0644\u0639\u0645\u0644) \u062a\u062a\u0637\u0644\u0651\u0628 \u062d\u0645\u0627\u064a\u0629 \u0625\u0636\u0627\u0641\u064a\u0629 \u0648\u0644\u0627 \u0633\u064a\u0651\u0645\u0627 \u0625\u0630\u0627 \u0643\u0627\u0646\u062a \u062a\u0644\u0643 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062a\u0646\u062f\u0631\u062c \u062a\u062d\u062a \u0642\u0648\u0627\u0646\u064a\u0646 \u0627\u0644\u062e\u0635\u0648\u0635\u064a\u0629 \u0645\u062b\u0644 \u0627\u0644\u0644\u0627\u0626\u062d\u0629 \u0627\u0644\u0639\u0627\u0645\u0629 \u0644\u062d\u0645\u0627\u064a\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0627\u062a\u062d\u0627\u062f \u0627\u0644\u0623\u0648\u0631\u0648\u0628\u064a (GDPR)\u060c \u0623\u0648 \u0627\u0644\u062a\u0646\u0638\u064a\u0645\u0627\u062a\u060c \u0648 \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644 \u062a\u0646\u0638\u064a\u0645\u0627\u062a \u062d\u0645\u0627\u064a\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u0627\u0644\u064a\u0629 \u0645\u062b\u0644 \u0645\u0639\u064a\u0627\u0631 PCI \u0644\u0623\u0645\u0627\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0623\u0648 \u0645\u0639\u064a\u0627\u0631 (PCI DSS) \u0644\u062c\u0645\u064a\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u0627\u0644\u064a\u0629.</p> <ul> <li> <p>\u0647\u0644 \u064a\u062a\u0645 \u0646\u0642\u0644 \u0623\u064a \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0646 \u063a\u064a\u0631 \u062a\u0634\u0641\u064a\u0631\u061f \u064a\u0639\u062a\u0645\u062f \u0647\u0630\u0627 \u0639\u0644\u0649 \u0627\u0644\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0645\u062b\u0644 HTTP \u0648SMTP \u0648FTP. \u0643\u0630\u0644\u0643 \u0644\u0627\u0628\u062f \u0645\u0646 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0645\u0633\u0627\u0631 \u062a\u062f\u0641\u0651\u0642 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648 \u062d\u0631\u0643\u062a\u0647\u0627 \u062f\u0627\u062e\u0644 \u0627\u0644\u0634\u0628\u0643\u0629 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629\u060c \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644\u060c \u062d\u0631\u0643\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u064a\u0646 \u0645\u0648\u0627\u0632\u0646\u0627\u062a \u0627\u0644\u062a\u062d\u0645\u064a\u0644\"load balancers\" \u0623\u0648 \u062e\u0648\u0627\u062f\u0645 \u0627\u0644\u0648\u064a\u0628 \u0623\u0648 \u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u062e\u0644\u0641\u064a\u0629 \"Back-end systems\" .</p> </li> <li> <p>\u0647\u0644 \u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u064a \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u062a\u0634\u0641\u064a\u0631 \u0642\u062f\u064a\u0645\u0629 \u0623\u0648 \u0636\u0639\u064a\u0641\u0629 \u0625\u0645\u0627 \u0628\u0634\u0643\u0644 \u0627\u0641\u062a\u0631\u0627\u0636\u064a \u0623\u0648 \u0641\u064a \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u0627\u062a \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0629 \u0627\u0644\u0642\u062f\u064a\u0645\u0629\u061f</p> </li> <li> <p>\u0647\u0644 \u0645\u0641\u0627\u062a\u064a\u062d \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0642\u064a\u062f \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u061f \u0647\u0644 \u064a\u062a\u0645 \u062a\u0648\u0644\u064a\u062f \u0645\u0641\u0627\u062a\u064a\u062d \u062a\u0634\u0641\u064a\u0631 \u0636\u0639\u064a\u0641\u0629  \u0623\u0648 \u064a\u062a\u0645 \u0625\u0639\u0627\u062f\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0641\u0627\u062a\u064a\u062d \u0645\u0646 \u0634\u0641\u0631\u0629 \u0645\u0635\u062f\u0631\u064a\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629  \u0623\u0648 \u0645\u0646 \u0634\u0641\u0631\u0629 \u0645\u0635\u062f\u0631\u064a\u0629  \u0642\u062f\u064a\u0645\u0629\u061f  \u0647\u0644 \u062a\u062a\u0645 \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d \u0648 \u0625\u0639\u0627\u062f\u0629  \u062a\u062f\u0648\u064a\u0631\u0647\u0627 \u0628\u0634\u0643\u0644 \u062c\u064a\u062f\u061f (rotation missing)\u061f</p> </li> <li> <p>\u0647\u0644 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u063a\u064a\u0631 \u0645\u0641\u0631\u0648\u0636\u061f \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644\u060c \u0647\u0644 \u064a\u062a\u0645 \u0625\u0631\u0633\u0627\u0644 \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0639\u0646\u0627\u0648\u064a\u0646 \"Headers\" \u0627\u0644\u0635\u062d\u064a\u062d\u0629 \u0648\u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0641\u0642\u0637 \u0639\u0646\u062f \u0625\u0631\u0633\u0627\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0623\u0648 \u0639\u0646\u062f \u0627\u0633\u062a\u0642\u0628\u0627\u0644\u0647\u0627 \u0645\u0646 \u0642\u0650\u0628\u0644 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d\u061f</p> </li> <li> <p>\u0647\u0644 \u0648\u0643\u064a\u0644 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 (\u0645\u062b\u0644 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d \u0623\u0648 \u0628\u0631\u0645\u062c\u064a\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0628\u0631\u064a\u062f \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a) \u0644\u0627 \u064a\u062a\u062d\u0642\u0651\u0642 \u0645\u0627 \u0625\u0630\u0627 \u0643\u0627\u0646\u062a \u0634\u0647\u0627\u062f\u0629 \u0627\u0644\u062e\u0627\u062f\u0645 \u0627\u0644\u0645\u0633\u062a\u0644\u0645\u0629 \u0635\u0627\u0644\u062d\u0629 \u0648\u0641\u0639\u0651\u0627\u0644\u0629\u061f</p> </li> </ul> <p>\u0647\u0646\u0627\u0643 \u0627\u0644\u0643\u062b\u064a\u0631 \u0645\u0646 \u0627\u0644\u0645\u0634\u0627\u0643\u0644 \u0627\u0644\u062a\u064a \u064a\u062c\u0628 \u062a\u062c\u0646\u0651\u0628\u0647\u0627\u060c \u0627\u0646\u0638\u0631 ASVS Crypto (V7) , Data Protection (V9), and SSL/TLS (V10)</p>"},{"location":"ar/A02_2021-Cryptographic_Failures/#_4","title":"\u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646\u0647\u0627","text":"<p>\u064a\u062c\u0628 \u0639\u0645\u0644 \u0645\u0627 \u064a\u0644\u064a \u0639\u0644\u0649 \u0627\u0644\u0623\u0642\u0644 \u0644\u062d\u0645\u0627\u064a\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629:</p> <ul> <li> <p>\u062a\u0635\u0646\u064a\u0641 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u062a\u0645 \u0645\u0639\u0627\u0644\u062c\u062a\u0647\u0627 \u0623\u0648 \u062a\u062e\u0632\u064a\u0646\u0647\u0627 \u0623\u0648 \u0625\u0631\u0633\u0627\u0644\u0647\u0627 \u0628\u0648\u0627\u0633\u0637\u0629 \u062a\u0637\u0628\u064a\u0642 \u0645\u0627. \u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0648\u0641\u0642\u064b\u0627 \u0644\u0642\u0648\u0627\u0646\u064a\u0646 \u0627\u0644\u062e\u0635\u0648\u0635\u064a\u0629 \u0623\u0648 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0627\u0644\u062a\u0646\u0638\u064a\u0645\u064a\u0629 \u0623\u0648 \u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a \u0627\u0644\u0639\u0645\u0644.</p> </li> <li> <p>\u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u0636\u0648\u0627\u0628\u0637 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u062a\u0635\u0646\u064a\u0641.</p> </li> <li> <p>\u0644\u0627 \u062a\u0642\u0645 \u0628\u062a\u062e\u0632\u064a\u0646 \u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0633\u0627\u0633\u0629 \u063a\u064a\u0631 \u0645\u0637\u0644\u0648\u0628\u0629\u060c \u0642\u0645 \u0628\u062a\u062c\u0627\u0647\u0644\u0647\u0627 \u0648\u0627\u0644\u062a\u062e\u0644\u0651\u0635 \u0645\u0646\u0647\u0627 \u0641\u064a \u0623\u0642\u0631\u0628 \u0648\u0642\u062a \u0645\u0645\u0643\u0646 \u0644\u0623\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062a\u064a \u0644\u0627 \u062a\u0645\u0644\u0643\u0647\u0627 \u0644\u0627 \u064a\u0645\u0643\u0646 \u0633\u0631\u0642\u062a\u0647\u0627.</p> </li> <li> <p>\u062a\u0623\u0643\u0651\u062f \u0645\u0646 \u062a\u0634\u0641\u064a\u0631 \u062c\u0645\u064a\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0627\u0644\u0645\u062e\u0632\u0646\u0629.</p> </li> <li> <p>\u0636\u0645\u0627\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u0648\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0648\u0645\u0641\u0627\u062a\u064a\u062d \u062a\u0634\u0641\u064a\u0631 \u0645\u062d\u062f\u0651\u062b\u0629 \u0648\u0630\u0627\u062a \u0645\u0639\u0627\u064a\u064a\u0631 \u0635\u0627\u0631\u0645\u0629 \u0643\u0630\u0644\u0643 \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d \u0628\u0634\u0643\u0644 \u062c\u064a\u062f \u0648\u0645\u0646\u0627\u0633\u0628.</p> </li> <li> <p>\u0642\u0645 \u0628\u062a\u0634\u0641\u064a\u0631 \u062c\u0645\u064a\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0623\u062b\u0646\u0627\u0621 \u0627\u0644\u0646\u0642\u0644 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0622\u0645\u0646\u0629 \u0645\u062b\u0644 TLS \u0645\u0639 \u0634\u0641\u0631\u0629 \u0627\u0644\u0640 Perfect Forward Secrecy (PFS)\u060c \u0648\u062a\u062d\u062f\u064a\u062f \u0623\u0648\u0644\u0648\u064a\u0627\u062a \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0648\u0627\u0644\u0645\u0639\u0637\u064a\u0627\u062a \u0627\u0644\u0622\u0645\u0646\u0629 \u0628\u0648\u0627\u0633\u0637\u0629 \u0627\u0644\u062e\u0627\u062f\u0645 \u0648 \u0643\u0630\u0644\u0643 \u0641\u0631\u0636 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062a\u0648\u062c\u064a\u0647\u0627\u062a \u0645\u062b\u0644 HTTP Strict Transport Security (HSTS).</p> </li> <li> <p>\u062a\u0639\u0637\u064a\u0644 \u062e\u0627\u0635\u064a\u0629 \u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0645\u0624\u0642\u062a \u0641\u064a \u0627\u0644\u0635\u0641\u062d\u0627\u062a \"caching\" \u0644\u0644\u0631\u062f\u0648\u062f \u0627\u0644\u062a\u064a \u062a\u062d\u062a\u0648\u064a \u0639\u0644\u0649 \u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0633\u0627\u0633\u0629.</p> </li> <li> <p>\u0642\u0645 \u0628\u062a\u062e\u0632\u064a\u0646 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062f\u0648\u0627\u0644 \u0627\u062e\u062a\u0632\u0627\u0644 \u0645\u062a\u0643\u064a\u0651\u0641\u0629 \u0648\u0642\u0648\u064a\u0629  \u0645\u0639 \u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0634\u0648\u0627\u0626\u064a\u0629 \u0625\u0636\u0627\u0641\u064a\u0629 \" salted  \" \u060c \u0645\u062b\u0644 Argon2 \u0623\u0648 scrypt \u0623\u0648 bcrypt \u0623\u0648 PBKDF2.</p> </li> <li> <p>\u062a\u062d\u0642\u0642 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0642\u0644 \u0645\u0646 \u0641\u0639\u0627\u0644\u064a\u0629 \u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0648\u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a.</p> </li> </ul>"},{"location":"ar/A02_2021-Cryptographic_Failures/#_5","title":"\u0623\u0645\u062b\u0644\u0629 \u0639\u0644\u0649 \u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a \u0627\u0644\u0647\u062c\u0648\u0645","text":"<p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #1: \u062a\u0637\u0628\u064a\u0642 \u064a\u0642\u0648\u0645 \u0628\u062a\u0634\u0641\u064a\u0631 \u0623\u0631\u0642\u0627\u0645 \u0627\u0644\u0628\u0637\u0627\u0642\u0627\u062a \u0627\u0644\u0627\u0626\u062a\u0645\u0627\u0646\u064a\u0629 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0622\u0644\u064a \u0627\u0644\u0645\u062a\u0648\u0641\u0631 \u0645\u0639 \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \u0644\u0643\u0646 \u0647\u0630\u0627 \u064a\u0639\u0646\u064a \u0623\u0646\u0647 \u0628\u0625\u0645\u0643\u0627\u0646 \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0641\u0643\u0651 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0622\u0644\u064a\u064b\u0627 \u0639\u0646\u062f \u0637\u0644\u0628 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0646\u0647\u0627\u060c \u0645\u0645\u0627 \u0642\u062f \u064a\u064f\u0639\u0631\u0651\u0636 \u0623\u0631\u0642\u0627\u0645 \u0627\u0644\u0628\u0637\u0627\u0642\u0627\u062a \u0627\u0644\u0627\u0626\u062a\u0645\u0627\u0646\u064a\u0629 \u0644\u0644\u0633\u0651\u0631\u0642\u0629 \u0639\u0646\u062f \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u062b\u063a\u0631\u0629 \u062d\u0642\u0646 \"SQL\u201d\u060c \u0644\u0630\u0644\u0643\u060c \u064a\u062c\u0628 \u062a\u0634\u0641\u064a\u0631 \u0623\u0631\u0642\u0627\u0645 \u0627\u0644\u0628\u0637\u0627\u0642\u0627\u062a \u0627\u0644\u0627\u0626\u062a\u0645\u0627\u0646\u064a\u0629 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0641\u062a\u0627\u062d \u0639\u0627\u0645 \"Public Key\" \u0648\u0627\u0644\u0633\u0645\u0627\u062d \u0641\u0642\u0637 \u0644\u0644\u0628\u0646\u064a\u0629 \u0627\u0644\u062a\u062d\u062a\u064a\u0629 \u0644\u0644\u062a\u0637\u0628\u064a\u0642 \u0628\u0641\u0643\u0651 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u062e\u0627\u0635 \"Private Key\".</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #2:\u0627\u0644\u0645\u0648\u0642\u0639 \u0627\u0644\u0630\u064a \u0644\u0627 \u064a\u0633\u062a\u062e\u062f\u0645 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 TLS \u0644\u0643\u0627\u0641\u0629 \u0627\u0644\u0635\u0641\u062d\u0627\u062a \u0623\u0648 \u0623\u0646 \u0627\u0644\u0645\u0648\u0642\u0639 \u064a\u062f\u0639\u0645 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0636\u0639\u064a\u0641\u060c \u062d\u064a\u062b \u064a\u0631\u0627\u0642\u0628 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u062d\u0631\u0643\u0629 \u0645\u0631\u0648\u0631 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0634\u0628\u0643\u0629 (\u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644\u060c \u0641\u064a \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0644\u0627\u0633\u0644\u0643\u064a\u0629 \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646\u0629) \u064a\u0646\u062e\u0641\u0636 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0645\u0646 HTTPS \u0625\u0644\u0649 HTTP\u060c \u0648\u064a\u0639\u062a\u0631\u0636 \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0648 \u064a\u0633\u062a\u0637\u064a\u0639 \u0627\u0644\u0633\u0637\u0648 \u0639\u0644\u0649 \u0628\u064a\u0627\u0646\u0627\u062a \u062c\u0644\u0633\u0627\u062a \u0627\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a \"Session Cookie\" \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u060c \u062b\u0645 \u064a\u0639\u064a\u062f \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0625\u0631\u0633\u0627\u0644 \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0628\u064a\u0627\u0646\u0627\u062a \u062c\u0644\u0633\u0629 \u0627\u062a\u0635\u0627\u0644 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 ( \u0627\u0644\u062a\u064a \u0633\u0628\u0642 \u0648 \u062a\u0645 \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629 \u0639\u0644\u064a\u0647\u0627) \u0641\u064a\u062a\u0645\u0643\u0646 \u0645\u0646 \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u062e\u0627\u0635\u0629 \u0623\u0648 \u062a\u0639\u062f\u064a\u0644\u0647\u0627 \u0648 \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u0628\u062f\u0627\u0644\u0647\u0627 \u0645\u0645\u0627 \u064a\u0624\u062f\u064a \u0625\u0644\u0649 \u062a\u063a\u064a\u064a\u0631 \u0623\u064a \u0645\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u0646\u0642\u0648\u0644\u0629\u060c \u0645\u062b\u0644 \u0627\u0644\u062c\u0647\u0629 \u0627\u0644\u0645\u062a\u0644\u0642\u064a\u0629 \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0623\u0645\u0648\u0627\u0644.</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #3: \u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0644\u0627 \u062a\u0633\u062a\u062e\u062f\u0645 \u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0634\u0648\u0627\u0626\u064a\u0629 \u0625\u0636\u0627\u0641\u064a\u0629 \"salted \u201c\u0623\u0648 \u0625\u0636\u0627\u0641\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0634\u0648\u0627\u0626\u064a\u0629 \u0630\u0627\u062a \u0646\u0645\u0637 \u0628\u0633\u064a\u0637 \u063a\u064a\u0631 \u0639\u0634\u0648\u0627\u0626\u064a \u0628\u0627\u0644\u0642\u062f\u0631 \u0627\u0644\u0643\u0627\u0641\u064a  \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062f\u0648\u0627\u0644 \u0627\u062e\u062a\u0632\u0627\u0644 \u063a\u064a\u0631 \u0645\u064f\u0636\u0627\u0641 \u0644\u0647\u0627 \u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0634\u0648\u0627\u0626\u064a\u0629 \"unsalted hashes \" \u0644\u062a\u062e\u0632\u064a\u0646 \u0643\u0644\u0645\u0627\u062a \u0645\u0631\u0648\u0631 \u062c\u0645\u064a\u0639 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646. \u0639\u0646\u062f\u0645\u0627 \u062a\u0648\u062c\u062f \u062b\u063a\u0631\u0629 \u0641\u064a \u062e\u0627\u0635\u064a\u0629 \u0631\u0641\u0639 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0648\u0627\u0644\u062a\u064a \u062a\u0633\u0645\u062d \u0644\u0644\u0645\u0647\u0627\u062c\u0645 \u0628\u0627\u0633\u062a\u0639\u0627\u062f\u0629 \u0648\u062a\u062d\u0645\u064a\u0644 \u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631. \u0648 \u0628\u0627\u0644\u062a\u0627\u0644\u064a \u062a\u062a\u0639\u0631\u0651\u0636 \u062c\u0645\u064a\u0639 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u0644\u0643\u0634\u0641 \u0639\u0646\u0647\u0627 \u0644\u0643\u0633\u0631 \u062d\u0645\u0627\u064a\u0629 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a\u0647\u0627 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062c\u062f\u0627\u0648\u0644 \u062a\u062d\u062a\u0648\u064a \u0639\u0644\u0649 \u0643\u0644\u0645\u0627\u062a \u0633\u0631\u064a\u0629 \u0645\u064f\u0639\u062f\u0651\u0629 \u0645\u0633\u0628\u0642\u064b\u0627 \"rainbow table of pre-calculated hashes\". \u0642\u062f \u064a\u062a\u0645 \u0643\u0633\u0631 \u0627\u0644\u0640\"hashes\" \u0627\u0644\u062a\u064a \u062a\u0645 \u0625\u0646\u0634\u0627\u0624\u0647\u0627 \u0628\u0634\u0643\u0644 \u0628\u0633\u064a\u0637 \u0648\u0633\u0631\u064a\u0639\u060c \u0641\u064a \u062d\u0627\u0644 \u0627\u0633\u062a\u062e\u062f\u0645\u062a \u0628\u0637\u0627\u0642\u0627\u062a \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0631\u0633\u0648\u0645\u064a\u0629\"GPUs\" \u062d\u062a\u0649 \u0648\u0625\u0646 \u062a\u0645 \u0625\u0636\u0627\u0641\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0634\u0648\u0627\u0626\u064a\u0629 \"salt\".</p>"},{"location":"ar/A02_2021-Cryptographic_Failures/#_6","title":"\u0627\u0644\u0645\u0635\u0627\u062f\u0631","text":"<ul> <li> <p>OWASP Proactive Controls: Protect Data     Everywhere</p> </li> <li> <p>OWASP Application Security Verification Standard (V7,     9, 10)</p> </li> <li> <p>OWASP Cheat Sheet: Transport Layer     Protection</p> </li> <li> <p>OWASP Cheat Sheet: User Privacy     Protection</p> </li> <li> <p>OWASP Cheat Sheet: Password and Cryptographic Storage</p> </li> <li> <p>OWASP Cheat Sheet:     HSTS</p> </li> <li> <p>OWASP Testing Guide: Testing for weak cryptography</p> </li> </ul>"},{"location":"ar/A02_2021-Cryptographic_Failures/#cwes","title":"\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0631\u0628\u0637 \u0645\u0639 \u0625\u0637\u0627\u0631 CWEs","text":"<p>CWE-261 Weak Encoding for Password</p> <p>CWE-296 Improper Following of a Certificate's Chain of Trust</p> <p>CWE-310 Cryptographic Issues</p> <p>CWE-319 Cleartext Transmission of Sensitive Information</p> <p>CWE-321 Use of Hard-coded Cryptographic Key</p> <p>CWE-322 Key Exchange without Entity Authentication</p> <p>CWE-323 Reusing a Nonce, Key Pair in Encryption</p> <p>CWE-324 Use of a Key Past its Expiration Date</p> <p>CWE-325 Missing Required Cryptographic Step</p> <p>CWE-326 Inadequate Encryption Strength</p> <p>CWE-327 Use of a Broken or Risky Cryptographic Algorithm</p> <p>CWE-328 Reversible One-Way Hash</p> <p>CWE-329 Not Using a Random IV with CBC Mode</p> <p>CWE-330 Use of Insufficiently Random Values</p> <p>CWE-331 Insufficient Entropy</p> <p>CWE-335 Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-336 Same Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-337 Predictable Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-338 Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)</p> <p>CWE-340 Generation of Predictable Numbers or Identifiers</p> <p>CWE-347 Improper Verification of Cryptographic Signature</p> <p>CWE-523 Unprotected Transport of Credentials</p> <p>CWE-720 OWASP Top Ten 2007 Category A9 - Insecure Communications</p> <p>CWE-757 Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade')</p> <p>CWE-759 Use of a One-Way Hash without a Salt</p> <p>CWE-760 Use of a One-Way Hash with a Predictable Salt</p> <p>CWE-780 Use of RSA Algorithm without OAEP</p> <p>CWE-818 Insufficient Transport Layer Protection</p> <p>CWE-916 Use of Password Hash With Insufficient Computational Effort</p>"},{"location":"ar/A03_2021-Injection/","title":"A03:2021 \u2013 \u0627\u0644\u062d\u0642\u0646","text":""},{"location":"ar/A03_2021-Injection/#_1","title":"\u0627\u0644\u0639\u0648\u0627\u0645\u0644","text":"\u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u062d\u062f\u0648\u062b \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0642\u0635\u0648\u0649 \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0645\u062a\u0648\u0633\u0637 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 CVEs 33 19.09% 3.37% 94.04% 47.90% 7.25 7.15 274,228 32,078"},{"location":"ar/A03_2021-Injection/#_2","title":"\u0646\u0638\u0631\u0629 \u0639\u0627\u0645\u0629","text":"<p>\u0647\u062c\u0645\u0627\u062a \u0627\u0644\u062d\u0642\u0646 \u062a\u062d\u062a\u0644 \u0627\u0644\u0645\u0631\u0643\u0632 \u0627\u0644\u062b\u0627\u0644\u062b\u060c \u062d\u064a\u062b \u0623\u0646 94\u066a \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u0641\u062d\u0635\u0647\u0627 \u0645\u0647\u062f\u0651\u062f\u0629 \u0628\u0635\u0646\u0641 \u0648\u0627\u062d\u062f \u0623\u0648 \u0623\u0643\u062b\u0631 \u0645\u0646 \u0647\u062c\u0645\u0627\u062a \u0627\u0644\u062d\u0642\u0646 \u0627\u0644\u0645\u0631\u062a\u0628\u0637\u0629 \u0645\u0639 CWE-79\u060c CWE-89\u060c CWE-73</p>"},{"location":"ar/A03_2021-Injection/#_3","title":"\u0627\u0644\u0648\u0635\u0641","text":"<p>\u064a\u0643\u0648\u0646  \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0645\u0639\u0631\u0636 \u0644\u0644\u0625\u0635\u0627\u0628\u0629 \u0628\u0647\u0630\u0647 \u0627\u0644\u0647\u062c\u0645\u0627\u062a \u0639\u0646\u062f\u0645\u0627: </p> <ul> <li> <p>\u0625\u0630\u0627 \u0643\u0627\u0646\u062a \u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a \u0627\u0644\u0645\u0632\u0648\u0651\u062f\u0629 \u0645\u0646 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u063a\u064a\u0631 \u0645\u064f\u062a\u062d\u0642\u0651\u0642 \u0645\u0646\u0647\u0627 \u0623\u0648 \u063a\u064a\u0631 \u0645\u0648\u062b\u0648\u0642\u0629\u060c \u0623\u0648 \u0644\u0645 \u064a\u062a\u0645 \u062a\u0635\u0641\u064a\u062a\u0647\u0627 \u0645\u0646 \u0642\u0650\u0628\u0644 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c. </p> </li> <li> <p>\u062a\u0645\u0631\u064a\u0631 \u0637\u0644\u0628\u0627\u062a \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a \u0627\u0644\u062f\u064a\u0646\u0627\u0645\u064a\u0643\u064a\u0629 \u0623\u0648 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0628\u064a\u0627\u0646\u0627\u062a \u063a\u064a\u0631 \u0645\u062d\u062f\u0651\u062f\u0629 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a (Non-Parameterized) \u0628\u0634\u0643\u0644 \u0645\u0628\u0627\u0634\u0631 \u0625\u0644\u0649 \u0645\u062a\u0631\u062c\u0645 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0628\u062f\u0648\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0622\u0644\u064a\u0629 \u0648\u0627\u0639\u064a\u0629 \u062a\u0636\u0645\u0646 \u062a\u0647\u0631\u0628 \u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a \u0645\u0646 \u0627\u0644\u062a\u0641\u0627\u0639\u0644 \u0645\u0639 \u0645\u062a\u0631\u062c\u0645 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \"Context-aware escaping\".</p> </li> <li> <p>\u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a \u0627\u0644\u0636\u0651\u064e\u0627\u0631\u0629 \u0627\u0644\u062a\u064a \u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 \u0648\u0627\u0644\u0628\u062d\u062b \u0639\u0646\u0647\u0627 \u0641\u064a (Object-relational mapping ORM) \u0648\u0627\u0644\u062a\u064a \u0642\u062f \u062a\u0642\u0648\u0645 \u0628\u062a\u0633\u0631\u064a\u0628 \u0628\u064a\u0627\u0646\u0627\u062a \u0625\u0636\u0627\u0641\u064a\u0629 \u063a\u064a\u0631 \u0645\u0637\u0644\u0648\u0628\u0629 \u0623\u0648 \u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0633\u0627\u0633\u0629.</p> </li> <li> <p>\u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a \u0627\u0644\u0636\u0651\u064e\u0627\u0631\u0629 \u0628\u0634\u0643\u0644 \u0645\u0628\u0627\u0634\u0631 \u0623\u0648 \u0628\u0634\u0643\u0644 \u0645\u062a\u0633\u0644\u0633\u0644 \u063a\u064a\u0631 \u0645\u0628\u0627\u0634\u0631\u060c \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0639\u0644\u0627\u0626\u0642\u064a\u0629 \"SQL\" \u0623\u0648 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u062a\u064a \u062a\u062d\u062a\u0648\u064a \u0639\u0644\u0649 \u0647\u064a\u0627\u0643\u0644 \u0648\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0634\u0628\u0648\u0647\u0629 \u0641\u064a \u0637\u0644\u0628\u0627\u062a \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0627\u0644\u062f\u064a\u0646\u0627\u0645\u064a\u0643\u064a\u0629 \"dynamic queries\u201d \u0623\u0648 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0623\u0648 \u0627\u0644\u0625\u062c\u0631\u0627\u0621\u0627\u062a \u0627\u0644\u0645\u062e\u0632\u0651\u0646\u0629</p> </li> </ul> <p>\u0645\u0646 \u0623\u0634\u0647\u0631 \u0623\u0646\u0648\u0627\u0639 \u0627\u0644\u062d\u0642\u0646   : \u0627\u0644\u0640 SQL\u060c NoSQL\u060c \u0633\u0637\u0631 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0641\u064a \u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u062a\u0634\u063a\u064a\u0644\u060c \u062e\u0631\u0627\u0626\u0637 \u0631\u0628\u0637 \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a \u0628\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0639\u0644\u0627\u0626\u0642\u064a\u0629 \"Object-relational mapping\u201d\u060c LDAP\u060c \u0648\u0644\u063a\u0627\u062a \u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062a\u0639\u0628\u064a\u0631\u064a\u0629 \"EL\"\u060c \u0645\u0643\u062a\u0628\u0627\u062a \u0627\u0644\u062a\u0646\u0642\u0651\u0644 \u062e\u0644\u0627\u0644 \u0645\u062e\u0637\u0637\u0627\u062a \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a\"OGNL\". \u0645\u0628\u062f\u0623 \"\u0627\u0644\u062d\u0642\u0646\" \u0645\u064f\u062a\u0637\u0627\u0628\u0642 \u0641\u064a \u062c\u0645\u064a\u0639 \u0644\u063a\u0627\u062a \u0627\u0644\u0628\u0631\u0645\u062c\u0629    \u0648\u0641\u064a \u062c\u0645\u064a\u0639 \u0627\u0644\u0645\u0641\u0633\u0651\u0631\u0627\u062a\u060c \u0645\u0631\u0627\u062c\u0639\u0629 \u0645\u0635\u062f\u0631 \u0627\u0644\u0634\u0651\u0641\u0631\u0629 \u0627\u0644\u0645\u0635\u062f\u0631\u064a\u0629 \u0647\u064a \u0623\u0641\u0636\u0644 \u0637\u0631\u064a\u0642\u0629 \u0644\u0627\u0643\u062a\u0634\u0627\u0641 \u0645\u0627 \u0625\u0630\u0627 \u0643\u0627\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u0628\u0631\u0645\u062c\u064a \u0639\u064f\u0631\u0636\u0629 \u0644\u0644\u0625\u0635\u0627\u0628\u0629 \u0628\u062b\u063a\u0631\u0629 \u0627\u0644\u062d\u0642\u0646. \u064a\u0648\u0635\u0651\u064e\u0649 \u0628\u0634\u062f\u0651\u0629 \u0628\u0627\u0644\u0641\u062d\u0635 \u0627\u0644\u062a\u0644\u0642\u0627\u0626\u064a \u0644\u0643\u0644 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a \u062a\u0631\u0648\u0633\u064a\u0627\u062a \u0635\u0641\u062d\u0627\u062a \u0627\u0644\u0648\u064a\u0628\u060c \u0627\u0644\u0631\u0648\u0627\u0628\u0637 \u0627\u0644\u062a\u0634\u0639\u0628\u064a\u0651\u0629 \"URL\"\u060c \u0648\u0645\u0644\u0641\u0627\u062a \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0627\u0631\u062a\u0628\u0627\u0637 \"Cookies\"\u060c \u0648 JSON\u0648 \u0627\u0644\u0640 SOAP \u0648\u0645\u062f\u062e\u0644\u0627\u062a \u0645\u0639\u0637\u064a\u0627\u062a \u0627\u0644\u0640 XML. \u0627\u0644\u0645\u0646\u0638\u0645\u0627\u062a \u0628\u0625\u0645\u0643\u0627\u0646\u0647\u0627 \u0625\u0636\u0627\u0641\u0629 \u0623\u062f\u0648\u0627\u062a \u0627\u0644\u0641\u062d\u0635 \u062b\u0627\u0628\u062a\u0629 \u0627\u0644\u0645\u0635\u062f\u0631\"SAST\" \u0648\u0623\u062f\u0648\u0627\u062a \u0627\u0644\u0641\u062d\u0635 \u0627\u0644\u062f\u064a\u0646\u0627\u0645\u064a\u0643\u064a\u0629 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0629 \"DAST\"\u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 \u0641\u064a \u0645\u0633\u0627\u0631\u0627\u062a CI/CD\u060c \u0644\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0639\u064a\u0648\u0628 \u0627\u0644\u0645\u0648\u062c\u0648\u062f\u0629 \u0645\u0646 \u0642\u0628\u0644 \u0639\u0645\u0644\u064a\u0629 \u0637\u0631\u062d \u0627\u0644\u0645\u0646\u062a\u062c \u0644\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645. </p>"},{"location":"ar/A03_2021-Injection/#_4","title":"\u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646\u0647\u0627","text":"<ul> <li> <p>\u0644\u062a\u0641\u0627\u062f\u064a \u0647\u062c\u0645\u0627\u062a \u0627\u0644\u062d\u0642\u0646 \u064a\u062c\u0628 \u0627\u0644\u0641\u0635\u0644 \u0648\u0627\u0644\u062a\u0641\u0651\u0631\u064a\u0642 \u0628\u064a\u0646 \u0643\u0644 \u0645\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0648\u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a. </p> </li> <li> <p>\u064f\u0641\u0636\u0651\u0644 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0627\u062c\u0647\u0627\u062a \u0628\u0631\u0645\u062c\u0629 \u062a\u0637\u0628\u064a\u0642\u0627\u062a (API) ** \u0622\u0645\u0646\u0629\u060c \u0648\u0630\u0644\u0643 \u0644\u062a\u0641\u0627\u062f\u064a \u0627\u0633\u062a\u062e\u062f\u0627\u0645 ** \u0645\u0641\u0633\u0651\u0631 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0643\u064f\u0644\u0651\u064a\u064b\u0627\u060c \u0648 \u062a\u0648\u0641\u064a\u0631 \u0648\u0627\u062c\u0647\u0629 \u0625\u062f\u062e\u0627\u0644 \u0630\u0627\u062a \u0645\u0639\u0627\u0645\u0644\u0627\u062a \" Parametrized Interface \" \u0623\u0648 \u0627\u0644\u0627\u0646\u062a\u0642\u0627\u0644 \u0625\u0644\u0649 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0643\u0627\u0626\u0646\u0627\u062a \u0627\u0644\u0640 \"Relational Mapping Tools (ORMs)\".</p> </li> <li> <p>\u0645\u0644\u0627\u062d\u0638\u0629: \u062d\u062a\u0649 \u0641\u064a \u062d\u0627\u0644 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a\" Parameterized\u201d \u0627\u0644\u0625\u062c\u0631\u0627\u0621\u0627\u062a \u0627\u0644\u0645\u062e\u0632\u0651\u0646\u0629 \u0642\u062f \u0644\u0627 \u062a\u0632\u0627\u0644 \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u064f\u0639\u0631\u0651\u0636\u0629 \u0644\u0647\u062c\u0645\u0627\u062a \u0627\u0644\u062d\u0642\u0646 \u0641\u064a \u062d\u0627\u0644 \u0643\u0627\u0646\u062a \u0627\u0644\u0640 PL/SQL \u0623\u0648 T-SQL \u0642\u0627\u0628\u0644\u0629 \u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a \u0627\u0644\u0645\u062a\u0633\u0644\u0633\u0644\u0629 \"\u0627\u0644\u063a\u064a\u0631 \u0645\u0628\u0627\u0634\u0631\u0629 \" \u0623\u0648 \u062a\u0646\u0641\u064a\u0630 \u062a\u0639\u0644\u064a\u0645\u0627\u062a \u0628\u0631\u0645\u062c\u064a\u0629 \u0636\u0627\u0631\u0651\u0629 \u0645\u0646 \u062e\u0644\u0627\u0644 EXECUTE IMMEDIATE \u0623\u0648 exec (). </p> </li> <li> <p>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a \u0627\u0644\u0625\u064a\u062c\u0627\u0628\u064a\u0629 \u0648 \u0627\u0644\u0645\u0631\u062a\u0628\u0637\u0629 \u0628 \"\u0642\u0648\u0627\u0626\u0645 \u0627\u0644\u0633\u0645\u0627\u062d/\u0627\u0644\u0642\u0648\u0627\u0626\u0645 \u0627\u0644\u0628\u064a\u0636\u0627\u0621\" \u0645\u0646 \u0637\u0631\u0641 \u0627\u0644\u062e\u0627\u062f\u0645. \u0644\u0643\u0646 \u0647\u0630\u0647 \u0644\u0627 \u062a\u0639\u062a\u0628\u0631 \u062d\u0645\u0627\u064a\u0629 \u0645\u062a\u0643\u0627\u0645\u0644\u0629 \u062d\u064a\u062b \u0623\u0646 \u0647\u0646\u0627\u0643 \u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 \u0627\u0644\u0628\u0631\u0627\u0645\u062c \u062a\u062a\u0637\u0651\u0644\u0628 \u0631\u0645\u0648\u0632 \u062e\u0627\u0635\u0629 \"Special Characters\" \u0645\u062b\u0644 \u062d\u0642\u0644 \u0627\u0644\u0646\u0635 (TextArea) \u0623\u0648 \u0648\u0627\u062c\u0647\u0627\u062a \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0628\u0631\u0627\u0645\u062c (APIs) \u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0647\u0648\u0627\u062a\u0641. </p> </li> <li> <p>\u0641\u064a \u062d\u0627\u0644 \u0648\u062c\u0648\u062f \u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a \u062f\u064a\u0646\u0627\u0645\u064a\u0643\u064a\u0629 \u0645\u062a\u0628\u0642\u064a\u0629\u060c \u0642\u0645 \u0628\u062a\u0635\u0641\u064a\u0629 \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0645\u0646 \u0627\u0644\u0631\u0645\u0648\u0632 \u0627\u0644\u062e\u0627\u0635\u0629 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0635\u064a\u063a\u0629 \u0628\u0631\u0645\u062c\u064a\u0629 \"Syntax \" \u0644\u062a\u0635\u0641\u064a\u0629 \u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a \u0627\u0644\u0645\u062d\u062f\u062f\u0629 \u0625\u0644\u0649 \u0645\u0641\u0633\u0651\u0631 \u0627\u0644\u0623\u0648\u0627\u0645\u0631.   </p> </li> <li> <p>\u0645\u0644\u0627\u062d\u0638\u0629: \u0647\u064a\u0643\u0644\u0629 SQL \u0645\u062b\u0644 \u0623\u0633\u0645\u0627\u0621 \u0627\u0644\u062c\u062f\u0627\u0648\u0644 \u0623\u0648 \u0627\u0644\u0623\u0639\u0645\u062f\u0629 \u0648\u063a\u064a\u0631\u0647\u0627\u060c \u0644\u0627 \u064a\u0645\u0643\u0646 \u0625\u062c\u0631\u0627\u0621 \u0639\u0648\u0627\u0645\u0644 \u0627\u0644\u062a\u0635\u0641\u064a\u0629 \u0639\u0644\u064a\u0647\u0627\u060c \u0644\u0630\u0644\u0643 \u064a\u062c\u0628 \u0627\u0644\u062d\u0630\u0631 \u0645\u0646 \u0647\u064a\u0627\u0643\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0642\u0627\u062f\u0645\u0629 \u0645\u0646 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u062d\u064a\u062b \u0623\u0646\u0647\u0627 \u062a\u0639\u062a\u0628\u0631 \u062e\u0637\u0631\u0629. \u0648\u0647\u0630\u0627 \u062e\u0637\u0623 \u0634\u0627\u0626\u0639 \u0639\u0646\u062f \u0643\u062a\u0627\u0628\u0629-\u062a\u0642\u0627\u0631\u064a\u0631 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a.  </p> </li> <li> <p>\u0636\u0639 \u062d\u062f\u0648\u062f\u0627 \u0648 \u0623\u0648 \u0636\u0648\u0627\u0628\u0637 \u062a\u062d\u0643\u0651\u0645 \u0623\u062e\u0631\u0649 \u0639\u0646\u062f \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a \u062f\u0627\u062e\u0644 SQL\u060c \u0644\u062a\u062c\u0646\u0651\u0628 \u0643\u0634\u0641 \u0627\u0644\u0633\u062c\u0644\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0641\u064a \u062d\u0627\u0644 \u0648\u062c\u0648\u062f \u0647\u062c\u0645\u0627\u062a \u062d\u0642\u0646 \u0627\u0644\u0640 SQL</p> </li> </ul>"},{"location":"ar/A03_2021-Injection/#_5","title":"\u0623\u0645\u062b\u0644\u0629 \u0639\u0644\u0649 \u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a \u0627\u0644\u0647\u062c\u0648\u0645","text":"<p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #1: \u0628\u0631\u0646\u0627\u0645\u062c \u064a\u0633\u062a\u062e\u062f\u0645 \u0628\u064a\u0627\u0646\u0627\u062a \u063a\u064a\u0631 \u0645\u0648\u062b\u0642\u0629 \u0641\u064a \u0628\u0646\u0627\u0621 \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0641\u064a \u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644SQL  \u0648\u0627\u0644\u062a\u064a \u0642\u062f \u064a\u0639\u0631\u0636\u0647\u0627 \u0644\u0644\u062d\u0642\u0646: </p> <p>String query = \"SELECT * FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\";</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #2: \u0627\u0644\u062b\u0642\u0629 \u0627\u0644\u0639\u0645\u064a\u0627\u0621 \u0644\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0641\u064a \u0625\u0637\u0627\u0631 \u0627\u0644\u0639\u0645\u0644 (Framework)  \u0648\u0642\u062f \u062a\u0624\u062f\u064a \u062a\u0644\u0643 \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a \u0625\u0644\u0649 \u062b\u063a\u0631\u0627\u062a \u0627\u0644\u062d\u0642\u0646 \u0645\u062b\u0644 Hibernate Query Language (HQL):  </p> <p>Query HQLQuery = session.createQuery(\"FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\");</p> <p>\u0641\u064a \u0643\u0644\u062a\u0627 \u0627\u0644\u062d\u0627\u0644\u062a\u064a\u0646 \u0627\u0644\u0633\u0627\u0628\u0642\u062a\u064a\u0646\u060c \u0627\u0644\u0645\u064f\u062e\u062a\u0631\u0642 \u0642\u0627\u0645 \u0628\u062a\u0639\u062f\u064a\u0644 \u0642\u064a\u0645\u0629 \u0645\u062a\u063a\u064a\u0651\u0631 \u0627\u0644\u0640 id \u0641\u064a \u0627\u0644\u0645\u062a\u0635\u0641\u062d \u0644\u0625\u0631\u0633\u0627\u0644 \u2018 UNION SELECT SLEEP(10);-- . \u0645\u062b\u0644\u0627\u064b:</p> <p>http://example.com/app/accountView?id=' UNION SELECT SLEEP(10);--</p> <p>\u0648\u0647\u0630\u0627 \u064a\u0646\u062a\u062c \u062a\u063a\u064a\u064a\u0631 \u0641\u064a \u0645\u0639\u0646\u0649 \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0644\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u062c\u0645\u064a\u0639 \u0627\u0644\u0633\u062c\u0644\u0627\u062a \u0645\u0646 \u062c\u062f\u0648\u0644 \u0627\u0644\u062d\u0633\u0627\u0628\u0627\u062a. \u0648\u0642\u062f \u064a\u0633\u062a\u063a\u0644\u0651\u0647\u0627 \u0627\u0644\u0645\u064f\u062e\u062a\u0631\u0642 \u0628\u0634\u0643\u0644 \u0622\u062e\u0631 \u0644\u062a\u0639\u062f\u064a\u0644 \u0623\u0648 \u062d\u0630\u0641 \u0623\u0648 \u062d\u062a\u0649 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0645\u062e\u0632\u0651\u0646\u0629. </p>"},{"location":"ar/A03_2021-Injection/#_6","title":"\u0627\u0644\u0645\u0635\u0627\u062f\u0631","text":"<ul> <li> <p>OWASP Proactive Controls: Secure Database Access</p> </li> <li> <p>OWASP ASVS: V5 Input Validation and Encoding</p> </li> <li> <p>OWASP Testing Guide: SQL Injection, Command Injection,     and\u00a0ORM Injection</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: SQL Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention in Java</p> </li> <li> <p>OWASP Cheat Sheet: Query Parameterization</p> </li> <li> <p>OWASP Automated Threats to Web Applications \u2013 OAT-014</p> </li> <li> <p>PortSwigger: Server-side template injection</p> </li> </ul>"},{"location":"ar/A03_2021-Injection/#cwes","title":"\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0631\u0628\u0637 \u0645\u0639 \u0625\u0637\u0627\u0631 CWEs","text":"<p>CWE-20 Improper Input Validation</p> <p>CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')</p> <p>CWE-75 Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)</p> <p>CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection')</p> <p>CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</p> <p>CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</p> <p>CWE-80 Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</p> <p>CWE-83 Improper Neutralization of Script in Attributes in a Web Page</p> <p>CWE-87 Improper Neutralization of Alternate XSS Syntax</p> <p>CWE-88 Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')</p> <p>CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</p> <p>CWE-90 Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</p> <p>CWE-91 XML Injection (aka Blind XPath Injection)</p> <p>CWE-93 Improper Neutralization of CRLF Sequences ('CRLF Injection')</p> <p>CWE-94 Improper Control of Generation of Code ('Code Injection')</p> <p>CWE-95 Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</p> <p>CWE-96 Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')</p> <p>CWE-97 Improper Neutralization of Server-Side Includes (SSI) Within a Web Page</p> <p>CWE-98 Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')</p> <p>CWE-99 Improper Control of Resource Identifiers ('Resource Injection')</p> <p>CWE-100 Deprecated: Was catch-all for input validation issues</p> <p>CWE-113 Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')</p> <p>CWE-116 Improper Encoding or Escaping of Output</p> <p>CWE-138 Improper Neutralization of Special Elements</p> <p>CWE-184 Incomplete List of Disallowed Inputs</p> <p>CWE-470 Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')</p> <p>CWE-471 Modification of Assumed-Immutable Data (MAID)</p> <p>CWE-564 SQL Injection: Hibernate</p> <p>CWE-610 Externally Controlled Reference to a Resource in Another Sphere</p> <p>CWE-643 Improper Neutralization of Data within XPath Expressions ('XPath Injection')</p> <p>CWE-644 Improper Neutralization of HTTP Headers for Scripting Syntax</p> <p>CWE-652 Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')</p> <p>CWE-917 Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')</p>"},{"location":"ar/A04_2021-Insecure_Design/","title":"A04:2021 \u2013 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646","text":""},{"location":"ar/A04_2021-Insecure_Design/#_1","title":"\u0627\u0644\u0639\u0648\u0627\u0645\u0644","text":"\u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u062d\u062f\u0648\u062b \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0642\u0635\u0648\u0649 \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0645\u062a\u0648\u0633\u0637 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 CVEs 40 24.19% 3.00% 77.25% 42.51% 6.46 6.78 262,407 2,691"},{"location":"ar/A04_2021-Insecure_Design/#_2","title":"\u0646\u0638\u0631\u0629 \u0639\u0627\u0645\u0629","text":"<p>\u0647\u0648 \u062a\u0635\u0646\u064a\u0641 \u062c\u062f\u064a\u062f \u062a\u0645\u062a \u0625\u0636\u0627\u0641\u062a\u0647 \u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u0646\u0633\u062e\u0629 \u0644\u0639\u0627\u0645 2021 \u0648\u0627\u0644\u0630\u064a \u064a\u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u0645\u062a\u0639\u0644\u0642\u0629 \u0628\u0639\u064a\u0648\u0628 \u0648\u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u062a\u0635\u0645\u064a\u0645\u060c \u0645\u0645\u0627 \u064a\u062f\u0639\u0648 \u0625\u0644\u0649 \u0627\u0644\u0645\u0632\u064a\u062f \u0645\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u0645\u0630\u062c\u0629 \u0627\u0644\u062a\u0647\u062f\u064a\u062f\u0627\u062a\u060c \u0648\u0623\u0646\u0645\u0627\u0637 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u0622\u0645\u0646\u0629 \u0648\u0628\u0646\u064a\u0629 \u062a\u062d\u062a\u064a\u0629 \u0645\u0628\u0646\u064a\u0651\u0629 \u0639\u0644\u0649 \u0623\u0641\u0636\u0644 \u0627\u0644\u0627\u0645\u062a\u062b\u0627\u0644\u0627\u062a. \u0627\u0644\u062c\u062f\u064a\u0631 \u0628\u0627\u0644\u0630\u0643\u0631 \u0623\u0646 \u0625\u0637\u0627\u0631 CWE \u062a\u0636\u0645\u0646 \u0627\u0644\u0640 CWEs \u0627\u0644\u062a\u0627\u0644\u064a\u0629: CWE-209\u060c CWE-256\u060c CWE-501\u060c CWE-522.</p>"},{"location":"ar/A04_2021-Insecure_Design/#_3","title":"\u0627\u0644\u0648\u0635\u0641","text":"<p>\u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646 \u062a\u0635\u0646\u064a\u0641 \u0648\u0627\u0633\u0639 \u064a\u0634\u0645\u0644 \u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 \u0627\u0644\u0645\u062e\u062a\u0644\u0641\u0629\u060c \u0648\u064a\u064f\u0639\u0631\u0641 \u0639\u0644\u0649 \u0623\u0646\u0647 \" \u062a\u0635\u0645\u064a\u0645 \u0630\u0648 \u0639\u0646\u0635\u0631 \u062a\u062d\u0643\u0645 \" Control \u201c\u0645\u0641\u0642\u0648\u062f \u0623\u0648 \u063a\u064a\u0631 \u0641\u0639\u0651\u0627\u0644\u060c \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646 \u0647\u0648 \u0627\u0644\u0645\u0643\u0627\u0646 \u0627\u0644\u0630\u064a \u064a\u0643\u0648\u0646 \u0641\u064a\u0647 \u0639\u0646\u0635\u0631 \u0627\u0644\u062a\u062d\u0643\u0645 \u063a\u0627\u0626\u0628\u064b\u0627\u060c \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644\u060c \u0644\u0646\u0641\u0631\u0636 \u0623\u0646 \u0647\u0646\u0627\u0643 \u0634\u0641\u0651\u0631\u0629 \u0645\u0635\u062f\u0631\u064a\u0629 \u064a\u062c\u0628 \u0623\u0646 \u062a\u064f\u0631\u0627\u0639\u064a \u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0648\u0644\u0643\u0646 \u0644\u0627 \u062a\u0648\u062c\u062f \u0637\u0631\u064a\u0642\u0629 \u0644\u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u062a\u0634\u0651\u0641\u064a\u0631.  \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646 \u0648\u0627\u0644\u063a\u064a\u0631 \u0641\u0639\u0651\u0627\u0644 \u0647\u0648: \u0627\u0644\u0645\u0643\u0627\u0646 \u062d\u064a\u0646\u0645\u0627 \u064a\u0645\u0643\u0646 \u0625\u062f\u0631\u0627\u0643 \u0648\u062c\u0648\u062f \u0627\u0644\u062a\u0647\u062f\u064a\u062f\u060c \u0644\u0643\u0646 \u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0627\u0644\u0645\u0646\u0637\u0642\u064a \u0627\u0644\u063a\u064a\u0631 \u0641\u0639\u0651\u0627\u0644 \u0645\u0646 \u0641\u0636\u0627\u0621 \u0627\u0644\u0639\u0645\u0644 (\u0627\u0644\u0623\u0639\u0645\u0627\u0644) \u064a\u0645\u0646\u0639 \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0625\u062c\u0631\u0627\u0621. \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644 \u0644\u0646\u0641\u0631\u0636 \u0623\u0646 \u0647\u0646\u0627\u0643 \u0641\u0636\u0627\u0621 \u0639\u0645\u0644 \u064a\u062c\u0628 \u0623\u0646 \u064a\u0642\u0648\u0645 \u0628\u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0625\u0639\u0641\u0627\u0621 \u0627\u0644\u0636\u0631\u064a\u0628\u064a \u0644\u0644\u062c\u0627\u0626\u062d\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0641\u0626\u0627\u062a \u0627\u0644\u062f\u062e\u0644 \u0644\u0643\u0646\u0647 \u0644\u0627 \u064a\u0642\u0648\u0645 \u0628\u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0641\u064a\u0645\u0627 \u0625\u0630\u0627 \u0643\u0627\u0646\u062a \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u062f\u062e\u0644\u0629 \u0645\u0648\u0642\u0639\u0629 \u0628\u0634\u0643\u0644 \u0635\u062d\u064a\u062d \u0623\u0648 \u0644\u0627\u060c \u0645\u0645\u0627 \u0642\u062f \u064a\u0624\u062f\u064a \u0625\u0644\u0649 \u0641\u0627\u0626\u062f\u0629 \u0623\u0643\u062b\u0631 \u0645\u0645\u0627 \u064a\u0646\u0628\u063a\u064a     .  \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u0622\u0645\u0646 \u0639\u0628\u0627\u0631\u0629 \u0639\u0646 \u062b\u0642\u0627\u0641\u0629 \u0648\u0645\u0646\u0647\u062c\u064a\u0651\u0629 \u062a\u0642\u0648\u0645 \u0628\u062a\u0642\u064a\u064a\u0645 \u0627\u0644\u062a\u0647\u062f\u064a\u062f\u0627\u062a \u0628\u0627\u0633\u062a\u0645\u0631\u0627\u0631 \u0648\u062a\u0636\u0645\u0646 \u0623\u0646 \u0627\u0644\u0634\u0651\u0641\u0631\u0629 \u0627\u0644\u0645\u0635\u062f\u0631\u064a\u0629 \u0645\u0635\u0645\u0651\u0645\u0629 \u0628\u0634\u0643\u0644 \u0642\u0648\u064a \u0648\u0645\u062e\u062a\u0628\u0631\u0629 \u0636\u062f \u0637\u0631\u0642 \u0627\u0644\u0647\u062c\u0648\u0645 \u0627\u0644\u0645\u0639\u0631\u0648\u0641\u0629. \u064a\u062a\u0637\u0644\u0651\u0628 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u0622\u0645\u0646 \u062f\u0648\u0631\u0629 \u062d\u064a\u0627\u0629 \u062a\u0637\u0648\u064a\u0631 \u0622\u0645\u0646\u0629\u060c \u0648\u0627\u0644\u0628\u0639\u0636 \u0645\u0646 \u0623\u0646\u0645\u0627\u0637 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u0622\u0645\u0646\u0629 \u0623\u0648 \u0645\u0643\u062a\u0628\u0627\u062a \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u0645\u062c\u0647\u0632\u0629 \u0645\u064f\u0633\u0628\u0642\u064b\u0627 \u0623\u0648 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0648\u0646\u0645\u0630\u062c\u0629 \u0627\u0644\u062a\u0647\u062f\u064a\u062f\u0627\u062a. </p>"},{"location":"ar/A04_2021-Insecure_Design/#_4","title":"\u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646\u0647\u0627","text":"<ul> <li> <p>\u0625\u0646\u0634\u0627\u0621 \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062f\u0648\u0631\u0629 \u062d\u064a\u0627\u0629 \u062a\u0637\u0648\u064a\u0631 \u0622\u0645\u0646\u0629 \u0645\u0639 \u0627\u0644\u0627\u0633\u062a\u0639\u0627\u0646\u0629 \u0628\u0623\u062e\u0635\u0627\u0626\u064a \u0623\u0645\u0646 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0644\u062a\u0642\u064a\u064a\u0645 \u0648\u062a\u0635\u0645\u064a\u0645 \u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u062a\u062d\u0643\u0651\u0645 \u0627\u0644\u0645\u062a\u0639\u0644\u0642\u0629 \u0628\u0627\u0644\u0623\u0645\u0627\u0646 \u0648\u0627\u0644\u062e\u0635\u0648\u0635\u064a\u0629.</p> </li> <li> <p>\u0625\u0646\u0634\u0627\u0621 \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 \u062a\u062d\u062a\u0648\u064a \u0639\u0644\u0649 \u0623\u0646\u0645\u0627\u0637 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u0622\u0645\u0646 \u0648\u0645\u0643\u0648\u0646\u0627\u062a \u0645\u064f\u0633\u0628\u0642\u0629 \u0648\u062c\u0627\u0647\u0632\u0629 \u0644\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645. </p> </li> <li> <p>\u0646\u0645\u0630\u062c\u0629 \u0627\u0644\u062a\u0647\u062f\u064a\u062f\u0627\u062a \u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629 \"\u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0627\u0644\u0647\u0648\u064a\u0629\" \u0627\u0644\u062d\u0633\u0627\u0633\u0629\u060c \u0648\u0627\u0644\u062a\u062d\u0643\u0651\u0645 \u0641\u064a \u0627\u0644\u0648\u0635\u0648\u0644\u060c \u0648\u0627\u0644\u062a\u0633\u0644\u0633\u0644 \u0627\u0644\u0645\u0646\u0637\u0642\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u060c \u0648\u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629 \u0644\u0644\u062a\u0637\u0628\u064a\u0642.</p> </li> <li> <p>\u0648\u062d\u062f\u0629 \u0644\u0644\u0643\u062a\u0627\u0628\u0629 \u0648\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0627\u0644\u062a\u0643\u0627\u0645\u0644 \u0644\u0644\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0623\u0646 \u062c\u0645\u064a\u0639 \u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a \u0627\u0644\u062d\u0631\u062c\u0629 \u0645\u0642\u0627\u0648\u0645\u0629 \u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u062a\u0647\u062f\u064a\u062f \u0627\u0644\u0645\u062a\u0648\u0642\u0651\u0639.</p> </li> </ul>"},{"location":"ar/A04_2021-Insecure_Design/#_5","title":"\u0623\u0645\u062b\u0644\u0629 \u0639\u0644\u0649 \u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a \u0627\u0644\u0647\u062c\u0648\u0645","text":"<p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #1:  \u0642\u062f \u064a\u062a\u0636\u0645\u0651\u0646 \u0645\u0633\u0627\u0631 \u0639\u0645\u0644\u064a\u0629 \u0627\u0633\u062a\u0631\u062f\u0627\u062f \u0639\u0646\u0627\u0635\u0631 \u0627\u0639\u062a\u0645\u0627\u062f \u0627\u0644\u0645\u0635\u062f\u0627\u0642\u064a\u0629\" \u0623\u0633\u0626\u0644\u0629 \u0648\u0625\u062c\u0627\u0628\u0627\u062a\"\u060c \u0627\u0644\u0630\u064a \u064a\u062d\u0638\u0631\u0647 \u0625\u0637\u0627\u0631 NIST 800-63b \u0648OWASP ASVS \u0648OWASP Top 10\u060c \u0641\u0644\u0627 \u064a\u0645\u0643\u0646 \u0627\u0644\u0648\u062b\u0648\u0642 \u0641\u064a \u0627\u0644\u0623\u0633\u0626\u0644\u0629 \u0648\u0627\u0644\u0625\u062c\u0627\u0628\u0627\u062a \u0643\u0623\u062f\u0644\u0651\u0629 \u0639\u0644\u0649 \u0635\u062d\u0629 \u0647\u0648\u064a\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u062d\u064a\u062b \u064a\u0645\u0643\u0646 \u0644\u0623\u0643\u062b\u0631 \u0645\u0646 \u0634\u062e\u0635 \u0645\u0639\u0631\u0641\u0629 \u0627\u0644\u0625\u062c\u0627\u0628\u0627\u062a\u060c \u0648\u0647\u0630\u0627 \u0647\u0648 \u0633\u0628\u0628 \u062d\u0638\u0631\u0647. \u064a\u062c\u0628 \u0625\u0632\u0627\u0644\u0629 \u0627\u0644\u0634\u0651\u0641\u0631\u0629 \u0627\u0644\u0645\u0635\u062f\u0631\u064a\u0629 \u062a\u0644\u0643 \u0648\u0627\u0633\u062a\u0628\u062f\u0627\u0644\u0647\u0627 \u0628\u062a\u0635\u0645\u064a\u0645 \u0623\u0643\u062b\u0631 \u0623\u0645\u0627\u0646\u064b\u0627.</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #2: \u062a\u0642\u0648\u0645 \u062f\u0648\u0631 \u0633\u064a\u0646\u0645\u0627 \u0628\u0639\u0645\u0644 \u062e\u0635\u0648\u0645\u0627\u062a \u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062d\u062c\u0632 \u0627\u0644\u062c\u0645\u0627\u0639\u064a \u0644\u0640\u0661\u0665 \u0634\u062e\u0635 \u0643\u062d\u062f \u0623\u0642\u0635\u0649 \u0642\u0628\u0644 \u0627\u0644\u062f\u0641\u0639. \u0647\u0630\u0627 \u0627\u0644\u0645\u0633\u0627\u0631 \u0642\u062f \u064a\u064f\u0634\u0643\u0651\u0644 \u062e\u0637\u0631\u064b\u0627 \u0648\u064a\u0633\u0645\u062d \u0644\u0644\u0645\u0647\u0627\u062c\u0645 \u0628\u0627\u062e\u062a\u0628\u0627\u0631 \u0645\u0627 \u0625\u0630\u0627 \u0643\u0627\u0646 \u0628\u0625\u0645\u0643\u0627\u0646\u0647 \u062d\u062c\u0632 \u0666\u0660\u0660 \u0645\u0642\u0639\u062f \u062f\u0641\u0639\u0629 \u0648\u0627\u062d\u062f\u0629 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0637\u0644\u0628\u0627\u062a \u0642\u0644\u064a\u0644\u0629\u060c \u0645\u0645\u0627 \u064a\u062a\u0633\u0628\u0651\u0628 \u0641\u064a \u062e\u0633\u0627\u0631\u0629 \u0647\u0627\u0626\u0644\u0629 \u0644\u0644\u062f\u062e\u0644.</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #3: \u0644\u0627 \u062a\u062a\u0645\u062a\u0651\u0639 \u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u062a\u062c\u0627\u0631\u0629 \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a\u0629 \u0645\u0646 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0636\u062f \u0627\u0644\u0631\u0648\u0628\u0648\u062a\u0627\u062a \u0627\u0644\u062a\u064a \u064a\u064f\u062f\u064a\u0631\u0647\u0627 \u0645\u0633\u062a\u062b\u0645\u0631\u0648\u0646 \u064a\u0642\u0648\u0645\u0648\u0646 \u0628\u0634\u0631\u0627\u0621 \u0628\u0637\u0627\u0642\u0627\u062a \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0631\u0633\u0648\u0645\u064a\u0629 \u0627\u0644\u0645\u0637\u0648\u0651\u0631\u0629 \u0644\u0625\u0639\u0627\u062f\u0629 \u0628\u064a\u0639\u0647\u0627 \u0644\u0627\u062d\u0642\u064b\u0627 \u0641\u064a \u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0645\u0632\u0627\u062f\u0627\u062a \u0628\u0623\u0633\u0639\u0627\u0631 \u0623\u0639\u0644\u0649. \u0647\u0630\u0627 \u064a\u0636\u0639 \u0635\u0627\u0646\u0639\u064a\u0651 \u0643\u0631\u0648\u062a \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0643\u0630\u0644\u0643 \u0645\u062a\u0627\u062c\u0631 \u0627\u0644\u0628\u064a\u0639 \u0628\u0627\u0644\u062a\u062c\u0632\u0626\u0629 \u0641\u064a \u0645\u0648\u0642\u0641 \u062d\u0631\u062c\u060c \u0627\u0644\u062a\u0635\u0627\u0645\u064a\u0645 \u0627\u0644\u064a\u0642\u0638\u0629 \u0636\u062f \u0627\u0644\u0631\u0648\u0628\u0648\u062a\u0627\u062a \u0648\u0625\u0636\u0627\u0641\u0629 \u0642\u0648\u0627\u0639\u062f \u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u0646\u0637\u0627\u0642 \u0627\u0644\u0645\u0639\u062a\u0645\u062f\u0629 \u0639\u0644\u0649 \u0627\u0644\u0645\u0646\u0637\u0642 \" \u0645\u062b\u0644 \u0631\u0635\u062f \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0634\u0631\u0627\u0621 \u0627\u0644\u062a\u064a \u062a\u062a\u0645 \u0641\u064a \u063a\u0636\u0648\u0646 \u062b\u0648\u0627\u0646\u064d \u0645\u0639\u062f\u0648\u062f\u0629 \"\u0642\u062f \u062a\u0631\u0635\u062f \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0634\u0631\u0627\u0621 \u0627\u0644\u063a\u064a\u0631 \u0637\u0628\u064a\u0639\u064a\u0629 \u0648\u062a\u0642\u0648\u0645 \u0628\u0631\u0641\u0636\u0647\u0627.</p>"},{"location":"ar/A04_2021-Insecure_Design/#_6","title":"\u0627\u0644\u0645\u0635\u0627\u062f\u0631","text":"<ul> <li> <p>OWASP Cheat Sheet: Secure Design Principles</p> </li> <li> <p>OWASP SAMM: Design:Security Architecture</p> </li> <li> <p>OWASP SAMM: Design:Threat Assessment </p> </li> <li> <p>NIST \u2013 Guidelines on Minimum Standards for Developer Verification of Software</p> </li> <li> <p>The Threat Modeling Manifesto</p> </li> <li> <p>Awesome Threat Modeling</p> </li> </ul>"},{"location":"ar/A04_2021-Insecure_Design/#cwes","title":"\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0631\u0628\u0637 \u0645\u0639 \u0625\u0637\u0627\u0631 CWEs","text":"<p>CWE-73 External Control of File Name or Path</p> <p>CWE-183 Permissive List of Allowed Inputs</p> <p>CWE-209 Generation of Error Message Containing Sensitive Information</p> <p>CWE-213 Exposure of Sensitive Information Due to Incompatible Policies</p> <p>CWE-235 Improper Handling of Extra Parameters</p> <p>CWE-256 Unprotected Storage of Credentials</p> <p>CWE-257 Storing Passwords in a Recoverable Format</p> <p>CWE-266 Incorrect Privilege Assignment</p> <p>CWE-269 Improper Privilege Management</p> <p>CWE-280 Improper Handling of Insufficient Permissions or Privileges</p> <p>CWE-311 Missing Encryption of Sensitive Data</p> <p>CWE-312 Cleartext Storage of Sensitive Information</p> <p>CWE-313 Cleartext Storage in a File or on Disk</p> <p>CWE-316 Cleartext Storage of Sensitive Information in Memory</p> <p>CWE-419 Unprotected Primary Channel</p> <p>CWE-430 Deployment of Wrong Handler</p> <p>CWE-434 Unrestricted Upload of File with Dangerous Type</p> <p>CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')</p> <p>CWE-451 User Interface (UI) Misrepresentation of Critical Information</p> <p>CWE-472 External Control of Assumed-Immutable Web Parameter</p> <p>CWE-501 Trust Boundary Violation</p> <p>CWE-522 Insufficiently Protected Credentials</p> <p>CWE-525 Use of Web Browser Cache Containing Sensitive Information</p> <p>CWE-539 Use of Persistent Cookies Containing Sensitive Information</p> <p>CWE-579 J2EE Bad Practices: Non-serializable Object Stored in Session</p> <p>CWE-598 Use of GET Request Method With Sensitive Query Strings</p> <p>CWE-602 Client-Side Enforcement of Server-Side Security</p> <p>CWE-642 External Control of Critical State Data</p> <p>CWE-646 Reliance on File Name or Extension of Externally-Supplied File</p> <p>CWE-650 Trusting HTTP Permission Methods on the Server Side</p> <p>CWE-653 Insufficient Compartmentalization</p> <p>CWE-656 Reliance on Security Through Obscurity</p> <p>CWE-657 Violation of Secure Design Principles</p> <p>CWE-799 Improper Control of Interaction Frequency</p> <p>CWE-807 Reliance on Untrusted Inputs in a Security Decision</p> <p>CWE-840 Business Logic Errors</p> <p>CWE-841 Improper Enforcement of Behavioral Workflow</p> <p>CWE-927 Use of Implicit Intent for Sensitive Communication</p> <p>CWE-1021 Improper Restriction of Rendered UI Layers or Frames</p> <p>CWE-1173 Improper Use of Validation Framework</p>"},{"location":"ar/A05_2021-Security_Misconfiguration/","title":"A05:2021 \u2013  \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0627\u0644\u062e\u0627\u0637\u0626\u0629","text":""},{"location":"ar/A05_2021-Security_Misconfiguration/#_1","title":"\u0627\u0644\u0639\u0648\u0627\u0645\u0644","text":"\u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u062d\u062f\u0648\u062b \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0642\u0635\u0648\u0649 \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0645\u062a\u0648\u0633\u0637 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 CVEs 20 19.84% 4.51% 89.58% 44.84% 8.12 6.56 208,387 789"},{"location":"ar/A05_2021-Security_Misconfiguration/#_2","title":"\u0646\u0638\u0631\u0629 \u0639\u0627\u0645\u0629","text":"<p>\u0628\u0639\u062f \u0623\u0646 \u0643\u0627\u0646 \u0647\u0630\u0627 \u0627\u0644\u062a\u0647\u062f\u064a\u062f   \u0641\u064a \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0627\u0644\u0633\u0627\u062f\u0633\u0629 \u0641\u064a \u0627\u0644\u0625\u0635\u062f\u0627\u0631 \u0627\u0644\u0633\u0627\u0628\u0642 \u0644\u0639\u0627\u0645 2017 \u0627\u0644\u0622\u0646 \u0646\u062c\u062f\u0647 \u0641\u064a \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0627\u0644\u062e\u0627\u0645\u0633\u0629\u060c \u062d\u064a\u062b \u0623\u0646\u0647 \u062a\u0645 \u0625\u062c\u0631\u0627\u0621 \u0627\u062e\u062a\u0628\u0627\u0631 \u0639\u0644\u0649 %90 \u0645\u0646 \u0627\u0644\u0628\u0631\u0627\u0645\u062c \u0648\u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0644\u0644\u062a\u0623\u0643\u062f \u0625\u0646 \u0643\u0627\u0646\u062a \u062a\u062d\u062a\u0648\u064a \u0639\u0644\u0649 \u0623\u064a\u0651\u0629 \u0623\u062e\u0637\u0627\u0621 \u0641\u064a \u0637\u0631\u064a\u0642\u0629 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0648\u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0627\u0644\u0635\u062d\u064a\u062d\u0629\u060c \u0641\u0644\u064a\u0633 \u0645\u0646 \u0627\u0644\u0645\u064f\u0633\u062a\u063a\u0631\u0628 \u0627\u0646\u062a\u0642\u0627\u0644 \u0647\u0630\u0627 \u0627\u0644\u062a\u0647\u062f\u064a\u062f \u0645\u0646 \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0627\u0644\u0633\u0627\u062f\u0633\u0629 \u0625\u0644\u0649 \u0627\u0644\u062e\u0627\u0645\u0633\u0629. \u0643\u0630\u0644\u0643 \u062a\u0645 \u0636\u0645 \"XML External Entities XXE\" \u0644\u0647\u0630\u0627 \u0627\u0644\u0646\u0648\u0639 \u0645\u0646 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0648\u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0627\u0644\u062e\u0627\u0637\u0626\u0629. \u062a\u0636\u0645\u0646 \u0627\u0644\u0640 CWEs \u0627\u0644\u062a\u0627\u0644\u064a\u0629 CWE-16 (Configuration), CWE-611 (Improper Restriction of XML External Entity).</p>"},{"location":"ar/A05_2021-Security_Misconfiguration/#_3","title":"\u0627\u0644\u0648\u0635\u0641","text":"<p>\u0645\u0646 \u0627\u0644\u0645\u062d\u062a\u0645\u0644 \u0627\u0646 \u064a\u0643\u0648\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0636\u0639\u064a\u0641 \u0627\u0645\u0646\u064a\u0627\u064b \u0625\u0630\u0627 \u0627\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 \u0627\u0644\u0646\u0642\u0627\u0637 \u0627\u0644\u062a\u0627\u0644\u064a\u0629:</p> <ul> <li> <p>\u0639\u062f\u0645 \u0645\u0631\u0627\u062c\u0639\u0629 \u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0648\u0627\u0644\u0636\u0628\u0637 \u0627\u0644\u0622\u0645\u0646 \u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0623\u0648 \u0641\u064a \u0623\u064a \u062c\u0632\u0621 \u0645\u0646 \u0623\u062c\u0632\u0627\u0621 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0623\u0648 \u062a\u0643\u0648\u064a\u0646 \u0623\u0630\u0648\u0646\u0627\u062a \u062e\u0627\u0637\u0626\u0629 \u0641\u064a \u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u0633\u062d\u0627\u0628\u064a\u0651\u0629.</p> </li> <li> <p>\u062a\u062b\u0628\u064a\u062a \u0648\u0625\u062a\u0627\u062d\u0629 \u062e\u062f\u0645\u0627\u062a \u0648\u0645\u0650\u064a\u0632\u0627\u062a \u063a\u064a\u0631 \u0636\u0631\u0648\u0631\u064a\u0629 (\u0645\u0646\u0627\u0641\u0630 \u063a\u064a\u0631 \u0636\u0631\u0648\u0631\u064a\u0629\u060c \u0627\u0644\u062e\u062f\u0645\u0627\u062a\u060c \u0627\u0644\u0635\u0641\u062d\u0627\u062a\u060c \u0627\u0644\u062d\u0633\u0627\u0628\u0627\u062a\u060c \u0648\u0627\u0644\u0635\u0644\u0627\u062d\u064a\u0627\u062a).</p> </li> <li> <p>\u062a\u0641\u0639\u064a\u0644 \u0627\u0644\u062d\u0633\u0627\u0628\u0627\u062a \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0623\u0648 \u0639\u062f\u0645 \u062a\u063a\u064a\u064a\u0631\u0647\u0627 \u0623\u0648 \u0639\u062f\u0645 \u062a\u063a\u064a\u064a\u0631 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0647\u0627.</p> </li> <li> <p>\u0643\u0634\u0641 \u0631\u0633\u0627\u0626\u0644 \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 (Error Handling) \u0639\u0646 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u062a\u0628\u0651\u0639 (Stack Traces) \u0623\u0648 \u0639\u0631\u0636 \u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u062e\u0637\u0623 \u0627\u0644\u062a\u064a \u062a\u062d\u062a\u0648\u064a \u0639\u0644\u0649 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u062a\u0641\u0635\u064a\u0644\u064a\u0629 \u064a\u0645\u0643\u0646 \u0623\u0646 \u062a\u064f\u0633\u062a\u063a\u0644 \u0645\u0646 \u0642\u0650\u0628\u0644 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645.</p> </li> <li> <p>\u062a\u0643\u0648\u0646 \u0627\u0644\u0645\u064a\u0632\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0627\u0644\u0623\u062d\u062f\u062b \u0645\u064f\u0639\u0637\u0651\u0644\u0629 \u0623\u0648 \u0644\u0645 \u064a\u062a\u0645 \u062a\u0643\u0648\u064a\u0646\u0647\u0627 \u0628\u0634\u0643\u0644 \u0622\u0645\u0646 \u0641\u064a \u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u062a\u064a \u062a\u0645\u062a \u062a\u0631\u0642\u064a\u062a\u0647\u0627. </p> </li> <li> <p>\u0639\u062f\u0645 \u062a\u0639\u064a\u064a\u0646 \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u0623\u0645\u0627\u0646 \u0641\u064a \u062e\u0648\u0627\u062f\u0645 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u0625\u0637\u0627\u0631 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644 (Struts, Spring, ASP.NET) \u0648\u0627\u0644\u0645\u0643\u062a\u0628\u0627\u062a \u0648\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0645\u0627 \u0625\u0644\u0649 \u0630\u0644\u0643 \u0625\u0644\u0649 \u0642\u064a\u0645 \u0622\u0645\u0646\u0629.</p> </li> <li> <p>\u0644\u0627 \u064a\u0631\u0633\u0644 \u0623\u0648 \u064a\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u062e\u0627\u062f\u0645 \u0639\u0646\u0627\u0648\u064a\u0646 \"Headers\" \u0639\u0646\u062f \u0646\u0642\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0644\u0644\u0645\u062a\u0635\u0641\u062d \u0623\u0648 \u0639\u0646\u062f \u062a\u0642\u062f\u064a\u0645\u0647\u0627 \u0645\u0646 \u0642\u0650\u0628\u0644 \u0627\u0644\u0645\u062a\u0635\u0641\u062d.</p> </li> <li> <p>\u0644\u0645 \u064a\u0639\u062f \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0645\u062f\u0639\u0648\u0645\u064b\u0627 \u0645\u0646 \u0642\u0628\u0644 \u0645\u0632\u0648\u0651\u062f\u064a \u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0623\u0648 \u0636\u0639\u064a\u0641 \u0623\u0645\u0646\u064a\u064b\u0627 \u0644\u0627\u062d\u062a\u0648\u0627\u0626\u0647 \u0639\u0644\u0649 \u062b\u063a\u0631\u0627\u062a \u0623\u0645\u0646\u064a\u0629 (\u0627\u0646\u0638\u0631 \u0625\u0644\u0649 - A06:2021 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0648\u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u063a\u064a\u0631 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u062d\u062f\u064a\u062b).</p> </li> </ul> <p>\u0645\u0646 \u062f\u0648\u0646 \u0627\u0645\u062a\u0644\u0627\u0643 \u0625\u062c\u0631\u0627\u0621\u0627\u062a \u0645\u0641\u0647\u0648\u0645\u0629 \u0648\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0643\u0651\u0631\u0627\u0631 \u0644\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0644\u062a\u0643\u0648\u064a\u0646 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0628\u0645\u0627 \u064a\u062a\u0648\u0627\u0641\u0642 \u0645\u0639 \u0627\u0644\u0636\u0648\u0627\u0628\u0637 \u0627\u0644\u0623\u0645\u0646\u064a\u0629\u060c \u062a\u064f\u0635\u0628\u062d \u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0641\u064a \u062e\u0637\u0631 \u0639\u0627\u0644\u064a.</p>"},{"location":"ar/A05_2021-Security_Misconfiguration/#_4","title":"\u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646\u0647\u0627","text":"<p>\u064a\u062c\u0628 \u062a\u0637\u0628\u064a\u0642 \u0622\u0644\u064a\u0629 \u0622\u0645\u0646\u0629 \u0644\u062a\u0643\u0648\u064a\u0646 \u0627\u0644\u0628\u0631\u0627\u0645\u062c \u0623\u0648 \u0627\u0644\u0623\u062c\u0647\u0632\u0629\u060c \u062a\u0634\u0645\u0644 \u0639\u0644\u0649:</p> <ul> <li> <p>\u062a\u0643\u0631\u0627\u0631 \u0639\u0645\u0644\u064a\u0629 \u0645\u0631\u0627\u062c\u0639\u0629 \u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0627\u0644\u0622\u0645\u0646\u060c \u0648\u0627\u0644\u0630\u064a \u0633\u064a\u0624\u062f\u064a \u0625\u0644\u0649 \u062a\u0633\u0631\u064a\u0639 \u0648\u062a\u0633\u0647\u064a\u0644   \u0645\u0647\u0645\u0629 \u0625\u0646\u0634\u0627\u0621 \u0628\u064a\u0626\u0629 \u062c\u062f\u064a\u062f\u0629 \u0645\u0643\u0648\u0651\u0646\u0629 \u0628\u0634\u0643\u0644 \u0622\u0645\u0646. \u0643\u0645\u0627 \u064a\u062c\u0628 \u0623\u0646 \u064a\u062a\u0645 \u062a\u0643\u0648\u064a\u0646 \u0628\u064a\u0626\u0627\u062a \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0648\u0636\u0645\u0627\u0646 \u062c\u0648\u062f\u0629 \u0648\u0628\u064a\u0626\u0629 \u0627\u0644\u0625\u0646\u062a\u0627\u062c \u0628\u0634\u0643\u0644 \u064a\u062a\u0637\u0627\u0628\u0642 \u0645\u0639 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0643\u0644\u0645\u0627\u062a \u0645\u0631\u0648\u0631 \u0645\u062e\u062a\u0644\u0641\u0629 \u0641\u064a \u0643\u0644 \u0628\u064a\u0626\u0629. \u0623\u064a\u0636\u064b\u0627 \u064a\u062c\u0628 \u0623\u0646 \u062a\u0643\u0648\u0646 \u0647\u0630\u0647 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u0622\u0644\u064a\u0629 \u0644\u0644\u062a\u0642\u0644\u064a\u0644 \u0645\u0646 \u0627\u0644\u062c\u0647\u062f \u0627\u0644\u0645\u062a\u0637\u0644\u0651\u0628 \u0639\u0646\u062f \u0625\u0639\u062f\u0627\u062f \u0628\u064a\u0626\u0629 \u062c\u062f\u064a\u062f\u0629 \u0648\u0622\u0645\u0646\u0629.</p> </li> <li> <p>\u0627\u0644\u0627\u0643\u062a\u0641\u0627\u0621 \u0628\u0627\u0644\u062d\u062f \u0627\u0644\u0623\u062f\u0646\u0649 \u0627\u0644\u0623\u0633\u0627\u0633\u064a \u0645\u0646 \u0627\u0644\u0646\u0638\u0627\u0645 \u0623\u0648 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 \u0628\u062f\u0648\u0646 \u062a\u0641\u0639\u064a\u0644 \u0645\u0650\u064a\u0632\u0627\u062a\u060c \u0623\u0648 \u0645\u0643\u0648\u0646\u0627\u062a\u060c \u0623\u0648 \u0648\u062b\u0627\u0626\u0642\u060c \u0623\u0648 \u0639\u064a\u0651\u0646\u0627\u062a \u063a\u064a\u0631 \u0636\u0631\u0648\u0631\u064a\u0629\u060c \u0645\u0639 \u062d\u0630\u0641 \u0648\u0625\u0628\u0637\u0627\u0644 \u0627\u0644\u0645\u064a\u0632\u0627\u062a \u0648\u0625\u0637\u0627\u0631 \u0627\u0644\u063a\u064a\u0631 \u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0623\u0648 \u0639\u062f\u0645 \u062a\u062b\u0628\u064a\u062a\u0647\u0627.</p> </li> <li> <p>\u0645\u0631\u0627\u062c\u0639\u0629 \u0648\u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0628\u0645\u0627 \u064a\u062a\u0646\u0627\u0633\u0628 \u0645\u0639 \u0643\u0627\u0641\u0629 \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0627\u0644\u0623\u0645\u0627\u0646 \u0648\u0627\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0648\u0627\u0644\u0625\u0635\u0644\u0627\u062d\u0627\u062a \u0643\u062c\u0632\u0621 \u0645\u0646 \u0639\u0645\u0644\u064a\u0629 \u0625\u062f\u0627\u0631\u0629 \u062d\u0650\u0632\u0645 \u0627\u0644\u0625\u0635\u0644\u0627\u062d\u0627\u062a \u0648\u0627\u0644\u062a\u0631\u0642\u064a\u0627\u062a. (\u0627\u0646\u0638\u0631 \u0625\u0644\u0649- A06:2021 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0648\u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u063a\u064a\u0631 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a). \u0628\u0627\u0644\u0625\u0636\u0627\u0641\u0629 \u0625\u0644\u0649 \u0645\u0631\u0627\u062c\u0639\u0629 \u0623\u0630\u0648\u0646\u0627\u062a \u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0633\u062d\u0627\u0628\u064a\u0651\u0629 \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644 (S3 Bucket Permissions).</p> </li> <li> <p>\u062a\u062a\u064a\u062d \u0628\u0646\u064a\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u0645\u0642\u0633\u0651\u0645\u0629 \u0641\u0635\u0644\u064b\u0627 \u0641\u0639\u0651\u0627\u0644\u064b\u0627 \u0648\u0622\u0645\u0646\u064b\u0627 \u0628\u064a\u0646 \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a\u060c \u0645\u0639 \u0627\u0644\u062a\u062c\u0632\u0626\u0629 \u0641\u064a \u0645\u062c\u0645\u0648\u0639\u0627\u062a \u0623\u0645\u0627\u0646 \u0627\u0644\u0633\u062d\u0627\u0628\u0629 (ACLs).</p> </li> <li> <p>\u0625\u0631\u0633\u0627\u0644 \u062a\u0648\u062c\u064a\u0647\u0627\u062a \u0627\u0644\u0623\u0645\u0627\u0646 \u0625\u0644\u0649 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644 Security Headers.</p> </li> <li> <p>\u0623\u062a\u0645\u062a\u0629 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0627\u0644\u0622\u0645\u0646\u0629 \u0644\u0644\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0641\u0639\u0627\u0644\u064a\u0651\u0629 \u0627\u0644\u062a\u0643\u0648\u064a\u0646\u0627\u062a \u0648\u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0641\u064a \u062c\u0645\u064a\u0639 \u0627\u0644\u0628\u064a\u0626\u0627\u062a.</p> </li> <li> <p>\u062a\u0634\u063a\u064a\u0644 \u0623\u062f\u0648\u0627\u062a \u0627\u0644\u0641\u062d\u0635 \u0644\u0644\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0641\u0639\u0627\u0644\u064a\u0651\u0629 \u0627\u0644\u062a\u0643\u0648\u064a\u0646\u0627\u062a \u0648\u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0641\u064a \u062c\u0645\u064a\u0639 \u0627\u0644\u0628\u064a\u0626\u0627\u062a \u0644\u0644\u0643\u0634\u0641 \u0639\u0646 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062e\u0627\u0637\u0626\u0629.</p> </li> </ul>"},{"location":"ar/A05_2021-Security_Misconfiguration/#_5","title":"\u0623\u0645\u062b\u0644\u0629 \u0639\u0644\u0649 \u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a \u0627\u0644\u0647\u062c\u0648\u0645","text":"<p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #1: \u0639\u0646\u062f\u0645\u0627 \u064a\u062d\u062a\u0648\u064a \u0627\u062d\u062f \u0627\u0644\u062e\u0648\u0627\u062f\u0645 \u0639\u0644\u0649 \u062a\u0637\u0628\u064a\u0642 \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u063a\u064a\u0631 \u0645\u062d\u062f\u062b \u0648\u0645\u0627 \u064a\u0632\u0627\u0644 \u064a\u064f\u0633\u062a\u062e\u062f\u0645    \u0641\u064a \u0628\u064a\u0626\u0629 \u0627\u0644\u0625\u0646\u062a\u0627\u062c \"Production Server\" \u0647\u0630\u0647 \u0627\u0644\u0639\u064a\u0651\u0646\u0627\u062a \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0642\u062f \u062a\u062d\u062a\u0648\u064a \u0639\u0644\u0649 \u062b\u063a\u0631\u0627\u062a \u0623\u0645\u0646\u064a\u0629 \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0641\u064a \u0627\u062e\u062a\u0631\u0627\u0642 \u0627\u0644\u062e\u0627\u062f\u0645 \u060c \u0648\u0628\u0627\u0641\u062a\u0631\u0627\u0636 \u0623\u0646 \u0623\u062d\u062f \u0647\u0630\u0647 \u0627\u0644\u0628\u0631\u0627\u0645\u062c \u0647\u064a \u0648\u062d\u062f\u0629 \u062a\u062d\u0643\u0651\u0645 \u0644\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u062e\u0627\u062f\u0645 \u0648\u062a\u062d\u062a\u0648\u064a \u0639\u0644\u0649 \u0627\u0644\u0627\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0648\u0627\u0644\u0631\u0642\u0645 \u0627\u0644\u0633\u0631\u064a \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u060c \u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u062d\u0627\u0644\u0629 \u0641\u0625\u0646 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0633\u0648\u0641 \u064a\u064f\u0633\u062c\u0651\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0631\u0642\u0645 \u0627\u0644\u0633\u0631\u064a \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a \u0648\u064a\u062a\u062d\u0643\u0651\u0645 \u0628\u0627\u0644\u062e\u0627\u062f\u0645.</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #2: \u0639\u0646\u062f\u0645\u0627 \u062a\u0643\u0648\u0646 \u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u062f\u0644\u064a\u0644 \"Directory Listing\" \u063a\u064a\u0631 \u0645\u0639\u0637\u0651\u0644\u0629 \u0641\u064a \u0627\u0644\u062e\u0627\u062f\u0645 \u0627\u0644\u062e\u0627\u0635 \u0628\u0643\u060c \u0642\u062f \u064a\u0643\u062a\u0634\u0641 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0623\u0646 \u0628\u0625\u0645\u0643\u0627\u0646\u0647 \u0633\u0631\u062f \u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0627\u0644\u0645\u062e\u0632\u0646\u0629 \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645 \u0648\u0628\u0639\u062f \u0630\u0644\u0643 \u0628\u0625\u0645\u0643\u0627\u0646\u0647 \u0627\u0644\u0639\u062b\u0648\u0631 \u0648\u062a\u062b\u0628\u064a\u062a \u062c\u0645\u064a\u0639 \u0641\u0626\u0627\u062a \u062c\u0627\u0641\u0627 (Compiled Java Classes) \u0648\u0645\u0646 \u062b\u0645 \u064a\u0642\u0648\u0645 \u0628\u0641\u0643\u0651\u0647\u0627 \u0648\u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u0647\u0646\u062f\u0633\u0629 \u0627\u0644\u0639\u0643\u0633\u064a\u0629 \u0644\u0639\u0631\u0636 \u0627\u0644\u0634\u0651\u0641\u0631\u0629 \u0627\u0644\u0645\u0635\u062f\u0631\u064a\u0629\u060c \u0633\u0648\u0641 \u064a\u062d\u0627\u0648\u0644 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0628\u0639\u062f \u0630\u0644\u0643 \u0625\u064a\u062c\u0627\u062f \u062e\u0637\u0623 \u0623\u0645\u0646\u064a \u0644\u0644\u062a\u062d\u0643\u0651\u0645 \u0641\u064a \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645.</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #3: \u0639\u0646\u062f\u0645\u0627 \u062a\u0642\u0648\u0645 \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u062e\u0627\u062f\u0645 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0628\u0625\u0631\u062c\u0627\u0639 \u0631\u0633\u0627\u0626\u0644 \u062e\u0627\u0637\u0626\u0629 \u062a\u0641\u0635\u064a\u0644\u064a\u0651\u0629\u060c \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644 Stack Traces \u0625\u0644\u0649 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u060c \u0648\u0645\u0646 \u0627\u0644\u0645\u064f\u062d\u062a\u0645\u0644 \u0623\u0646 \u064a\u0624\u062f\u064a \u0647\u0630\u0627 \u0625\u0644\u0649 \u0627\u0644\u0643\u0634\u0641 \u0639\u0646 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u062d\u0633\u0627\u0633\u0629 \u0623\u0648 \u062b\u063a\u0631\u0627\u062a \u0623\u0645\u0646\u064a\u0629 \u0623\u062e\u0631\u0649 \u0623\u0648 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0645\u062b\u0644 \u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u0645\u0639\u0631\u0648\u0641\u0629 \u0628\u0623\u0646\u0647\u0627 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644.  </p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #4: \u0623\u0646 \u064a\u0643\u0648\u0646 \u0645\u0642\u062f\u0651\u0645 \u0627\u0644\u062e\u062f\u0645\u0629 \u0627\u0644\u0633\u062d\u0627\u0628\u064a\u0651\u0629 \u0644\u062f\u064a\u0647 \u0623\u0630\u0648\u0646\u0627\u062a \u0645\u0634\u0627\u0631\u0643\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0645\u0641\u062a\u0648\u062d\u0629 \u0639\u0644\u0649 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a \u0645\u0646 \u0642\u0650\u0628\u0644 \u0645\u0633\u062a\u062e\u062f\u0645\u064a CSP \u0627\u0644\u0622\u062e\u0631\u064a\u0646\u060c \u064a\u0633\u0645\u062d \u0647\u0630\u0627 \u0628\u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0627\u0644\u0645\u062e\u0632\u0651\u0646\u0629 \u0641\u064a \u0633\u062d\u0627\u0628\u0629 \u0627\u0644\u062a\u062e\u0632\u064a\u0646.</p>"},{"location":"ar/A05_2021-Security_Misconfiguration/#_6","title":"\u0627\u0644\u0645\u0635\u0627\u062f\u0631","text":"<ul> <li> <p>OWASP Testing Guide: Configuration Management</p> </li> <li> <p>OWASP Testing Guide: Testing for Error Codes</p> </li> <li> <p>Application Security Verification Standard V19 Configuration</p> </li> <li> <p>NIST Guide to General Server Hardening</p> </li> <li> <p>CIS Security Configuration Guides/Benchmarks</p> </li> <li> <p>Amazon S3 Bucket Discovery and Enumeration</p> </li> </ul>"},{"location":"ar/A05_2021-Security_Misconfiguration/#cwes","title":"\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0631\u0628\u0637 \u0645\u0639 \u0625\u0637\u0627\u0631 CWEs","text":"<p>CWE-2 7PK - Environment</p> <p>CWE-11 ASP.NET Misconfiguration: Creating Debug Binary</p> <p>CWE-13 ASP.NET Misconfiguration: Password in Configuration File</p> <p>CWE-15 External Control of System or Configuration Setting</p> <p>CWE-16 Configuration</p> <p>CWE-260 Password in Configuration File</p> <p>CWE-315 Cleartext Storage of Sensitive Information in a Cookie</p> <p>CWE-520 .NET Misconfiguration: Use of Impersonation</p> <p>CWE-526 Exposure of Sensitive Information Through Environmental Variables</p> <p>CWE-537 Java Runtime Error Message Containing Sensitive Information</p> <p>CWE-541 Inclusion of Sensitive Information in an Include File</p> <p>CWE-547 Use of Hard-coded, Security-relevant Constants</p> <p>CWE-611 Improper Restriction of XML External Entity Reference</p> <p>CWE-614 Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</p> <p>CWE-756 Missing Custom Error Page</p> <p>CWE-776 Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')</p> <p>CWE-942 Permissive Cross-domain Policy with Untrusted Domains</p> <p>CWE-1004 Sensitive Cookie Without 'HttpOnly' Flag</p> <p>CWE-1032 OWASP Top Ten 2017 Category A6 - Security Misconfiguration</p> <p>CWE-1174 ASP.NET Misconfiguration: Improper Model Validation</p>"},{"location":"ar/A06_2021-Vulnerable_and_Outdated_Components/","title":"A06:2021 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0648 \u0627\u0644\u0627\u0646\u0638\u0645\u0629 \u0627\u0644\u063a\u064a\u0631 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a","text":""},{"location":"ar/A06_2021-Vulnerable_and_Outdated_Components/#_1","title":"\u0627\u0644\u0639\u0648\u0627\u0645\u0644","text":"\u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u062d\u062f\u0648\u062b \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0642\u0635\u0648\u0649 \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0645\u062a\u0648\u0633\u0637 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 CVEs 3 27.96% 8.77% 51.78% 22.47% 5.00 5.00 30,457 0"},{"location":"ar/A06_2021-Vulnerable_and_Outdated_Components/#_2","title":"\u0646\u0638\u0631\u0629 \u0639\u0627\u0645\u0629","text":"<p>\u0643\u0627\u0646\u062a \u062a\u062d\u062a\u0644 \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0627\u0644\u062b\u0627\u0646\u064a\u0629 \u0641\u064a \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0627\u0644\u062a\u064a \u062a\u0645 \u0625\u062c\u0631\u0627\u0624\u0647\u0627 \u0641\u064a \u0642\u0637\u0627\u0639 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u0644\u0643\u0646\u0647\u0627 \u0623\u064a\u0636\u064b\u0627 \u062a\u0645\u062a\u0644\u0643 \u0628\u064a\u0627\u0646\u0627\u062a \u0643\u0627\u0641\u064a\u0629 \u0644\u062a\u064f\u0635\u0628\u062d \u0645\u0646 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0645\u0646 \u062e\u0644\u0627\u0644 \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \u064a\u064f\u0639\u062a\u0628\u0631 \u062a\u0635\u0646\u064a\u0641 \" \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0648\u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0627\u0644\u063a\u064a\u0631 \u0645\u064f\u062d\u062f\u0651\u062b\u0629\" \u0645\u0646 \u0627\u0644\u0645\u0634\u0627\u0643\u0644 \u0627\u0644\u0645\u0639\u0631\u0648\u0641\u0629 \u0627\u0644\u062a\u064a \u062a\u0648\u0627\u062c\u0647 \u0635\u0639\u0648\u0628\u0627\u062a \u0645\u0646 \u0623\u062c\u0644 \u0627\u062e\u062a\u0628\u0627\u0631\u0647\u0627 \u0648\u062a\u0642\u064a\u064a\u0645 \u0645\u062e\u0627\u0637\u0631\u0647\u0627 \u0648\u064a\u064f\u0639\u062a\u0628\u0631 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0627\u0644\u0648\u062d\u064a\u062f \u0627\u0644\u0630\u064a \u0644\u0627 \u064a\u062a\u0636\u0645\u0651\u0646 CVEs \u0648\u0645\u0631\u062a\u0628\u0637 \u0628\u0640 CWEs. \u0644\u0630\u0644\u0643 \u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0639\u064a\u0627\u0631 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a \u0644\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0623\u0648 \u0627\u0644\u0623\u062b\u0631 \u0648\u0647\u0648 5.0\u060c \u0648\u0646\u062c\u062f \u0623\u0646 \u0647\u0646\u0627\u0643 \u0627\u0631\u062a\u0628\u0627\u0637 \u0648\u062d\u064a\u062f \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0648\u0647\u0648 CWE-1104.</p>"},{"location":"ar/A06_2021-Vulnerable_and_Outdated_Components/#_3","title":"\u0627\u0644\u0648\u0635\u0641","text":"<p>\u0645\u0646 \u0627\u0644\u0645\u062d\u062a\u0645\u0644 \u0627\u0646 \u062a\u0643\u0648\u0646 \u0639\u0631\u0636\u0629 \u0644\u0644\u0627\u062e\u062a\u0631\u0627\u0642: </p> <ul> <li> <p>\u0625\u0630\u0627 \u0643\u0646\u062a \u0644\u0627 \u062a\u0639\u0631\u0641 \u0625\u0635\u062f\u0627\u0631\u0627\u062a \u062c\u0645\u064a\u0639 \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0633\u062a\u062e\u062f\u0645\u0647\u0627 (\u0645\u0646 \u062c\u0627\u0646\u0628 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645    \u0623\u0648 \u0645\u0646 \u062c\u0627\u0646\u0628 \u0627\u0644\u062e\u0627\u062f\u0645). \u0648\u0647\u0630\u0627 \u064a\u062a\u0636\u0645\u0651\u0646 \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0628\u0634\u0643\u0644 \u0645\u064f\u0628\u0627\u0634\u0631 \u0628\u0627\u0644\u0625\u0636\u0627\u0641\u0629 \u0625\u0644\u0649 \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u063a\u064a\u0631 \u0645\u0628\u0627\u0634\u0631\u0629.</p> </li> <li> <p>\u0625\u0630\u0627 \u0643\u0627\u0646\u062a \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0648 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0645\u0639\u0631\u0636\u0647 \u0644\u0644\u0627\u062e\u062a\u0631\u0627\u0642 \u0628\u0633\u0628\u0628 \u0627\u0646\u0647\u0627 \u063a\u064a\u0631 \u0645\u062f\u0639\u0648\u0645\u0629 \u0623\u0648 \u0642\u062f\u064a\u0645\u0629. \u0648\u064a\u062a\u0636\u0645\u0646 \u0630\u0644\u0643 \u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0648\u062e\u0627\u062f\u0645 \u0627\u0644\u0648\u064a\u0628 \u0623\u0648 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u0646\u0638\u0627\u0645 \u0625\u062f\u0627\u0631\u0629 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (DBMS) \u0648\u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u0648\u0627\u062c\u0647\u0627\u062a \u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062aAPI \u0648\u062c\u0645\u064a\u0639 \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0648\u0628\u064a\u0626\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0639\u0645\u0644 \u0645\u0639 \u0628\u062f\u0621 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 .(runtime)</p> </li> <li> <p>\u0625\u0630\u0627 \u0644\u0645 \u062a\u0642\u0645 \u0628\u0627\u0644\u0645\u0633\u062d \u0627\u0644\u0623\u0645\u0646\u064a \u0628\u062d\u062b\u0627\u064b \u0639\u0646 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0628\u0627\u0646\u062a\u0638\u0627\u0645\u060c \u0648\u0627\u0644\u0627\u0634\u062a\u0631\u0627\u0643 \u0641\u064a \u0646\u0634\u0631\u0627\u062a \u0627\u0644\u0623\u0645\u0646 \u0627\u0644\u0645\u062a\u0639\u0644\u0642\u0629 \u0628\u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0633\u062a\u062e\u062f\u0645\u0647\u0627.</p> </li> <li> <p>\u0625\u0630\u0627 \u0644\u0645 \u062a\u0642\u0645 \u0628\u0625\u0635\u0644\u0627\u062d \u0623\u0648 \u062a\u0631\u0642\u064a\u0629 \u0627\u0644\u0646\u0638\u0627\u0645 \u0627\u0644\u0623\u0633\u0627\u0633\u064a \u0648\u0627\u0644\u0625\u0637\u0627\u0631 \u0648\u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0651\u0629 \u0628\u0637\u0631\u064a\u0642\u0629 \u0645\u0628\u0646\u064a\u0651\u0629 \u0639\u0644\u0649 \u062a\u0642\u064a\u064a\u0645 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0648\u0641\u064a \u0627\u0644\u0648\u0642\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628. \u064a\u062d\u062f\u062b \u0647\u0630\u0627 \u0639\u0627\u062f\u0629\u064b \u0641\u064a \u0627\u0644\u0628\u064a\u0626\u0627\u062a \u0627\u0644\u062a\u064a \u064a\u0643\u0648\u0646 \u0641\u064a\u0647\u0627 \u0625\u063a\u0644\u0627\u0642 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0648\u062a\u0646\u0635\u064a\u0628 \u0627\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0645\u064e\u0647\u0645\u0629 \u0634\u0647\u0631\u064a\u0629 \u0623\u0648 \u0631\u0628\u0639 \u0633\u0646\u0648\u064a\u0629 \u062a\u062d\u062a \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u062a\u063a\u064a\u064a\u0631\u0627\u062a\u060c \u0645\u0645\u0627 \u064a\u062a\u0631\u0643 \u0627\u0644\u0645\u0624\u0633\u0633\u0627\u062a \u0639\u064f\u0631\u0636\u0629 \u0644\u0645\u062f\u0629 \u0623\u064a\u0627\u0645 \u0623\u0648 \u0634\u0647\u0648\u0631 \u0645\u0646 \u0639\u062f\u0645 \u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u062a\u062d\u062f\u064a\u062b \u0644\u0644\u062b\u063a\u0631\u0627\u062a \u0627\u0644\u0636\u0631\u0648\u0631\u064a\u0629.</p> </li> <li> <p>\u0625\u0630\u0627 \u0644\u0645 \u064a\u0642\u0645 \u0645\u0637\u0648\u0631\u0648 \u0627\u0644\u0628\u0631\u0627\u0645\u062c \u0628\u0627\u062e\u062a\u0628\u0627\u0631 \u062a\u0648\u0627\u0641\u0642 \u0627\u0644\u0645\u0643\u062a\u0628\u0627\u062a \u0627\u0644\u0645\u062d\u062f\u062b\u0629 \u0623\u0648 \u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u062c\u0631\u0627\u0621 \u0625\u0635\u0644\u0627\u062d\u0627\u062a \u0639\u0644\u064a\u0647\u0627.</p> </li> <li> <p>\u0625\u0630\u0627 \u0644\u0645 \u062a\u0642\u0645 \u0628\u062a\u0623\u0645\u064a\u0646 \u0627\u0644\u0627\u0639\u062f\u0627\u062f\u0627\u062a \u0628\u0627\u0644\u0634\u0643\u0644 \u0627\u0644\u0635\u062d\u064a\u062d. (\u0627\u0646\u0638\u0631 A05: 2021 \u2013 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0627\u0644\u062e\u0627\u0637\u0626\u0629 ).</p> </li> </ul>"},{"location":"ar/A06_2021-Vulnerable_and_Outdated_Components/#_4","title":"\u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646\u0647\u0627","text":"<p>\u064a\u062c\u0628 \u0623\u0646 \u062a\u0643\u0648\u0646 \u0647\u0646\u0627\u0643 \u0622\u0644\u064a\u0629 \u0644\u0625\u062f\u0627\u0631\u0629 \u0627\u063a\u0644\u0627\u0642 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0648\u0630\u0644\u0643 \u0644\u062a\u0644\u0628\u064a\u0629 \u0645\u0627 \u064a\u0644\u064a:</p> <ul> <li> <p>\u0625\u0632\u0627\u0644\u0629 \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u063a\u064a\u0631 \u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0648\u0627\u0644\u0645\u0645\u064a\u0632\u0627\u062a \u0648\u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0648\u0627\u0644\u0648\u062b\u0627\u0626\u0642 \u0627\u0644\u063a\u064a\u0631 \u0636\u0631\u0648\u0631\u064a\u0629.</p> </li> <li> <p>\u0639\u0645\u0644 \u062c\u0631\u062f \u0628\u0634\u0643\u0644 \u062f\u0648\u0631\u064a \u0644\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0645\u0646 \u062c\u0627\u0646\u0628 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0648\u0645\u0646 \u062c\u0627\u0646\u0628 \u0627\u0644\u062e\u0627\u062f\u0645 (\u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644\u060c \u0625\u0637\u0627\u0631 \u0627\u0644\u0639\u0645\u0644 \u0648\u0627\u0644\u0645\u0643\u062a\u0628\u0627\u062a) \u0648\u0645\u0643\u0648\u0646\u0627\u062a\u0647\u0627 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u062f\u0648\u0627\u062a \u0645\u062b\u0644 Versions, OWASP Dependency Check, Retire.JS \u0648\u0645\u0627 \u0625\u0644\u0649 \u0630\u0644\u0643\u060c \u0645\u0631\u0627\u0642\u0628\u0629 \u0627\u0644\u0645\u0635\u0627\u062f\u0631 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0628\u0627\u0633\u062a\u0645\u0631\u0627\u0631 \u0645\u062b\u0644 CVE \u0648 NVD \u0628\u062d\u062b\u064b\u0627 \u0639\u0646 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0627\u0644\u062a\u064a \u0641\u064a \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a. \u0648\u0642\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0648\u0630\u0644\u0643 \u0645\u0646 \u0623\u062c\u0644 \u0623\u062a\u0645\u062a\u0629 \u0627\u0644\u0639\u0645\u0644\u064a\u0629. \u0648\u0623\u062e\u064a\u0631\u064b\u0627\u060c \u0642\u0645  \u0628\u0627\u0644\u0627\u0634\u062a\u0631\u0627\u0643 \u0641\u064a \u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0627\u0644\u0628\u0631\u064a\u062f \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0627\u0644\u0645\u062a\u0639\u0644\u0642\u0629 \u0628\u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0633\u062a\u062e\u062f\u0645\u0647\u0627.</p> </li> <li> <p>\u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0645\u0646 \u0627\u0644\u0645\u0635\u0627\u062f\u0631 \u0627\u0644\u0631\u0633\u0645\u064a\u0629 \u0641\u0642\u0637 \u0639\u0628\u0631 \u0627\u0644\u0631\u0648\u0627\u0628\u0637 \u0627\u0644\u0622\u0645\u0646\u0629. \u064a\u0641\u0636\u0644 \u0627\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0646 \u0627\u0644\u062d\u0632\u0645 \u0645\u0648\u0642\u0639\u0647 \u0631\u0642\u0645\u064a\u0627\u064b \u0644\u062a\u0642\u0644\u064a\u0644 \u0641\u0631\u0635\u0629 \u062a\u062b\u0628\u064a\u062a \u0645\u0643\u0648\u0646\u0627\u062a \u0645\u0639\u062f\u0644\u0629 \u0648\u0636\u0627\u0631\u0629 (\u0627\u0646\u0638\u0631 A08: 2021- \u0641\u0634\u0644 \u0633\u0644\u0627\u0645\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a).</p> </li> <li> <p>\u0645\u0631\u0627\u0642\u0628\u0629 \u0627\u0644\u0645\u0643\u062a\u0628\u0627\u062a \u0648\u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u062a\u064a \u0644\u0627 \u064a\u062a\u0645 \u0635\u064a\u0627\u0646\u062a\u0647\u0627 \u0623\u0648 \u0627\u0644\u062a\u064a \u0644\u0627 \u062a\u0642\u0648\u0645 \u0628\u0639\u0645\u0644 \u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0627\u0644\u0623\u0645\u0627\u0646 \u0644\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0627\u0644\u0642\u062f\u064a\u0645\u0629. \u0625\u0630\u0627 \u0644\u0645 \u062a\u0643\u0646 \u0639\u0645\u0644\u064a\u0629 \u0633\u062f\u0651 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u064f\u0645\u0643\u0646\u0629\u060c \u0641\u0643\u0651\u0631 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0622\u0644\u064a\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u062a\u0644\u0643 \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0648\u0631\u0635\u062f \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0627\u062a \u0627\u0644\u0636\u0651\u064e\u0627\u0631\u0629 \u0648\u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646\u0647\u0627</p> </li> </ul> <p>\u064a\u062c\u0628 \u0623\u0646 \u062a\u0636\u0645\u0646 \u0643\u0644 \u0645\u0624\u0633\u0633\u0629 \u062e\u0637\u0629 \u0645\u0633\u062a\u0645\u0631\u0629 \u0644\u0644\u0645\u0631\u0627\u0642\u0628\u0629\u060c \u0648\u062a\u0635\u0646\u064a\u0641\u060c \u0648\u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0623\u0648 \u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0627\u0639\u062f\u0627\u062f\u0627\u062a \u0637\u0648\u0627\u0644 \u0627\u0644\u062d\u064a\u0627\u0629 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a.</p>"},{"location":"ar/A06_2021-Vulnerable_and_Outdated_Components/#_5","title":"\u0623\u0645\u062b\u0644\u0629 \u0639\u0644\u0649 \u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a \u0627\u0644\u0647\u062c\u0648\u0645","text":"<p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #1:  \u062a\u0639\u0645\u0644 \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0639\u0627\u062f\u0629\u064b \u0628\u0646\u0641\u0633 \u0627\u0644\u0627\u0645\u062a\u064a\u0627\u0632\u0627\u062a \u0627\u0644\u062a\u064a \u064a\u062a\u0645\u062a\u0651\u0639 \u0628\u0647\u0627 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0646\u0641\u0633\u0647\u060c \u0644\u0630\u0627 \u0641\u0625\u0646 \u0627\u0644\u0639\u064a\u0648\u0628 \u0641\u064a \u0623\u064a \u0645\u0643\u0648\u0651\u0646 \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0624\u062f\u064a \u0625\u0644\u0649 \u062a\u0623\u062b\u064a\u0631 \u062e\u0637\u064a\u0631. \u064a\u0645\u0643\u0646 \u0623\u0646 \u062a\u0643\u0648\u0646 \u0647\u0630\u0647 \u0627\u0644\u0639\u064a\u0648\u0628 \u0639\u0631\u0636\u064a\u0629 (\u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644\u060c \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0629) \u0623\u0648 \u0639\u064a\u0648\u0628 \u0645\u0642\u0635\u0648\u062f\u0629 (\u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644\u060c \u0628\u0627\u0628 \u062e\u0644\u0641\u064a \u0641\u064a \u0623\u062d\u062f \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a). \u0628\u0639\u0636 \u0627\u0644\u0623\u0645\u062b\u0644\u0629 \u0639\u0644\u0649 \u062b\u063a\u0631\u0627\u062a \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u0643\u062a\u0634\u0627\u0641\u0647\u0627 \u0647\u064a:</p> <ul> <li> <p>\u0646\u0638\u0631\u0629 \u0639\u0644\u0649 \u062b\u063a\u0631\u0629 CVE-2017-5638\u060c \u0648\u0647\u064a \u062b\u063a\u0631\u0629 \u0623\u0645\u0646\u064a\u0629 \u062a\u0642\u0648\u0645 \u0628\u062a\u0646\u0641\u064a\u0630 \u062a\u0639\u0644\u064a\u0645\u0627\u062a \u0628\u0631\u0645\u062c\u064a\u0629 \u0639\u0646 \u0628\u064f\u0639\u062f \u0644\u0640 Struts 2 \u0648\u0627\u0644\u062a\u064a \u062a\u064f\u062a\u064a\u062d \u062a\u0646\u0641\u064a\u0630 \u062a\u0639\u0644\u064a\u0645\u0627\u062a \u0628\u0631\u0645\u062c\u064a\u0629 \u0639\u0634\u0648\u0627\u0626\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645\u060c \u0648\u0627\u0644\u062a\u064a \u062a\u064f\u0633\u0628\u0651\u0628 \u0627\u062e\u062a\u0631\u0627\u0642\u0627\u062a \u062e\u0637\u064a\u0631\u0629.</p> </li> <li> <p>\u0639\u0644\u0649 \u0627\u0644\u0631\u063a\u0645 \u0645\u0646 \u0635\u0639\u0648\u0628\u0629 \u0623\u0648 \u0627\u0633\u062a\u062d\u0627\u0644\u0629 \u062a\u062d\u062f\u064a\u062b \u0625\u0646\u062a\u0631\u0646\u062a \u0627\u0644\u0623\u0634\u064a\u0627\u0621 \u0641\u064a \u0628\u0639\u0636 \u0645\u0646\u062a\u062c\u0627\u062a (IoT)\u060c \u0625\u0644\u0627 \u0623\u0646 \u0623\u0647\u0645\u064a\u0629 \u062a\u062d\u062f\u064a\u062b\u0647\u0627 \u064a\u0645\u0643\u0646 \u0627\u0646 \u064a\u0643\u0648\u0646 \u0644\u0647 \u0623\u0647\u0645\u064a\u0629 \u0643\u0628\u064a\u0631\u0629 (\u0645\u062b\u0644 \u0627\u0644\u0623\u062c\u0647\u0632\u0629 \u0627\u0644\u0637\u0628\u064a\u0629).</p> </li> </ul> <p>\u0647\u0646\u0627\u0643 \u0623\u062f\u0648\u0627\u062a \u0622\u0644\u064a\u0629 \u0644\u0645\u0633\u0627\u0639\u062f\u0629 \u0627\u0644\u0645\u0647\u0627\u062c\u0645\u064a\u0646 \u0641\u064a \u0627\u0644\u0639\u062b\u0648\u0631 \u0639\u0644\u0649 \u0623\u0646\u0638\u0645\u0629 \u063a\u064a\u0631 \u0645\u062d\u062f\u062b\u0629 \u0623\u0648 \u0645\u0639\u062f\u0629 \u0628\u0634\u0643\u0644 \u062e\u0627\u0637\u0626.  \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644\u060c \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0633\u0627\u0639\u062f\u0643 \u0645\u062d\u0631\u0643 \u0628\u062d\u062b Shodan IoT \u0641\u064a \u0627\u0644\u0639\u062b\u0648\u0631 \u0639\u0644\u0649 \u0627\u0644\u0623\u062c\u0647\u0632\u0629 \u0627\u0644\u062a\u064a \u0644\u0627 \u062a\u0632\u0627\u0644 \u062a\u0639\u0627\u0646\u064a \u0645\u0646 \u0627\u0644\u062b\u063a\u0631\u0629 \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0645\u062b\u0644 \u062b\u063a\u0631\u0629 Heartbleed \u0648\u0627\u0644\u062a\u064a \u062a\u0645 \u0625\u0635\u0644\u0627\u062d\u0647\u0627 \u0648\u062a\u062d\u062f\u064a\u062b\u0647\u0627 \u0641\u064a \u0623\u0628\u0631\u064a\u0644 \u0645\u0646 \u0639\u0627\u0645 2014.</p>"},{"location":"ar/A06_2021-Vulnerable_and_Outdated_Components/#_6","title":"\u0627\u0644\u0645\u0635\u0627\u062f\u0631","text":"<ul> <li> <p>OWASP Application Security Verification Standard: V1 Architecture,     design and threat modelling</p> </li> <li> <p>OWASP Dependency Check (for Java and .NET libraries)</p> </li> <li> <p>OWASP Testing Guide - Map Application Architecture (OTG-INFO-010)</p> </li> <li> <p>OWASP Virtual Patching Best Practices</p> </li> <li> <p>The Unfortunate Reality of Insecure Libraries</p> </li> <li> <p>MITRE Common Vulnerabilities and Exposures (CVE) search</p> </li> <li> <p>National Vulnerability Database (NVD)</p> </li> <li> <p>Retire.js for detecting known vulnerable JavaScript libraries</p> </li> <li> <p>Node Libraries Security Advisories</p> </li> <li> <p>Ruby Libraries Security Advisory Database and Tools</p> </li> <li> <p>https://safecode.org/publication/SAFECode_Software_Integrity_Controls0610.pdf</p> </li> </ul>"},{"location":"ar/A06_2021-Vulnerable_and_Outdated_Components/#cwes","title":"\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0631\u0628\u0637 \u0645\u0639 \u0625\u0637\u0627\u0631 CWEs","text":"<p>CWE-937 OWASP Top 10 2013: Using Components with Known Vulnerabilities</p> <p>CWE-1035 2017 Top 10 A9: Using Components with Known Vulnerabilities</p> <p>CWE-1104 Use of Unmaintained Third Party Components</p>"},{"location":"ar/A07_2021-Identification_and_Authentication_Failures/","title":"A07:2021 \u2013  \u0627\u0644\u0647\u0648\u064a\u0629 \u0648 \u0641\u0634\u0644 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u062d\u0642\u0642","text":""},{"location":"ar/A07_2021-Identification_and_Authentication_Failures/#_1","title":"\u0627\u0644\u0639\u0648\u0627\u0645\u0644","text":"\u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u062d\u062f\u0648\u062b \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0642\u0635\u0648\u0649 \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0645\u062a\u0648\u0633\u0637 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 CVEs 22 14.84% 2.55% 79.51% 45.72% 7.40 6.50 132,195 3,897"},{"location":"ar/A07_2021-Identification_and_Authentication_Failures/#_2","title":"\u0646\u0638\u0631\u0629 \u0639\u0627\u0645\u0629","text":"<p>\u0647\u0630 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u064a\u064f\u0639\u0631\u0641 \u0633\u0627\u0628\u0642\u064b\u0627 \u0628\u0627\u0633\u0645 \u0636\u0639\u0641 \u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0627\u0644\u0647\u0648\u064a\u0629 (Broken Authentication) \u0648\u0643\u0627\u0646\u062a \u0647\u064a \u0627\u0644\u062e\u0637\u0631 \u0631\u0642\u0645 #2 \u0641\u064a \u0627\u0644\u0625\u0635\u062f\u0627\u0631 \u0627\u0644\u0633\u0627\u0628\u0642. \u0648\u062d\u0627\u0644\u064a\u064b\u0627 \u062a\u0634\u0645\u0644 \u0639\u0644\u0649 \u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 CWEs \u0627\u0644\u0645\u062a\u0639\u0644\u0642\u0629 \u0628\u0641\u0634\u0644 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u062d\u0642\u0651\u0642. \u064a\u062a\u0636\u0645\u0651\u0646 \u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0643\u0644 \u0645\u0646 (CWE-384,CWE-297,CWE-287).</p>"},{"location":"ar/A07_2021-Identification_and_Authentication_Failures/#_3","title":"\u0627\u0644\u0648\u0635\u0641","text":"<p>\u064a\u064f\u0639\u062f \u062a\u0623\u0643\u064a\u062f \u0647\u0648\u064a\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0648\u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629 \u0648\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u062c\u0644\u0633\u0629 \u0623\u0645\u0631\u064b\u0627 \u0628\u0627\u0644\u063a \u0627\u0644\u0623\u0647\u0645\u064a\u0629 \u0648\u0630\u0644\u0643 \u0644\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646 \u0627\u0644\u0647\u062c\u0645\u0627\u062a \u0627\u0644\u0645\u062a\u0639\u0644\u0642\u0629 \u0628\u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629. \u0642\u062f \u064a\u0643\u0648\u0646 \u0647\u0646\u0627\u0643 \u0636\u0639\u0641 \u0641\u064a \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629 \u0625\u0630\u0627 \u0643\u0627\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642:</p> <ul> <li> <p>\u064a\u0633\u0645\u062d \u0628\u0627\u0644\u0647\u062c\u0645\u0627\u062a \u0627\u0644\u0622\u0644\u064a\u0629 \u0645\u062b\u0644 \u0647\u062c\u0645\u0627\u062a \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f (Credential Stuffing)\u060c \u062d\u064a\u062b \u064a\u0643\u0648\u0646 \u0644\u062f\u0649 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0642\u0627\u0626\u0645\u0629 \u0628\u0623\u0633\u0645\u0627\u0621 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0648\u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631.</p> </li> <li> <p>\u064a\u0633\u0645\u062d \u0628\u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0647\u062c\u0648\u0645 \u0643\u0633\u0631 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 (Brute Force) \u0623\u0648 \u0627\u0644\u0647\u062c\u0645\u0627\u062a \u0627\u0644\u0622\u0644\u064a\u0629 \u0627\u0644\u0623\u062e\u0631\u0649.  </p> </li> <li> <p>\u064a\u0633\u0645\u062d \u0628\u0647\u062c\u0645\u0627\u062a \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0623\u0648 \u0627\u0644\u0636\u0639\u064a\u0641\u0629 \u0623\u0648 \u0627\u0644\u0645\u0639\u0631\u0648\u0641\u0629 \u060c \u0645\u062b\u0644 \"Password1\" \u0623\u0648 \" Admin / Admin\".</p> </li> <li> <p>\u064a\u0633\u062a\u062e\u062f\u0645 \u0639\u0648\u0627\u0645\u0644 \u0636\u0639\u064a\u0641\u0629 \u0648\u063a\u064a\u0631 \u0641\u0639\u0651\u0627\u0644\u0629 \u0644\u0627\u0633\u062a\u0639\u0627\u062f\u0629 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0648\u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0648\u0627\u0644\u062a\u064a \u064a\u062c\u0639\u0644\u0647\u0627 \u0622\u0645\u0646\u0629\u060c \u0645\u062b\u0644 \"\u0627\u0644\u0623\u062c\u0648\u0628\u0629 \u0627\u0644\u0645\u0633\u062a\u0646\u062f\u0650\u0629 \u0639\u0644\u0649 \u0627\u0644\u0645\u0639\u0631\u0641\u0629\".</p> </li> <li> <p>\u064a\u0633\u062a\u062e\u062f\u0645 \u0643\u0644\u0645\u0627\u062a \u0645\u0631\u0648\u0631 \u063a\u064a\u0631 \u0645\u0634\u0641\u0651\u0631\u0629\u060c \u0623\u0648 \u0645\u0634\u0641\u0651\u0631\u0629 \u0628\u0634\u0643\u0644 \u0645\u064f\u062c\u0632\u0651\u0623 \u0623\u0648 \u0628\u0634\u0643\u0644 \u0636\u0639\u064a\u0641 (\u0631\u0627\u062c\u0639 A3:2017- \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0627\u0644\u063a\u064a\u0631 \u0645\u062d\u0645\u064a\u0651\u0629 \u0623\u0648 \u0627\u0644\u0645\u0643\u0634\u0648\u0641\u0629).</p> </li> <li> <p>\u0639\u062f\u0645 \u062a\u0641\u0639\u064a\u0644 \u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0627\u0644\u062b\u0646\u0627\u0626\u064a \u0623\u0648 \u062a\u0643\u0648\u0646 \u063a\u064a\u0631 \u0641\u0639\u0651\u0627\u0644\u0629.</p> </li> <li> <p>\u064a\u0639\u0631\u0636 \u0645\u0639\u0631\u0651\u0641\u0627\u062a \u0627\u0644\u062c\u0644\u0633\u0629 (Session IDs) \u0641\u064a \u0639\u0646\u0648\u0627\u0646 URL</p> </li> <li> <p>\u0644\u0627 \u064a\u0642\u0648\u0645 \u0628\u0625\u0639\u0627\u062f\u0629 \u0625\u0646\u0634\u0627\u0621 \u0645\u0639\u0631\u0651\u0641\u0627\u062a \u0627\u0644\u062c\u0644\u0633\u0629 \u0628\u0639\u062f \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 \u0628\u0646\u062c\u0627\u062d.</p> </li> <li> <p>\u0644\u0627 \u064a\u0646\u0647\u064a \u0645\u0639\u0631\u0651\u0641\u0627\u062a \u0627\u0644\u062c\u0644\u0633\u0629 \u0628\u0634\u0643\u0644 \u0635\u062d\u064a\u062d. \u0644\u0627 \u064a\u062a\u0645 \u0625\u0646\u0647\u0627\u0621 \u062c\u0644\u0633\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0623\u0648 \u0631\u0645\u0648\u0632 \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629 (Authentication Tokens) \u0648\u062e\u0627\u0635\u0629 \u0631\u0645\u0648\u0632 \u0627\u0644\u062f\u062e\u0648\u0644 \u0627\u0644\u0645\u0648\u062d\u0651\u062f (SSO) \u0628\u0634\u0643\u0644 \u0635\u062d\u064a\u062d \u062e\u0644\u0627\u0644 \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062e\u0631\u0648\u062c \u0623\u0648 \u0641\u064a \u0641\u062a\u0631\u0629 \u0627\u0644\u062e\u0645\u0648\u0644.</p> </li> </ul>"},{"location":"ar/A07_2021-Identification_and_Authentication_Failures/#_4","title":"\u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646\u0647\u0627","text":"<ul> <li> <p>\u062d\u064a\u062b\u0645\u0627 \u0623\u0645\u0643\u0646 \u0630\u0644\u0643\u060c \u0642\u0645 \u0628\u062a\u0641\u0639\u064a\u0644 \u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0627\u0644\u062b\u0646\u0627\u0626\u064a \u0644\u0645\u0646\u0639 \u0627\u0644\u0647\u062c\u0645\u0627\u062a \u0627\u0644\u0622\u0644\u064a\u0629 \u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f(Credential Stuffing)\u060c \u0648\u0647\u062c\u0648\u0645 \u0643\u0633\u0631 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 (Brute Force) \u0648\u0647\u062c\u0645\u0627\u062a \u0625\u0639\u0627\u062f\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0627\u0644\u0645\u0633\u0631\u0648\u0642\u0629.</p> </li> <li> <p>\u0644\u0627 \u062a\u0631\u0633\u0644 \u0623\u0648 \u062a\u0636\u0639 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0639\u062a\u0645\u0627\u062f \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629\u060c \u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0646\u0633\u0628\u0629 \u0644\u0645\u062f\u0631\u0627\u0621 \u0627\u0644\u0646\u0638\u0627\u0645 (\u0627\u0644\u0645\u0633\u0624\u0648\u0644\u064a\u0646)</p> </li> <li> <p>\u0646\u0641\u0650\u0651\u0630 \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u0636\u0639\u064a\u0641\u0629\u060c \u0645\u062b\u0644 \u0627\u062e\u062a\u0628\u0627\u0631 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u062c\u062f\u064a\u062f\u0629 \u0623\u0648 \u0627\u0644\u062a\u064a \u062a\u0645 \u062a\u063a\u064a\u064a\u0631\u0647\u0627 \u0648\u0645\u0642\u0627\u0631\u0646\u062a\u0647\u0627 \u0628\u0642\u0627\u0626\u0645\u0629 \u0623\u0633\u0648\u0623 10,000 \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631.</p> </li> <li> <p>\u0627\u0636\u0628\u0637 \u0637\u0648\u0644 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0648\u0635\u0639\u0648\u0628\u062a\u0647\u0627 \u0648\u0642\u0645 \u0628\u0627\u062a\u0628\u0627\u0639 \u0627\u0644\u0633\u064a\u0627\u0633\u0627\u062a \u0648\u0627\u0644\u0625\u0631\u0634\u0627\u062f\u0627\u062a \u0627\u0644\u0648\u0627\u0631\u062f\u0629 \u0641\u064a NIST 800-63b \u0641\u064a \u0627\u0644\u0642\u0633\u0645 5.1.1 \"\u062a\u0630\u0643\u0651\u0631 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0633\u0631 \u0627\u0644\u0645\u062d\u0641\u0648\u0638\u0629 \u0623\u0648 \u0633\u064a\u0627\u0633\u0627\u062a \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631\".</p> </li> <li> <p>\u062a\u0623\u0643\u062f \u0645\u0646 \u0623\u0646 \u0645\u0633\u0627\u0631\u0627\u062a \u0643\u064f\u0644\u064b\u0627 \u0645\u0646 \u0627\u0644\u062a\u0633\u062c\u064a\u0644 \u0648\u0627\u0633\u062a\u0639\u0627\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0648\u0648\u0627\u062c\u0647\u0629 \u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a (API) \u0645\u062d\u0645\u064a\u0651\u0629 \u0636\u062f \u0647\u062c\u0645\u0627\u062a \u0641\u062d\u0635 \u0627\u0644\u062d\u0633\u0627\u0628\u0627\u062a (Account Enumeration) \u060c \u0642\u0645 \u0628\u0625\u0638\u0647\u0627\u0631 \u0646\u0641\u0633 \u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u062e\u0637\u0623 \u0644\u062c\u0645\u064a\u0639 \u0639\u0645\u0644\u064a\u0627\u062a \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062f\u062e\u0648\u0644.</p> </li> <li> <p>\u0627\u0644\u062d\u062f \u0645\u0646 \u0645\u062d\u0627\u0648\u0644\u0627\u062a \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 \u0627\u0644\u0641\u0627\u0634\u0644\u0629. \u0648\u0642\u0645 \u0628\u062a\u0633\u062c\u064a\u0644 \u062c\u0645\u064a\u0639 \u062d\u0627\u0644\u0627\u062a \u0641\u0634\u0644 \u0639\u0645\u0644\u064a\u0629 \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 \u0648\u0642\u0645 \u0628\u062a\u0646\u0628\u064a\u0647 \u0627\u0644\u0645\u0633\u0624\u0648\u0644\u064a\u0646 \u0639\u0646\u062f \u0627\u0643\u062a\u0634\u0627\u0641 \u0645\u062d\u0627\u0648\u0644\u0629 \u0647\u062c\u0645\u0627\u062a \u0643\u0633\u0631 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f (Credential Stuffing) \u0623\u0648 \u0647\u062c\u0648\u0645 \u0643\u0633\u0631 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 (Brute Force) \u0623\u0648 \u0623\u064a \u0647\u062c\u0645\u0627\u062a \u0623\u062e\u0631\u0649.</p> </li> <li> <p>\u0627\u0633\u062a\u062e\u062f\u0645 \u0645\u062f\u064a\u0631 \u062c\u0644\u0633\u0629 \u0645\u064f\u062f\u0645\u062c \u0648\u0622\u0645\u0646 \u0645\u0646 \u062c\u0627\u0646\u0628 \u0627\u0644\u062e\u0627\u062f\u0645\u060c \u064a\u0642\u0648\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0645\u0639\u0631\u0651\u0641 \u062c\u0644\u0633\u0629 \u0639\u0634\u0648\u0627\u0626\u064a\u0629 \u062c\u062f\u064a\u062f\u0629 \u0645\u0639 (Entropy) \u0639\u0627\u0644\u064a\u0629 \u0628\u0639\u062f \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062f\u062e\u0648\u0644\u060c \u0645\u0639\u0631\u0651\u0641\u0627\u062a \u0627\u0644\u062c\u0644\u0633\u0627\u062a \u064a\u062c\u0628 \u0623\u0644\u0627 \u062a\u0643\u0648\u0646 \u0645\u0648\u062c\u0648\u062f\u0629 \u0641\u064a \u0639\u0646\u0648\u0627\u0646 URL\u060c \u0648\u064a\u062c\u0628 \u062a\u062e\u0632\u064a\u0646\u0647\u0627 \u0628\u0634\u0643\u0644 \u0622\u0645\u0646 \u0648 \u0625\u0646\u0647\u0627\u0621 \u0635\u0644\u0627\u062d\u064a\u062a\u0647\u0627 \u0628\u0639\u062f \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062e\u0631\u0648\u062c\u060c \u0623\u0648 \u0627\u0644\u062e\u0645\u0648\u0644\u060c \u0648\u0627\u0644\u0627\u0646\u062a\u0647\u0627\u0621 \u0627\u0644\u0645\u064f\u0637\u0644\u0642 (\u0627\u0646\u062a\u0647\u0627\u0621 \u0623\u0648 \u0646\u0641\u0627\u0630 \u0627\u0644\u0648\u0642\u062a).</p> </li> </ul>"},{"location":"ar/A07_2021-Identification_and_Authentication_Failures/#_5","title":"\u0623\u0645\u062b\u0644\u0629 \u0639\u0644\u0649 \u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a \u0627\u0644\u0647\u062c\u0648\u0645","text":"<p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #1: \u0647\u062c\u0645\u0627\u062a \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0648\u0647\u064a \u0639\u0628\u0627\u0631\u0629 \u0639\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0642\u0648\u0627\u0626\u0645 \u0645\u0639\u0631\u0648\u0641\u0629 \u0633\u0627\u0628\u0642\u064b\u0627 \u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u0645\u0646 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0648\u062a\u064f\u0639\u062a\u0628\u0631 \u0645\u0646 \u0623\u0643\u062b\u0631 \u0627\u0644\u0647\u062c\u0645\u0627\u062a \u0634\u064a\u0648\u0639\u064b\u0627\u060c \u0648 \u0644\u0646\u0641\u0631\u0636 \u0623\u0646 \u0623\u062d\u062f \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0644\u0645 \u064a\u064f\u0637\u0628\u0651\u0642 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0627\u0644\u062a\u0644\u0642\u0627\u0626\u064a\u0629 \u0648\u0627\u0644\u0643\u0627\u0641\u064a\u0629 \u0644\u0644\u062d\u062f \u0645\u0646 \u0627\u0644\u062a\u0647\u062f\u064a\u062f\u0627\u062a \u0623\u0648 \u0647\u062c\u0645\u0627\u062a \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f\u060c  \u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u062d\u0627\u0644\u0629\u060c \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u062e\u0637\u0623 \u0627\u0644\u0635\u0627\u062f\u0631\u0629 \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0643\u0645\u0639\u064a\u0627\u0631 \u0644\u062a\u062d\u062f\u064a\u062f \u0645\u0627 \u0625\u0630\u0627 \u0643\u0627\u0646\u062a \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0635\u0627\u0644\u062d\u0629.</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #2: \u062a\u062d\u062f\u062b \u0645\u0639\u0638\u0645 \u0647\u062c\u0645\u0627\u062a \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629 \u0628\u0633\u0628\u0628 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0633\u062a\u0645\u0631 \u0644\u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0643\u0639\u0627\u0645\u0644 \u0648\u062d\u064a\u062f \u0644\u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 \u062d\u062a\u0649 \u0648\u0625\u0646 \u062a\u0645 \u0627\u0639\u062a\u0645\u0627\u062f \u0623\u0641\u0636\u0644 \u0627\u0644\u0645\u0645\u0627\u0631\u0633\u0627\u062a \u0648\u0627\u0644\u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0645\u0633\u062a\u0645\u0631 \u0644\u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u062d\u064a\u062b \u062c\u0639\u0644 \u0633\u064a\u0627\u0633\u0629 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0645\u0639\u0642\u0651\u062f\u0629\u060c \u064a\u064f\u0634\u062c\u0651\u0639 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0639\u0644\u0649 \u0625\u0639\u0627\u062f\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631. \u0644\u0630\u0644\u0643 \u0646\u0646\u0635\u062d \u0627\u0644\u0645\u0624\u0633\u0633\u0627\u062a \u0628\u0625\u064a\u0642\u0627\u0641 \u0647\u0630\u0647 \u0627\u0644\u0645\u064f\u0645\u0627\u0631\u0633\u0627\u062a \u0648\u0641\u0642\u064b\u0627 \u0644\u0640 NIST 800-63 \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0627\u0644\u062b\u0646\u0627\u0626\u064a.</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #3: \u0644\u0627 \u064a\u062a\u0645 \u062a\u0639\u064a\u064a\u0646 \u0645\u062f\u0629 \u0627\u0646\u062a\u0647\u0627\u0621 \u0627\u0644\u062c\u0644\u0633\u0629 (Timeouts) \u0644\u0644\u062a\u0637\u0628\u064a\u0642 \u0628\u0634\u0643\u0644 \u0635\u062d\u064a\u062d\u060c \u064a\u0642\u0648\u0645 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u062d\u062f \u0627\u0644\u0623\u062c\u0647\u0632\u0629 \u0627\u0644\u0645\u0648\u062c\u0648\u062f\u0629 \u0641\u064a \u0627\u0644\u0623\u0645\u0627\u0643\u0646 \u0627\u0644\u0639\u0627\u0645\u0629 \u0644\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0623\u062d\u062f \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0628\u062f\u0644\u064b\u0627 \u0645\u0646 \u0627\u062e\u062a\u064a\u0627\u0631 \"\u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062e\u0631\u0648\u062c\"\u060c \u064a\u0642\u0648\u0645 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0628\u0628\u0633\u0627\u0637\u0629 \u0628\u0625\u063a\u0644\u0627\u0642 \u0639\u0644\u0627\u0645\u0629 \u062a\u0628\u0648\u064a\u0628 \u0627\u0644\u0645\u062a\u0635\u0641\u062d\u060c \u0641\u064a\u0642\u0648\u0645 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645  \u0646\u0641\u0633 \u0627\u0644\u0645\u062a\u0635\u0641\u062d \u0628\u0639\u062f \u0633\u0627\u0639\u0627\u062a \u0642\u0644\u064a\u0644\u0629 \u0644\u064a\u062c\u062f \u0623\u0646\u0647 \u0644\u0627 \u064a\u0632\u0627\u0644 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0642\u064a\u062f \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 (Authenticated).</p>"},{"location":"ar/A07_2021-Identification_and_Authentication_Failures/#_6","title":"\u0627\u0644\u0645\u0635\u0627\u062f\u0631","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Digital Identity</p> </li> <li> <p>OWASP Application Security Verification Standard: V2 authentication</p> </li> <li> <p>OWASP Application Security Verification Standard: V3 Session Management</p> </li> <li> <p>OWASP Testing Guide: Identity,\u00a0Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Credential Stuffing</p> </li> <li> <p>OWASP Cheat Sheet: Forgot Password</p> </li> <li> <p>OWASP Cheat Sheet: Session Management</p> </li> <li> <p>OWASP Automated Threats Handbook</p> </li> <li> <p>NIST 800-63b: 5.1.1 Memorized Secrets</p> </li> </ul>"},{"location":"ar/A07_2021-Identification_and_Authentication_Failures/#cwes","title":"\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0631\u0628\u0637 \u0645\u0639 \u0625\u0637\u0627\u0631 CWEs","text":"<p>CWE-255 Credentials Management Errors</p> <p>CWE-259 Use of Hard-coded Password</p> <p>CWE-287 Improper Authentication</p> <p>CWE-288 Authentication Bypass Using an Alternate Path or Channel</p> <p>CWE-290 Authentication Bypass by Spoofing</p> <p>CWE-294 Authentication Bypass by Capture-replay</p> <p>CWE-295 Improper Certificate Validation</p> <p>CWE-297 Improper Validation of Certificate with Host Mismatch</p> <p>CWE-300 Channel Accessible by Non-Endpoint</p> <p>CWE-302 Authentication Bypass by Assumed-Immutable Data</p> <p>CWE-304 Missing Critical Step in Authentication</p> <p>CWE-306 Missing Authentication for Critical Function</p> <p>CWE-307 Improper Restriction of Excessive Authentication Attempts</p> <p>CWE-346 Origin Validation Error</p> <p>CWE-384 Session Fixation</p> <p>CWE-521 Weak Password Requirements</p> <p>CWE-613 Insufficient Session Expiration</p> <p>CWE-620 Unverified Password Change</p> <p>CWE-640 Weak Password Recovery Mechanism for Forgotten Password</p> <p>CWE-798 Use of Hard-coded Credentials</p> <p>CWE-940 Improper Verification of Source of a Communication Channel</p> <p>CWE-1216 Lockout Mechanism Errors</p>"},{"location":"ar/A08_2021-Software_and_Data_Integrity_Failures/","title":"A08:2021 \u2013 \u0641\u0634\u0644 \u0633\u0644\u0627\u0645\u0629 \u0627\u0644\u0628\u0631\u0627\u0645\u062c \u0648\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a","text":""},{"location":"ar/A08_2021-Software_and_Data_Integrity_Failures/#_1","title":"\u0627\u0644\u0639\u0648\u0627\u0645\u0644","text":"\u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u062d\u062f\u0648\u062b \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0642\u0635\u0648\u0649 \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0645\u062a\u0648\u0633\u0637 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 CVEs 10 16.67% 2.05% 75.04% 45.35% 6.94 7.94 47,972 1,152"},{"location":"ar/A08_2021-Software_and_Data_Integrity_Failures/#_2","title":"\u0646\u0638\u0631\u0629 \u0639\u0627\u0645\u0629","text":"<p>\u062a\u0645\u062a \u0625\u0636\u0627\u0641\u0629 \u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0641\u064a \u0639\u0627\u0645 2021 \u062d\u064a\u062b \u064a\u064f\u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0648\u0636\u0639 \u0627\u0641\u062a\u0631\u0627\u0636\u0627\u062a \u062a\u062a\u0639\u0644\u0651\u0642 \u0628\u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0627\u0644\u0628\u0631\u0627\u0645\u062c \u0648\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0623\u0648 \u062a\u0637\u0628\u064a\u0642 \u0645\u0639\u0627\u064a\u064a\u0631 CI/CD pipeline \u0645\u0646 \u062f\u0648\u0646 \u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0633\u0644\u0627\u0645\u062a\u0647\u0627. \u0625\u0646 \u0623\u062d\u062f \u0623\u0643\u0628\u0631 \u0627\u0644\u062a\u0623\u062b\u064a\u0631\u0627\u062a \u0627\u0644\u0643\u0628\u064a\u0631\u0629 \u0648\u0627\u0644\u0645\u0648\u062c\u0648\u062f\u0629 \u0641\u064a \u0642\u0648\u0627\u0639\u062f \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062b\u063a\u0631\u0627\u062a CVE /CVSS \u0648\u0627\u0644\u0645\u0631\u062a\u0628\u0637\u0629 \u0645\u0639 \u0625\u0637\u0627\u0631 CWEs \u0648\u0647\u0645: CWE-502\u060c CWE-829\u060c CWE-494.</p>"},{"location":"ar/A08_2021-Software_and_Data_Integrity_Failures/#_3","title":"\u0627\u0644\u0648\u0635\u0641","text":"<p>\u0641\u0634\u0644 \u0633\u0644\u0627\u0645\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0644\u0628\u0631\u0627\u0645\u062c \u062a\u062a\u0639\u0644\u0651\u0642 \u0628\u0627\u0644\u0634\u0651\u0641\u0631\u0629 \u0627\u0644\u0645\u0635\u062f\u0631\u064a\u0629 \u0648\u0627\u0644\u0628\u0646\u064a\u0629 \u0627\u0644\u062a\u062d\u062a\u064a\u0651\u0629 \u0627\u0644\u063a\u064a\u0631 \u0645\u062d\u0645\u064a\u0651\u0629 \u0645\u0646 \u0627\u0644\u0627\u0646\u062a\u0647\u0627\u0643\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u062a\u0639\u0651\u0644\u0642 \u0628\u0633\u0644\u0627\u0645\u062a\u0647\u0627. \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644: \u062d\u064a\u0646 \u064a\u062a\u0645 \u062a\u0631\u0645\u064a\u0632 \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a \u0623\u0648 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u0637\u0631\u064a\u0642\u0629 \u062a\u064f\u0645\u0643\u0651\u0646 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0623\u0646 \u064a\u0637\u0651\u0644\u0639 \u0623\u0648 \u064a\u0642\u0648\u0645 \u0628\u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u062a\u0639\u062f\u064a\u0644\u0627\u062a \u0627\u0644\u063a\u064a\u0631 \u0645\u064f\u0635\u0631\u0651\u062d \u0628\u0647\u0627. \u0645\u062b\u0627\u0644 \u0622\u062e\u0631: \u0639\u0646\u062f\u0645\u0627 \u064a\u0639\u062a\u0645\u062f \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0639\u0644\u0649 \u0625\u0636\u0627\u0641\u0627\u062a \u0623\u062e\u0631\u0649 \u0623\u0648 \u0645\u0643\u062a\u0628\u0627\u062a \u0623\u0648 \u0628\u0639\u0636 \u0627\u0644\u0623\u0646\u0645\u0627\u0637 \u0627\u0644\u063a\u064a\u0631 \u0645\u0648\u062b\u0648\u0642\u0629 \u0623\u0648 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0634\u0628\u0643\u0627\u062a \u062a\u0648\u0635\u064a\u0644 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 CDNs \u0627\u0644\u063a\u064a\u0631 \u0645\u0648\u062b\u0648\u0642 \u0628\u0647\u0627\u060c \u0648\u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0624\u062f\u064a CI / CIC \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646 \u0625\u0644\u0649 \u0625\u0645\u0643\u0627\u0646\u064a\u0629 \u0627\u0644\u0648\u0635\u0648\u0644 \u0627\u0644\u063a\u064a\u0631 \u0645\u064f\u0635\u0631\u0651\u062d \u0628\u0647 \u0623\u0648 \u062a\u0646\u0632\u064a\u0644 \u0628\u0631\u0645\u062c\u064a\u0629 \u062e\u0628\u064a\u062b\u0629 \u0623\u0648 \u0627\u062e\u062a\u0631\u0627\u0642 \u0627\u0644\u0646\u0638\u0627\u0645. \u0623\u062e\u064a\u0631\u064b\u0627\u060c \u062a\u062a\u0636\u0645\u0651\u0646 \u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0622\u0646 \u0648\u0638\u064a\u0641\u0629 \u0627\u0644\u062a\u062d\u062f\u064a\u062b \u0627\u0644\u062a\u0644\u0642\u0627\u0626\u064a\u060c \u062d\u064a\u062b \u064a\u062a\u0645 \u062a\u0646\u0632\u064a\u0644 \u0627\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a \u062f\u0648\u0646 \u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0627\u0644\u0633\u0644\u0627\u0645\u0629 \u0628\u0634\u0643\u0644 \u0643\u0627\u0641\u064a \u0648\u062a\u062b\u0628\u064a\u062a\u0647\u0627 \u0639\u0644\u0649 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0645 \u0627\u0644\u0648\u062b\u0648\u0642 \u0628\u0647\u0627 \u0633\u0627\u0628\u0642\u064b\u0627. \u0645\u0645\u0627 \u064a\u064f\u0645\u0643\u0651\u0646 \u0627\u0644\u0645\u0647\u0627\u062c\u0645\u064a\u0646 \u0623\u0646 \u064a\u0642\u0648\u0645\u0648\u0627 \u0628\u062a\u062d\u0645\u064a\u0644 \u062a\u062d\u062f\u064a\u062b\u0627\u062a\u0647\u0645 \u0627\u0644\u062e\u0627\u0635\u0629 \u0644\u064a\u062a\u0645 \u062a\u062b\u0628\u064a\u062a\u0647\u0627 \u0648\u062a\u0634\u063a\u064a\u0644\u0647\u0627 \u0639\u0644\u0649 \u062c\u0645\u064a\u0639 \u0627\u0644\u0623\u062c\u0647\u0632\u0629.  </p>"},{"location":"ar/A08_2021-Software_and_Data_Integrity_Failures/#_4","title":"\u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646\u0647\u0627","text":"<ul> <li> <p>\u062a\u0623\u0643\u062f \u0645\u0646 \u0639\u062f\u0645 \u0625\u0631\u0633\u0627\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u063a\u064a\u0631 \u0645\u0634\u0641\u0651\u0631\u0629 \u0623\u0648 \u0627\u0644\u063a\u064a\u0631 \u0645\u0648\u0642\u0651\u0639\u0629 \u0625\u0644\u0649 \u0639\u0645\u0644\u0627\u0621 \u063a\u064a\u0631 \u0645\u0648\u062b\u0648\u0642\u064a\u0646 \u0628\u062f\u0648\u0646 \u0634\u0643\u0644 \u0645\u0646 \u0623\u0634\u0643\u0627\u0644 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0633\u0644\u0627\u0645\u0629 \u0623\u0648 \u0648\u062c\u0648\u062f \u062a\u0648\u0642\u064a\u0639 \u0631\u0642\u0645\u064a \u0648\u0630\u0644\u0643 \u0645\u0646 \u0623\u062c\u0644 \u0627\u0643\u062a\u0634\u0627\u0641 \u0627\u0644\u062a\u0644\u0627\u0639\u0628 \u0628\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.</p> </li> <li> <p>\u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0633\u0644\u0627\u0645\u0629 \u0627\u0644\u0628\u0631\u0627\u0645\u062c \u0623\u0648 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0646 \u0627\u0644\u0645\u0635\u0627\u062f\u0631 \u0627\u0644\u0631\u0633\u0645\u064a\u0629 \u0648\u0627\u0644\u0645\u062a\u0648\u0642\u0639\u0629\u060c \u0639\u0628\u0631 \u0627\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0648\u062c\u0648\u062f \u0627\u0644\u062a\u0648\u0627\u0642\u064a\u0639 \u0623\u0648 \u0622\u0644\u064a\u0627\u062a \u0645\u064f\u0634\u0627\u0628\u0647\u0629 \u0644\u0636\u0645\u0627\u0646 \u0633\u0644\u0627\u0645\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a</p> </li> <li> <p>\u062a\u0623\u0643\u062f \u0645\u0646 \u0623\u0646 \u0627\u0644\u0645\u0643\u062a\u0628\u0627\u062a \u0648\u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a\u060c \u0645\u062b\u0644 Npm \u0623\u0648 Maven\u060c \u062a\u0633\u062a\u062e\u062f\u0645 \u0645\u0635\u0627\u062f\u0631 \u0645\u0648\u062b\u0648\u0642\u0629.</p> </li> <li> <p>\u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u062f\u0648\u0627\u062a \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0639\u0646\u062f \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0627\u0644\u0637\u0631\u0641 \u0627\u0644\u062b\u0627\u0644\u062b\u060c \u0645\u062b\u0644 OWASP Dependency Check \u0623\u0648 OWASP CycloneDX \u060c \u0648\u0627\u0644\u062a\u064a \u062a\u0642\u0648\u0645 \u0628\u0627\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0639\u062f\u0645 \u0648\u062c\u0648\u062f \u0623\u064a \u062b\u063a\u0631\u0627\u062a \u0623\u0645\u0646\u064a\u0629 </p> </li> <li> <p>\u062a\u0623\u0643\u062f \u0645\u0646 \u0623\u0646   CI / CD \u0644\u062f\u064a\u0647 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 \u0648\u0627\u0644\u062a\u062d\u0643\u0651\u0645 \u0627\u0644\u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0648\u0635\u0648\u0644 \u0644\u0644\u0628\u0631\u0627\u0645\u062c \u0648\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0644\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0633\u0644\u0627\u0645\u062a\u0647\u0627 \u062e\u0644\u0627\u0644 \u0622\u0644\u064a\u0629 \u0627\u0644\u0625\u0646\u0634\u0627\u0621 \u0648\u0627\u0644\u0646\u0634\u0631.</p> </li> </ul>"},{"location":"ar/A08_2021-Software_and_Data_Integrity_Failures/#_5","title":"\u0623\u0645\u062b\u0644\u0629 \u0639\u0644\u0649 \u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a \u0627\u0644\u0647\u062c\u0648\u0645","text":"<p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #1 \u0625\u0644\u063a\u0627\u0621 \u0627\u0644\u062a\u0633\u0644\u0633\u0644 \u0627\u0644\u063a\u064a\u0631 \u0622\u0645\u0646: \u064a\u0633\u062a\u062f\u0639\u064a \u062a\u0637\u0628\u064a\u0642 React \u0645\u062c\u0645\u0648\u0639\u0629 \u0645\u0646 \u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u0645\u0635\u063a\u0651\u0631\u0629 \u0644\u0640 Spring Boot. \u0641\u0642\u062f \u062d\u0627\u0648\u0644 \u0627\u0644\u0645\u0628\u0631\u0645\u062c\u064a\u0646 \u0628\u0627\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0623\u0646 \u0627\u0644\u0634\u0651\u0641\u0631\u0629 \u0627\u0644\u0645\u0635\u062f\u0631\u064a\u0629 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0647\u0645 \u063a\u064a\u0631 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u063a\u064a\u064a\u0631. \u0648\u0627\u0644\u062d\u0644 \u0627\u0644\u0630\u064a \u062a\u0648\u0635\u0644\u0648\u0627 \u0625\u0644\u064a\u0647 \u0647\u0648 \u0625\u062c\u0631\u0627\u0621 \u062a\u0633\u0644\u0633\u0644 \u0644\u062d\u0627\u0644\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0648\u062a\u0645\u0631\u064a\u0631\u0647\u0627 \u0630\u0647\u0627\u0628\u064b\u0627 \u0648\u0625\u064a\u0627\u0628\u064b\u0627 \u0645\u0639 \u0643\u0644 \u0637\u0644\u0628. \u0641\u0642\u062f \u0644\u0627\u062d\u0638 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u062a\u0648\u0642\u064a\u0639 \u0643\u0627\u0626\u0646 \u062c\u0627\u0641\u0627 R00 \u064a\u0645\u0643\u0646\u0647 \u0645\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u062f\u0627\u0629 Java Serial Killer \u0644\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0625\u0645\u0643\u0627\u0646\u064a\u0629 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0639\u0646 \u0628\u0639\u062f. </p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #2 \u0627\u0644\u062a\u062d\u062f\u064a\u062b \u0628\u062f\u0648\u0646 \u0627\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0644\u062a\u0648\u0627\u0642\u064a\u0639: \u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 \u0623\u062c\u0647\u0632\u0629 \u0627\u0644\u0645\u0648\u062c\u0651\u0647\u0627\u062a \u0627\u0644\u0645\u0646\u0632\u0644\u064a\u0629 \u0648\u0627\u0644\u0628\u0631\u0627\u0645\u062c \u0627\u0644\u062b\u0627\u0628\u062a\u0629 Firmware \u0648\u063a\u064a\u0631\u0647\u0627 \u0644\u0627 \u062a\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0635\u062d\u0629 \u0627\u0644\u062a\u0648\u0627\u0642\u064a\u0639 \u0627\u0644\u0631\u0642\u0645\u064a\u0629 \u0639\u0646\u062f \u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a. \u062d\u064a\u062b \u062a\u064f\u0639\u062f \u0627\u0644\u0628\u0631\u0627\u0645\u062c \u0627\u0644\u062b\u0627\u0628\u062a\u0629 \u0627\u0644\u063a\u064a\u0631 \u0645\u0648\u0642\u0639\u0629 \u0647\u062f\u0641\u064b\u0627 \u0633\u0647\u0644\u064b\u0627 \u0644\u0644\u0645\u0647\u0627\u062c\u0645\u064a\u0646. \u0641\u0627\u0644\u062e\u0637\u0631 \u0647\u0646\u0627 \u0623\u0646\u0647 \u0644\u0627 \u062a\u0648\u062c\u062f \u0622\u0644\u064a\u0629 \u0644\u0625\u0635\u0644\u0627\u062d\u0647\u060c \u0628\u0644 \u0641\u064a \u0627\u0646\u062a\u0638\u0627\u0631 \u0627\u0644\u0625\u0635\u0644\u0627\u062d \u0641\u064a \u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0627\u0644\u0642\u0627\u062f\u0645\u0629</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #3 \u0627\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0627\u0644\u062a\u064a \u0627\u0633\u062a\u0647\u062f\u0641\u062a SolarWinds: \u064a\u0642\u0648\u0645 \u0627\u0644\u0645\u0647\u0627\u062c\u0645\u0648\u0646 \u0627\u0644\u0645\u062a\u0642\u062f\u0645\u0648\u0646 \u0628\u0627\u0633\u062a\u0647\u062f\u0627\u0641 \u0622\u0644\u064a\u0629 \u0627\u0644\u062a\u062d\u062f\u064a\u062b \u0644\u0644\u0623\u0646\u0638\u0645\u0629. \u0648\u0645\u0646 \u062e\u0644\u0627\u0644 \u0645\u0644\u0627\u062d\u0638\u0629 \u0627\u0644\u0647\u062c\u0645\u0629 \u0627\u0644\u062d\u062f\u064a\u062b\u0629 \u0627\u0644\u062a\u064a \u0627\u0633\u062a\u0647\u062f\u0641\u062a SolarWinds Orion. \u062d\u064a\u062b \u0642\u0627\u0645\u062a \u0627\u0644\u0634\u0631\u0643\u0629 \u0628\u062a\u0637\u0648\u064a\u0631 \u0622\u0644\u064a\u0629 \u0648\u0633\u064a\u0627\u0633\u0629 \u0644\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0633\u0644\u0627\u0645\u0629 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u062d\u062f\u064a\u062b \u0648\u0623\u0645\u0646\u0647\u0627. \u0648\u0645\u0639 \u0630\u0644\u0643 \u0641\u0642\u062f \u064a\u0633\u062a\u0637\u064a\u0639 \u0627\u0644\u0645\u0647\u0627\u062c\u0645\u0648\u0646 \u0627\u0633\u062a\u063a\u0644\u0627\u0644\u0647\u0627\u060c \u0648\u0642\u062f \u062d\u062f\u062b \u0630\u0644\u0643 \u0648\u0627\u0633\u062a\u063a\u0644\u0648\u0627 \u0627\u0644\u0645\u0647\u0627\u062c\u0645\u064a\u0646 \u062a\u0644\u0643 \u0627\u0644\u0622\u0644\u064a\u0629 \u0648\u0644\u0645\u062f\u0629 \u0623\u0634\u0647\u0631\u060c \u062d\u064a\u062b \u0642\u0627\u0645\u0648\u0627 \u0628\u062d\u0642\u0646 \u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0627\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0644\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u062a\u064a \u0623\u062b\u0651\u0631\u062a \u0639\u0644\u0649 \u0623\u0643\u062b\u0631 \u0645\u0646 18,000 \u0646\u0638\u0627\u0645 \u0644\u0623\u0643\u062b\u0631 \u0645\u0646 100 \u0645\u0646\u0638\u0645\u0629 \u062d\u0648\u0644 \u0627\u0644\u0639\u0627\u0644\u0645. \u062d\u064a\u062b \u064a\u064f\u0639\u062a\u0628\u0631 \u0647\u0630\u0627 \u0627\u0644\u0647\u062c\u0648\u0645 \u0645\u0646 \u0623\u062e\u0637\u0631 \u0627\u0644\u0647\u062c\u0645\u0627\u062a \u0627\u0644\u062a\u064a \u062d\u062f\u062b\u062a \u062d\u062a\u0649 \u064a\u0648\u0645\u0646\u0627 \u0647\u0630\u0627. </p>"},{"location":"ar/A08_2021-Software_and_Data_Integrity_Failures/#_6","title":"\u0627\u0644\u0645\u0635\u0627\u062f\u0631","text":"<ul> <li> <p>OWASP Cheat Sheet: Software Supply Chain Security</p> </li> <li> <p>OWASP Cheat Sheet: Secure build and deployment</p> </li> <li> <p>OWASP Cheat Sheet: Infrastructure as Code </p> </li> <li> <p>OWASP Cheat Sheet: Deserialization</p> </li> <li> <p>SAFECode Software Integrity Controls</p> </li> <li> <p>A 'Worst Nightmare' Cyberattack: The Untold Story Of The SolarWinds Hack</p> </li> <li> <p>CodeCov Bash Uploader Compromise</p> </li> <li> <p>Securing DevOps by Julien Vehent</p> </li> </ul>"},{"location":"ar/A08_2021-Software_and_Data_Integrity_Failures/#cwes","title":"\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0631\u0628\u0637 \u0645\u0639 \u0625\u0637\u0627\u0631 CWEs","text":"<p>CWE-345 Insufficient Verification of Data Authenticity</p> <p>CWE-353 Missing Support for Integrity Check</p> <p>CWE-426 Untrusted Search Path</p> <p>CWE-494 Download of Code Without Integrity Check</p> <p>CWE-502 Deserialization of Untrusted Data</p> <p>CWE-565 Reliance on Cookies without Validation and Integrity Checking</p> <p>CWE-784 Reliance on Cookies without Validation and Integrity Checking in a Security Decision</p> <p>CWE-829 Inclusion of Functionality from Untrusted Control Sphere</p> <p>CWE-830 Inclusion of Web Functionality from an Untrusted Source</p> <p>CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes</p>"},{"location":"ar/A09_2021-Security_Logging_and_Monitoring_Failures/","title":"A09:2021 \u2013 \u0641\u0634\u0644 \u0639\u0645\u0644\u064a\u0629 \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0627\u062d\u062f\u0627\u062b \u0648\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629","text":""},{"location":"ar/A09_2021-Security_Logging_and_Monitoring_Failures/#_1","title":"\u0627\u0644\u0639\u0648\u0627\u0645\u0644","text":"\u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u062d\u062f\u0648\u062b \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0642\u0635\u0648\u0649 \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0645\u062a\u0648\u0633\u0637 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 CVEs 4 19.23% 6.51% 53.67% 39.97% 6.87 4.99 53,615 242"},{"location":"ar/A09_2021-Security_Logging_and_Monitoring_Failures/#_2","title":"\u0646\u0638\u0631\u0629 \u0639\u0627\u0645\u0629","text":"<p>\u0634\u0647\u062f \" \u0641\u0634\u0644 \u0641\u064a \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0633\u062c\u0644\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0648\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \" \u0627\u0631\u062a\u0641\u0627\u0639 \u0628\u0633\u064a\u0637 \u0645\u0646 \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0627\u0644\u0639\u0627\u0634\u0631\u0629 \u0641\u064a \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0644\u0639\u0627\u0645 2017 \u0625\u0644\u0649 \u0627\u0644\u0645\u0631\u062a\u0628\u0629 \u0627\u0644\u062a\u0627\u0633\u0639\u0629 \u0641\u064a \u0627\u0644\u0627\u0633\u062a\u0637\u0644\u0627\u0639 \u0627\u0644\u0630\u064a \u062a\u0645 \u0625\u062c\u0631\u0627\u0624\u0647 \u0641\u064a \u0642\u0637\u0627\u0639 \u0623\u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a. \u062d\u064a\u062b \u064a\u064f\u0634\u0643\u0651\u0644 \" \u0641\u0634\u0644 \u0641\u064a \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0633\u062c\u0644\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0648\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \" \u062a\u062d\u062f\u0651\u064a\u064b\u0627 \u0644\u0625\u064a\u062c\u0627\u062f \u0637\u0631\u064a\u0642\u0629 \u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0647\u060c \u063a\u0627\u0644\u0628\u064b\u0627 \u0645\u0627 \u064a\u062a\u0637\u0644\u0651\u0628 \u200f\u0645\u0642\u0627\u0628\u0644\u0627\u062a \u0623\u0648 \u0627\u0633\u062a\u0641\u0633\u0627\u0631\u0627\u062a \u0645\u0627 \u0625\u0630\u0627 \u0643\u0627\u0646\u062a \u0627\u0644\u0647\u062c\u0645\u0627\u062a \u062a\u0645 \u0627\u0643\u062a\u0634\u0627\u0641\u0647\u0627 \u0623\u062b\u0646\u0627\u0621 \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u062e\u062a\u0628\u0627\u0631 \u0627\u0644\u0627\u062e\u062a\u0631\u0627\u0642. \u0648\u0645\u0639 \u0630\u0644\u0643 \u0644\u0627 \u064a\u0648\u062c\u062f \u0644\u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0627\u0644\u0643\u062b\u064a\u0631 \u0645\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0641\u064a \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a CVE/CVSS,\u060c \u0648\u0644\u0643\u0646 \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0627\u0643\u062a\u0634\u0627\u0641 \u0648\u0627\u0644\u0631\u0635\u062f \u0648\u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0644\u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0623\u0645\u0631 \u0641\u064a \u063a\u0627\u064a\u0629 \u0627\u0644\u0623\u0647\u0645\u064a\u0629.    \u0648 \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0643\u0648\u0646 \u0645\u0624\u062b\u0631\u064b\u0627 \u0639\u0644\u0649 \u0639\u062f\u0645 \u0641\u0639\u0627\u0644\u064a\u0651\u0629 \u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0644\u0644\u0623\u062d\u062f\u0627\u062b \u0648\u0639\u0644\u0649 \u0627\u0644\u0627\u0646\u062a\u0628\u0627\u0647 \u0644\u0644\u0625\u0646\u0630\u0627\u0631\u0627\u062a \u0648\u0627\u0644\u062a\u064a \u0642\u062f \u062a\u064f\u0633\u0628\u0651\u0628 \u0627\u0644\u062d\u0648\u0627\u062f\u062b\u060c \u0623\u0648 \u0639\u062f\u0645 \u0648\u062c\u0648\u062f \u0623\u062f\u0644\u0629 \u0643\u0627\u0641\u064a\u0629 \u0639\u0646\u062f \u0627\u0644\u0642\u064a\u0627\u0645 \u0628\u0627\u0644\u062a\u062d\u0627\u0644\u064a\u0644 \u0627\u0644\u062c\u0646\u0627\u0626\u064a\u0629 \u0648\u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u064a\u0631\u062a\u0628\u0637 \u0628\u0640  CWE-778 \u0648\u0643\u0630\u0644\u0643 CWE-117 \u0648 CWE-223 \u0648 CWE-532.</p>"},{"location":"ar/A09_2021-Security_Logging_and_Monitoring_Failures/#_3","title":"\u0627\u0644\u0648\u0635\u0641","text":"<p>\u0639\u0646\u062f \u0627\u0644\u0639\u0648\u062f\u0629 \u0625\u0644\u0649 \u0623\u0639\u0644\u0649 \u0639\u0634\u0631\u0629 \u0645\u062e\u0627\u0637\u0631 \u0644\u0639\u0627\u0645 2021\u060c \u0646\u062c\u062f \u0623\u0646 \u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u064a\u0642\u0648\u0645 \u0628\u0627\u0644\u0645\u0633\u0627\u0639\u062f\u0629 \u0639\u0644\u0649 \u0631\u0635\u062f \u0648\u0627\u0643\u062a\u0634\u0627\u0641 \u0648\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0627\u0644\u0646\u0634\u0650\u0637\u0629 \u0623\u0648 \u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0627\u062e\u062a\u0631\u0627\u0642 \u0627\u0644\u062a\u064a \u062a\u062d\u062f\u062b\u060c \u0648\u0645\u0646 \u063a\u064a\u0631 \u0639\u0645\u0644\u064a\u0629 \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0648\u0645\u0631\u0627\u0642\u0628\u062a\u0647\u0627\u060c \u0644\u0646 \u062a\u0633\u062a\u0637\u064a\u0639 \u0627\u0643\u062a\u0634\u0627\u0641 \u0648\u0631\u0635\u062f \u0623\u0648 \u062d\u062a\u0649 \u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0644\u0644\u0627\u062e\u062a\u0631\u0627\u0642\u0627\u062a\u060c \u0644\u0630\u0644\u0643 \u0648\u062c\u0648\u062f \u0639\u0645\u0644\u064a\u0629 \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0648\u0645\u0631\u0627\u0642\u0628\u062a\u0647\u0627 \u064a\u0633\u0627\u0639\u062f \u0639\u0644\u0649 \u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0641\u064a \u0627\u0644\u0648\u0642\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628:</p> <ul> <li> <p>\u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u0642\u0627\u0628\u0644\u0629 \u0644\u0625\u062c\u0631\u0627\u0621\u0627\u062a \u0627\u0644\u062a\u062f\u0642\u064a\u0642 \u0648\u0627\u0644\u0645\u062a\u0627\u0628\u0639\u0629\u060c \u0645\u062b\u0644 \u0639\u0645\u0644\u064a\u0627\u062a \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 \u0627\u0644\u0641\u0627\u0634\u0644\u0629 \u0648\u0643\u0630\u0644\u0643 \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0646\u0642\u0644 \u0644\u0644\u0645\u0644\u0641\u0627\u062a \u0630\u0627\u062a \u0627\u0644\u0623\u062d\u062c\u0627\u0645 \u0627\u0644\u0639\u0627\u0644\u064a\u0629 \u0627\u0644\u062a\u064a \u0644\u0645 \u064a\u062a\u0645 \u062a\u0633\u062c\u064a\u0644\u0647\u0627.</p> </li> <li> <p>\u0627\u0644\u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0648\u0627\u0644\u0625\u0646\u0630\u0627\u0631\u0627\u062a \u0627\u0644\u062a\u064a \u0644\u0645 \u064a\u062a\u0645 \u062a\u0633\u062c\u064a\u0644\u0647\u0627 \u0623\u0648 \u064a\u062a\u0645 \u062a\u0633\u062c\u064a\u0644\u0647\u0627 \u0645\u0646 \u062f\u0648\u0646 \u0648\u0635\u0641 \u0648\u0627\u0636\u062d.</p> </li> <li> <p>\u0644\u0627 \u064a\u062a\u0645 \u0645\u062a\u0627\u0628\u0639\u0629 \u0648\u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0648\u0645\u0631\u0627\u0642\u0628\u062a\u0647\u0627 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0623\u0648 \u0648\u0627\u062c\u0647\u0629 \u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a API \u0623\u064a \u0623\u0646\u0634\u0637\u0629 \u0636\u0627\u0631\u0651\u0629.</p> </li> <li> <p>\u064a\u062a\u0645 \u062a\u062e\u0632\u064a\u0646 \u0633\u062c\u0644\u0627\u062a \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0645\u062d\u0644\u0651\u064a\u064b\u0627 \u0641\u0642\u0637 </p> </li> <li> <p>\u0648\u0636\u0639 \u0645\u0639\u0627\u064a\u064a\u0631 \u0645\u0646\u0627\u0633\u0628\u0629 \u0644\u0644\u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0645\u062b\u0644 (\u062d\u062f \u0639\u0645\u0644\u064a\u0627\u062a \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062f\u062e\u0648\u0644) \u060c \u0648\u0643\u0630\u0644\u0643 \u0625\u064a\u062c\u0627\u062f \u0633\u064a\u0627\u0633\u0629 \u0648\u0627\u0636\u062d\u0629 \u0644\u0639\u0645\u0644\u064a\u0629 \u062a\u0635\u0639\u064a\u062f \u0627\u0644\u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0648\u0627\u0644\u0639\u0645\u0644 \u0639\u0644\u064a\u0647\u0627 \u0628\u0627\u0644\u0634\u0643\u0644 \u0627\u0644\u0635\u062d\u064a\u062d.</p> </li> <li> <p>\u0639\u062f\u0645 \u0648\u062c\u0648\u062f \u0623\u064a \u0625\u0646\u0630\u0627\u0631\u0627\u062a \u0639\u0646\u062f \u0625\u062c\u0631\u0627\u0621 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0627\u0644\u0627\u062e\u062a\u0631\u0627\u0642 \u0623\u0648 \u0627\u0644\u0641\u062d\u0635 \u0628\u0648\u0627\u0633\u0637\u0629 \u0623\u062f\u0627\u0629 DAST \u0645\u062b\u0644 OWASP ZAP  </p> </li> <li> <p>\u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0644\u0627 \u062a\u0633\u062a\u0637\u064a\u0639 \u0627\u0643\u062a\u0634\u0627\u0641 \u0623\u0648  \u0627\u0644\u062a\u0646\u0628\u064a\u0647 \u0639\u0646\u062f \u0648\u062c\u0648\u062f \u0623\u0646\u0634\u0637\u0629 \u0636\u0627\u0631\u0651\u0629 \u062a\u062d\u062f\u062b \u0641\u064a \u0627\u0644\u0648\u0642\u062a \u0627\u0644\u062d\u0627\u0644\u064a.</p> </li> </ul> <p>\u0623\u0646\u062a \u0645\u064f\u0639\u0631\u0651\u0636 \u0644\u062a\u0633\u0631\u064a\u0628 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0641\u064a \u062d\u0627\u0644 \u0639\u062f\u0645 \u0636\u0628\u0637 \u0639\u0645\u0644\u064a\u0629 \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0648\u0627\u0644\u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0628\u0627\u0644\u0634\u0643\u0644 \u0627\u0644\u0635\u062d\u064a\u062d \u0648\u0627\u0644\u062a\u064a \u0642\u062f \u062a\u0633\u0645\u062d \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0623\u0648 \u062d\u062a\u0649 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0645\u0646 \u0645\u0634\u0627\u0647\u062f\u062a\u0647\u0627 \u0627\u0646\u0638\u0631 \u0625\u0644\u0649 (A02- \u062a\u062e\u0637\u0651\u064a \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0648\u0635\u0648\u0644.)</p>"},{"location":"ar/A09_2021-Security_Logging_and_Monitoring_Failures/#_4","title":"\u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646\u0647\u0627","text":"<p>\u064a\u062c\u0628 \u0639\u0644\u0649 \u0627\u0644\u0645\u0637\u0648\u0651\u0631\u064a\u0646 \u062a\u0637\u0628\u064a\u0642 \u0628\u0639\u0636 \u0623\u0648 \u0643\u0644 \u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u062a\u062d\u0643\u0651\u0645 \u0627\u0644\u062a\u0627\u0644\u064a\u0629 \u0648\u0627\u0644\u062a\u064a \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0645\u062f\u0649 \u0627\u0633\u062a\u0647\u062f\u0627\u0641 \u0648\u0627\u0631\u062a\u0641\u0627\u0639 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u062a\u064a \u062a\u0633\u062a\u0647\u062f\u0641 \u0627\u0644\u062a\u0637\u0628\u064a\u0642:</p> <ul> <li> <p>\u064a\u062c\u0628 \u0627\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0623\u0646 \u062c\u0645\u064a\u0639 \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062f\u062e\u0648\u0644\u060c \u0627\u0644\u062a\u062d\u0643\u0645 \u0628\u0627\u0644\u0648\u0635\u0648\u0644 \u0648\u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u062d\u062f\u062b \u0639\u0644\u0649 \u062c\u0627\u0646\u0628 \u0627\u0644\u062e\u0627\u062f\u0645 \u0645\u0633\u062c\u0651\u0644\u0629 \u0628\u0637\u0631\u064a\u0642\u0629 \u0635\u062d\u064a\u062d\u0629 \u0648\u0648\u0627\u0636\u062d\u0629\u060c \u0648\u0630\u0644\u0643 \u0644\u0643\u0634\u0641 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0636\u0627\u0631\u0651\u0629 \u0627\u0644\u062a\u064a \u062a\u0633\u0627\u0639\u062f\u0643 \u0641\u064a\u0645\u0627 \u0628\u0639\u062f \u0641\u064a \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u062c\u0646\u0627\u0626\u064a \u0627\u0644\u0631\u0642\u0645\u064a</p> </li> <li> <p>\u0627\u0644\u062a\u0623\u0643\u062f \u0623\u0646 \u0639\u0645\u0644\u064a\u0627\u062a \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u062a\u062a\u0645 \u0628\u0634\u0643\u0644 \u0645\u0646\u0633\u0651\u0642 \u0648\u0635\u062d\u064a\u062d \u0648\u0630\u0644\u0643 \u0644\u0643\u064a \u064a\u062a\u0645 \u0625\u062f\u0627\u0631\u062a\u0647\u0627 \u0628\u0634\u0643\u0644 \u0635\u062d\u064a\u062d.</p> </li> <li> <p>\u0627\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0623\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0634\u0641\u0651\u0631\u0629 \u0628\u0627\u0644\u0634\u0643\u0644 \u0627\u0644\u0635\u062d\u064a\u062d \u0648\u0630\u0644\u0643 \u0644\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646 \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062d\u0642\u0646 \u0623\u0648 \u0627\u0644\u0647\u062c\u0645\u0627\u062a \u0627\u0644\u062a\u064a \u0642\u062f \u062a\u062d\u062f\u062b \u0639\u0644\u0649 \u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629</p> </li> <li> <p>\u0627\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0623\u0646 \u0639\u0645\u0644\u064a\u0627\u062a \u0646\u0642\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u062a\u062a\u0645 \u0645\u0631\u0627\u0642\u0628\u062a\u0647\u0627 \u0648\u0627\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0633\u0644\u0627\u0645\u062a\u0647\u0627\u060c \u0648\u0630\u0644\u0643 \u0644\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0639\u062f\u0645 \u062a\u0639\u0631\u0651\u0636\u0647\u0627 \u0644\u062a\u062e\u0631\u064a\u0628 \u0623\u0648 \u062a\u0644\u0627\u0639\u0628 \u0623\u0648 \u0623\u064a \u062d\u0630\u0641.</p> </li> <li> <p>\u064a\u062c\u0628 \u0623\u0646 \u064a\u0643\u0648\u0646 \u0644\u062f\u0649 \u0641\u0631\u064a\u0642 DevSecOps \u0622\u0644\u064a\u0629 \u0641\u0639\u0651\u0627\u0644\u0629 \u0644\u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u0627\u0644\u062a\u064a \u062a\u0642\u0648\u0645 \u0628\u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u0627\u0643\u062a\u0634\u0627\u0641 \u0648\u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0644\u0644\u062a\u0646\u0628\u064a\u0647\u0627\u062a\u060c \u0645\u062b\u0644 \u0627\u0644\u0623\u0646\u0634\u0637\u0629 \u0627\u0644\u0636\u0627\u0631\u0651\u0629. \u0648\u0645\u0646 \u0623\u0647\u0645 \u0627\u0644\u0645\u0631\u062a\u0643\u0632\u0627\u062a \u0647\u064a \u0633\u0631\u0639\u0629 \u0627\u0644\u0627\u0643\u062a\u0634\u0627\u0641 \u0648\u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0644\u0647\u0627.</p> </li> <li> <p>\u0642\u0645 \u0628\u0625\u064a\u062c\u0627\u062f \u062e\u0637\u0629 \u0644\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0644\u0644\u062d\u0648\u0627\u062f\u062b \u0627\u0644\u0633\u064a\u0628\u0631\u0627\u0646\u064a\u0629 \u0648\u062a\u0633\u062a\u0637\u064a\u0639 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 NIST 800-61r2 \u0623\u0648 \u0627\u0644\u0646\u0633\u062e \u0627\u0644\u0623\u062d\u062f\u062b \u0625\u0646 \u062a\u0648\u0641\u0651\u0631\u062a.</p> </li> </ul> <p>\u0647\u0646\u0627\u0643 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u0625\u0637\u0627\u0631\u0627\u062a \u0645\u0641\u062a\u0648\u062d\u0629 \u0627\u0644\u0645\u0635\u062f\u0631 \u0648\u062a\u062c\u0627\u0631\u064a\u0629 \u0645\u062b\u0644 (OWASP ModSecurity Core Rule Set,\u060c Open-Source Log) \u0648\u0647\u0646\u0627 \u0643\u0630\u0644\u0643 \u0645\u0646\u0635\u0651\u0627\u062a \u062a\u0642\u0648\u0645 \u0628\u0639\u0645\u0644\u064a\u0629 \u062c\u0645\u0639 \u0648\u0631\u0628\u0637 \u0633\u062c\u0644\u0627\u062a \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0645\u062b\u0644 \u0645\u0646\u0635\u0651\u0629 ELK Stack \u0648\u0627\u0644\u062a\u064a \u062a\u064f\u062a\u064a\u062d \u0644\u0643 \u0645\u0645\u064a\u0632\u0627\u062a \u0625\u0636\u0627\u0641\u064a\u0629 \u0645\u0646\u0647\u0627 \u0644\u0648\u062d \u0644\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u0643\u0630\u0644\u0643 \u062a\u0646\u0628\u064a\u0647\u0627\u062a.</p>"},{"location":"ar/A09_2021-Security_Logging_and_Monitoring_Failures/#_5","title":"\u0623\u0645\u062b\u0644\u0629 \u0639\u0644\u0649 \u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a \u0627\u0644\u0647\u062c\u0648\u0645","text":"<p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #1: \u200e\u0627\u0644\u0645\u0634\u063a\u0651\u0644 \u0644\u0645\u0648\u0642\u0639 \u062a\u0627\u0628\u0639 \u0644\u0634\u0631\u0643\u0629 \u062a\u0624\u0645\u0651\u0646 \u062e\u0637\u0637 \u0627\u0644\u062a\u0623\u0645\u064a\u0646 \u0627\u0644\u0637\u0628\u064a \u0644\u0644\u0623\u0637\u0641\u0627\u0644 \u0644\u0645 \u064a\u062a\u0645\u0643\u0646 \u0645\u0646 \u0627\u0643\u062a\u0634\u0627\u0641 \u062b\u063a\u0631\u0629 \u0627\u0645\u0646\u064a\u0629 \u0644\u0639\u062f\u0645 \u062a\u0648\u0641\u0631 \u0623\u062f\u0648\u0627\u062a \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0627\u062d\u062f\u0627\u062b \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0648\u0645\u0631\u0627\u0642\u0628\u062a\u0647\u0627. \u062d\u064a\u062b \u0642\u0627\u0645 \u0623\u062d\u062f \u0627\u0644\u0623\u0637\u0631\u0627\u0641 \u0627\u0644\u062e\u0627\u0631\u062c\u064a\u0629 \u0628\u0625\u0628\u0644\u0627\u063a \u0634\u0631\u0643\u0629 \u0627\u0644\u062a\u0623\u0645\u064a\u0646 \u0627\u0644\u0637\u0628\u064a \u0639\u0646 \u0648\u062c\u0648\u062f \u0647\u062c\u0645\u0629 \u0633\u064a\u0628\u0631\u0627\u0646\u064a\u0629 \u062a\u0636\u0645\u0646\u062a \u0627\u0644\u062f\u062e\u0648\u0644 \u0648\u0627\u0644\u062a\u0639\u062f\u064a\u0644 \u0639\u0644\u0649 \u0622\u0644\u0627\u0641 \u0627\u0644\u0633\u062c\u0644\u0627\u062a \u0627\u0644\u0635\u062d\u064a\u0629 \u0644\u0623\u0643\u062b\u0631 \u0645\u0646 3.5 \u0645\u0644\u064a\u0648\u0646 \u0637\u0641\u0644. \u0648\u0641\u064a \u0627\u0644\u062a\u0642\u0631\u064a\u0631 \u0627\u0644\u0645\u0639\u062f\u0651 \u0628\u0639\u062f \u0627\u0644\u0647\u062c\u0645\u0629 \u0648\u064f\u062c\u0650\u062f \u0623\u0646 \u0645\u0637\u0648\u0651\u0631\u064a \u0645\u0648\u0642\u0639 \u0627\u0644\u0648\u064a\u0628 \u0623\u0647\u0645\u0644\u0648\u0627 \u0646\u0642\u0627\u0637 \u0636\u0639\u0641 \u0627\u0645\u0646\u064a\u0629 \u0645\u0647\u0645\u0651\u0629. \u0648\u0644\u0639\u062f\u0645 \u0648\u062c\u0648\u062f \u0623\u062f\u0648\u0627\u062a \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0627\u062d\u062f\u062b \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0648\u0645\u0631\u0627\u0642\u0628\u062a\u0647\u0627\u060c \u0642\u062f \u064a\u0643\u0648\u0646 \u062a\u0633\u0631\u064a\u0628 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0642\u062f \u062d\u062f\u062b \u0645\u0646 \u0628\u062f\u0627\u064a\u0629 \u0639\u0627\u0645 2013 \u0648\u0627\u0645\u062a\u062f \u0627\u0644\u0649 \u0623\u0643\u062b\u0631 \u0645\u0646 7 \u0633\u0646\u0648\u0627\u062a.</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #2: \u200e \u0648\u0627\u062c\u0647\u062a \u0634\u0631\u0643\u0629 \u0637\u064a\u0631\u0627\u0646 \u0647\u0646\u062f\u064a\u0629 \u0643\u0628\u0631\u0649 \u062a\u0633\u0631\u064a\u0628 \u0628\u064a\u0627\u0646\u0627\u062a \u064a\u0636\u0645 \u0628\u064a\u0627\u0646\u0627\u062a \u062c\u064f\u0645\u0639\u062a \u0644\u0623\u0643\u062b\u0631 \u0645\u0646 \u0639\u0634\u0631 \u0633\u0646\u0648\u0627\u062a \u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0645\u0633\u0627\u0641\u0631\u064a\u0647\u0627 \u0627\u0644\u0634\u062e\u0635\u064a\u0629 \u0645\u0645\u0627 \u064a\u062a\u0636\u0645\u0646 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062c\u0648\u0627\u0632\u0627\u062a \u0648\u0627\u0644\u0628\u0637\u0627\u0642\u0627\u062a \u0627\u0644\u0628\u0646\u0643\u064a\u0629. \u062a\u0633\u0631\u064a\u0628 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062d\u062f\u062b \u0641\u064a \u062e\u062f\u0645\u0629 \u062a\u062e\u0632\u064a\u0646 \u0633\u062d\u0627\u0628\u064a\u0629 \u0645\u0646 \u0645\u0648\u0641\u0651\u0631 \u062e\u062f\u0645\u0627\u062a \u0633\u062d\u0627\u0628\u064a\u0629 \u0648\u0627\u0644\u0630\u064a \u0642\u0627\u0645 \u0628\u062f\u0648\u0631\u0647 \u0628\u062a\u0646\u0628\u064a\u0647 \u0634\u0631\u0643\u0629 \u0627\u0644\u0637\u064a\u0631\u0627\u0646 \u0628\u0648\u062c\u0648\u062f \u0627\u0644\u062a\u0633\u0631\u064a\u0628 \u0628\u0639\u062f \u0645\u062f\u0629.</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #3: \u200e\u0639\u0627\u0646\u062a \u0634\u0631\u0643\u0629 \u0637\u064a\u0631\u0627\u0646 \u0623\u0648\u0631\u0648\u0628\u064a\u0629 \u0643\u0628\u0631\u0649 \u0645\u0646 \u062a\u0633\u0631\u064a\u0628 \u0636\u0645\u0646 \u0644\u0627\u0626\u062d\u0629 \u0627\u0644\u0646\u0638\u0627\u0645 \u0627\u0644\u0639\u0627\u0645 \u0644\u062d\u0645\u0627\u064a\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (GDPR). \u0648\u0642\u062f \u0639\u064f\u0644\u0645 \u0623\u0646 \u0627\u0644\u062a\u0633\u0631\u064a\u0628 \u062d\u062f\u062b \u0628\u0633\u0628\u0628 \u062b\u063a\u0631\u0627\u062a \u0641\u064a \u0646\u0638\u0627\u0645 \u0627\u0644\u062f\u0641\u0639 \u062a\u0645 \u0627\u0633\u062a\u063a\u0644\u0627\u0644\u0647\u0627 \u0645\u0646 \u0642\u0628\u0644 \u0645\u0646\u0641\u0630\u064a \u0627\u0644\u0647\u062c\u0648\u0645 \u0648\u0627\u0644\u0630\u064a\u0646 \u062c\u0645\u0639\u0648\u0627 \u0633\u062c\u0644\u0627\u062a \u0627\u0644\u062f\u0641\u0639 \u0644\u0623\u0643\u062b\u0631 \u0645\u0646 400,000 \u0639\u0645\u064a\u0644. \u0646\u062a\u064a\u062c\u0629 \u0644\u0630\u0644\u0643\u060c \u0642\u0627\u0645 \u0645\u0634\u0631\u0651\u0639 \u0627\u0644\u062e\u0635\u0648\u0635\u064a\u0629 \u0628\u062a\u063a\u0631\u064a\u0645 \u0634\u0631\u0643\u0629 \u0627\u0644\u0637\u064a\u0631\u0627\u0646 20  \u0645\u0644\u064a\u0648\u0646 \u0628\u0627\u0648\u0646\u062f.</p>"},{"location":"ar/A09_2021-Security_Logging_and_Monitoring_Failures/#_6","title":"\u0627\u0644\u0645\u0635\u0627\u062f\u0631","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Logging and Monitoring</p> </li> <li> <p>OWASP Application Security Verification Standard: V8 Logging and Monitoring</p> </li> <li> <p>OWASP Testing Guide: Testing for Detailed Error Code</p> </li> <li> <p>OWASP Cheat Sheet: Application Logging Vocabulary</p> </li> <li> <p>OWASP Cheat Sheet: Logging)   </p> </li> <li> <p>Data Integrity: Recovering from Ransomware and Other Destructive Events</p> </li> <li> <p>Data Integrity: Identifying and Protecting Assets Against Ransomware and Other Destructive Events</p> </li> <li> <p>Data Integrity: Detecting and Responding to Ransomware and Other Destructive Events</p> </li> </ul>"},{"location":"ar/A09_2021-Security_Logging_and_Monitoring_Failures/#cwes","title":"\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0631\u0628\u0637 \u0645\u0639 \u0625\u0637\u0627\u0631 CWEs","text":"<p>CWE-117 Improper Output Neutralization for Logs</p> <p>CWE-223 Omission of Security-relevant Information</p> <p>CWE-532 Insertion of Sensitive Information into Log File</p> <p>CWE-778 Insufficient Logging</p>"},{"location":"ar/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/","title":"A10:2021 \u2013 \u062a\u0632\u0648\u064a\u0631 \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0645\u0646 \u062c\u0627\u0646\u0628 \u0627\u0644\u062e\u0627\u062f\u0645 SSRF","text":""},{"location":"ar/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_1","title":"\u0627\u0644\u0639\u0648\u0627\u0645\u0644","text":"\u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u062d\u062f\u0648\u062b \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0642\u0635\u0648\u0649 \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0645\u062a\u0648\u0633\u0637 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 CVEs 1 2.72% 2.72% 67.72% 67.72% 8.28 6.72 9,503 385"},{"location":"ar/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_2","title":"\u0646\u0638\u0631\u0629 \u0639\u0627\u0645\u0629","text":"<p>\u062d\u064a\u062b \u062a\u064f\u0638\u0647\u0631 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0623\u0646 \u0645\u0639\u062f\u0651\u0644 \u0627\u0644\u062d\u0648\u0627\u062f\u062b \u0643\u0627\u0646 \u0645\u064f\u0646\u062e\u0641\u0636 \u0646\u0633\u0628\u064a\u064b\u0627 \u0628\u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0645\u0639 \u0623\u0646 \u0646\u0633\u0628\u0629 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0627\u0644\u062a\u064a \u062a\u0645 \u0625\u062c\u0631\u0627\u0624\u0647\u0627 \u0643\u0627\u0646\u062a \u0641\u0648\u0642 \u0627\u0644\u0645\u062a\u0648\u0633\u0637 \u0648\u0623\u0646 \u0645\u0639\u062f\u0651\u0644 \u0627\u0644\u0627\u062e\u062a\u0631\u0627\u0642\u0627\u062a \u0627\u0644\u062a\u064a \u062d\u062f\u062b\u062a \u0648\u0627\u062b\u0627\u0631\u0647\u0627 \u0627\u0644\u0645\u062a\u0631\u062a\u0628\u0629 \u0633\u062a\u0643\u0648\u0646 \u0623\u0639\u0644\u0649 \u0645\u0646 \u0627\u0644\u0645\u062a\u0648\u0633\u0637 \u0648\u0645\u0646 \u0627\u0644\u0645\u062d\u062a\u0645\u0644 \u0623\u0646 \u062a\u0643\u0648\u0646 \u0647\u0646\u0627\u0643 \u0645\u062c\u0645\u0648\u0639\u0629 \u0645\u0646 \u0627\u0644\u0645\u0633\u0627\u0647\u0645\u0627\u062a \u0627\u0644\u0635\u063a\u064a\u0631\u0629 \u0623\u0648 \u0627\u0644\u0641\u0631\u062f\u064a\u0629 \u0644\u0647\u0630\u0627 \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0641\u064a \u0625\u0637\u0627\u0631 CWEs \u0648\u0630\u0644\u0643 \u0645\u0646 \u0623\u062c\u0644 \u0631\u0641\u0639 \u0627\u0644\u0648\u0639\u064a \u0627\u0644\u0623\u0645\u0646\u064a\u060c \u0644\u0630\u0627 \u0646\u0623\u0645\u0644 \u0623\u0646 \u064a\u062a\u0645 \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u064a\u0647\u0627 \u0648\u0623\u0646 \u064a\u062a\u0645 \u0625\u062f\u0631\u0627\u062c\u0647\u0627 \u0636\u0645\u0646 \u062a\u0635\u0646\u064a\u0641 \u0623\u0643\u0628\u0631 \u0641\u064a \u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0627\u0644\u0645\u064f\u0642\u0628\u0644\u0629.</p>"},{"location":"ar/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_3","title":"\u0627\u0644\u0648\u0635\u0641","text":"<p>\u064a\u062a\u0645 \u062a\u0632\u0648\u064a\u0631 \u0637\u0644\u0628\u0627\u062a \u0627\u0644\u062e\u0627\u062f\u0645 \u0639\u0646\u062f\u0645\u0627 \u064a\u0642\u0648\u0645 \u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u0648\u064a\u0628 \u0628\u062c\u0644\u0628 \u0645\u0648\u0627\u0631\u062f \u0639\u0646 \u0628\u0639\u062f \u062f\u0648\u0646 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0635\u062d\u0629 \u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0645\u0642\u062f\u0651\u0645 \u0645\u0646 \u0642\u0650\u0628\u0644 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u060c \u062d\u064a\u062b \u064a\u0633\u0645\u062d \u0630\u0644\u0643 \u0644\u0644\u0645\u0647\u0627\u062c\u0645 \u0628\u0625\u062c\u0628\u0627\u0631 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0639\u0644\u0649 \u0625\u0631\u0633\u0627\u0644 \u0637\u0644\u0628 \u0645\u0639\u062f\u0651\u0644 \u0625\u0644\u0649 \u0648\u062c\u0647\u0629 \u063a\u064a\u0631 \u0645\u062a\u0648\u0642\u0639\u0629 \u0644\u0644\u062e\u0627\u062f\u0645\u060c \u062d\u062a\u0649 \u0639\u0646\u062f\u0645\u0627 \u064a\u0643\u0648\u0646 \u0645\u062d\u0645\u064a\u0651 \u0628\u062c\u062f\u0627\u0631 \u062d\u0645\u0627\u064a\u0629\u060c \u0623\u0648 \u0634\u0628\u0643\u0629 \u062e\u0627\u0635\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 VPN \u0623\u0648 \u0623\u064a\u0629 \u0646\u0648\u0639 \u0645\u0646 \u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u062a\u062d\u0643\u0645 \u0628\u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0627\u0644\u0634\u0628\u0643\u0629.</p> <p>\u0646\u0638\u0631\u064b\u0627 \u0644\u0623\u0646 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0648\u064a\u0628 (\u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a\u0629) \u0627\u0644\u062d\u062f\u064a\u062b\u0629 \u062a\u0648\u0641\u0651\u0631 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0645\u064f\u0645\u064a\u0632\u0627\u062a \u0645\u062a\u0642\u062f\u0651\u0645\u0629\u060c \u0641\u0625\u0646 \u062c\u0644\u0628 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0645\u0646 \u0627\u0644\u062e\u0627\u062f\u0645 \u0623\u0635\u0628\u062d \u0633\u064a\u0646\u0627\u0631\u064a\u0648 \u0634\u0627\u0626\u0639. \u0646\u062a\u064a\u062c\u0629 \u0644\u0630\u0644\u0643\u060c \u0641\u0625\u0646 \u0645\u0639\u062f\u0651\u0644 \u062d\u062f\u0648\u062b \u062a\u0632\u0648\u064a\u0631 \u0644\u0637\u0644\u0628\u0627\u062a \u0627\u0644\u062e\u0627\u062f\u0645 \u0622\u062e\u0630 \u0641\u064a \u0627\u0644\u0627\u0632\u062f\u064a\u0627\u062f\u060c \u0644\u0630\u0644\u0643 \u0623\u0635\u0628\u062d \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0647\u0630\u0647 \u0627\u0644\u062b\u063a\u0631\u0629 \u0623\u0634\u062f \u062e\u0637\u0648\u0631\u0629 \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645 \u0639\u0646\u062f\u0645\u0627 \u0638\u0647\u0631\u062a \u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u0633\u062d\u0627\u0628\u064a\u0651\u0629 \u0648\u0643\u0630\u0644\u0643 \u062a\u0639\u0642\u064a\u062f \u0627\u0644\u0628\u0646\u064a\u0629 \u0627\u0644\u062a\u062d\u062a\u064a\u0651\u0629.</p>"},{"location":"ar/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_4","title":"\u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646\u0647\u0627","text":"<p>\u064a\u0633\u062a\u0637\u064a\u0639 \u0627\u0644\u0645\u064f\u0637\u0648\u0651\u0631\u064a\u0646 \u0645\u0646\u0639 \u062a\u0632\u0648\u064a\u0631 \u0637\u0644\u0628\u0627\u062a \u0627\u0644\u062e\u0627\u062f\u0645 \u0628\u062a\u0646\u0641\u064a\u0630 \u0628\u0639\u0636 \u0623\u0648 \u0643\u0644 \u0648\u0633\u0627\u0626\u0644 \u0627\u0644\u062f\u0641\u0627\u0639 \u0627\u0644\u062a\u0627\u0644\u064a\u0629 \u0641\u064a \u0636\u0648\u0627\u0628\u0637 \u0627\u0644\u062f\u0641\u0627\u0639 \u0627\u0644\u0639\u0645\u064a\u0642 (Defense in Depth) :</p>"},{"location":"ar/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_5","title":"\u0645\u0646 \u062e\u0644\u0627\u0644 \u0637\u0628\u0642\u0627\u062a \u0627\u0644\u0634\u0628\u0643\u0629","text":"<ul> <li> <p>\u062a\u0642\u0633\u064a\u0645 \u0648\u0638\u0627\u0626\u0641 \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0639\u0646 \u0628\u0639\u062f \u0641\u064a \u0634\u0628\u0643\u0627\u062a \u0645\u064f\u0646\u0641\u0635\u0644\u0629 \u0644\u062a\u0642\u0644\u064a\u0644 \u062a\u0623\u062b\u064a\u0631 \u062a\u0632\u0648\u064a\u0631 \u0637\u0644\u0628\u0627\u062a \u0627\u0644\u062e\u0627\u062f\u0645.</p> </li> <li> <p>\u0641\u0631\u0636 \u0633\u064a\u0627\u0633\u0627\u062a \u062c\u062f\u0627\u0631 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \"\u0627\u0644\u0631\u0641\u0636 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627\" \u0623\u0648 \u0636\u0628\u0637 \u0622\u0644\u064a\u0627\u062a \u0627\u0644\u062a\u062d\u0643\u0651\u0645 \u0641\u064a \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0627\u0644\u0634\u0628\u0643\u0629 \u0644\u062d\u0638\u0631 \u062c\u0645\u064a\u0639 \u062d\u0631\u0643\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0644\u0644\u0634\u0628\u0643\u0629 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u0628\u0627\u0633\u062a\u062b\u0646\u0627\u0621 \u062d\u0631\u0643\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629.</p> </li> </ul>"},{"location":"ar/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_6","title":"\u0645\u0646 \u062e\u0644\u0627\u0644 \u0637\u0628\u0642\u0627\u062a \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a","text":"<ul> <li> <p>\u0627\u0644\u062a\u0635\u0651\u0641\u064a\u0629 \u0648\u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0635\u062d\u0629 \u062c\u0645\u064a\u0639 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0625\u062f\u062e\u0627\u0644 \u0627\u0644\u0645\u0642\u062f\u0651\u0645\u0629 \u0645\u0646 \u0642\u0650\u0628\u0644 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645.</p> </li> <li> <p>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0639\u0646\u0627\u0648\u064a\u0646 \u0645\u062d\u062f\u0651\u062f\u0629 \u0641\u064a \u0627\u0644\u0631\u0648\u0627\u0628\u0637\u060c URL \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0646\u0627\u0641\u0630 \u0645\u062d\u062f\u0651\u062f\u0629 \u0645\u0639 \u062a\u062d\u062f\u064a\u062f \u0642\u0627\u0626\u0645\u0629 \u0645\u0646 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u0645\u062d\u062f\u0651\u062f\u0629 \u0645\u0633\u0628\u0642\u064b\u0627 \u0641\u064a \u0642\u0627\u0626\u0645\u0629 \u0645\u0633\u0645\u0648\u062d \u0628\u0647\u0627.</p> </li> <li> <p>\u0644\u0627 \u062a\u0642\u0645 \u0628\u0631\u062f \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0644\u0644\u0639\u0645\u064a\u0644 \u0639\u0644\u0649 \u0634\u0643\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u062e\u0627\u0645</p> </li> <li> <p>\u0642\u0645 \u0628\u062a\u0639\u0637\u064a\u0644 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u0648\u062c\u064a\u0647 \u0625\u0644\u0649 HTTP.</p> </li> <li> <p>\u0643\u0646 \u0639\u0644\u0649 \u062d\u0630\u0631 \u0645\u0646 \u0647\u062c\u0645\u0627\u062a \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u0631\u062a\u064a\u0628 \u0627\u0644\u0631\u0627\u0628\u0637 \u0623\u0648 \u0627\u0644\u0623\u062d\u0631\u0641 \u0648\u0627\u0644\u062a\u064a \u0642\u062f \u062a\u0623\u062a\u064a \u0641\u064a \u0628\u0639\u0636 \u0627\u0644\u0647\u062c\u0645\u0627\u062a \u0645\u0646 \u062e\u0644\u0627\u0644 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 DNS \u0623\u0648 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 TOCTOU.</p> </li> </ul> <p>\u0644\u0627 \u062a\u0642\u0645 \u0628\u062a\u062e\u0641\u064a\u0641 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0639\u0644\u0649 \u0647\u062c\u0645\u0627\u062a SSRF \u0645\u0646 \u062e\u0644\u0627\u0644 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0633\u064a\u0627\u0633\u0629 \u0627\u0644\u0645\u0646\u0639 \u0627\u0644\u0645\u0628\u0646\u064a\u0651\u0629 \u0639\u0644\u0649 \u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u062a\u0639\u0628\u064a\u0631\u0627\u062a \u0627\u0644\u0645\u0646\u0637\u0642\u064a\u0629 \u0623\u0648 (Regular Expression). \u062d\u064a\u062b \u0623\u0646 \u0627\u0644\u0645\u0647\u0627\u062c\u0645\u064a\u0646 \u0644\u062f\u064a\u0647\u0645 \u0642\u0648\u0627\u0626\u0645 \u0645\u064f\u0639\u062f\u0651\u0629 \u0645\u0633\u0628\u0642\u064b\u0627 \u0648\u0645\u062a\u0639\u062f\u0651\u062f\u0629 \u0644\u0645\u062d\u0627\u0648\u0644\u0629 \u062a\u062e\u0637\u0651\u064a \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062d\u062c\u0628 \u062a\u0644\u0643.</p>"},{"location":"ar/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_7","title":"\u0623\u0645\u062b\u0644\u0629 \u0639\u0644\u0649 \u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a \u0627\u0644\u0647\u062c\u0648\u0645","text":"<p>\u064a\u0633\u062a\u0637\u064a\u0639 \u0627\u0644\u0645\u0647\u0627\u062c\u0645\u064a\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062a\u0632\u0648\u064a\u0631 \u0637\u0644\u0628\u0627\u062a \u0627\u0644\u062e\u0627\u062f\u0645 \u0644\u0645\u0647\u0627\u062c\u0645\u0629 \u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u0645\u062d\u0645\u064a\u0651\u0629 \u062e\u0644\u0641 \u062c\u062f\u0631\u0627\u0646 \u062d\u0645\u0627\u064a\u0629 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0648\u064a\u0628(WAF)\u060c \u0648\u062c\u062f\u0631\u0627\u0646 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0623\u0648 \u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u062a\u062d\u0643\u0651\u0645 \u0644\u0644\u0648\u0635\u0648\u0644 \u0644\u0644\u0634\u0628\u0643\u0629 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0633\u064a\u0646\u0627\u0631\u064a\u0648 \u0645\u062b\u0644:</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #1: \u0641\u062d\u0635 \u0627\u0644\u0645\u0646\u0627\u0641\u0630 \u0644\u0644\u062e\u0648\u0627\u062f\u0645 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u0641\u064a \u0645\u0639\u0645\u0627\u0631\u064a\u0629 \u0627\u0644\u0634\u0628\u0643\u0629: \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u063a\u064a\u0631 \u0645\u0642\u0633\u0651\u0645\u0629 \u0628\u0634\u0643\u0644 \u062c\u064a\u0651\u062f \u062a\u064f\u0645\u0643\u0651\u0646 \u0627\u0644\u0645\u0647\u0627\u062c\u0645\u064a\u0646 \u0645\u0646 \u0631\u0633\u0645 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u0628\u0634\u0643\u0644 \u062f\u0642\u064a\u0642 \u0648\u064a\u0635\u0644 \u0625\u0644\u0649 \u062a\u0645\u0643\u064a\u0646 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0644\u0645\u0639\u0631\u0641\u0629 \u0641\u064a \u062d\u0627\u0644 \u0643\u0627\u0646\u062a \u0627\u0644\u0645\u0646\u0627\u0641\u0630 \u0645\u0641\u062a\u0648\u062d\u0629 \u0623\u0645 \u0645\u064f\u063a\u0644\u0642\u0629 \u0644\u0644\u062e\u0648\u0627\u062f\u0645 \u0648\u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u0645\u0646 \u062e\u0644\u0627\u0644 \u062f\u0631\u0627\u0633\u0629 \u0623\u0648 \u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0627\u0644\u062e\u0627\u062f\u0645 \u0644\u0637\u0644\u0628\u0627\u062a \u0623\u0648 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0627\u0644\u0648\u0642\u062a \u0627\u0644\u0645\u064f\u0633\u062a\u063a\u0631\u0642 \u0644\u0643\u0644 \u0637\u0644\u0628 \u0639\u0644\u0649 \u0643\u0644 \u0645\u0646\u0641\u0630 \u0645\u062e\u062a\u0644\u0641 \u0648\u0630\u0644\u0643 \u0644\u0645\u0639\u0631\u0641\u0629 \u0641\u064a \u062d\u0627\u0644 \u0643\u0627\u0646 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 SSRF \u0646\u062c\u062d \u0623\u0645 \u0641\u0634\u0644.</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #2: \u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0633\u0627\u0633\u0629 \u063a\u064a\u0631 \u0645\u062d\u0645\u064a\u0651\u0629 \u0648\u0627\u0644\u062a\u064a \u064a\u0633\u062a\u0637\u064a\u0639 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u064a\u0647\u0627: \u064a\u0633\u062a\u0637\u064a\u0639 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u0645\u062b\u0644 \u0645\u0644\u0641 (  file:///etc/passwd)\u0623\u0648 \u062d\u062a\u0649 \u0644\u0644\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0647\u0630\u0647 \u0627\u0644\u062b\u063a\u0631\u0629</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #3: \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0648\u0635\u0641\u064a\u0651\u0629 \u0644\u0644\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u0633\u062d\u0627\u0628\u064a\u0651\u0629 : \u064a\u0645\u062a\u0644\u0643 \u0645\u0639\u0638\u0645 \u0645\u0648\u0641\u0631\u0651\u064a \u0627\u0644\u0633\u062d\u0627\u0628\u0629 \u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0648\u0635\u0641\u064a\u0651\u0629 \u0645\u062b\u0644 http://169.254.169.254    \u0648\u064a\u0645\u0643\u0646 \u0644\u0644\u0645\u0647\u0627\u062c\u0645 \u0642\u0631\u0627\u0621\u0629 \u062a\u0644\u0643 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0648\u0635\u0641\u064a\u0651\u0629 \u0644\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u062d\u0633\u0627\u0633\u0629 \u0645\u0646\u0647\u0627.</p> <p>\u0633\u064a\u0646\u0627\u0631\u064a\u0648 #4: \u0627\u062e\u062a\u0631\u0627\u0642 \u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u0648\u0625\u0633\u0627\u0621\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 \u0645\u0646 \u0642\u0650\u0628\u0644 \u0627\u0644\u0645\u0647\u0627\u062c\u0645: \u064a\u0645\u0643\u0646 \u0644\u0644\u0645\u0647\u0627\u062c\u0645 \u0625\u0633\u0627\u0621\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u0644\u0625\u062c\u0631\u0627\u0621 \u0645\u0632\u064a\u062f \u0645\u0646 \u0627\u0644\u0647\u062c\u0645\u0627\u062a \u0645\u062b\u0644 \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u0627\u062a \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0629 \u0639\u0646 \u0628\u064f\u0639\u062f (RCE) \u0623\u0648 \u0647\u062c\u0648\u0645 \u062d\u062c\u0628 \u0627\u0644\u062e\u062f\u0645\u0629 (DoS).</p>"},{"location":"ar/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_8","title":"\u0627\u0644\u0645\u0635\u0627\u062f\u0631","text":"<ul> <li> <p>OWASP - Server-Side Request Forgery Prevention Cheat Sheet</p> </li> <li> <p>PortSwigger - Server-side request forgery (SSRF)</p> </li> <li> <p>Acunetix - What is Server-Side Request Forgery (SSRF)?</p> </li> <li> <p>SSRF bible</p> </li> <li> <p>A New Era of SSRF - Exploiting URL Parser in Trending Programming Languages!</p> </li> </ul>"},{"location":"ar/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#cwes","title":"\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0631\u0628\u0637 \u0645\u0639 \u0625\u0637\u0627\u0631 CWEs","text":"<p>CWE-918 Server-Side Request Forgery (SSRF)</p>"},{"location":"ar/A11_2021-Next_Steps/","title":"A11:2021 \u2013 \u0627\u0644\u062e\u0637\u0648\u0627\u062a \u0627\u0644\u0645\u0642\u0628\u0644\u0629","text":"<p>\u0627\u0644\u0645\u0646\u0638\u0645\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0639\u0645\u0644 \u0644\u0628\u0646\u0627\u0621 \u0628\u0631\u0646\u0627\u0645\u062c \u0623\u0645\u0646\u064a \u0645\u062a\u0643\u0627\u0645\u0644 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0623\u0648 \u062a\u0642\u062f\u064a\u0645 \u0627\u0633\u062a\u0634\u0627\u0631\u0627\u062a \u0623\u0645\u0646\u064a\u0629 \u0623\u0648 \u062e\u0644\u0642 \u0623\u062f\u0648\u0627\u062a \u0628\u0631\u0645\u062c\u064a\u0629\u061b \u062a\u0623\u0645\u0644 \u0641\u064a \u062a\u0648\u0633\u064a\u0639 \u0646\u0637\u0627\u0642 \u062e\u062f\u0645\u0627\u062a\u0647\u0627. \u062e\u0644\u0627\u0644 \u0630\u0644\u0643 \u0642\u062f \u062a\u0648\u0627\u062c\u0647 \u0647\u0630\u0647 \u0627\u0644\u0645\u0634\u0643\u0644\u0627\u062a \u0627\u0644\u0623\u0631\u0628\u0639\u0629 \u0627\u0644\u062a\u0627\u0644\u064a\u0629 \u0627\u0644\u062a\u064a \u062a\u0633\u062a\u062d\u0642 \u0627\u0644\u0627\u0644\u062a\u0641\u0627\u062a \u0644\u0647\u0627 \u0648\u062a\u062d\u062f\u064a\u062f\u0647\u0627 \u0648\u0645\u0639\u0627\u0644\u062c\u062a\u0647\u0627:</p>"},{"location":"ar/A11_2021-Next_Steps/#_1","title":"\u0645\u0634\u0643\u0644\u0627\u062a \u062c\u0648\u062f\u0629 \u0627\u0644\u0634\u0641\u0631\u0629 \u0627\u0644\u0645\u0635\u062f\u0631\u064a\u0629","text":"\u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u062d\u062f\u0648\u062b \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0642\u0635\u0648\u0649 \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0645\u062a\u0648\u0633\u0637 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 CVEs 38 49.46% 2.22% 60.85% 23.42% 101736 7564 <ul> <li> <p>\u0627\u0644\u0648\u0635\u0641. \u062a\u062a\u0636\u0645\u0646 \u0645\u0634\u0643\u0644\u0627\u062a \u062c\u0648\u062f\u0629 \u0627\u0644\u0634\u0641\u0631\u0629 \u0627\u0644\u0645\u0635\u062f\u0631\u064a\u0629: \u0639\u064a\u0648\u0628\u064b\u0627 \u0623\u0645\u0646\u064a\u0629\u060c \u0623\u0648 \u0627\u0646\u0645\u0627\u0637\u064b\u0627 \u0645\u0639\u0631\u0648\u0641\u0629\u060c \u0623\u0648 \u0625\u0639\u0627\u062f\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u062a\u063a\u064a\u0631\u0627\u062a \u0644\u0623\u063a\u0631\u0627\u0636 \u0645\u062a\u0639\u062f\u062f\u0629\u060c \u0638\u0647\u0648\u0631 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u062d\u0633\u0627\u0633\u0629 \u0641\u064a \u0646\u0645\u0637 \u0627\u0644\u062a\u0635\u062d\u064a\u062d \u201cdebugging output\u201d\u060c \u062a\u0643\u0648\u0646 \u0633\u0644\u0633\u0644\u0629 \u0645\u0646 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u0645\u062a\u062a\u0627\u0628\u0639\u0629\u060c \u0638\u0647\u0648\u0631 \u062e\u0637\u0623 \u0628\u0631\u0645\u062c\u064a \u0628\u0633\u0628\u0628 \u062a\u063a\u064a\u0631 \u0641\u064a \u0644\u0644\u0646\u0638\u0627\u0645 \u0645\u0627 \u0628\u064a\u0646 \u0639\u0645\u0644\u064a\u0629 \u0641\u062d\u0635 \u0627\u0644\u0634\u0631\u0637 \u0627\u0644\u0628\u0631\u0645\u062c\u064a/\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u062e\u0631\u062c\u0627\u062a \u0647\u0630\u0627 \u0627\u0644\u0634\u0631\u0637\u060c \u0638\u0647\u0648\u0631 unassigned \u0623\u0648 signed conversion \u0648\u0627\u0644\u062a\u064a \u064a\u0642\u0648\u0645 \u0628\u0647\u0627 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0628\u0627\u0633\u0645\u201d use after free errors\u201d\u060c \u0648\u0645\u0634\u0643\u0644\u0627\u062a \u0623\u062e\u0631\u0649. \u0645\u0627 \u064a\u0645\u064a\u0632 \u0647\u0630\u0647 \u0627\u0644\u0645\u0634\u0627\u0643\u0644 \u0623\u0646\u0647\u0627 \u064a\u0645\u0643\u0646 \u062a\u062d\u062f\u064a\u062f\u0647\u0627 \u0639\u0627\u062f\u0629\u064b \u0628\u0623\u062f\u0648\u0627\u062a \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u0627\u062a \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0629 \u0627\u0644\u062b\u0627\u0628\u062a\u0629 \u0648stringent compiler flags \u0648linter IDE plugins\u060c \u0623\u0644\u063a\u062a \u0627\u0644\u0644\u063a\u0627\u062a \u0627\u0644\u062d\u062f\u064a\u062b\u0629 \u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 \u0647\u0630\u0647 \u0627\u0644\u0645\u0634\u0643\u0644\u0627\u062a\u060c \u0645\u062b\u0644 \u0645\u0644\u0643\u064a\u0629 \u0627\u0644\u0630\u0627\u0643\u0631\u0629 \u0627\u0648 (memory ownership) \u0627\u0648 \u0645\u0641\u0647\u0648\u0645 (borrowing concept) \u0627\u0648 \u0645\u0641\u0647\u0648\u0645 (Rust\u2019s threading  design) \u0648\u062a\u0637\u0628\u064a\u0642 \u0645\u0641\u0627\u0647\u064a\u0645 \u0623\u062e\u0631\u0649 \u062a\u0637\u0628\u0642 \u0641\u064a \u0622\u0644\u064a\u0629 \u0627\u0644\u0643\u062a\u0627\u0628\u0629.</p> </li> <li> <p>\u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646\u0647\u0627 .\u0642\u0645 \u0628\u062a\u0645\u0643\u064a\u0646 \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u062d\u0631\u0631 \u0648\u062e\u064a\u0627\u0631\u0627\u062a \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0643\u0648\u062f \u0627\u0644\u062b\u0627\u0628\u062a\u0629 \u0644\u0644\u063a\u0629\u060c \u0636\u0639 \u0641\u064a \u0627\u0639\u062a\u0628\u0627\u0631\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u062f\u0627\u0629 \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u0627\u062a \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0629 \u0627\u0644\u062b\u0627\u0628\u062a\u0629. \u0636\u0639 \u0641\u064a \u0627\u0639\u062a\u0628\u0627\u0631\u0643 \u0645\u0627 \u0625\u0630\u0627 \u0643\u0627\u0646 \u0645\u0646 \u0627\u0644\u0645\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0644\u063a\u0629 \u0623\u0648 \u0625\u0637\u0627\u0631 \u0639\u0645\u0644 \u064a\u0639\u0645\u0644 \u0639\u0644\u0649 \u0627\u0644\u062a\u062e\u0644\u0635 \u0645\u0646 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u0645\u0639\u062a\u0627\u062f\u0629\u060c \u0645\u062b\u0644 Rust \u0623\u0648 Go.</p> </li> <li> <p>\u0645\u062b\u0627\u0644 \u0639\u0644\u0649 \u0633\u064a\u0646\u0627\u0631\u064a\u0648 \u0647\u062c\u0648\u0645. \u0642\u062f \u064a\u0642\u0648\u0645 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0628\u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u062d\u0633\u0627\u0633\u0629 \u0627\u0648 \u064a\u0642\u0648\u0645 \u0628\u0627\u0644\u062a\u063a\u064a\u0631 \u0627\u0644\u063a\u064a\u0631 \u0645\u0635\u0631\u062d \u0628\u0647 \u0639\u0644\u0649 \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0645\u0646 \u062e\u0644\u0627\u0644 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0645\u0627 \u064a\u0633\u0645\u0649 (race condition) \u0639\u0628\u0631 \u0645\u0624\u0634\u0631\u0627\u062a \u0645\u062a\u0631\u0627\u0628\u0637\u0629 \u0648\u0645\u062a\u0639\u062f\u062f\u0629</p> </li> <li> <p>\u0627\u0644\u0645\u0635\u0627\u062f\u0631</p> <ul> <li> <p>OWASP Code Review Guide</p> </li> <li> <p>Google Code Review Guide</p> </li> </ul> </li> </ul>"},{"location":"ar/A11_2021-Next_Steps/#_2","title":"\u062d\u062c\u0628 \u0627\u0644\u062e\u062f\u0645\u0629","text":"\u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u062d\u062f\u0648\u062b \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0642\u0635\u0648\u0649 \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0645\u062a\u0648\u0633\u0637 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 CVEs 8 17.54% 4.89% 79.58% 33.26% 66985 973 <ul> <li> <p>\u0627\u0644\u0648\u0635\u0641. \u062f\u0627\u0626\u0645\u064b\u0627 \u0645\u0627 \u064a\u0643\u0648\u0646 \u0647\u062c\u0645\u0627\u062a \u062d\u062c\u0628 \u0627\u0644\u062e\u062f\u0645\u0629 \u0645\u0645\u0643\u0646\u064b\u0627 \u0625\u0630\u0627 \u062a\u0648\u0641\u0631\u062a \u0627\u0644\u0645\u0635\u0627\u062f\u0631 \u0627\u0644\u0643\u0627\u0641\u064a\u0629. \u0648\u0644\u0643\u0646 \u0645\u0645\u0627\u0631\u0633\u0627\u062a \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0648\u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0644\u0647\u0627 \u062a\u0623\u062b\u064a\u0631 \u0643\u0628\u064a\u0631 \u0639\u0644\u0649 \u0642\u0648\u0629 \u062d\u062c\u0628 \u0627\u0644\u062e\u062f\u0645\u0629. \u0644\u0646\u0641\u062a\u0631\u0636 \u0627\u0646 \u0623\u064a \u0634\u062e\u0635  \u0627\u0641\u062a\u0631\u0636 \u0623\u0646 \u0623\u064a \u0634\u062e\u0635 \u0644\u062f\u064a\u0647 \u0635\u0644\u0627\u062d\u064a\u0629 \u0627\u0644\u062f\u062e\u0648\u0644 \u0644\u0645\u0644\u0641 \u0643\u0628\u064a\u0631\u060c \u0623\u0648 \u0623\u0646\u0647 \u064a\u0642\u0648\u0645 \u0628\u0639\u0645\u0644\u064a\u0629 \u062d\u0633\u0627\u0628\u064a\u0629 \u062a\u0633\u062a\u0647\u0644\u0643 \u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0648\u062a\u062d\u062f\u062b \u0641\u064a \u0643\u0644 \u0635\u0641\u062d\u0629 \u0645\u0646 \u0635\u0641\u062d\u0627\u062a \u0627\u0644\u0645\u0648\u0642\u0639. \u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u062d\u0627\u0644\u0629\u060c \u062a\u062d\u062f\u062b \u0647\u062c\u0645\u0627\u062a \u062d\u062c\u0628 \u0627\u0644\u062e\u062f\u0645\u0629 \u0645\u0646 \u062f\u0648\u0646 \u0623\u064a \u062c\u0647\u0648\u062f \u062a\u0630\u0643\u0631.</p> </li> <li> <p>\u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646\u0647\u0627. -   \u0642\u0645 \u0628\u0639\u0645\u0644 \u0627\u062e\u062a\u0628\u0627\u0631 \u0627\u0644\u0634\u0641\u0631\u0629 \u0627\u0644\u0645\u0635\u062f\u0631\u064a\u0629 \u0644\u0648\u062d\u062f\u0629 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0645\u0631\u0643\u0632\u064a\u0629CPU\u060c \u0648\u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a / \u0627\u0644\u0645\u062e\u0631\u062c\u0627\u062a\u060c \u0648\u0627\u0644\u0630\u0627\u0643\u0631\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629. \u0642\u0645 \u0628\u0625\u0639\u0627\u062f\u0629 \u0647\u0646\u062f\u0633\u0629 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062a\u064a \u062a\u0633\u062a\u0647\u0644\u0643 \u0627\u0644\u0645\u0635\u0627\u062f\u0631 \u0623\u0648 \u062a\u062d\u0633\u064a\u0646\u0647\u0627 \u0623\u0648 \u062a\u062e\u0632\u064a\u0646\u0647\u0627 \u0645\u0624\u0642\u062a\u064b\u0627. \u0636\u0639 \u0641\u064a \u0627\u0639\u062a\u0628\u0627\u0631\u0643 \u0636\u0648\u0627\u0628\u0637 \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0644\u0623\u0634\u064a\u0627\u0621 \u0630\u0627\u062a \u0627\u0644\u0627\u062d\u062c\u0627\u0645 \u0627\u0644\u0643\u0628\u064a\u0631\u0629 \u0644\u0636\u0645\u0627\u0646 \u0623\u0646 \u0627\u0644\u0623\u0641\u0631\u0627\u062f \u0627\u0644\u0645\u0635\u0631\u062d \u0644\u0647\u0645 \u0641\u0642\u0637 \u064a\u0645\u0643\u0646\u0647\u0645 \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0645\u0644\u0641\u0627\u062a \u0623\u0648 \u0623\u0634\u064a\u0627\u0621 \u0636\u062e\u0645\u0629 \u0623\u0648 \u0642\u0645 \u0628\u062e\u062f\u0645\u062a\u0647\u0645 \u0639\u0646 \u0637\u0631\u064a\u0642 \u0634\u0628\u0643\u0629 \u062a\u062e\u0632\u064a\u0646 \u0645\u0624\u0642\u062a.</p> </li> <li> <p>\u0645\u062b\u0627\u0644 \u0639\u0644\u0649 \u0633\u064a\u0646\u0627\u0631\u064a\u0648 \u0647\u062c\u0648\u0645. -    \u0642\u062f \u064a\u062a\u0648\u0642\u0639 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0623\u0646 \u0643\u0644 \u0639\u0645\u0644\u064a\u0629 \u062a\u0633\u062a\u063a\u0631\u0642 \u0644\u062a\u0646\u0641\u064a\u0630\u0647\u0627 \u0645\u0646 5 \u0625\u0644\u0649 10 \u062b\u0648\u0627\u0646\u064d \u062d\u062a\u0649 \u062a\u0643\u062a\u0645\u0644. \u0644\u0630\u0644\u0643 \u064a\u0642\u0648\u0645 \u0628\u062a\u0634\u063a\u064a\u0644 \u0623\u0631\u0628\u0639 \u0639\u0645\u0644\u064a\u0627\u062a \u0641\u064a \u0646\u0641\u0633 \u0627\u0644\u0648\u0642\u062a \u0648\u0644\u0647\u0627 (thread) \u0645\u062d\u062f\u062f\u060c \u0633\u064a\u0628\u062f\u0648 \u0644\u0643 \u0623\u0646 \u0627\u0644\u062e\u0627\u062f\u0645 \u0642\u062f \u064a\u062a\u0648\u0642\u0641 \u0639\u0646 \u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0628\u0633\u0628\u0628 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u0636\u063a\u0637. \u0644\u0630\u0644\u0643 \u064a\u0639\u0648\u062f \u0627\u0644\u0645\u0647\u0627\u062c\u0645 (1000 thread )  \u0644\u0643\u064a \u064a\u062a\u0639\u0637\u0644 \u0627\u0644\u0646\u0638\u0627\u0645 \u0648\u0644\u0627 \u064a\u0633\u062a\u062c\u064a\u0628 \u0628\u0634\u0643\u0644 \u0643\u0627\u0645\u0644</p> </li> <li> <p>\u0627\u0644\u0645\u0635\u0627\u062f\u0631</p> <ul> <li> <p>OWASP Cheat Sheet: Denial of Service</p> </li> <li> <p>OWASP Attacks: Denial of Service</p> </li> </ul> </li> </ul>"},{"location":"ar/A11_2021-Next_Steps/#_3","title":"\u0627\u062f\u0627\u0631\u0629 \u0627\u062e\u0637\u0627\u0621 \u0627\u0644\u0630\u0627\u0643\u0631\u0629","text":"\u0631\u0628\u0637\u0647\u0627 \u0645\u0639 CWEs \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u062d\u062f\u0648\u062b \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062d\u062f\u0648\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0642\u0635\u0648\u0649 \u0645\u062a\u0648\u0633\u0637 \u0645\u0639\u062f\u0644 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0645\u062a\u0648\u0633\u0637 \u0627\u0633\u062a\u063a\u0644\u0627\u0644 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0625\u062c\u0645\u0627\u0644\u064a \u0646\u0642\u0627\u0637 \u0627\u0644\u0636\u0639\u0641 CVEs 14 7.03% 1.16% 56.06% 31.74% 26576 16184 <ul> <li> <p>\u0627\u0644\u0648\u0635\u0641. \u063a\u0627\u0644\u0628\u064b\u0627 \u0645\u0627 \u062a\u062a\u0645 \u0643\u062a\u0627\u0628\u0629 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0648\u064a\u0628 \u0628\u0644\u063a\u0627\u062a \u064a\u0645\u0643\u0646 \u0627\u0644\u062a\u062d\u0643\u0645 \u0628\u0630\u0627\u0643\u0631\u062a\u0647\u0627\u060c \u0645\u062b\u0644 Java \u0623\u0648 .NET \u0623\u0648 node.js (JavaScript \u0623\u0648 TypeScript). \u0648\u0645\u0639 \u0630\u0644\u0643\u060c \u062a\u062a\u0645 \u0643\u062a\u0627\u0628\u0629 \u0647\u0630\u0647 \u0627\u0644\u0644\u063a\u0627\u062a \u0628\u0644\u063a\u0627\u062a \u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u062a\u064a \u0628\u0647\u0627 \u0645\u0634\u0643\u0644\u0627\u062a \u0641\u064a \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0630\u0627\u0643\u0631\u0629\u060c \u0645\u062b\u0644 (buffer or heap  overflows\u060c use after free\u060c integer overflows\u060c \u0648\u0645\u0634\u0643\u0644\u0627\u062a \u0623\u062e\u0631\u0649)\u060c \u0643\u0645\u0627 \u0627\u0646 \u0647\u0646\u0627\u0643 \u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 \u062d\u0627\u0644\u0627\u062a \u0627\u0644\u062a\u0647\u0631\u0628 \u0645\u0646 \u0648\u0636\u0639 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 (Sandbox) \u0639\u0644\u0649 \u0645\u0631 \u0627\u0644\u0633\u0646\u064a\u0646\u060c \u0648\u0627\u0644\u062a\u064a \u062a\u062b\u0628\u062a \u0627\u0646 \u0644\u063a\u0629 \u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u0648\u064a\u0628 \u0627\u0633\u0627\u0633\u0627\u064b \u0644\u064a\u0633\u062a \u0627\u0645\u0646\u0647 \u0643\u0645\u0627 \u062a\u0645 \u0648\u0635\u0641\u0647\u0627.</p> </li> <li> <p>\u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646\u0647\u0627. \u062a\u062a\u0645 \u0627\u0644\u0622\u0646 \u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 \u0648\u0627\u062c\u0647\u0627\u062a \u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062d\u062f\u064a\u062b\u0629 \u0628\u0644\u063a\u0627\u062a \u0622\u0645\u0646\u0629 \u0644\u0644\u0630\u0627\u0643\u0631\u0629 \u0645\u062b\u0644 Rust \u0623\u0648 Go. \u0628\u0627\u0644\u0646\u0633\u0628\u0629 \u0644\u0640Rust\u060c \u062a\u0639\u062a\u0628\u0631 \u0633\u0644\u0627\u0645\u0629 \u0627\u0644\u0630\u0627\u0643\u0631\u0629 \u0633\u0645\u0629 \u0623\u0633\u0627\u0633\u064a\u0629 \u0644\u0644\u063a\u0629. \u0628\u0627\u0644\u0646\u0633\u0628\u0629 \u0644\u0644\u0634\u0641\u0631\u0629 \u0627\u0644\u0645\u0635\u062f\u0631\u064a\u0629 \u0627\u0644\u062d\u0627\u0644\u064a\u0629\u060c \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0643\u0648\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0639\u0644\u0627\u0645\u0627\u062a \u0627\u0644\u0645\u062a\u0631\u062c\u0645 \u201cstrict compiler flags\u201d \u0648 (strong typing, static code analysis, \u060c fuzz testing) \u0645\u0641\u064a\u062f\u064b\u0627 \u0641\u064a \u062a\u062d\u062f\u064a\u062f \u062a\u0633\u0631\u0628 \u0627\u0644\u0630\u0627\u0643\u0631\u0629 \u0648\u0627\u0644\u0630\u0627\u0643\u0631\u0629 \u0648\u062a\u062c\u0627\u0648\u0632 \u0627\u0644\u0648\u0642\u062a \u0627\u0644\u0645\u062d\u062f\u062f \u0648\u063a\u064a\u0631 \u0630\u0644\u0643</p> </li> <li> <p>\u0645\u062b\u0627\u0644 \u0639\u0644\u0649 \u0633\u064a\u0646\u0627\u0631\u064a\u0648 \u0647\u062c\u0648\u0645 \u0623\u0646 \u062b\u063a\u0631\u0627\u062a (Buffer  \u0648  heap overflows) \u0647\u064a \u0645\u0646 \u0623\u062e\u0637\u0631 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0639\u0644\u0649 \u0645\u0631 \u0627\u0644\u0633\u0646\u064a\u0646\u060c \u062d\u064a\u062b \u064a\u0642\u0648\u0645 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0628\u0625\u0631\u0633\u0627\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0649 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c\u060c \u0648\u0627\u0644\u062a\u064a \u064a\u0642\u0648\u0645 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0628\u062a\u062e\u0632\u064a\u0646\u0647\u0627 \u0628\u0634\u0643\u0644 \u0645\u0624\u0642\u062a \u0641\u064a \u0645\u062e\u0632\u0646 \u0635\u063a\u064a\u0631 \u0627\u0644\u062d\u062c\u0645. \u0648\u0639\u0646\u062f\u0645\u0627 \u064a\u0642\u0648\u0645 \u0627\u0644\u0645\u0647\u0627\u062c\u0645 \u0628\u0625\u0631\u0633\u0627\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u0644\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0627\u0643\u0628\u0631 \u0645\u0646 \u062d\u062c\u0645 \u0627\u0644\u0645\u062e\u0632\u0646 \u064a\u062d\u062f\u062b \u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u0641\u0648\u0642 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u0627\u062a \u0627\u0644\u0645\u062e\u0632\u0646\u0629. \u0648\u0627\u0644\u062a\u064a \u062a\u0633\u0645\u062d \u0644\u0644\u0645\u0647\u0627\u062c\u0645 \u0628\u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0627\u0644\u0648\u0638\u0627\u0626\u0641 \u0627\u0644\u062a\u064a \u062a\u0645\u0643\u0646\u0647 \u0645\u0646 \u0627\u0644\u062a\u062d\u0643\u0645 \u0648\u0627\u0644\u0633\u064a\u0637\u0631\u0629 \u0639\u0644\u0649 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0648\u0648\u0638\u0627\u0626\u0641\u0647\u060c</p> </li> <li> <p>\u0627\u0644\u0645\u0635\u0627\u062f\u0631</p> <ul> <li> <p>OWASP Vulnerabilities: Buffer Overflow</p> </li> <li> <p>OWASP Attacks: Buffer Overflow</p> </li> <li> <p>Science Direct: Integer Overflow</p> </li> </ul> </li> </ul>"},{"location":"de/","title":"Einf\u00fchrung","text":""},{"location":"de/#willkommen-bei-den-owasp-top-10-2021","title":"Willkommen bei den OWASP Top 10 \u2013 2021","text":"<p>Willkommen zur neuesten Ausgabe der OWASP Top 10! Die OWASP Top 10:2021 sind v\u00f6llig neu, mit einem neuen Grafikdesign mit Piktogrammen je Risiko und Mobilger\u00e4te-freundlichen Webseiten.</p> <p>Ein gro\u00dfes Dankesch\u00f6n an alle, die mit ihrer Zeit und Daten f\u00fcr diese Ausgabe beigetragen haben. Ohne Sie w\u00e4re diese Version nicht zustande gekommen. HERZLICHEN DANK!</p>"},{"location":"de/#was-sich-in-den-top-10-fur-2021-geandert-hat","title":"Was sich in den Top 10 f\u00fcr 2021 ge\u00e4ndert hat","text":"<p>Es gibt drei neue Kategorien, vier Kategorien mit \u00c4nderungen im Namen und teilweise auch im Umfang (im englischen Original, siehe auch Vorwort der deutschen Version) und eine gewisse Konsolidierung in den Top 10 f\u00fcr 2021. Wir haben bei Bedarf Namen ge\u00e4ndert, um uns auf die jeweilige Grundursache statt auf Symptome zu konzentrieren.</p> <p></p> <ul> <li>A01:2021-Mangelhafte Zugriffskontrolle steigt von der f\u00fcnften Position in die Kategorie mit dem schwerwiegendsten Sicherheitsrisiko f\u00fcr Webanwendungen auf. Die uns zur Verf\u00fcgung gestellten Daten zeigen, dass im Durchschnitt 3,81% der getesteten Anwendungen eine oder mehrere Common Weakness Enumerations (CWEs) dieser Kategorie aufweisen. Insgesamt wurden mehr als 318.000 CWEs in dieser Risikokategorie genannt. Die 34 CWE-Typen, die wir der 'mangelhaften Zugriffskontrolle' zuordneten, traten in Anwendungen h\u00e4ufiger auf, als die jeder anderen Kategorie.</li> <li>A02:2021-Fehlerhafter Einsatz von Kryptographie steigt mit neuem Namen um eine Position auf Nummer 2 auf. Bisher hie\u00df diese Kategorie A3:2017-Sensitive Data Exposure, was eher ein (allgemeines) Symptom, als die Grundursache war. Der neue Name fokussiert auf Fehler im Zusammenhang mit der Kryptographie, wie dies bereits implizit der Fall war. Diese Kategorie f\u00fchrt h\u00e4ufig zur Offenlegung vertraulicher Daten oder zur Kompromittierung des Systems.</li> <li>A03:2021-Injection steigt von der ersten auf die dritte Position ab. 94% der Anwendungen wurden auf eine Art von 'Injection' getestet, mit einer maximalen Inzidenzrate von 19% und einer durchschnittlichen Rate von 3,37%. Die 33 CWE-Typen dieser Kategorie weisen mit einem Vorkommen von insgesamt 274.000 Nennungen die zweith\u00e4ufigsten Vorf\u00e4lle bei Webanwendungen auf. 'Cross-Site Scripting' (XSS) wurde in dieser Ausgabe der Top 10 nun Teil dieser Kategorie.</li> <li>A04:2021-Unsicheres Anwendungsdesign ist eine neue Kategorie dieser Ausgabe, die sich mit Risiken im Zusammenhang mit Designfehlern bei Anwendungen besch\u00e4ftigt. Um die IT-Sicherheit fr\u00fcher im Software-Entwicklungsprozess zu ber\u00fccksichtigen, brauchen wir mehr Bedrohungsmodellierung, sichere Entwurfsmuster und -prinzipien sowie Referenzarchitekturen. Ein unsicheres Design kann nicht durch eine perfekte Implementierung behoben werden, da die erforderlichen Sicherheitsma\u00dfnahmen definitionsgem\u00e4\u00df nie zur Abwehr bestimmter Angriffe ber\u00fccksichtigt und implementiert wurden.</li> <li>A05:2021-Sicherheitsrelevante Fehlkonfiguration wechselt von Position 6 in der vorherigen Ausgabe einen Platz nach oben. 90% der Anwendungen wurden auf irgendeine Art von Fehlkonfiguration getestet, mit einer durchschnittlichen Inzidenzrate von 4,5% und \u00fcber 208.000 CWEs, die dieser Risikokategorie zugeordnet wurden. Angesichts der zunehmenden Verlagerung  zu hoch konfigurierbarer Software, ist es nicht verwunderlich, dass diese Kategorie aufsteigt. Die fr\u00fchere Kategorie f\u00fcr A4:2017-XML External Entities (XXE) ist jetzt auch Teil dieses Riikos.</li> <li>A06:2021-Unsichere oder veraltete Komponenten trug zuvor den Titel \"A9:2017-Using Components with Known Vulnerabilities\"  und ist Nr. 2 in der Top-10-Community-Umfrage, verf\u00fcgte jedoch \u00fcber gen\u00fcgend Nennungen in den gespendeten Daten, um es bereits dar\u00fcber in die Top 10 zu schaffen. Diese Kategorie steigt von Position 9 im Jahr 2017 auf Position 6 auf. Es handelt sich hierbei um ein bekanntes Problem, dessen Risiko wir nur schwer testen und bewerten k\u00f6nnen. Es ist die einzige Kategorie, bei der die zugeordneten CWEs von keiner 'Common Vulnerability and Exposure' (CVE) referenziert wird, sodass in ihren Bewertungen ein mittlerer Standard-Score von 5,0 f\u00fcr Exploit und in der Auswirkung ber\u00fccksichtigt werden.</li> <li>A07:2021-Fehlerhafte Authentifizierung f\u00e4llt von der zweiten Position auf Platz 7 zur\u00fcck. Das Risiko enth\u00e4lt jetzt CWEs, die eher mit Identifikationsfehlern zusammenh\u00e4ngen. Diese Kategorie ist immer noch ein fester Bestandteil der Top 10, aber die zunehmende Verf\u00fcgbarkeit standardisierter Frameworks scheint hier zu helfen.</li> <li>A08:2021-Fehlerhafte Pr\u00fcfung der Software- und Datenintegrit\u00e4t ist eine weitere, neue Kategorie f\u00fcr die Ausgabe von 2021, die sich auf Annahmen im Zusammenhang mit Software-Updates, kritischen Daten und CI/CD-Pipelines ohne \u00dcberpr\u00fcfung der Integrit\u00e4t befasst. Die 10 CWE-Typen dieser Kategorie werden von 'Common Vulnerability and Exposures' (CVEs) mit den h\u00f6chsten 'Common Vulnerability Scoring System' (CVSS)-Scores referenziert. A8:2017-Security Misconfiguration ist jetzt ein Teil dieser umfangreicher gewordenen Kategorie.</li> <li>A09:2021-Unzureichendes Logging und Sicherheitsmonitoring hie\u00df fr\u00fcher A10:2017-Insufficient Logging&amp;Monitoring, wurde auf Basis der Top-10-Community-Umfrage (Nr. 3) hinzugef\u00fcgt und r\u00fcckt von Platz 10 auf. Diese Kategorie wurde erweitert, um mehr Fehlertypen abzudecken, ist schwierig zu testen und ist in den CVE/CVSS-Daten nicht gut vertreten. Fehler in dieser Kategorie k\u00f6nnen sich jedoch direkt auf die Sichtbarkeit, Alarmierung bei Vorf\u00e4llen und Forensik der Anwendung auswirken.</li> <li>A10:2021-Server-Side Request Forgery wurde aus der Top-10-Community-Umfrage (Nr. 1) hinzugef\u00fcgt. Die Daten zeigen eine relativ niedrige Inzidenzrate bei einer \u00fcberdurchschnittlichen Testabdeckung sowie \u00fcberdurchschnittlichen Bewertungen f\u00fcr Exploit- und Impact-Potenzial. Diese Kategorie entspricht dem Szenario, bei dem die Mitglieder der Sicherheits-Community uns mitteilen, dass dies wichtig ist, auch wenn es in den Daten zu diesem Zeitpunkt nicht abgebildet wird.</li> </ul>"},{"location":"de/#methodik","title":"Methodik","text":"<p>Diese Ausgabe der Top 10 ist datengest\u00fctzter denn je, aber nicht mit blindem Vertrauen. Wir haben acht der zehn Kategorien aus den Datenbeitr\u00e4gen und zwei Kategorien aus der Experten-Umfrage in der OWASP-Community mit den h\u00f6chsten Bewertungen ausgew\u00e4hlt. Wir tun dies aus einer grunds\u00e4tzlichen, methodischen \u00dcberlegung: Der Blick auf die erhaltenen Daten ist ein Blick in die Vergangenheit. IT-Sicherheitsforschende nehmen sich Zeit, um neue Schwachstellen und neue M\u00f6glichkeiten zu finden, diese zu testen. Es braucht Zeit, diese Tests in Tools und Prozesse zu integrieren. Bis eine Schwachstelle in gro\u00dfem Ma\u00dfstab zuverl\u00e4ssig getestet wird, sind wahrscheinlich Jahre vergangen. Um diesen Umstand auszugleichen, nutzen wir eine Community-Umfrage, um Expertinnen und Experten f\u00fcr Anwendungssicherheit und Software-Entwicklung an vorderster Front zu befragen, was ihrer Meinung nach wesentliche Schwachstellen sind, die die Auswertung der Datenstatistik m\u00f6glicherweise noch nicht aufzeigt.</p> <p>Wir haben einige, wichtige \u00c4nderungen vorgenommen, um die Top 10 weiterzuentwickeln.</p>"},{"location":"de/#wie-die-kategorien-aufgebaut-sind","title":"Wie die Kategorien aufgebaut sind","text":"<p>Einige Kategorien haben sich gegen\u00fcber der vorherigen Ausgabe der OWASP Top Ten von 2017 ge\u00e4ndert. Im Folgenden finden Sie eine Zusammenfassung der \u00c4nderungen in den einzelnen Kategorien.</p> <p>Fr\u00fchere Datenerhebungen konzentrierten sich auf eine vorgegebene Teilmenge von etwa 30 CWE-Typen. In einem Freitextfeld wurde nach zus\u00e4tzlichen Erkenntnissen gefragt. Wir haben gelernt, dass sich Unternehmen in erster Linie auf diese 30 CWE-Typen konzentrieren und nur selten weitere CWEs erg\u00e4nzten, die sie gefunden hatten. In dieser Ausgabe haben wir das Verfahren ge\u00f6ffnet und nur nach Daten gefragt, ohne Einschr\u00e4nkung auf bestimmte CWE-Typen. Wir fragten nach der Anzahl der getesteten Anwendungen f\u00fcr ein bestimmtes Jahr (ab 2017) und nach der Anzahl der Anwendungen, bei denen mindestens ein CWE im Test gefunden wurde. Mit dieser Vorgehensweise k\u00f6nnen wir erkennen, wie oft die einzelnen CWE-Typen jeweils in den Anwendungen vorkommen. Wir ignorieren dabei f\u00fcr unsere Zwecke bewusst die H\u00e4ufigkeit von Schwachstellen je Anwendung. W\u00e4hrend es in anderen Situationen sinnvoll und notwendig sein kann, w\u00fcrde sie hier nur das tats\u00e4chliche Vorkommen in der Anwendungspopulation verschleiern. Ob in einer Anwendung ein CWE-Typ viermal vorkommt oder 4.000 Mal, ist f\u00fcr die Risikoberechnung der Top 10 nicht relevant. Durch dieses Vorgehen ist die Datenbasis von etwa 30 CWE-Typen auf fast 400 gestiegen, die wir f\u00fcr diese Ausgabe analysiert haben. Wir planen, in Zukunft weitere zus\u00e4tzliche Datenanalysen durchzuf\u00fchren. Dieser deutliche Anstieg der CWE-Typen erfordert \u00c4nderungen in der Strukturierung der Kategorien. </p> <p>Wir haben mehrere Monate damit verbracht, CWE-Typen zu gruppieren und zu kategorisieren, und h\u00e4tten noch weitere Monate damit fortfahren k\u00f6nnen. Irgendwann mussten wir zu einem Ergebnis kommen. Es gibt sowohl CWEs, die sich auf Grundursachen beziehen, als auch solche, die sich auf Symptome beziehen. Beispiele f\u00fcr Grundursache-Typen sind \u201eKryptografischer Fehler\u201c und \u201eFehlkonfiguration\u201c, f\u00fcr Symptomtypen k\u00f6nnen \u201eSensitive Data Exposure\u201c (Verlust der Vertraulichkeit sensibler Daten) und \u201eDenial of Service\u201c (mutwillige Dienstblockade) genannt werden. Wir haben uns entschieden, uns - wann immer m\u00f6glich - auf die Grundursache zu konzentrieren, da dies sinnvoller ist, um Hinweise zur Identifizierung und Behebung zu geben. Sich auf die Grundursache statt auf das Symptom zu konzentrieren, ist kein neues Konzept. Die Top Ten waren bisher eine Mischung aus Symptomen und Grundursachen. CWEs sind ebenfalls eine Mischung aus Symptomen und Grundursachen. Wir gehen einfach bewusster damit um und benennen sie.In dieser Version gibt es durchschnittlich 19,6 CWE-Typen pro Top10-Kategorie, wobei das Minimum bei 1 CWE f\u00fcr A10:2021-Server-Side Request Forgery und das Maximum bei 40 CWEs in A04:2021-Unsicheres Anwendungsdesign liegt. Diese aktualisierte Kategoriestruktur bietet zus\u00e4tzliche Vorteile bei Schulungen, da sich Unternehmen jeweils auf die CWEs konzentrieren k\u00f6nnen, die f\u00fcr eine Programmiersprache/ein Framework besonders sinnvoll erscheinen.</p>"},{"location":"de/#wie-die-daten-zur-auswahl-und-priorisierung-der-kategorien-verwendet-werden","title":"Wie die Daten zur Auswahl und Priorisierung der Kategorien verwendet werden","text":"<p>Im Jahr 2017 haben wir die Top10-Kategorien zun\u00e4chst nach der H\u00e4ufigkeit ihres Vorkommens in den Daten klassifiziert, um die Verbreitung zu bestimmen. Die weiteren Risikofaktoren Ausnutzbarkeit, Auffindbarkeit und technische Auswirkungen haben wir dann durch Teamdiskussionen basierend auf CVSS-Scores und jahrzehntelanger Erfahrung eingestuft. In 2021 wollten wir neben der, aus den aktuellen Daten abgeleiteten Verbreitung, nach M\u00f6glichkeit auch zur Einwertung der Faktoren Ausnutzbarkeit und (technische) Auswirkungen ausschlie\u00dflich Daten verwenden.</p> <p>Wir haben OWASP Dependency Check heruntergeladen, die CVSS-Exploit- und Impact-Scores extrahiert und sie nach den verwandten CWE-Typen gruppiert. Es war einiges an Recherche und Aufwand erforderlich, da zwar alle CVEs \u00fcber CVSSv2-Einwertungen verf\u00fcgen, bei den jedoch teilweise noch M\u00e4ngel vorhanden sind, die erst durch CVSSv3 beheben wurden. Ab einem bestimmten Zeitpunkt haben alle CVEs auch ein CVSSv3-Score erhalten. Dar\u00fcber hinaus wurden die Bewertungsskalen und Formeln zwischen CVSSv2 und CVSSv3 ver\u00e4ndert.</p> <p>In CVSSv2 konnten sowohl die Kategorie Exploit als auch (Technical) Impact Werte bis zu 10,0 betragen, aber die Formel w\u00fcrde sie auf 60% f\u00fcr Exploit und 40% f\u00fcr Impact begrenzen. In CVSSv3 ist das theoretische Maximum f\u00fcr Exploit auf 6,0 und f\u00fcr Impact auf 4,0 begrenzt. Unter Ber\u00fccksichtigung der Gewichtung in der Formel von CVSSv3 erh\u00f6hte sich der Einfluss der Impact-Bewertung, im Durchschnitt um fast eineinhalb Punkte, der f\u00fcr Exploit sank im Durchschnitt um fast einen halben Punkt.</p> <p>Im OWASP Dependency Check gibt es 125.000 Datens\u00e4tze der National Vulnerability Database (NVD) in der CVEs, einer CWE zugeordnet sind, und es gibt 241 CWEs, die mindestens einer CVE zugeordnet sind. 62.000 CWEs haben einen CVSSv3-Score, was in etwa der H\u00e4lfte des Datenbestands entspricht.</p> <p>F\u00fcr die Top Ten 2021 haben wir die durchschnittlichen Exploit- und Impact-Werte wie folgt berechnet. Wir haben alle CVEs mit CVSS-Scores nach CWE gruppiert und sowohl die Exploit- als auch die Impact-Scores jeweils getrennt f\u00fcr die CVEs mit CVSSv3 und die mit ausschlie\u00dflich CVSSv2-Einwertungen berechnet. Die Einzelwerte wurden normalisiert und zu einem Gesamt-Mittelwert zusammengefasst, der die Anzahl der jeweiligen CVSS-Bewertungen ber\u00fccksichtigt. Die Ergebnisse haben wir als (gewichtete) 'durchschnittliche Ausnutzbarkeit' bzw. (gewichtete) 'durchschnittliche Auswirkung' bezeichnet und als Risikofaktoren verwendet.</p>"},{"location":"de/#warum-nicht-nur-reine-statistische-daten","title":"Warum nicht nur reine statistische Daten?","text":"<p>Die Ergebnisse in den zur Verf\u00fcgung gestellten Daten beschr\u00e4nken sich in erster Linie auf das, was automatisiert getestet werden kann. Sprechen Sie mit erfahrenen AppSec-Expertinnen und Experten und sie werden Ihnen von Dingen erz\u00e4hlen, die sie gefunden haben, und von Trends, die sie sehen, die jedoch noch nicht in den Daten enthalten sind. Es braucht Zeit, um Testmethoden f\u00fcr bestimmte Schwachstellentypen zu entwickeln, und dann noch mehr Zeit, bis diese Tests automatisiert und f\u00fcr eine gro\u00dfe Anzahl von Anwendungen ausgef\u00fchrt werden. Alles, was wir finden, blickt zur\u00fcck in die Vergangenheit und k\u00f6nnte Trends aus dem letzten Jahr \u00fcbersehen, die in den Daten nicht vorhanden sind.</p> <p>Daher w\u00e4hlen wir aus den Daten nur acht von zehn Kategorien aus, da sie unvollst\u00e4ndig sind. Die anderen beiden Kategorien stammen aus der Top-10-Community-Umfrage. Sie erm\u00f6glicht den Praktikerinnen und Praktikern an vorderster Front f\u00fcr die, aus ihrer Sicht gr\u00f6\u00dften Risiken zu stimmen, die m\u00f6glicherweise noch nicht in den Daten enthalten sind oder dar\u00fcber nie abgeleitet werden k\u00f6nnen.</p>"},{"location":"de/#warum-inzidenzrate-statt-haufigkeit","title":"Warum Inzidenzrate statt H\u00e4ufigkeit?","text":"<p>Es gibt drei Hauptdatenquellen. Wir bezeichnen sie als Human-Assisted Tooling (HaT), Tool-Assisted Human (TaH) und Raw Tooling.</p> <p>Raw Tooling und HaT sind Massen-Suchgeneratoren. Die Tools suchen nach bestimmten Schwachstellen und versuchen unerm\u00fcdlich, jedes Vorkommen dieser Schwachstelle zu finden. Dabei werden f\u00fcr einige Schwachstellentypen hohe Fundzahlen generiert. Bei Cross-Site Scripting gibt es in der Regel zwei Arten von Schwachstellen: Entweder handelt es sich um einen kleineren, isolierten Fehler oder um ein systemisches Problem. Wenn es sich um ein systemisches Problem handelt, kann die Zahl der Befunde bei einer einzigen Anwendung in die Tausende gehen. Diese hohe H\u00e4ufigkeit \u00fcbert\u00f6nt die meisten anderen, in Berichten oder in Daten gefundenen Schwachstellen.</p> <p>TaH hingegen wird ein breiteres Spektrum an Schwachstellentypen finden, diese jedoch aus Zeitgr\u00fcnden viel seltener. Wenn Menschen eine Anwendung testen und so etwas wie Cross-Site Scripting sehen, ermitteln sie normalerweise drei oder vier Vorkommen und brechen die weitere Suche dann ab. Sie k\u00f6nnen ein systemisches Problem erkennen und die Schwachstelle mit einer Empfehlung zur anwendungsweiten Behebung versehen. Es ist weder die Notwendigkeit noch die Zeit vorhanden, jedes (einzelne) Vorkommen zu finden.</p> <p>Angenommen, wir nehmen diese beiden unterschiedlichen Datens\u00e4tze und versuchen, sie nach H\u00e4ufigkeit zusammenzuf\u00fchren. In diesem Fall w\u00fcrden die Tooling- und HaT-Daten die genaueren (aber weit gefassten) TaH-Daten \u00fcbert\u00f6nen, und das ist ein guter Grund daf\u00fcr, warum etwas wie Cross-Site Scripting in vielen Listen so hoch eingestuft wird, obwohl die Auswirkungen im Allgemeinen gering bis moderat sind. Das liegt an der schieren Menge an Fundstellen (Cross-Site Scripting l\u00e4sst sich auch relativ einfach testen, daher gibt es auch viel mehr Tests daf\u00fcr).</p> <p>Im Jahr 2017 haben wir stattdessen die Verwendung der Inzidenzrate eingef\u00fchrt, um einen neuen Blick auf die Daten zu werfen und Raw Tooling- und HaT-Daten angemessen mit TaH-Daten zusammenzuf\u00fchren. Die Inzidenzrate bewertet, wie viele Prozent der Anwendungen mindestens ein Vorkommen eines Schwachstellentyps aufweist. Es ist uns egal, ob es einmalig oder systemisch war. Das ist f\u00fcr unsere Zwecke irrelevant. Wir m\u00fcssen lediglich wissen, wie viele Anwendungen mindestens ein Vorkommen hatte, was dazu beitr\u00e4gt, einen klareren \u00dcberblick \u00fcber die Testergebnisse \u00fcber mehrere, unterschiedliche Testtypen hinweg zu erhalten, ohne dass die Daten von Massen-Suchgeneratoren die Ergebnisse dominieren. Dies entspricht auch einer risikoorientierten Sichtweise, da Angreifende nur ein einziges Auftreten einer Schwachstelle ben\u00f6tigen, um eine Anwendung \u00fcber die Kategorie erfolgreich anzugreifen.</p>"},{"location":"de/#wie-sieht-ihr-datenerfassungs-und-analyseprozess-aus","title":"Wie sieht Ihr Datenerfassungs- und Analyseprozess aus?","text":"<p>Wir haben den OWASP-Top-10-Datenerfassungsprozess auf dem Open Security Summit 2017 formalisiert. OWASP Top 10 Co-Leader und die Community haben zwei Tage damit verbracht, einen transparenten Datenerfassungsprozess zu formalisieren. Die aktuelle Ausgabe 2021 ist die zweite Edition, in der wir diese Methodik verwenden.</p> <p>Wir haben zun\u00e4chst einen Aufruf zur Datenerhebung \u00fcber die uns zur Verf\u00fcgung stehenden Social-Media-Kan\u00e4le ver\u00f6ffentlicht, sowohl \u00fcber Projekt- als auch \u00fcber OWASP-Kan\u00e4le. Auf der OWASP-Projektseite listen wir die Datenelemente und die Struktur auf, die wir ben\u00f6tigten, und wie die Daten erfasst und eingereicht werden konnten. Im GitHub-Projekt hatten wir Beispieldaten als Vorlage zur Verf\u00fcgung gestellt. Bei Bedarf haben wir die Organisationen unterst\u00fctzt, um die Struktur und Zuordnung zu CWEs herauszufinden.</p> <p>Die Datenspenden stammen von den unterschiedlichsten Organisationen, darunter welche, die Anbieter nach Branchen testen, Bug-Bounty-Anbietern und Organisationen, die interne Testergebnisse beigesteuert haben. Die eingereichten Daten wurden zuerst grundlegend analysiert und hinsichtlich der zugeordneten CWEs auf Plausibilit\u00e4t gepr\u00fcft und den Risikokategorien zugeordnet. Es gibt \u00dcberschneidungen zwischen einigen CWEs und andere sind sehr eng miteinander verbunden (z. B. kryptografische Schwachstellen). Alle Entscheidungen im Zusammenhang mit der Analyse der \u00fcbermittelten Rohdaten wurden dokumentiert und ver\u00f6ffentlicht, um offen und transparent zu machen, wie wir die Daten normalisiert haben.</p> <p>Die acht Kategorien mit den h\u00f6chsten Inzidenzraten wurden in die Top 10 aufgenommen. Wir schauen uns auch die Ergebnisse der Top 10-Community-Umfrage an, um zu sehen, welche davon m\u00f6glicherweise bereits in den Daten vorhanden waren. Die beiden Kategorien mit den meisten Stimmen, die nicht in den acht datengest\u00fctzten Kategorien vorhanden waren, wurden f\u00fcr die beiden verbliebenen Pl\u00e4tze der Top 10 ausgew\u00e4hlt. F\u00fcr die zehn ausgew\u00e4hlten Kategorien wurden jeweils neben der Inzidenzrate die weiteren Faktoren f\u00fcr Ausnutzbarkeit, Expolit und die (technische) Auswirkung, Impact ber\u00fccksichtigt, um die Top 10:2021 in nach ihren Risiken zu ordnen.</p>"},{"location":"de/#datenfaktoren","title":"Datenfaktoren","text":"<p>F\u00fcr die Top-10-Kategorien sind jeweils Datenfaktoren aufgef\u00fchrt, die im Folgenden erl\u00e4utert werden:</p> <ul> <li>Zugeordnete CWEs: Die Anzahl der CWEs, die der Kategorie vom Top-10-Team zugeordnet wurden.</li> <li>H\u00e4ufigkeit: Die Inzidenzrate ist der Prozentsatz der Anwendungen, die f\u00fcr CWEs der Kategorie anf\u00e4llig sind, bezogen auf die Summe aller Anwendungen, die von einer Organisation im jeweiligen Jahr getestet wurden.</li> <li>Durchschn. Ausnutzbarkeit: Der Exploit-Subscore aus CVSSv2- und CVSSv3-Scores von CVEs, die die CWEs der Kategorie referenziert haben, normalisiert auf eine 10-Punkte-Skala.</li> <li>Durchschn. Auswirkungen: Der Impact-Subscore aus CVSSv2- und CVSSv3-Scores von CVEs, die die CWEs der Kategorie referenziert haben, normalisiert auf eine 10-Punkte-Skala</li> <li>(Test-)Abdeckung: Der Prozentsatz der Anwendungen, die von allen Organisationen, die auf die CWEs der Kategorie getestet wurden.</li> <li>Gesamtanzahl: Gesamtzahl der Anwendungen, bei denen CWEs der Kategorie zugeordnet wurden.</li> <li>CVEs insgesamt: Gesamtzahl der CVEs in der NVD-Datenbank, die den CWEs der Kategorie zugeordnet wurden.</li> </ul>"},{"location":"de/#vielen-dank-an-unsere-daten-spender","title":"Vielen Dank an unsere Daten-Spender","text":"<p>Die folgenden Organisationen (und weitere anonyme Spender) haben freundlicherweise Daten f\u00fcr \u00fcber 500.000 Anwendungen gespendet, um dies zum gr\u00f6\u00dften und umfassendsten Datensatz zur Anwendungssicherheit zu machen. Ohne Sie w\u00e4ren diese Top 10 nicht m\u00f6glich gewesen.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"de/#vielen-dank-an-unsere-weiteren-sponsoren","title":"Vielen Dank an unsere weiteren Sponsoren","text":"<p>Das OWASP Top 10 2021-Team dankt Secure Code Warrior und Just Eat f\u00fcr die finanzielle Unterst\u00fctzung.</p> <p></p> <p></p>"},{"location":"de/0x00_2021-notice/","title":"Notice","text":""},{"location":"de/0x00_2021-notice/#erscheinungsdatum","title":"Erscheinungsdatum","text":"<p>Das englische Original wurde am 24. September 2021 ver\u00f6ffentlicht</p>"},{"location":"de/0x00_2021-notice/#hauptautoren","title":"Hauptautoren","text":"<ul> <li>Andrew van der Stock (twitter: @vanderaj)</li> <li>Brian Glas (twitter: @infosecdad)</li> <li>Neil Smithline (Twitter: @appsecneil)</li> <li>Torsten Gigler (twitter: @torsten_tweet)</li> </ul>"},{"location":"de/0x00_2021-notice/#gastautoren","title":"Gastautoren","text":"<ul> <li>Orange Tsai @orange_8361, Autor von A10-2021: Server Side Request Forgery</li> <li>Jim Manico @manicode und Jakub Ma\u0107kowski @kubamackowski \u2013 OWASP CheatSheets Coordination</li> </ul>"},{"location":"de/0x00_2021-notice/#vorwort-der-deutschen-version","title":"Vorwort der deutschen Version","text":"<p>\u201eIst es nicht sonderbar, dass eine w\u00f6rtliche \u00dcbersetzung fast immer eine schlechte ist? Und doch l\u00e4sst sich alles gut \u00fcbersetzen. Man sieht hieraus, wie viel es sagen will, eine Sprache ganz verstehen; es hei\u00dft, das Volk ganz kennen, das sie spricht.\u201c (G.C. Lichtenberg, \u201eSudelb\u00fccher\u201c, 1800-1806).</p> <p>Die deutsche Version der OWASP Top 10 war genau das: eine Herausforderung, dem Ziel und dem Geist der Top 10 in deutscher Sprache gerecht zu werden. Hierbei wurden bei Bedarf auch kleinere Pr\u00e4zisierungen vorgenommen, die das Verst\u00e4ndnis erleichtern. Wir verwenden daher bewusst nicht den Begriff \u201e\u00dcbersetzung\u201c, auch wenn es zu weiten Teilen genau das ist. Dinge st\u00e4ndig weiterzutreiben und kontinuierlich zu verbessern ist eben auch OWASP. So haben wir in dieser Version auch die Namen der Top 10 Risiken angepasst oder Namens-Erg\u00e4nzungen des Originals nur dann \u00fcbernommen, wenn uns dies nach Abw\u00e4gung sinnvoll erschien:</p> <ul> <li>A01:2021\u2013Mangelhafte Zugriffskontrolle ex: A5:2017-Fehler in der Zugriffskontrolle</li> <li>A07:2021\u2013Fehlerhafte Authentifizierung ex: A2:2017-Fehler in der Authentifizierung; Hier haben wir den neuen Teilaspekt 'Identification' bewusst nicht \u00fcbernommen, da er im englischen Original im Risiko nicht weiter behandelt wird</li> <li>A09:2021\u2013Unzureichendes Logging und Sicherheitsmonitoring ex: A10:2017-Unzureichendes Logging &amp; Monitoring</li> </ul> <p>Wir m\u00f6chten alle, die in der Gesch\u00e4ftsf\u00fchrung, im Management, in der IT-Sicherheitsberatung, im Anwendungs-Management, in der Software-Entwicklung und in der Anwendungs-Pr\u00fcfung arbeiten, f\u00fcr Webanwendungssicherheit sensibilisieren und Ihnen den Einstieg in diese Thematik erleichtern.</p> <p>Dieses Dokument hilft Ihnen, eine neue Perspektive auf Ihre Anwendungen zu erhalten, um Sicherheitsfehler zu vermeiden und Risiken minimieren zu k\u00f6nnen. Einige englische Fachbegriffe wurden dabei beibehalten, weil sie auch im deutschen gebr\u00e4uchlich sind.</p> <p>Wir w\u00fcnschen Neueinsteigerinnen, Neueinsteigern und Profis ein kurzweiliges Lesevergn\u00fcgen und die (Best\u00e4tigung der) Erkenntnis, dass die IT-Sicherheit ein kritischer Erfolgsfaktor f\u00fcr (Web-)Anwendungen ist.</p> <p>Die deutsche Version der OWASP Top 10:2021 finden Sie unter https://owasp.org/Top10/de/.  Ihr deutschsprachiges Top 10-Team: - Torsten Gigler - Daniel Grahl - Tobias Heide - Thomas Herzog - Jasmin Mair - Florian Schmid - Jan Wolff</p>"},{"location":"de/0x00_2021-notice/#stammtisch-initiative-des-owasp-german-chapter","title":"Stammtisch-Initiative des OWASP German Chapter","text":"<p>In mehreren deutschen St\u00e4dten gibt es OWASP-Stammtische, bei denen man sich in lockerer Runde trifft, um sich auszutauschen, nette Leute kennenzulernen oder ernsthafte Sicherheitsthemen zu diskutieren \u2013 meistens mit Vortrag.</p> <p>Aktive Stammtische gibt es (Stand Juni 2024) in Augsburg, Berlin, Dresden, Frankfurt, Hamburg, Hannover, Heilbronn-Franken, Karlsruhe, K\u00f6ln, M\u00fcnchen und Stuttgart.</p>"},{"location":"de/0x00_2021-notice/#wie-konnen-sie-uns-unterstutzen","title":"Wie k\u00f6nnen Sie uns unterst\u00fctzen","text":"<p>Zum jetzigen Zeitpunkt bitten wir um Unterst\u00fctzung bei folgenden Themenbereiche:</p> <ul> <li>Datenanalye \u2013 bitte \u00fcberpr\u00fcfen Sie unsere Analyse</li> </ul> <ul> <li>\u00dcbersetzung \u2013 Bitte \u00fcberpr\u00fcfen Sie diese Version und das englische Original, um sicherzustellen, dass diese Version verst\u00e4ndlich ist und den Sinn des Originals widerspiegelt</li> <li>Projektleitung von ASVS, Testing Guide und Code Review Guide \u2013 bitte nutzen Sie unsere Daten und helfen Sie uns, unsere Dokumente und Standards miteinander zu verkn\u00fcpfen</li> </ul>"},{"location":"de/0x00_2021-notice/#senden-sie-uns-ihre-vorschlage-und-pull-anfragen-in-github","title":"Senden Sie uns Ihre Vorschl\u00e4ge und Pull-Anfragen in Github","text":"<p>Bitte informieren Sie uns \u00fcber Erg\u00e4nzungs- und Verbesserungsvorschl\u00e4ge:</p> <ul> <li>https://github.com/OWASP/Top10/issues</li> </ul>"},{"location":"de/0x01_2021-about-owasp/","title":"\u00dcber OWASP","text":"<p>Das Open Worldwide Application Security Project (OWASP) ist eine offene Community. OWASP m\u00f6chte Organisationen in die Lage versetzen, sichere und vertrauensw\u00fcrdige Anwendungen zu entwickeln, zu kaufen und zu betreiben.</p> <p>Von OWASP kann man folgendes erwarten; stets frei verf\u00fcgbar und f\u00fcr jedermann zug\u00e4nglich:</p> <ul> <li>Werkzeuge und Standards f\u00fcr sichere Anwendungen.</li> <li>B\u00fccher zu den Themen Pr\u00fcfungen, Entwicklung und Quellcodeanalyse im Bereich der Anwendungssicherheit.</li> <li>Vortr\u00e4ge und Videos.</li> <li>\"Cheat sheets\" zu vielen sicherheitsrelevanten Themen.</li> <li>Standard Security-Controls und Programm-Bibliotheken.</li> <li>Lokale \"Chapter\" auf der ganzen Welt und zus\u00e4tzlich Stammtische in Deutschland.</li> <li>Neueste Forschung.</li> <li>Gro\u00dfe und h\u00e4ufige Konferenzen auf der ganzen Welt.</li> <li>Mailinglisten.</li> </ul> <p>Alle Informationen auf https://www.owasp.org bzw. https://www.owasp.de.</p> <p>Alle OWASP Werkzeuge, Dokumente, Videos, Pr\u00e4sentationen und Chapter sind frei verf\u00fcgbar und stehen jedem offen, der Anwendungssicherheit weiterentwickeln m\u00f6chte.</p> <p>Mangelnde Anwendungssicherheit begreifen wir als ein personen-, prozess- und technologie-bezogenes Problem, da die meisten wirksamen Ans\u00e4tze f\u00fcr Anwendungssicherheit Verbesserungen in diesen Feldern erfordern.</p> <p>OWASP ist eine neue Art von Organisation. Wir unterliegen keinem kommerziellen Druck. Das erlaubt uns unvoreingenommene, praktikable und kosteneffiziente Informationen \u00fcber Anwendungssicherheit bereitzustellen.</p> <p>OWASP ist nicht von Dritten abh\u00e4ngig, wenngleich wir die sachkundige Verwendung freier und kommerzieller Technologien unterst\u00fctzen. OWASP erstellt viele unterschiedliche Materialien auf Basis eines kollaborativen, transparenten und offenen Ansatzes.</p> <p>Die OWASP Foundation ist die gemeinn\u00fctzige Organisation, die den langfristigen Erfolg des Projektes sicher stellt. Fast jeder bei OWASP ist ehrenamtlich t\u00e4tig. Das schlie\u00dft das Board, Chapter- und Projekt-Leiter, sowie Mitglieder ein. Wir unterst\u00fctzen innovative Sicherheitsforschung mit Spenden, F\u00f6rderungen und Infrastruktur.</p> <p>Machen Sie mit!</p>"},{"location":"de/0x01_2021-about-owasp/#copyright-und-lizenz","title":"Copyright und Lizenz","text":"<p>Copyright \u00a9 2003-2023 The OWASP\u2122 Foundation. Dieses Dokument ist unter der Creative Commons Attribution Share-Alike 4.0 Lizenz ver\u00f6ffentlicht. Bei Weiterverwendung oder Weitergabe muss die Lizenz erhalten bleiben.</p>"},{"location":"de/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/","title":"Wie man ein Programm f\u00fcr Anwendungssicherheit mit den OWASP Top 10 aufbaut","text":"<p>Die OWASP Top 10 war nie als Grundlage f\u00fcr ein Programm zur Anwendungssicherheit (AppSec) gedacht.  F\u00fcr viele Organisationen, die sich gerade am Anfang ihrer Reise in die Anwendungssicherheit befinden, ist es jedoch wichtig, irgendwo anzufangen. Die OWASP Top 10 2021 bilden einen guten Ausgangspunkt f\u00fcr Checklisten usw., sind aber an sich nicht ausreichend.</p>"},{"location":"de/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#schritt-1-identifizieren-sie-die-lucken-und-ziele-ihres-appsec-programms","title":"Schritt 1. Identifizieren Sie die L\u00fccken und Ziele Ihres AppSec-Programms","text":"<p>Viele Anwendungssicherheitsprogramme (AppSec) \u00fcbernehmen sich h\u00e4ufig und versuchen in zu gro\u00dfen Schritten ihr Ziel zu erreichen. Diese Bem\u00fchungen sind zum Scheitern verurteilt. Wir empfehlen CISOs und AppSec-F\u00fchrungskr\u00e4ften dringend, das OWASP Software Assurance Maturity Model (SAMM) einzusetzen, um Schwachstellen und Verbesserungspotenziale \u00fcber einen Zeitraum von 1-3 Jahren zu identifizieren. Der erste Schritt besteht darin, den aktuellen Stand der Dinge zu bewerten: Jene Schw\u00e4chen in den Bereichen Governance, Design, Implementierung, Verifizierung und Betrieb zu identifizieren, die sofort behoben werden m\u00fcssen, und jene, die noch warten k\u00f6nnen, und die Implementierung oder Verbesserung der 15 OWASP SAMM-Sicherheitspraktiken zu priorisieren. OWASP SAMM kann beim Aufbau und Messen von Verbesserungen bei Ihren Software Assurance-Bem\u00fchungen hilfreich sein.</p>"},{"location":"de/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#schritt-2-ebnen-sie-den-weg-fur-einen-sicheren-entwicklungs-lebenszyklus-sdlc","title":"Schritt 2. Ebnen Sie den Weg f\u00fcr einen sicheren Entwicklungs-Lebenszyklus (SDLC)","text":"<p>Das Konzept des geebneten Weges, das traditionell den sogenannten \"Einh\u00f6rnern\" vorbehalten war, ist der einfachste Weg, um die gr\u00f6\u00dfte Wirkung zu erzielen und die AppSec-Ressourcen mit der Geschwindigkeit des Entwicklungsteams zu skalieren, die von Jahr zu Jahr zunimmt.</p> <p>Das Konzept des geebneten Weges lautet: \"Der einfachste Weg ist auch der sicherste Weg\" und sollte eine Kultur tiefer Partnerschaften zwischen dem Entwicklungsteam und dem Sicherheitsteam beinhalten, vorzugsweise so, dass sie ein und dasselbe Team sind. Der geebnete Weg hat zum Ziel, unsichere Alternativen kontinuierlich zu verbessern, zu messen, zu erkennen und zu ersetzen, indem eine unternehmensweite Bibliothek von sicheren Ersatzl\u00f6sungen zur Verf\u00fcgung gestellt wird, mit Werkzeugen, die dabei helfen zu erkennen, wo Verbesserungen durch die \u00dcbernahme des geebneten Weges m\u00f6glich sind. Auf diese Weise k\u00f6nnen vorhandene Entwicklungstools unsichere Builds aufzeigen und den Entwicklungsteams helfen, sich selbst von unsicheren Alternativen zu l\u00f6sen.</p> <p>Der geebnete Weg mag anstrengend erscheinen, aber er sollte im Laufe der Zeit schrittweise aufgebaut werden. Es gibt noch andere Formen von Appsec-Programmen, insbesondere den Agile Secure Development Lifecycle von Microsoft. Nicht jede Appsec-Programm-Methodik passt zu jedem Unternehmen.</p>"},{"location":"de/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#stufe-3-realisierung-des-geebneten-wegs-mit-ihren-entwicklungsteams","title":"Stufe 3. Realisierung des geebneten Wegs mit Ihren Entwicklungsteams","text":"<p>Der geebnete Weg wird mit dem Einverst\u00e4ndnis und der direkten Beteiligung der zust\u00e4ndigen Entwicklungs- und Betriebsteams umgesetzt. Der Weg sollte strategisch auf das Unternehmen abgestimmt sein und dazu beitragen, sichere Anwendungen schneller bereitzustellen. Die Entwicklung des Weges sollte eine ganzheitliche Ma\u00dfnahme sein, die das gesamte Unternehmens- oder Anwendungs\u00f6kosystem abdeckt, und nicht nur ein einzelnes anwendungsbezogenes Notpflaster wie in vergangenen Zeiten.</p>"},{"location":"de/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#stufe-4-migrieren-sie-alle-zukunftigen-und-bestehenden-anwendungen-auf-den-geebneten-weg","title":"Stufe 4. Migrieren Sie alle zuk\u00fcnftigen und bestehenden Anwendungen auf den geebneten Weg","text":"<p>F\u00fcgen Sie Tools zur Erkennung von geebneten Wegen hinzu, w\u00e4hrend Sie sie entwickeln, und stellen Sie den Entwicklungsteams Informationen zur Verf\u00fcgung, damit sie die Sicherheit ihrer Anwendungen verbessern k\u00f6nnen, indem sie Elemente des geebneten Weges direkt \u00fcbernehmen k\u00f6nnen. Sobald ein Aspekt des geebneten Weges \u00fcbernommen wurde, sollten Unternehmen Pr\u00fcfungen zur kontinuierlichen Integration implementieren, die bestehenden und Check-Ins von neuem Code auf verbotene Alternativen untersuchen und beim Build oder Check-In Warnungen ausgeben oder diese ablehnen. Auf diese Weise wird verhindert, dass sich im Laufe der Zeit unsichere Optionen in den Code einschleichen, wodurch technische Altlasten und eine fehlerhafte, unsichere Anwendung vermieden werden. Solche Warnhinweise sollten auf die sichere Alternative verweisen, damit das Entwicklungsteam sofort die richtige Antwort erh\u00e4lt. So kann das Entwicklungsteam sofort die Korrektur vornehmen und die Komponente f\u00fcr den geebneten Weg rasch \u00fcbernehmen.</p>"},{"location":"de/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#schritt-5-nachprufen-ob-der-geebnete-weg-die-in-den-owasp-top-10-genannten-probleme-behoben-hat","title":"Schritt 5. Nachpr\u00fcfen, ob der geebnete Weg die in den OWASP Top 10 genannten Probleme behoben hat","text":"<p>Die Komponenten des geebneten Weges sollten sich mit einem wichtigen Aspekt der OWASP Top 10 befassen, z. B. mit der automatischen Erkennung oder Beseitigung von Sicherheitsl\u00fccken in Komponenten, mit einem IDE-Plugin f\u00fcr die statische Codeanalyse zur Erkennung von Injections oder - noch besser - mit der Verwendung einer Bibliothek, die als sicher gegen Injections bekannt ist. Je mehr dieser sicheren Drop-in-Ersatzl\u00f6sungen den Teams zur Verf\u00fcgung gestellt werden, desto besser. Eine wichtige Aufgabe des Appsec-Teams ist es, daf\u00fcr zu sorgen, dass die Sicherheit dieser Komponenten kontinuierlich bewertet und verbessert wird. Sobald die Sicherheit verbessert wurde, sollte eine Kommunikation mit den Nutzende der Komponente stattfinden, die darauf aufmerksam macht, dass ein Upgrade durchgef\u00fchrt werden sollte, vorzugsweise automatisch, aber wenn nicht, sollte dies zumindest auf einem Dashboard oder \u00e4hnlichem deutlich gemacht werden.</p>"},{"location":"de/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#stufe-6-bauen-sie-ihr-programm-zu-einem-ausgereiften-appsec-programm-aus","title":"Stufe 6. Bauen Sie Ihr Programm zu einem ausgereiften AppSec-Programm aus","text":"<p>Sie d\u00fcrfen nicht bei den OWASP Top 10 aufh\u00f6ren. Diese decken nur 10 Risikokategorien ab. Wir empfehlen Unternehmen dringend, den Application Security Verification Standard zu \u00fcbernehmen und schrittweise Komponenten und Tests f\u00fcr die Stufen 1, 2 und 3 hinzuzuf\u00fcgen, je nach Risikoniveau der entwickelten Anwendungen.</p>"},{"location":"de/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#weitere-schritte","title":"Weitere Schritte","text":"<p>Alle guten Programme zur Anwendungssicherheit gehen \u00fcber das Minimum hinaus. Alle Beteiligten m\u00fcssen weiterarbeiten, um die Schwachstellen in den Anwendungen jemals in den Griff zu bekommen.</p> <ul> <li> <p>Konzeptuelle Integrit\u00e4t. Ausgereifte AppSec-Programme m\u00fcssen \u00fcber ein Konzept sicherer Architektur verf\u00fcgen, egal ob eine formale Cloud- oder Enterprise-Architektur oder Bedrohungsanalyse.</p> </li> <li> <p>Automatisierung und Skalierung.     Ausgereifte AppSec-Programme versuchen m\u00f6glichst viele Liefergegenst\u00e4nde zu automatisieren: Skripte um komplexe Penetrationstest-Schritte zu emulieren, Statische Codeanalyse direkt den Entwicklungsteams bereitstellen, Unterst\u00fctzung f\u00fcr Entwicklungsteams um sicherheitsspezifische Unit- und Integrationstests zu verfassen, etc.</p> </li> <li> <p>Kultur.     Ausgereifte AppSec-Programme versuchen, unsicheres Design auszuschlie\u00dfen und technische Schulden in Bestands-Code dadurch zu eliminieren, dass sie Bestandteil der Entwicklung sind und nicht daneben stehen. AppSec-Teams, die Entwicklungsteams als \"die\" und \"wir\" betrachten, sind zum Scheitern verurteilt.</p> </li> <li> <p>Kontinuierliche Verbesserung.  Ausgereifte AppSec-Programme versuchen, sich st\u00e4ndig zu verbessern. Wenn etwas nicht funktioniert, dann beenden Sie es. Wenn etwas klobig ist oder nicht skaliert , muss es verbessert werden. Falls etwas von den Entwicklungsteams nicht verwendet wird und keine oder nur geringe Auswirkungen hat, sollte etwas anderes gemacht werden. Nur weil wir seit den 1970er Jahren Tests wie Schreibtischchecks durchgef\u00fchrt haben, hei\u00dft das nicht, dass es eine gute Idee ist. Messen und bewerten Sie, und entwickeln oder verbessern Sie dann.</p> </li> </ul>"},{"location":"de/A00_2021_How_to_use_the_OWASP_Top_10_as_a_standard/","title":"Wie man die OWASP Top 10 als Standard verwendet","text":"<p>Die OWASP Top 10 sind in erster Linie ein Sensibilisierungsdokument. Dies hat Unternehmen jedoch nicht davon abgehalten, sie seit ihrer Einf\u00fchrung im Jahr 2003 als De-facto-Standard f\u00fcr Anwendungssicherheit (AppSec) zu verwenden. Wenn Sie die OWASP Top 10 als Coding- oder Teststandard verwenden m\u00f6chten,  sollten Sie wissen, dass es sich um das absolute Minimum und nur um einen Anfang handelt.</p> <p>Eine der Schwierigkeiten bei der Verwendung der OWASP Top 10 als Standard besteht darin, dass wir AppSec-Risiken dokumentieren und nicht unbedingt leicht testbare Probleme. Beispielsweise liegt A04:2021 Unsicheres Anwendungsdesign au\u00dferhalb des Rahmens der meisten Testverfahren. Ein weiteres Beispiel ist das Testen, ob eine wirksame Protokollierung und \u00dcberwachung implementiert und operativ ist, was nur durch Befragungen und Stichproben wirksamer Behandlungen von Incidents m\u00f6glich ist. Ein Tool zur statischen CodeAnalyse kann nach fehlender Protokollierung suchen, es wird jedoch unm\u00f6glich sein, festzustellen, ob die Gesch\u00e4ftslogik oder die Zugriffskontrolle kritische Sicherheitsverst\u00f6\u00dfe protokolliert. Penetrationstests werden m\u00f6glicherweise nur in einer Testumgebung stattfinden, die selten in der gleichen Weise wie die Produktion \u00fcberwacht ist, dabei ist es schwierig feststellen ob eine Reaktion auf die Vorf\u00e4lle ausgel\u00f6st wurde.</p> <p>Hier sind unsere Empfehlungen, wann es sinnvoll ist, die OWASP Top 10 zu verwenden:</p> Anwendungsfall OWASP Top 10 2021 OWASP Application Security Verification Standard Awareness ja Ausbildung Einstiegsniveau umfassend Design und Architektur gelegentlich ja Codierungsstandard als Mindestanforderung ja Security Code Review als  Mindestanforderung ja Checkliste f\u00fcr Peer-Reviews als Mindestanforderung ja Unit-Tests gelegentlich ja Integrationstests gelegentlich ja Penetrationstests als Mindestanforderung ja Werkzeugunterst\u00fctzung als Mindestanforderung ja Sichere Lieferkette gelegentlich ja <p>Wir empfehlen jedem, der einen Anwendungssicherheitsstandard \u00fcbernehmen m\u00f6chte, den OWASP Application Security Verification Standard (ASVS) zu verwenden, da er entworfen wurde, um \u00fcberpr\u00fcfbar und testbar zu sein und in allen Teilen eines sicheren Entwicklungslebenszyklus verwendet werden kann.</p> <p>F\u00fcr Tool-Anbieter ist der ASVS die einzig akzeptable Wahl. Aufgrund der Beschaffenheit mehrerer Top-10-Risiken, insbesondere A04:2021 \u2013 Unsicheres Anwendungsdesign, k\u00f6nnen Tools die OWASP Top 10 nicht umfassend erkennen, testen oder davor sch\u00fctzen. OWASP r\u00e4t davon ab, eine vollst\u00e4ndige Abdeckung der OWASP Top 10 zu behaupten, da dies schlichtweg unwahr ist.</p>"},{"location":"de/A00_2021_Introduction/","title":"Einf\u00fchrung","text":""},{"location":"de/A00_2021_Introduction/#willkommen-bei-den-owasp-top-10-2021","title":"Willkommen bei den OWASP Top 10 \u2013 2021","text":"<p>Willkommen zur neuesten Ausgabe der OWASP Top 10! Die OWASP Top 10:2021 sind v\u00f6llig neu, mit einem neuen Grafikdesign mit Piktogrammen je Risiko und Mobilger\u00e4te-freundlichen Webseiten.</p> <p>Ein gro\u00dfes Dankesch\u00f6n an alle, die mit ihrer Zeit und Daten f\u00fcr diese Ausgabe beigetragen haben. Ohne Sie w\u00e4re diese Version nicht zustande gekommen. HERZLICHEN DANK!</p>"},{"location":"de/A00_2021_Introduction/#was-sich-in-den-top-10-fur-2021-geandert-hat","title":"Was sich in den Top 10 f\u00fcr 2021 ge\u00e4ndert hat","text":"<p>Es gibt drei neue Kategorien, vier Kategorien mit \u00c4nderungen im Namen und teilweise auch im Umfang (im englischen Original, siehe auch Vorwort der deutschen Version) und eine gewisse Konsolidierung in den Top 10 f\u00fcr 2021. Wir haben bei Bedarf Namen ge\u00e4ndert, um uns auf die jeweilige Grundursache statt auf Symptome zu konzentrieren.</p> <p></p> <ul> <li>A01:2021-Mangelhafte Zugriffskontrolle steigt von der f\u00fcnften Position in die Kategorie mit dem schwerwiegendsten Sicherheitsrisiko f\u00fcr Webanwendungen auf. Die uns zur Verf\u00fcgung gestellten Daten zeigen, dass im Durchschnitt 3,81% der getesteten Anwendungen eine oder mehrere Common Weakness Enumerations (CWEs) dieser Kategorie aufweisen. Insgesamt wurden mehr als 318.000 CWEs in dieser Risikokategorie genannt. Die 34 CWE-Typen, die wir der 'mangelhaften Zugriffskontrolle' zuordneten, traten in Anwendungen h\u00e4ufiger auf, als die jeder anderen Kategorie.</li> <li>A02:2021-Fehlerhafter Einsatz von Kryptographie steigt mit neuem Namen um eine Position auf Nummer 2 auf. Bisher hie\u00df diese Kategorie A3:2017-Sensitive Data Exposure, was eher ein (allgemeines) Symptom, als die Grundursache war. Der neue Name fokussiert auf Fehler im Zusammenhang mit der Kryptographie, wie dies bereits implizit der Fall war. Diese Kategorie f\u00fchrt h\u00e4ufig zur Offenlegung vertraulicher Daten oder zur Kompromittierung des Systems.</li> <li>A03:2021-Injection steigt von der ersten auf die dritte Position ab. 94% der Anwendungen wurden auf eine Art von 'Injection' getestet, mit einer maximalen Inzidenzrate von 19% und einer durchschnittlichen Rate von 3,37%. Die 33 CWE-Typen dieser Kategorie weisen mit einem Vorkommen von insgesamt 274.000 Nennungen die zweith\u00e4ufigsten Vorf\u00e4lle bei Webanwendungen auf. 'Cross-Site Scripting' (XSS) wurde in dieser Ausgabe der Top 10 nun Teil dieser Kategorie.</li> <li>A04:2021-Unsicheres Anwendungsdesign ist eine neue Kategorie dieser Ausgabe, die sich mit Risiken im Zusammenhang mit Designfehlern bei Anwendungen besch\u00e4ftigt. Um die IT-Sicherheit fr\u00fcher im Software-Entwicklungsprozess zu ber\u00fccksichtigen, brauchen wir mehr Bedrohungsmodellierung, sichere Entwurfsmuster und -prinzipien sowie Referenzarchitekturen. Ein unsicheres Design kann nicht durch eine perfekte Implementierung behoben werden, da die erforderlichen Sicherheitsma\u00dfnahmen definitionsgem\u00e4\u00df nie zur Abwehr bestimmter Angriffe ber\u00fccksichtigt und implementiert wurden.</li> <li>A05:2021-Sicherheitsrelevante Fehlkonfiguration wechselt von Position 6 in der vorherigen Ausgabe einen Platz nach oben. 90% der Anwendungen wurden auf irgendeine Art von Fehlkonfiguration getestet, mit einer durchschnittlichen Inzidenzrate von 4,5% und \u00fcber 208.000 CWEs, die dieser Risikokategorie zugeordnet wurden. Angesichts der zunehmenden Verlagerung  zu hoch konfigurierbarer Software, ist es nicht verwunderlich, dass diese Kategorie aufsteigt. Die fr\u00fchere Kategorie f\u00fcr A4:2017-XML External Entities (XXE) ist jetzt auch Teil dieses Riikos.</li> <li>A06:2021-Unsichere oder veraltete Komponenten trug zuvor den Titel \"A9:2017-Using Components with Known Vulnerabilities\"  und ist Nr. 2 in der Top-10-Community-Umfrage, verf\u00fcgte jedoch \u00fcber gen\u00fcgend Nennungen in den gespendeten Daten, um es bereits dar\u00fcber in die Top 10 zu schaffen. Diese Kategorie steigt von Position 9 im Jahr 2017 auf Position 6 auf. Es handelt sich hierbei um ein bekanntes Problem, dessen Risiko wir nur schwer testen und bewerten k\u00f6nnen. Es ist die einzige Kategorie, bei der die zugeordneten CWEs von keiner 'Common Vulnerability and Exposure' (CVE) referenziert wird, sodass in ihren Bewertungen ein mittlerer Standard-Score von 5,0 f\u00fcr Exploit und in der Auswirkung ber\u00fccksichtigt werden.</li> <li>A07:2021-Fehlerhafte Authentifizierung f\u00e4llt von der zweiten Position auf Platz 7 zur\u00fcck. Das Risiko enth\u00e4lt jetzt CWEs, die eher mit Identifikationsfehlern zusammenh\u00e4ngen. Diese Kategorie ist immer noch ein fester Bestandteil der Top 10, aber die zunehmende Verf\u00fcgbarkeit standardisierter Frameworks scheint hier zu helfen.</li> <li>A08:2021-Fehlerhafte Pr\u00fcfung der Software- und Datenintegrit\u00e4t ist eine weitere, neue Kategorie f\u00fcr die Ausgabe von 2021, die sich auf Annahmen im Zusammenhang mit Software-Updates, kritischen Daten und CI/CD-Pipelines ohne \u00dcberpr\u00fcfung der Integrit\u00e4t befasst. Die 10 CWE-Typen dieser Kategorie werden von 'Common Vulnerability and Exposures' (CVEs) mit den h\u00f6chsten 'Common Vulnerability Scoring System' (CVSS)-Scores referenziert. A8:2017-Security Misconfiguration ist jetzt ein Teil dieser umfangreicher gewordenen Kategorie.</li> <li>A09:2021-Unzureichendes Logging und Sicherheitsmonitoring hie\u00df fr\u00fcher A10:2017-Insufficient Logging&amp;Monitoring, wurde auf Basis der Top-10-Community-Umfrage (Nr. 3) hinzugef\u00fcgt und r\u00fcckt von Platz 10 auf. Diese Kategorie wurde erweitert, um mehr Fehlertypen abzudecken, ist schwierig zu testen und ist in den CVE/CVSS-Daten nicht gut vertreten. Fehler in dieser Kategorie k\u00f6nnen sich jedoch direkt auf die Sichtbarkeit, Alarmierung bei Vorf\u00e4llen und Forensik der Anwendung auswirken.</li> <li>A10:2021-Server-Side Request Forgery wurde aus der Top-10-Community-Umfrage (Nr. 1) hinzugef\u00fcgt. Die Daten zeigen eine relativ niedrige Inzidenzrate bei einer \u00fcberdurchschnittlichen Testabdeckung sowie \u00fcberdurchschnittlichen Bewertungen f\u00fcr Exploit- und Impact-Potenzial. Diese Kategorie entspricht dem Szenario, bei dem die Mitglieder der Sicherheits-Community uns mitteilen, dass dies wichtig ist, auch wenn es in den Daten zu diesem Zeitpunkt nicht abgebildet wird.</li> </ul>"},{"location":"de/A00_2021_Introduction/#methodik","title":"Methodik","text":"<p>Diese Ausgabe der Top 10 ist datengest\u00fctzter denn je, aber nicht mit blindem Vertrauen. Wir haben acht der zehn Kategorien aus den Datenbeitr\u00e4gen und zwei Kategorien aus der Experten-Umfrage in der OWASP-Community mit den h\u00f6chsten Bewertungen ausgew\u00e4hlt. Wir tun dies aus einer grunds\u00e4tzlichen, methodischen \u00dcberlegung: Der Blick auf die erhaltenen Daten ist ein Blick in die Vergangenheit. IT-Sicherheitsforschende nehmen sich Zeit, um neue Schwachstellen und neue M\u00f6glichkeiten zu finden, diese zu testen. Es braucht Zeit, diese Tests in Tools und Prozesse zu integrieren. Bis eine Schwachstelle in gro\u00dfem Ma\u00dfstab zuverl\u00e4ssig getestet wird, sind wahrscheinlich Jahre vergangen. Um diesen Umstand auszugleichen, nutzen wir eine Community-Umfrage, um Expertinnen und Experten f\u00fcr Anwendungssicherheit und Software-Entwicklung an vorderster Front zu befragen, was ihrer Meinung nach wesentliche Schwachstellen sind, die die Auswertung der Datenstatistik m\u00f6glicherweise noch nicht aufzeigt.</p> <p>Wir haben einige, wichtige \u00c4nderungen vorgenommen, um die Top 10 weiterzuentwickeln.</p>"},{"location":"de/A00_2021_Introduction/#wie-die-kategorien-aufgebaut-sind","title":"Wie die Kategorien aufgebaut sind","text":"<p>Einige Kategorien haben sich gegen\u00fcber der vorherigen Ausgabe der OWASP Top Ten von 2017 ge\u00e4ndert. Im Folgenden finden Sie eine Zusammenfassung der \u00c4nderungen in den einzelnen Kategorien.</p> <p>Fr\u00fchere Datenerhebungen konzentrierten sich auf eine vorgegebene Teilmenge von etwa 30 CWE-Typen. In einem Freitextfeld wurde nach zus\u00e4tzlichen Erkenntnissen gefragt. Wir haben gelernt, dass sich Unternehmen in erster Linie auf diese 30 CWE-Typen konzentrieren und nur selten weitere CWEs erg\u00e4nzten, die sie gefunden hatten. In dieser Ausgabe haben wir das Verfahren ge\u00f6ffnet und nur nach Daten gefragt, ohne Einschr\u00e4nkung auf bestimmte CWE-Typen. Wir fragten nach der Anzahl der getesteten Anwendungen f\u00fcr ein bestimmtes Jahr (ab 2017) und nach der Anzahl der Anwendungen, bei denen mindestens ein CWE im Test gefunden wurde. Mit dieser Vorgehensweise k\u00f6nnen wir erkennen, wie oft die einzelnen CWE-Typen jeweils in den Anwendungen vorkommen. Wir ignorieren dabei f\u00fcr unsere Zwecke bewusst die H\u00e4ufigkeit von Schwachstellen je Anwendung. W\u00e4hrend es in anderen Situationen sinnvoll und notwendig sein kann, w\u00fcrde sie hier nur das tats\u00e4chliche Vorkommen in der Anwendungspopulation verschleiern. Ob in einer Anwendung ein CWE-Typ viermal vorkommt oder 4.000 Mal, ist f\u00fcr die Risikoberechnung der Top 10 nicht relevant. Durch dieses Vorgehen ist die Datenbasis von etwa 30 CWE-Typen auf fast 400 gestiegen, die wir f\u00fcr diese Ausgabe analysiert haben. Wir planen, in Zukunft weitere zus\u00e4tzliche Datenanalysen durchzuf\u00fchren. Dieser deutliche Anstieg der CWE-Typen erfordert \u00c4nderungen in der Strukturierung der Kategorien. </p> <p>Wir haben mehrere Monate damit verbracht, CWE-Typen zu gruppieren und zu kategorisieren, und h\u00e4tten noch weitere Monate damit fortfahren k\u00f6nnen. Irgendwann mussten wir zu einem Ergebnis kommen. Es gibt sowohl CWEs, die sich auf Grundursachen beziehen, als auch solche, die sich auf Symptome beziehen. Beispiele f\u00fcr Grundursache-Typen sind \u201eKryptografischer Fehler\u201c und \u201eFehlkonfiguration\u201c, f\u00fcr Symptomtypen k\u00f6nnen \u201eSensitive Data Exposure\u201c (Verlust der Vertraulichkeit sensibler Daten) und \u201eDenial of Service\u201c (mutwillige Dienstblockade) genannt werden. Wir haben uns entschieden, uns - wann immer m\u00f6glich - auf die Grundursache zu konzentrieren, da dies sinnvoller ist, um Hinweise zur Identifizierung und Behebung zu geben. Sich auf die Grundursache statt auf das Symptom zu konzentrieren, ist kein neues Konzept. Die Top Ten waren bisher eine Mischung aus Symptomen und Grundursachen. CWEs sind ebenfalls eine Mischung aus Symptomen und Grundursachen. Wir gehen einfach bewusster damit um und benennen sie.In dieser Version gibt es durchschnittlich 19,6 CWE-Typen pro Top10-Kategorie, wobei das Minimum bei 1 CWE f\u00fcr A10:2021-Server-Side Request Forgery und das Maximum bei 40 CWEs in A04:2021-Unsicheres Anwendungsdesign liegt. Diese aktualisierte Kategoriestruktur bietet zus\u00e4tzliche Vorteile bei Schulungen, da sich Unternehmen jeweils auf die CWEs konzentrieren k\u00f6nnen, die f\u00fcr eine Programmiersprache/ein Framework besonders sinnvoll erscheinen.</p>"},{"location":"de/A00_2021_Introduction/#wie-die-daten-zur-auswahl-und-priorisierung-der-kategorien-verwendet-werden","title":"Wie die Daten zur Auswahl und Priorisierung der Kategorien verwendet werden","text":"<p>Im Jahr 2017 haben wir die Top10-Kategorien zun\u00e4chst nach der H\u00e4ufigkeit ihres Vorkommens in den Daten klassifiziert, um die Verbreitung zu bestimmen. Die weiteren Risikofaktoren Ausnutzbarkeit, Auffindbarkeit und technische Auswirkungen haben wir dann durch Teamdiskussionen basierend auf CVSS-Scores und jahrzehntelanger Erfahrung eingestuft. In 2021 wollten wir neben der, aus den aktuellen Daten abgeleiteten Verbreitung, nach M\u00f6glichkeit auch zur Einwertung der Faktoren Ausnutzbarkeit und (technische) Auswirkungen ausschlie\u00dflich Daten verwenden.</p> <p>Wir haben OWASP Dependency Check heruntergeladen, die CVSS-Exploit- und Impact-Scores extrahiert und sie nach den verwandten CWE-Typen gruppiert. Es war einiges an Recherche und Aufwand erforderlich, da zwar alle CVEs \u00fcber CVSSv2-Einwertungen verf\u00fcgen, bei den jedoch teilweise noch M\u00e4ngel vorhanden sind, die erst durch CVSSv3 beheben wurden. Ab einem bestimmten Zeitpunkt haben alle CVEs auch ein CVSSv3-Score erhalten. Dar\u00fcber hinaus wurden die Bewertungsskalen und Formeln zwischen CVSSv2 und CVSSv3 ver\u00e4ndert.</p> <p>In CVSSv2 konnten sowohl die Kategorie Exploit als auch (Technical) Impact Werte bis zu 10,0 betragen, aber die Formel w\u00fcrde sie auf 60% f\u00fcr Exploit und 40% f\u00fcr Impact begrenzen. In CVSSv3 ist das theoretische Maximum f\u00fcr Exploit auf 6,0 und f\u00fcr Impact auf 4,0 begrenzt. Unter Ber\u00fccksichtigung der Gewichtung in der Formel von CVSSv3 erh\u00f6hte sich der Einfluss der Impact-Bewertung, im Durchschnitt um fast eineinhalb Punkte, der f\u00fcr Exploit sank im Durchschnitt um fast einen halben Punkt.</p> <p>Im OWASP Dependency Check gibt es 125.000 Datens\u00e4tze der National Vulnerability Database (NVD) in der CVEs, einer CWE zugeordnet sind, und es gibt 241 CWEs, die mindestens einer CVE zugeordnet sind. 62.000 CWEs haben einen CVSSv3-Score, was in etwa der H\u00e4lfte des Datenbestands entspricht.</p> <p>F\u00fcr die Top Ten 2021 haben wir die durchschnittlichen Exploit- und Impact-Werte wie folgt berechnet. Wir haben alle CVEs mit CVSS-Scores nach CWE gruppiert und sowohl die Exploit- als auch die Impact-Scores jeweils getrennt f\u00fcr die CVEs mit CVSSv3 und die mit ausschlie\u00dflich CVSSv2-Einwertungen berechnet. Die Einzelwerte wurden normalisiert und zu einem Gesamt-Mittelwert zusammengefasst, der die Anzahl der jeweiligen CVSS-Bewertungen ber\u00fccksichtigt. Die Ergebnisse haben wir als (gewichtete) 'durchschnittliche Ausnutzbarkeit' bzw. (gewichtete) 'durchschnittliche Auswirkung' bezeichnet und als Risikofaktoren verwendet.</p>"},{"location":"de/A00_2021_Introduction/#warum-nicht-nur-reine-statistische-daten","title":"Warum nicht nur reine statistische Daten?","text":"<p>Die Ergebnisse in den zur Verf\u00fcgung gestellten Daten beschr\u00e4nken sich in erster Linie auf das, was automatisiert getestet werden kann. Sprechen Sie mit erfahrenen AppSec-Expertinnen und Experten und sie werden Ihnen von Dingen erz\u00e4hlen, die sie gefunden haben, und von Trends, die sie sehen, die jedoch noch nicht in den Daten enthalten sind. Es braucht Zeit, um Testmethoden f\u00fcr bestimmte Schwachstellentypen zu entwickeln, und dann noch mehr Zeit, bis diese Tests automatisiert und f\u00fcr eine gro\u00dfe Anzahl von Anwendungen ausgef\u00fchrt werden. Alles, was wir finden, blickt zur\u00fcck in die Vergangenheit und k\u00f6nnte Trends aus dem letzten Jahr \u00fcbersehen, die in den Daten nicht vorhanden sind.</p> <p>Daher w\u00e4hlen wir aus den Daten nur acht von zehn Kategorien aus, da sie unvollst\u00e4ndig sind. Die anderen beiden Kategorien stammen aus der Top-10-Community-Umfrage. Sie erm\u00f6glicht den Praktikerinnen und Praktikern an vorderster Front f\u00fcr die, aus ihrer Sicht gr\u00f6\u00dften Risiken zu stimmen, die m\u00f6glicherweise noch nicht in den Daten enthalten sind oder dar\u00fcber nie abgeleitet werden k\u00f6nnen.</p>"},{"location":"de/A00_2021_Introduction/#warum-inzidenzrate-statt-haufigkeit","title":"Warum Inzidenzrate statt H\u00e4ufigkeit?","text":"<p>Es gibt drei Hauptdatenquellen. Wir bezeichnen sie als Human-Assisted Tooling (HaT), Tool-Assisted Human (TaH) und Raw Tooling.</p> <p>Raw Tooling und HaT sind Massen-Suchgeneratoren. Die Tools suchen nach bestimmten Schwachstellen und versuchen unerm\u00fcdlich, jedes Vorkommen dieser Schwachstelle zu finden. Dabei werden f\u00fcr einige Schwachstellentypen hohe Fundzahlen generiert. Bei Cross-Site Scripting gibt es in der Regel zwei Arten von Schwachstellen: Entweder handelt es sich um einen kleineren, isolierten Fehler oder um ein systemisches Problem. Wenn es sich um ein systemisches Problem handelt, kann die Zahl der Befunde bei einer einzigen Anwendung in die Tausende gehen. Diese hohe H\u00e4ufigkeit \u00fcbert\u00f6nt die meisten anderen, in Berichten oder in Daten gefundenen Schwachstellen.</p> <p>TaH hingegen wird ein breiteres Spektrum an Schwachstellentypen finden, diese jedoch aus Zeitgr\u00fcnden viel seltener. Wenn Menschen eine Anwendung testen und so etwas wie Cross-Site Scripting sehen, ermitteln sie normalerweise drei oder vier Vorkommen und brechen die weitere Suche dann ab. Sie k\u00f6nnen ein systemisches Problem erkennen und die Schwachstelle mit einer Empfehlung zur anwendungsweiten Behebung versehen. Es ist weder die Notwendigkeit noch die Zeit vorhanden, jedes (einzelne) Vorkommen zu finden.</p> <p>Angenommen, wir nehmen diese beiden unterschiedlichen Datens\u00e4tze und versuchen, sie nach H\u00e4ufigkeit zusammenzuf\u00fchren. In diesem Fall w\u00fcrden die Tooling- und HaT-Daten die genaueren (aber weit gefassten) TaH-Daten \u00fcbert\u00f6nen, und das ist ein guter Grund daf\u00fcr, warum etwas wie Cross-Site Scripting in vielen Listen so hoch eingestuft wird, obwohl die Auswirkungen im Allgemeinen gering bis moderat sind. Das liegt an der schieren Menge an Fundstellen (Cross-Site Scripting l\u00e4sst sich auch relativ einfach testen, daher gibt es auch viel mehr Tests daf\u00fcr).</p> <p>Im Jahr 2017 haben wir stattdessen die Verwendung der Inzidenzrate eingef\u00fchrt, um einen neuen Blick auf die Daten zu werfen und Raw Tooling- und HaT-Daten angemessen mit TaH-Daten zusammenzuf\u00fchren. Die Inzidenzrate bewertet, wie viele Prozent der Anwendungen mindestens ein Vorkommen eines Schwachstellentyps aufweist. Es ist uns egal, ob es einmalig oder systemisch war. Das ist f\u00fcr unsere Zwecke irrelevant. Wir m\u00fcssen lediglich wissen, wie viele Anwendungen mindestens ein Vorkommen hatte, was dazu beitr\u00e4gt, einen klareren \u00dcberblick \u00fcber die Testergebnisse \u00fcber mehrere, unterschiedliche Testtypen hinweg zu erhalten, ohne dass die Daten von Massen-Suchgeneratoren die Ergebnisse dominieren. Dies entspricht auch einer risikoorientierten Sichtweise, da Angreifende nur ein einziges Auftreten einer Schwachstelle ben\u00f6tigen, um eine Anwendung \u00fcber die Kategorie erfolgreich anzugreifen.</p>"},{"location":"de/A00_2021_Introduction/#wie-sieht-ihr-datenerfassungs-und-analyseprozess-aus","title":"Wie sieht Ihr Datenerfassungs- und Analyseprozess aus?","text":"<p>Wir haben den OWASP-Top-10-Datenerfassungsprozess auf dem Open Security Summit 2017 formalisiert. OWASP Top 10 Co-Leader und die Community haben zwei Tage damit verbracht, einen transparenten Datenerfassungsprozess zu formalisieren. Die aktuelle Ausgabe 2021 ist die zweite Edition, in der wir diese Methodik verwenden.</p> <p>Wir haben zun\u00e4chst einen Aufruf zur Datenerhebung \u00fcber die uns zur Verf\u00fcgung stehenden Social-Media-Kan\u00e4le ver\u00f6ffentlicht, sowohl \u00fcber Projekt- als auch \u00fcber OWASP-Kan\u00e4le. Auf der OWASP-Projektseite listen wir die Datenelemente und die Struktur auf, die wir ben\u00f6tigten, und wie die Daten erfasst und eingereicht werden konnten. Im GitHub-Projekt hatten wir Beispieldaten als Vorlage zur Verf\u00fcgung gestellt. Bei Bedarf haben wir die Organisationen unterst\u00fctzt, um die Struktur und Zuordnung zu CWEs herauszufinden.</p> <p>Die Datenspenden stammen von den unterschiedlichsten Organisationen, darunter welche, die Anbieter nach Branchen testen, Bug-Bounty-Anbietern und Organisationen, die interne Testergebnisse beigesteuert haben. Die eingereichten Daten wurden zuerst grundlegend analysiert und hinsichtlich der zugeordneten CWEs auf Plausibilit\u00e4t gepr\u00fcft und den Risikokategorien zugeordnet. Es gibt \u00dcberschneidungen zwischen einigen CWEs und andere sind sehr eng miteinander verbunden (z. B. kryptografische Schwachstellen). Alle Entscheidungen im Zusammenhang mit der Analyse der \u00fcbermittelten Rohdaten wurden dokumentiert und ver\u00f6ffentlicht, um offen und transparent zu machen, wie wir die Daten normalisiert haben.</p> <p>Die acht Kategorien mit den h\u00f6chsten Inzidenzraten wurden in die Top 10 aufgenommen. Wir schauen uns auch die Ergebnisse der Top 10-Community-Umfrage an, um zu sehen, welche davon m\u00f6glicherweise bereits in den Daten vorhanden waren. Die beiden Kategorien mit den meisten Stimmen, die nicht in den acht datengest\u00fctzten Kategorien vorhanden waren, wurden f\u00fcr die beiden verbliebenen Pl\u00e4tze der Top 10 ausgew\u00e4hlt. F\u00fcr die zehn ausgew\u00e4hlten Kategorien wurden jeweils neben der Inzidenzrate die weiteren Faktoren f\u00fcr Ausnutzbarkeit, Expolit und die (technische) Auswirkung, Impact ber\u00fccksichtigt, um die Top 10:2021 in nach ihren Risiken zu ordnen.</p>"},{"location":"de/A00_2021_Introduction/#datenfaktoren","title":"Datenfaktoren","text":"<p>F\u00fcr die Top-10-Kategorien sind jeweils Datenfaktoren aufgef\u00fchrt, die im Folgenden erl\u00e4utert werden:</p> <ul> <li>Zugeordnete CWEs: Die Anzahl der CWEs, die der Kategorie vom Top-10-Team zugeordnet wurden.</li> <li>H\u00e4ufigkeit: Die Inzidenzrate ist der Prozentsatz der Anwendungen, die f\u00fcr CWEs der Kategorie anf\u00e4llig sind, bezogen auf die Summe aller Anwendungen, die von einer Organisation im jeweiligen Jahr getestet wurden.</li> <li>Durchschn. Ausnutzbarkeit: Der Exploit-Subscore aus CVSSv2- und CVSSv3-Scores von CVEs, die die CWEs der Kategorie referenziert haben, normalisiert auf eine 10-Punkte-Skala.</li> <li>Durchschn. Auswirkungen: Der Impact-Subscore aus CVSSv2- und CVSSv3-Scores von CVEs, die die CWEs der Kategorie referenziert haben, normalisiert auf eine 10-Punkte-Skala</li> <li>(Test-)Abdeckung: Der Prozentsatz der Anwendungen, die von allen Organisationen, die auf die CWEs der Kategorie getestet wurden.</li> <li>Gesamtanzahl: Gesamtzahl der Anwendungen, bei denen CWEs der Kategorie zugeordnet wurden.</li> <li>CVEs insgesamt: Gesamtzahl der CVEs in der NVD-Datenbank, die den CWEs der Kategorie zugeordnet wurden.</li> </ul>"},{"location":"de/A00_2021_Introduction/#vielen-dank-an-unsere-daten-spender","title":"Vielen Dank an unsere Daten-Spender","text":"<p>Die folgenden Organisationen (und weitere anonyme Spender) haben freundlicherweise Daten f\u00fcr \u00fcber 500.000 Anwendungen gespendet, um dies zum gr\u00f6\u00dften und umfassendsten Datensatz zur Anwendungssicherheit zu machen. Ohne Sie w\u00e4ren diese Top 10 nicht m\u00f6glich gewesen.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"de/A00_2021_Introduction/#vielen-dank-an-unsere-weiteren-sponsoren","title":"Vielen Dank an unsere weiteren Sponsoren","text":"<p>Das OWASP Top 10 2021-Team dankt Secure Code Warrior und Just Eat f\u00fcr die finanzielle Unterst\u00fctzung.</p> <p></p> <p></p>"},{"location":"de/A01_2021-Broken_Access_Control/","title":"A01:2021 \u2013 Mangelhafte Zugriffskontrolle","text":""},{"location":"de/A01_2021-Broken_Access_Control/#beurteilungskriterien","title":"Beurteilungskriterien","text":"Zugeordnete CWEs Maximale H\u00e4ufigkeit Durchschn. H\u00e4ufigkeit Durchschn. Ausnutzbarkeit (gewichtet) Durchschn. Auswirkungen (gewichtet) Maximale Abdeckung Durchschnittliche Abdeckung Gesamtanzahl CVEs insgesamt 34 55.97 % 3.81 % 6.92 5.93 94.55 % 47.72 % 318,487 19,013"},{"location":"de/A01_2021-Broken_Access_Control/#ubersicht","title":"\u00dcbersicht","text":"<p>94 % der Anwendungen wurden auf irgendeine Form fehlerhafter Zugriffskontrolle getestet. Vom f\u00fcnften Platz aufgestiegen, weist die fehlerhafte Zugriffskontrolle mit einer durchschnittlichen Inzidenzrate von 3,81 % und mit \u00fcber 318.000 die meisten Vorkommnisse im vorliegenden Datensatz auf. Bemerkenswerte Common Weakness Enumerations (CWEs) sind CWE-200: Exposure of Sensitive Information to an Unauthorized Actor, CWE-201: Insertion of Sensitive Information Into Sent Data und CWE-352: Cross-Site Request Forgery.</p>"},{"location":"de/A01_2021-Broken_Access_Control/#beschreibung","title":"Beschreibung","text":"<p>Die Zugriffskontrolle erzwingt Richtlinien, sodass Nutzende nicht au\u00dferhalb ihrer vorgesehenen Berechtigungen handeln k\u00f6nnen. Fehler f\u00fchren in der Regel zur unbefugten Offenlegung, \u00c4nderung oder Zerst\u00f6rung aller Daten oder zur Ausf\u00fchrung einer Gesch\u00e4ftsfunktion au\u00dferhalb der Verf\u00fcgungen der anwendenden Person. Zu den h\u00e4ufigsten Schwachstellen bei der Zugriffskontrolle geh\u00f6ren:</p> <ul> <li> <p>Versto\u00df gegen die Prinzipien der geringsten Rechte oder der standardm\u00e4\u00dfigen Verweigerung, bei dem der Zugriff nur f\u00fcr bestimmte F\u00e4higkeiten, Rollen oder Nutzende gew\u00e4hrt werden sollte, aber f\u00fcr jedermann verf\u00fcgbar ist.</p> </li> <li> <p>Umgehen von Zugriffskontrollpr\u00fcfungen durch \u00c4ndern der URL (Parametermanipulation oder erzwungenes Durchsuchen), des internen Anwendungsstatus oder der HTML-Seite oder durch Verwendung eines Angriffstools zur \u00c4nderung von API-Anfragen.</p> </li> <li> <p>Erm\u00f6glichen, das Konto einer anderen Person anzuzeigen oder zu bearbeiten, indem dessen eindeutige Kennung angegeben wird (unsichere direkte Objektreferenzen).</p> </li> <li> <p>Zugriff auf die API mit fehlenden Zugriffskontrollen f\u00fcr POST, PUT und DELETE.</p> </li> <li> <p>Erh\u00f6hung der Privilegien. Als Nutzerin/Nutzer fungieren, ohne angemeldet zu sein oder als Administrator fungieren, wenn man als Standard-Nutzerin/Nutzer angemeldet ist.</p> </li> <li> <p>Manipulation von Metadaten, wie z. B. das Abfangen oder Manipulieren eines JSON Web Token (JWT)-Zugriffskontrolltokens oder die Manipulation eines Cookies oder eines versteckten Felds, um Berechtigungen zu erh\u00f6hen oder die Ung\u00fcltigerkl\u00e4rung von JWTs zu missbrauchen.</p> </li> <li> <p>CORS-Fehlkonfiguration erm\u00f6glicht API-Zugriff von nicht autorisierten/nicht vertrauensw\u00fcrdigen Quellen.</p> </li> <li> <p>Erzwingen des Zugriffs auf authentifizierte Seiten als nicht authentifizierte Person oder zu privilegierten Seiten als Standard-Nutzerin/Nutzer.</p> </li> </ul>"},{"location":"de/A01_2021-Broken_Access_Control/#pravention-und-gegenmanahmen","title":"Pr\u00e4vention und Gegenma\u00dfnahmen","text":"<p>Die Zugriffskontrolle ist nur wirksam bei vertrauensw\u00fcrdigem serverseitigem Code oder serverlosen APIs, bei denen Angreifende die Zugriffskontrollpr\u00fcfung oder Metadaten nicht \u00e4ndern k\u00f6nnen.</p> <ul> <li> <p>Verweigern Sie standardm\u00e4\u00dfig den Zugriff, mit Ausnahme \u00f6ffentlicher Ressourcen.</p> </li> <li> <p>Implementieren Sie Zugriffskontrollmechanismen einmalig und verwenden Sie diese in der gesamten Anwendung wieder, einschlie\u00dflich der Minimierung der Nutzung von Cross-Origin Resource Sharing (CORS).</p> </li> <li> <p>Modellzugriffskontrollen sollten die Datensatzeigent\u00fcmerschaft erzwingen, anstatt zu akzeptieren, dass Nutzerinnen/Nutzer Datens\u00e4tze erstellen, lesen, aktualisieren oder l\u00f6schen k\u00f6nnen.</p> </li> <li> <p>Durch Dom\u00e4nenmodelle sollten eindeutige Gesch\u00e4ftslimitanforderungen f\u00fcr Anwendungen durchgesetzt werden.</p> </li> <li> <p>Deaktivieren Sie die Verzeichnisliste des Webservers und stellen Sie sicher, dass Dateimetadaten (z. B. .git) und Sicherungsdateien nicht in Web-Roots vorhanden sind.</p> </li> <li> <p>Protokollieren Sie Fehler bei der Zugriffskontrolle und benachrichtigen Sie Administratoren bei Bedarf (z. B. wiederholte Fehler).</p> </li> <li> <p>Setzen Sie Ratenbegrenzung f\u00fcr API- und Controller-Zugriff, um den Schaden durch automatisierte Angriffstools zu minimieren.</p> </li> <li> <p>Statusbehaftete Sitzungskennungen sollten nach dem Abmelden auf dem Server ung\u00fcltig gemacht werden. Zustandslose JWT-Token sollten eher kurzlebig sein, damit das Zeitfenster f\u00fcr Angreifende minimiert wird. F\u00fcr langlebigere JWTs wird dringend empfohlen, die OAuth-Standards zu befolgen, um den Zugriff zu widerrufen.</p> </li> </ul> <p>Entwickler und QA-Mitarbeiter sollten funktionale Zugriffskontrolleinheiten und Integrationstests durchf\u00fchren.</p>"},{"location":"de/A01_2021-Broken_Access_Control/#beispielhafte-angriffsszenarien","title":"Beispielhafte Angriffsszenarien","text":"<p>Szenario Nr. 1: Die Anwendung verwendet nicht \u00fcberpr\u00fcfte Daten in einem SQL-Aufruf, der auf Kontoinformationen zugreift:</p> <pre><code>pstmt.setString(1, request.getParameter(\"acct\"));\nResultSet results = pstmt.executeQuery( );\n</code></pre> <p>Angreifende \u00e4ndern einfach den \u201eacct\u201c-Parameter des Browsers, um die gew\u00fcnschte Kontonummer zu senden. Bei nicht korrekter \u00dcberpr\u00fcfung kann die angreifende Person auf das Konto einer beliebigen Nutzerin/Nutzers zugreifen.</p> <pre><code>https://example.com/app/accountInfo?acct=notmyacct\n</code></pre> <p>Szenario Nr. 2: Eine angreifende Person erzwingt einfach die Suche nach Ziel-URLs. F\u00fcr den Zugriff auf die Admin-Seite sind Admin-Rechte erforderlich.</p> <pre><code>https://example.com/app/getappInfo\nhttps://example.com/app/admin_getappInfo\n</code></pre> <p>Wenn eine nicht authentifizierte Benutzerin/Benutzer auf eine der Seiten zugreifen kann, liegt ein Fehler vor. Wenn ein Benutzerin/Benutzer ohne Administrationsrechte auf die Admin-Seite zugreifen kann, handelt es sich um einen Fehler.</p>"},{"location":"de/A01_2021-Broken_Access_Control/#referenzen","title":"Referenzen","text":"<ul> <li>OWASP Proactive Controls: C7: Enforce Access Controls </li> <li>OWASP Application Security Verification Standard (ASVS): V4 Access Control </li> <li>OWASP Web Security Testing Guide: Authorization Testing </li> <li>OWASP Cheat Sheet Series: Authorization Cheat Sheet </li> <li>Portswigger Research: Exploiting CORS misconfigurations for Bitcoins and bounties </li> <li>OAuth 2.0: Revoking Access </li> </ul>"},{"location":"de/A01_2021-Broken_Access_Control/#liste-der-zugeordneten-cwes","title":"Liste der zugeordneten CWEs","text":"<ul> <li>CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') </li> <li>CWE-23: Relative Path Traversal </li> <li>CWE-35: Path Traversal: '.../...//' </li> <li>CWE-59: Improper Link Resolution Before File Access ('Link Following') </li> <li>CWE-200: Exposure of Sensitive Information to an Unauthorized Actor </li> <li>CWE-201: Insertion of Sensitive Information Into Sent Data </li> <li>CWE-219: Storage of File with Sensitive Data Under Web Root </li> <li>CWE-264: Permissions, Privileges, and Access Controls (CWE CATEGORY) </li> <li>CWE-275: Permission Issues (CWE CATEGORY) </li> <li>CWE-276: Incorrect Default Permissions </li> <li>CWE-284: Improper Access Control </li> <li>CWE-285: Improper Authorization </li> <li>CWE-352: Cross-Site Request Forgery (CSRF) </li> <li>CWE-359: Exposure of Private Personal Information to an Unauthorized Actor </li> <li>CWE-377: Insecure Temporary File </li> <li>CWE-402: Transmission of Private Resources into a New Sphere ('Resource Leak') </li> <li>CWE-425: Direct Request ('Forced Browsing') </li> <li>CWE-441: Unintended Proxy or Intermediary ('Confused Deputy') </li> <li>CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere </li> <li>CWE-538: Insertion of Sensitive Information into Externally-Accessible File or Directory </li> <li>CWE-540: Inclusion of Sensitive Information in Source Code </li> <li>CWE-548: Exposure of Information Through Directory Listing </li> <li>CWE-552: Files or Directories Accessible to External Parties </li> <li>CWE-566: Authorization Bypass Through User-Controlled SQL Primary Key </li> <li>CWE-601: URL Redirection to Untrusted Site ('Open Redirect') </li> <li>CWE-639: Authorization Bypass Through User-Controlled Key </li> <li>CWE-651: Exposure of WSDL File Containing Sensitive Information </li> <li>CWE-668: Exposure of Resource to Wrong Sphere </li> <li>CWE-706: Use of Incorrectly-Resolved Name or Reference </li> <li>CWE-862: Missing Authorization </li> <li>CWE-863: Incorrect Authorization </li> <li>CWE-913: Improper Control of Dynamically-Managed Code Resources </li> <li>CWE-922: Insecure Storage of Sensitive Information </li> <li>CWE-1275: Sensitive Cookie with Improper SameSite Attribute </li> </ul>"},{"location":"de/A02_2021-Cryptographic_Failures/","title":"A02:2021 \u2013 Fehlerhafter Einsatz von Kryptographie","text":""},{"location":"de/A02_2021-Cryptographic_Failures/#beurteilungskriterien","title":"Beurteilungskriterien","text":"Zugeordnete CWEs Maximale H\u00e4ufigkeit Durchschn. H\u00e4ufigkeit Durchschn. Ausnutzbarkeit (gewichtet) Durchschn. Auswirkungen (gewichtet) Maximale Abdeckung Durchschnittliche Abdeckung Gesamtanzahl CVEs insgesamt 29 46.44 % 4.49 % 7.29 6.81 79.33 % 34.85 % 233,788 3,075"},{"location":"de/A02_2021-Cryptographic_Failures/#ubersicht","title":"\u00dcbersicht","text":"<p>Dieses Thema ist um eine Position auf Platz 2 vorger\u00fcckt und war fr\u00fcher bekannt als Verlust der Vertraulichkeit sensibler Daten, bei dem es sich eher um ein allgemeines Symptom als um eine Grundursache handelt. Nun liegt der Schwerpunkt mehr auf Fehlern im Zusammenhang mit Kryptografie oder dass diese nicht zur Anwendung kommt, was h\u00e4ufig zur Offenlegung sensibler Daten f\u00fchrt. Bemerkenswerte Common Weakness Enumerations (CWEs) sind CWE-259: Use of Hard-coded Password, CWE-327: Broken or Risky Crypto Algorithm und CWE-331 Insufficient Entropy.</p>"},{"location":"de/A02_2021-Cryptographic_Failures/#beschreibung","title":"Beschreibung","text":"<p>Zun\u00e4chst gilt es, den Schutzbedarf der Daten w\u00e4hrend der \u00dcbermittlung und der Speicherung zu ermitteln. Beispielsweise erfordern Passw\u00f6rter, Kreditkartennummern, Gesundheitsakten, pers\u00f6nliche Informationen und Gesch\u00e4ftsgeheimnisse zus\u00e4tzlichen Schutz, vor allem dann, wenn diese Daten unter Datenschutzgesetze, z. B. die Datenschutz-Grundverordnung (DSGVO) der EU, oder andere Vorschriften fallen, beispielsweise dem Payment Card Industry Data Security Standard (PCI-DSS).</p> <p>Folgendes ist zu kl\u00e4ren:</p> <ul> <li> <p>Werden Daten im Klartext \u00fcbermittelt? Das betrifft Protokolle wie HTTP, SMTP, und FTP unter Umst\u00e4nden auch bei Verwendung von TLS-Upgrades wie STARTTLS. Das Internet ist hier besonders gef\u00e4hrlich. \u00dcberpr\u00fcfen Sie auch internen Datenverkehr, z. B. zwischen Load Balancer, Webservern oder Back-End-Systemen.</p> </li> <li> <p>Werden alte oder schwache kryptografische Algorithmen oder Protokolle verwendet, z. B. per Default-Einstellung oder in \u00e4lterem Code?</p> </li> <li> <p>Werden vordefinierte kryptografische Schl\u00fcssel verwendet, schwache Schl\u00fcssel generiert oder Schl\u00fcssel wiederverwendet? Fehlt eine Schl\u00fcsselverwaltung oder Schl\u00fcsselrotation? Werden kryptografische Schl\u00fcssel in Quellcode-Repositories eingecheckt?</p> </li> <li> <p>Wird Verschl\u00fcsselung nicht verbindlich erzwungen, z. B. fehlen bei Web Anwendungen Vorgaben f\u00fcr den Browser in den entsprechenden HTTP-Headern?</p> </li> <li> <p>Werden empfangene Serverzertifikate und die Zertifikatskette korrekt validiert?</p> </li> <li> <p>Werden Initialisierungsvektoren ignoriert, wiederverwendet oder nicht ausreichend sicher f\u00fcr den kryptografischen Betriebsmodus generiert? Ist ein unsicherer Betriebsmodus wie ECB im Einsatz? Wird ein Betriebsmodus verwendet, der nur verschl\u00fcsselt, obwohl ein AEAD Betriebsmodus angebracht w\u00e4re, der auch die Integrit\u00e4t sch\u00fctzt?</p> </li> <li> <p>Werden Passw\u00f6rter direkt als kryptografische Schl\u00fcssel verwendet ohne eine Schl\u00fcsselableitung mittels Key Derivation Function?</p> </li> <li> <p>Werden Zufallszahlen f\u00fcr kryptografische Zwecke genutzt, die nicht auf kryptografische Anforderungen ausgelegt sind? Selbst wenn die richtige Funktion genutzt wird, muss diese eventuell vom Entwickler korrekt initialisiert werden. Wurde eine integrierte starke Initialisierung eventuell durch einen Entwickler mit einem schwachen Wert \u00fcberschrieben, dem es an ausreichender Entropie und Nichtvorhersehbarkeit mangelt?</p> </li> <li> <p>Werden Hash-Funktionen mit bekannten Schw\u00e4chen wie MD5 oder SHA1 verwendet oder werden nicht-kryptografische Hash-Funktionen verwendet, wenn kryptografische Hash-Funktionen ben\u00f6tigt werden?</p> </li> <li> <p>Werden veraltete kryptografische Padding Methoden verwendet, z. B. PKCS#1 v1.5?</p> </li> <li> <p>Sind kryptografische Fehlermeldungen oder Seitenkan\u00e4le ausnutzbar, beispielsweise in Form von Padding-Oracle-Angriffen?</p> </li> </ul> <p>Siehe ASVS V6 Stored Cryptography, V8 Data Protection, V9 Communication</p>"},{"location":"de/A02_2021-Cryptographic_Failures/#pravention-und-gegenmanahmen","title":"Pr\u00e4vention und Gegenma\u00dfnahmen","text":"<p>Gehen Sie als Minimum wie folgt vor und konsultieren Sie die Referenzen:</p> <ul> <li> <p>Klassifizieren Sie die Daten, die von einer Anwendung verarbeitet, gespeichert oder \u00fcbermittelt werden nach ihrem Schutzbedarf. Ber\u00fccksichtigen Sie dabei auch Datenschutzgesetze, regulatorische und Gesch\u00e4fts-Anforderungen.</p> </li> <li> <p>Speichern Sie sensible Daten nicht unn\u00f6tig. L\u00f6schen Sie sensible Daten auf sichere Weise sobald wie m\u00f6glich oder verwenden Sie Techniken wie PCI-DSS-konformes Speichern von Ersatzwerten (tokenization) oder gar gek\u00fcrzten (truncation) Werten. Daten, die es nicht mehr gibt, k\u00f6nnen auch nicht gestohlen werden.</p> </li> <li> <p>Stellen Sie sicher, dass alle vertraulichen Daten bei Speicherung verschl\u00fcsselt werden.</p> </li> <li> <p>Stellen Sie sicher, dass aktuelle, starke, standardisierte Algorithmen, Protokolle und Schl\u00fcssel, z. B. gem\u00e4\u00df BSI TR-02102, verwendet werden. Etablieren Sie wirksames  Schl\u00fcsselmanagement f\u00fcr kryptografische Schl\u00fcssel.</p> </li> <li> <p>Verschl\u00fcsseln Sie alle Daten w\u00e4hrend der \u00dcbertragung mit sicheren Protokollen wie TLS. Priorisieren Sie dabei durch serverseitig Cipher-Suiten, die Forward Secrecy (FS) bieten, und sichere Parameter. Erzwingen Sie die Verschl\u00fcsselung wenn m\u00f6glich, z. B. durch Einf\u00fchrung von HTTP Strict Transport Security (HSTS).</p> </li> <li> <p>Deaktivieren Sie das Caching f\u00fcr den Empfang vertraulicher Daten.</p> </li> <li> <p>Wenden Sie die Sicherheitsma\u00dfnahmen gem\u00e4\u00df dem Schutzbedarf der Datenklassifizierung an.</p> </li> <li> <p>Verwenden Sie keine veralteten Protokolle wie FTP und SMTP f\u00fcr den Transport sensibler Daten.</p> </li> <li> <p>Verwenden Sie spezielle Hash-Funktionen f\u00fcr das Hashen von Passw\u00f6rtern, bei denen f\u00fcr jedes Passwort ein Salt-Wert (salted hash) zum Einsatz kommt und durch Parametrisierung der Rechenaufwand adaptiv gesteuert werden kann (work-factor). Beispiele sind: Argon2, scrypt, bcrypt oder PBKDF2.</p> </li> <li> <p>Initialisierungsvektoren m\u00fcssen passend zum kryptografischen Betriebsmodus gew\u00e4hlt werden. In vielen F\u00e4llen bedeutet dies, dass ein CSPRNG (kryptografisch sicherer Pseudozufallszahlengenerator) f\u00fcr die Generierung des Initialisierungsvektors verwendet wird. F\u00fcr Modi, die eine Nonce erfordern, ben\u00f6tigt der Initialisierungsvektor nicht notwendigerweise einen CSPRNG. In allen F\u00e4llen darf der gleiche Initialisierungsvektor niemals zweimal f\u00fcr den gleichen Schl\u00fcssel verwendet werden.</p> </li> <li> <p>Verwenden Sie immer eine authentifizierte Verschl\u00fcsselung statt nur einer Verschl\u00fcsselung.</p> </li> <li> <p>Schl\u00fcssel sollten kryptografisch zuf\u00e4llig generiert und als Byte-Arrays im Speicher gehalten werden. Wenn ein Passwort zur Verschl\u00fcsselung verwendet werden soll, muss \u00fcber eine Funktion zur Schl\u00fcsselableitung ein Schl\u00fcssel generiert werden.</p> </li> <li> <p>Stellen Sie sicher, dass an den notwendigen Stellen kryptografisch sichere, unvorhersagbare Zufallszahlen verwendet werden, und dass der Pseudozufallszahlengenerator nicht auf vorhersehbare Weise oder nur mit geringer Entropie initialisiert wurde. Bei den meisten modernen APIs muss der Entwickler die Initialisierung des Pseudozufallszahlengenerators (CSPRNG) nicht manuell durchf\u00fchren.</p> </li> <li> <p>Vermeiden Sie veraltete kryptografische Funktionen und Padding-Verfahren wie MD5, SHA1, PKCS Nummer 1 v1.5.</p> </li> <li> <p>Lassen Sie die Wirksamkeit der Einstellungen unabh\u00e4ngig \u00fcberpr\u00fcfen.</p> </li> </ul>"},{"location":"de/A02_2021-Cryptographic_Failures/#beispielhafte-angriffsszenarien","title":"Beispielhafte Angriffsszenarien","text":"<p>Szenario Nr. 1:: Eine Anwendung verschl\u00fcsselt Kreditkartendaten automatisch bei der Speicherung in einer Datenbank. Das bedeutet aber auch, dass durch SQL-Injection erlangte Kreditkartendaten in diesem Fall automatisch entschl\u00fcsselt werden.</p> <p>Szenario Nr. 2:: Eine Webseite benutzt kein TLS, erzwingt dies nicht auf allen Seiten oder l\u00e4sst schwache Verschl\u00fcsselung zu. Die angreifende Person liest die Kommunikation mit (z. B. in einem offenen WLAN), ersetzt HTTPS- durch HTTP-Verbindungen, h\u00f6rt diese ab und stiehlt das Sitzungscookie. Durch Wiedereinspielen dieses Cookies \u00fcbernimmt die angreifende Person die (authentifizierte) Sitzung des Nutzers und erlangt Zugriff auf dessen private Daten. Anstatt dessen kann die angreifende Person auch die \u00fcbertragenen Daten \u00e4ndern, z. B. den Empf\u00e4nger einer \u00dcberweisung.</p> <p>Szenario Nr. 3:: Die Passwortdatenbank benutzt einfache Hashwerte oder Hashes ohne Salt zur Speicherung der Passw\u00f6rter. Eine Schwachstelle in der Downloadfunktion erlaubt Angreifenden den Zugriff auf die Passwortdatei. Zu Hashes ohne Salt kann \u00fcber vorausberechnete Rainbow-Tabellen der Klartext gefunden werden. Hashes, die \u00fcber einfache oder schnelle Funktionen berechnet wurden, k\u00f6nnen effizient mit Grafikkarten gebrochen werden.</p>"},{"location":"de/A02_2021-Cryptographic_Failures/#referenzen","title":"Referenzen","text":"<ul> <li>OWASP Proactive Controls: C8: Protect Data Everywhere </li> <li>OWASP Application Security Verification Standard (ASVS): V6 Stored Cryptography, V8 Data Protection, V9 Communication </li> <li>OWASP Cheat Sheet Series: Transport Layer Protection Cheat Sheet </li> <li>OWASP Cheat Sheet Series: User Privacy Protection Cheat Sheet </li> <li>OWASP Cheat Sheet Series: Password Storage Cheat Sheet </li> <li>OWASP Cheat Sheet Series: Cryptographic Storage Cheat Sheet </li> <li>OWASP Cheat Sheet Series: HTTP Strict Transport Security Cheat Sheet </li> <li>OWASP Web Security Testing Guide: Testing for Weak Cryptography </li> </ul>"},{"location":"de/A02_2021-Cryptographic_Failures/#liste-der-zugeordneten-cwes","title":"Liste der zugeordneten CWEs","text":"<ul> <li>CWE-261: Weak Encoding for Password </li> <li>CWE-296: Improper Following of a Certificate's Chain of Trust </li> <li>CWE-310: Cryptographic Issues (CWE CATEGORY) </li> <li>CWE-319: Cleartext Transmission of Sensitive Information </li> <li>CWE-321: Use of Hard-coded Cryptographic Key </li> <li>CWE-322: Key Exchange without Entity Authentication </li> <li>CWE-323: Reusing a Nonce, Key Pair in Encryption </li> <li>CWE-324: Use of a Key Past its Expiration Date </li> <li>CWE-325: Missing Cryptographic Step </li> <li>CWE-326: Inadequate Encryption Strength </li> <li>CWE-327: Use of a Broken or Risky Cryptographic Algorithm </li> <li>CWE-328: Use of Weak Hash </li> <li>CWE-329: Generation of Predictable IV with CBC Mode </li> <li>CWE-330: Use of Insufficiently Random Values </li> <li>CWE-331: Insufficient Entropy </li> <li>CWE-335: Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG) </li> <li>CWE-336: Same Seed in Pseudo-Random Number Generator (PRNG) </li> <li>CWE-337: Predictable Seed in Pseudo-Random Number Generator (PRNG) </li> <li>CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG) </li> <li>CWE-340: Generation of Predictable Numbers or Identifiers </li> <li>CWE-347: Improper Verification of Cryptographic Signature </li> <li>CWE-523: Unprotected Transport of Credentials </li> <li>CWE-720: OWASP Top Ten 2007 Category A9 - Insecure Communications (CWE CATEGORY) </li> <li>CWE-757: Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade') </li> <li>CWE-759: Use of a One-Way Hash without a Salt </li> <li>CWE-760: Use of a One-Way Hash with a Predictable Salt </li> <li>CWE-780: Use of RSA Algorithm without OAEP </li> <li>CWE-818: OWASP Top Ten 2010 Category A9 - Insufficient Transport Layer Protection (CWE CATEGORY) </li> <li>CWE-916: Use of Password Hash With Insufficient Computational Effort </li> </ul>"},{"location":"de/A03_2021-Injection/#beurteilungskriterien","title":"Beurteilungskriterien","text":"Zugeordnete CWEs Maximale H\u00e4ufigkeit Durchschn. H\u00e4ufigkeit Durchschn. Ausnutzbarkeit (gewichtet) Durchschn. Auswirkungen (gewichtet) Maximale Abdeckung Durchschnittliche Abdeckung Gesamtanzahl CVEs insgesamt 33 19.09 % 3.37 % 7.25 7.15 94.04 % 47.90 % 274,228 32,078"},{"location":"de/A03_2021-Injection/#ubersicht","title":"\u00dcbersicht","text":"<p>Die Injection rutscht von der ersten auf die dritte Position ab. 94 % der Anwendungen wurden auf irgendeine Form der Injection getestet, mit einer maximalen H\u00e4ufigkeit von 19,09 %, einer durchschnittlichen H\u00e4ufigkeit von 3,37 % und \u00fcber 274.000 Vorkommnissen. Zu den wichtigsten Common Weakness Enumerations (CWEs) z\u00e4hlen CWE-79: Cross-Site Scripting, CWE-89: SQL Injection und CWE-73: External Control of File Name or Path.</p>"},{"location":"de/A03_2021-Injection/#beschreibung","title":"Beschreibung","text":"<p>Eine Anwendung ist f\u00fcr diesen Angriff anf\u00e4llig, wenn:</p> <ul> <li> <p>Daten, die von Nutzenden stammen, von der Anwendung nicht ausreichend validiert, gefiltert oder bereinigt werden.</p> </li> <li> <p>Dynamische Anfragen oder nicht-parametrisierte Aufrufe ohne ein, dem Kontext entsprechendes Escaping direkt einem Interpreter \u00fcbergeben werden.</p> </li> <li> <p>B\u00f6sartige Daten innerhalb von ORM (\u201eObject-Relational Mapping\u201c)-Suchparametern genutzt werden k\u00f6nnen, um vertrauliche Datens\u00e4tze von Dritten zu extrahieren.</p> </li> <li> <p>B\u00f6sartige Daten direkt oder als Teil zusammengesetzter, dynamischer Querys verwendet werden. Die SQL-Abfragen oder Befehle beinhalten die Struktur und die sch\u00e4dlichen Daten in den dynamischen Querys, Befehlen oder Stored Procedures.</p> </li> </ul> <p>Zu den h\u00e4ufigeren Injection Arten geh\u00f6ren SQL, NoSQL, OS-Befehle, Object Relational Mapping (ORM), LDAP und Expression Language (EL) oder Object Graph Navigation Library (OGNL). Das Grundkonzept eines Injection-Angriffs ist f\u00fcr alle Interpreter gleich. Ein Quellcode-Review ist die beste Methode, um Injection-Schwachstellen in Anwendungen zu finden. Ausf\u00fchrliches (ggf. automatisiertes) Testen aller Parameter und Variablen, Header-, URL-, Cookies-, JSON-, SOAP- und XML-Eingaben wird dringend empfohlen. Statische (SAST, Quellcode-Ebene), dynamische (DAST, laufende Anwendung) und interaktive (IAST, Mischform aus statisch und dynamisch) Test-Werkzeuge k\u00f6nnen von Organisationen f\u00fcr ihre CI/CD-Pipeline genutzt werden, um neue Schwachstellen noch vor einer m\u00f6glichen Auslieferung in Produktivsysteme zu identifizieren.</p>"},{"location":"de/A03_2021-Injection/#pravention-und-gegenmanahmen","title":"Pr\u00e4vention und Gegenma\u00dfnahmen","text":"<p>Eine konsequente Trennung von Daten, Suchanfragen und Befehlen ist f\u00fcr die Vermeidung von Injection-Angriffen unerl\u00e4sslich:</p> <ul> <li> <p>Die bevorzugte Methode ist die Verwendung einer sicheren API, die die Verwendung des Interpreters vollst\u00e4ndig vermeidet, eine parametrisierte Schnittstelle bereitstellt oder in objektrelationale Mapping-Tools (ORMs) umwandelt.   Anmerkung: Stored Procedures k\u00f6nnen - auch parametrisiert - immer noch SQL-Injections erm\u00f6glichen, wenn PL/SQL oder T-SQL Anfragen und Eingabedaten konkateniert oder mit EXECUTE IMMEDIATE oder exec() ausgef\u00fchrt werden.</p> </li> <li> <p>F\u00fcr die serverseitige Eingabe-Validierung empfiehlt sich die Nutzung eines Positivlisten(\u201cWhitelist\u201d)-Ansatzes. Dies ist i. A. kein vollst\u00e4ndiger Schutz, da viele Anwendungen Sonderzeichen z. B. in Textfelder oder APIs f\u00fcr mobile Anwendungen ben\u00f6tigen.</p> </li> <li> <p>F\u00fcr jede noch verbliebene dynamische Query m\u00fcssen Sonderzeichen f\u00fcr den jeweiligen Interpreter mit der richtigen Escape-Syntax entsch\u00e4rft werden.  Anmerkung: Ein Escaping von SQL-Bezeichnern, wie z. B. die Namen von Tabellen oder Spalten usw. ist nicht m\u00f6glich. Falls Nutzende solche Bezeichner selbst eingeben k\u00f6nnen, so ist dies durchaus gef\u00e4hrlich. Dies ist eine \u00fcbliche Schwachstelle bei Software, die Reports aus einer Datenbank erstellt.</p> </li> <li> <p>SQL-Querys sollten LIMIT oder andere SQL-Controls verwenden, um den m\u00f6glichen Massen-Abfluss von Daten zu verhindern.</p> </li> </ul>"},{"location":"de/A03_2021-Injection/#beispielhafte-angriffsszenarien","title":"Beispielhafte Angriffsszenarien","text":"<p>Szenario Nr. 1: Eine Anwendung nutzt ungepr\u00fcfte Eingabedaten f\u00fcr den Zusammenbau der folgenden verwundbaren SQL-Abfrage:</p> <pre><code>String query = \"SELECT \\* FROM Accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\";\n</code></pre> <p>Szenario Nr. 2: Auch das blinde Vertrauen in Frameworks kann zu Querys f\u00fchren, die ganz analog zu obigem Beispiel verwundbar sind (z. B. Hibernate Query Language (HQL)):</p> <pre><code>Abfrage HQLQuery = session.createQuery(\"FROM Accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\");\n</code></pre> <p>In beiden F\u00e4llen k\u00f6nnen Angreifende den \u2018id\u2019-Parameter im Browser \u00e4ndern und sendet: \u201eUNION SLEEP(10);--\u201c. Zum Beispiel:</p> <pre><code>http://example.com/app/accountView?id=' UNION SELECT SLEEP(10);--\n</code></pre> <p>Hierdurch wird die Logik der Anfrage ver\u00e4ndert, so dass alle Datens\u00e4tze der Tabelle \u201eaccounts\u201c ohne Einschr\u00e4nkung auf einen Kunden zur\u00fcckgegeben werden. Gef\u00e4hrlichere Attacken w\u00e4ren z. B. das \u00c4ndern oder L\u00f6schen von Daten oder das Aufrufen von Stored Procedures.</p>"},{"location":"de/A03_2021-Injection/#referenzen","title":"Referenzen","text":"<ul> <li>OWASP Proactive Controls: C3: Secure Database Access </li> <li>OWASP Application Security Verification Standard (ASVS): V5 Validation, Sanitization and Encoding </li> <li>OWASP Web Security Testing Guide: Testing for SQL Injection,  Testing for Command Injection,  Testing for ORM Injection </li> <li>OWASP Cheat Sheet Series: Injection Prevention Cheat Sheet </li> <li>OWASP Cheat Sheet Series: SQL Injection Prevention Cheat Sheet </li> <li>OWASP Cheat Sheet Series: Injection Prevention in Java Cheat Sheet </li> <li>OWASP Cheat Sheet Series: Query Parameterization Cheat Sheet </li> <li>OWASP Automated Threats to Web Applications: OAT-014 Vulnerability Scanning </li> <li>Portswigger Issue Definitions: Server-side template injection </li> </ul>"},{"location":"de/A03_2021-Injection/#liste-der-zugeordneten-cwes","title":"Liste der zugeordneten CWEs","text":"<ul> <li>CWE-20: Improper Input Validation </li> <li>CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') </li> <li>CWE-75: Failure to Sanitize Special Elements into a Different Plane (Special Element Injection) </li> <li>CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') </li> <li>CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') </li> <li>CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') </li> <li>CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS) </li> <li>CWE-83: Improper Neutralization of Script in Attributes in a Web Page </li> <li>CWE-87: Improper Neutralization of Alternate XSS Syntax </li> <li>CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection') </li> <li>CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') </li> <li>CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') </li> <li>CWE-91: XML Injection (aka Blind XPath Injection) </li> <li>CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection') </li> <li>CWE-94: Improper Control of Generation of Code ('Code Injection') </li> <li>CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection') </li> <li>CWE-96: Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection') </li> <li>CWE-97: Improper Neutralization of Server-Side Includes (SSI) Within a Web Page </li> <li>CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion') </li> <li>CWE-99: Improper Control of Resource Identifiers ('Resource Injection') </li> <li>CWE-100: DEPRECATED: Technology-Specific Input Validation Problems (CWE CATEGORY) </li> <li>CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting') </li> <li>CWE-116: Improper Encoding or Escaping of Output </li> <li>CWE-138: Improper Neutralization of Special Elements </li> <li>CWE-184: Incomplete List of Disallowed Inputs </li> <li>CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection') </li> <li>CWE-471: Modification of Assumed-Immutable Data (MAID) </li> <li>CWE-564: SQL Injection: Hibernate </li> <li>CWE-610: Externally Controlled Reference to a Resource in Another Sphere </li> <li>CWE-643: Improper Neutralization of Data within XPath Expressions ('XPath Injection') </li> <li>CWE-644: Improper Neutralization of HTTP Headers for Scripting Syntax </li> <li>CWE-652: Improper Neutralization of Data within XQuery Expressions ('XQuery Injection') </li> <li>CWE-917: Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection') </li> </ul>"},{"location":"de/A04_2021-Insecure_Design/","title":"A04:2021 \u2013 Unsicheres Anwendungsdesign","text":""},{"location":"de/A04_2021-Insecure_Design/#beurteilungskriterien","title":"Beurteilungskriterien","text":"Zugeordnete CWEs Maximale H\u00e4ufigkeit Durchschn. H\u00e4ufigkeit Durchschn. Ausnutzbarkeit (gewichtet) Durchschn. Auswirkungen (gewichtet) Maximale Abdeckung Durchschnittliche Abdeckung Gesamtanzahl CVEs insgesamt 40 24.19 % 3.00 % 6.46 6.78 77.25 % 42.51 % 262,407 2,691"},{"location":"de/A04_2021-Insecure_Design/#ubersicht","title":"\u00dcbersicht","text":"<p>Eine der neuen Kategorie f\u00fcr 2021 konzentriert sich auf Risiken im Zusammenhang mit Design- und Architekturfehlern und fordert einen st\u00e4rkeren Einsatz von Bedrohungsmodellierung, sicheren Design Pattern und Referenzarchitekturen. Als Community sollten wir uns nicht nur auf den \"Shift-Left\"-Ansatz w\u00e4hrend der Entwicklung fokussieren, sondern auch auf die vorangehenden Aktivit\u00e4ten, die f\u00fcr die Prinzipien von \u201eSecure by Design\u201c wesentlich sind. Bemerkenswerte Common Weakness Enumerations (CWEs) sind CWE-209: Generation of Error Message Containing Sensitive Information, CWE-256: Unprotected Storage of Credentials, CWE-501: Trust Boundary Violation, and CWE-522: Insufficiently Protected Credentials.</p>"},{"location":"de/A04_2021-Insecure_Design/#beschreibung","title":"Beschreibung","text":"<p>Unsicheres Design ist eine umfassende Kategorie, die verschiedene Schwachstellen umfasst und als \u201efehlendes oder ineffektives Design von Schutzmechanismen\u201c beschrieben wird.Unsicheres Anwendungsdesign ist nicht die Ursache f\u00fcr alle anderen Top-10-Risikokategorien. Es gibt einen Unterschied zwischen unsicherem Design und unsicherer Implementierung. Designfehler und Implementierungsfehler unterscheiden sich aus gutem Grund, da sie unterschiedliche Ursachen und Mitigationen erfordern. Ein sicheres Design kann immer noch Implementierungsfehler enthalten, die zu ausnutzbaren Schwachstellen f\u00fchren. Ein unsicheres Design l\u00e4sst sich nicht durch eine perfekte Implementierung beheben, da die notwendigen Sicherheitskontrollen von vornherein nicht zur Abwehr bestimmter Angriffe vorgesehen waren. Ein Faktor, der zu einem unsicheren Design beitr\u00e4gt, ist das Fehlen eines Gesch\u00e4ftsrisikoprofils, das der entwickelten Software oder dem System zugrunde liegt, was dazu f\u00fchrt, dass das erforderliche Ma\u00df an Sicherheitsdesign nicht bestimmt wird.</p>"},{"location":"de/A04_2021-Insecure_Design/#anforderungs-und-ressourcenmanagement","title":"Anforderungs- und Ressourcenmanagement","text":"<p>Legen Sie zusammen mit den Gesch\u00e4ftseinheiten die fachlichen Anforderungen an die Anwendung fest, einschlie\u00dflich des Schutzbedarfs hinsichtlich Vertraulichkeit, Integrit\u00e4t, Verf\u00fcgbarkeit und Authentizit\u00e4t aller Datenbest\u00e4nde, sowie die vorgesehene Gesch\u00e4ftslogik. Ber\u00fccksichtigen Sie, wie exponiert Ihre Anwendung sein wird und ob Sie (zus\u00e4tzlich zur Zugangskontrolle) eine Mandantentrennung ben\u00f6tigt. Stellen Sie die technischen Anforderungen zusammen, einschlie\u00dflich funktionaler und nicht funktionaler Sicherheitsanforderungen. Planen Sie das Budget f\u00fcr alle Design-, Entwicklungs-, Test- und Betriebsaktivit\u00e4ten, unter Ber\u00fccksichtigung der Sicherheit.</p>"},{"location":"de/A04_2021-Insecure_Design/#sicheres-design","title":"Sicheres Design","text":"<p>Sicheres Design ist sowohl eine Denkweise als auch eine Vorgehensweise, die kontinuierlich Bedrohungen analysiert und sicherstellt, dass der Code robust entwickelt und getestet wird, um bekannte Angriffsmethoden zu verhindern. Die Bedrohungsmodellierung sollte in Backlog Refinement Terminen oder vergleichbaren Aktivit\u00e4ten integriert werden. Dabei sollten \u00c4nderungen im Datenfluss, in der Zugriffskontrolle und anderen Sicherheitsma\u00dfnahmen \u00fcberpr\u00fcft werden. Identifizieren Sie w\u00e4hrend der Entwicklung der User Story die richtigen Ablauf- und Fehlerzust\u00e4nde und stellen Sie sicher, dass sie gut verstanden sind und die Verantwortlichen und sonstigen Beteiligten dazu \u00fcbereinstimmen. Analysieren Sie Annahmen und Bedingungen f\u00fcr erwartete sowie fehlgeschlagene Prozesse, um sicherzustellen, dass diese weiterhin angemessen und die erw\u00fcnschten sind. Bestimmen Sie, wie Annahmen \u00fcberpr\u00fcft und Bedingungen erzwingt werden k\u00f6nnen, die f\u00fcr das korrekte Verhalten erforderlich sind. Stellen Sie sicher, dass die Ergebnisse in der User Story dokumentiert sind. Lernen Sie aus Fehlern und bieten Sie positive Anreize, um kontinuierliche Verbesserungen voranzutreiben. Sicheres Design ist weder ein Add-on noch ein Tool, das Sie einer Software hinzuf\u00fcgen k\u00f6nnen.</p>"},{"location":"de/A04_2021-Insecure_Design/#sicherer-entwicklungslebenszyklus","title":"Sicherer Entwicklungslebenszyklus","text":"<p>Sichere Software erfordert einen sicheren Entwicklungslebenszyklus, den Einsatz von sicheren Entwurfsmustern, eine bew\u00e4hrte Methodik, sichere Komponentenbibliotheken, geeignete Tools und Bedrohungsmodellierung. Wenden Sie sich zu Beginn eines Softwareprojekts w\u00e4hrend der gesamten Projektlaufzeit und Wartung Ihrer Software an Ihre Sicherheitsspezialisten. Erw\u00e4gen Sie die Nutzung des OWASP Software Assurance Maturity Model (SAMM), um Ihre Bem\u00fchungen zur sicheren Softwareentwicklung zu strukturieren.</p>"},{"location":"de/A04_2021-Insecure_Design/#pravention-und-gegenmanahmen","title":"Pr\u00e4vention und Gegenma\u00dfnahmen","text":"<ul> <li> <p>Entwickeln und nutzen Sie einen sicheren Entwicklungslebenszyklus mit Unterst\u00fctzung durch AppSec-Experten bei der Bewertung und Gestaltung von Sicherheits- und Datenschutzkontrollen.</p> </li> <li> <p>Erstellen und verwenden Sie eine Bibliothek mit sicheren Entwurfsmustern und bew\u00e4hrten, erprobten Komponenten.</p> </li> <li> <p>Verwenden Sie Bedrohungsmodellierung f\u00fcr kritische Bereiche wie Authentifizierung, Zugriffskontrolle, Gesch\u00e4ftslogik und wichtige Abl\u00e4ufe.</p> </li> <li> <p>Integrieren Sie Sicherheitsvorgaben und -kontrollen in den User Stories.</p> </li> <li> <p>Implementieren Sie Plausibilit\u00e4tspr\u00fcfungen auf allen Ebenen Ihrer Anwendung, vom Frontend bis zum Backend.</p> </li> <li> <p>Schreiben Sie Unit- und Integrationstests, um zu validieren, dass alle kritischen Abl\u00e4ufe resistent gegen das Bedrohungsmodell sind. Stellen Sie Anwendungs- und Missbrauchsf\u00e4lle f\u00fcr jede Ebene Ihrer Anwendung zusammen.</p> </li> <li> <p>Trennen Sie die Ebenen basierend auf Gef\u00e4hrdungs- und Schutzbedarf auf System- und Netzwerkebene.</p> </li> <li> <p>Stellen Sie sicher, dass die Trennung der Mandanten konsequent auf allen Ebenen erfolgt.</p> </li> <li> <p>Begrenzen Sie den Ressourcenverbrauch pro Nutzerin/Nutzer oder Dienst</p> </li> </ul>"},{"location":"de/A04_2021-Insecure_Design/#beispielhafte-angriffsszenarien","title":"Beispielhafte Angriffsszenarien","text":"<p>Szenario Nr. 1: Ein Workflow zur Wiederherstellung von Anmeldeinformationen kann \u201eFragen und Antworten\u201c enthalten, was jedoch gem\u00e4\u00df NIST 800-63b, dem OWASP ASVS und den OWASP Top 10 nicht zul\u00e4ssig ist. Fragen und Antworten k\u00f6nnen nicht als vertrauensw\u00fcrdiger Identit\u00e4tsnachweis  betrachtet werden. Mehr als eine Person kann die Antworten kennen, weshalb sie verboten sind. Dieser Code sollte entfernt und durch ein sichereres Design ersetzt werden.</p> <p>Szenario Nr. 2: Eine Kinokette bietet Gruppenbuchungsrabatte an und verlangt erst bei mehr als f\u00fcnfzehn Besuchern eine Anzahlung. Angreifende k\u00f6nnten dieses System ausnutzen, indem sie versuchen, mit wenigen Anfragen sechshundert Sitzpl\u00e4tze in allen Kinos gleichzeitig zu reservieren, was zu erheblichen Einnahmeverlusten f\u00fchren k\u00f6nnte.</p> <p>Szenario Nr. 3: Die E-Commerce-Website einer Einzelhandelskette ist nicht vor Bots gesch\u00fctzt, die von Scalpern betrieben werden, die High-End-Grafikkarten kaufen, um sie auf Auktionsplattformen weiterzuverkaufen. Dies sorgt f\u00fcr schreckliche Publicity bei den Grafikkartenherstellern und Besitzern von Einzelhandelsketten und sorgt f\u00fcr anhaltende Frustration bei Enthusiasten, die diese Karten nicht erwerben k\u00f6nnen. Sorgf\u00e4ltiges Anti-Bot-Design sowie Automatismen, die z. B. K\u00e4ufe ablehnen, die innerhalb weniger Sekunden nach Verf\u00fcgbarkeit get\u00e4tigt werden, k\u00f6nnen helfen, unechte K\u00e4ufe zu identifizieren und solche Transaktionen zu verhindern.</p>"},{"location":"de/A04_2021-Insecure_Design/#referenzen","title":"Referenzen","text":"<ul> <li>OWASP Cheat Sheet Series: Secure Product Design Cheat Sheet </li> <li>OWASP Software Assurance Maturity Model: OWASP SAMM Security Architecture </li> <li>OWASP Software Assurance Maturity Model: OWASP SAMM Threat Assessment </li> <li>NIST Publications: Guidelines on Minimum Standards for Developer Verification of Software </li> <li>The Threat Modeling Manifesto </li> <li>Awesome Threat Modeling </li> </ul>"},{"location":"de/A04_2021-Insecure_Design/#liste-der-zugeordneten-cwes","title":"Liste der zugeordneten CWEs","text":"<ul> <li>CWE-73: External Control of File Name or Path </li> <li>CWE-183: Permissive List of Allowed Inputs </li> <li>CWE-209: Generation of Error Message Containing Sensitive Information </li> <li>CWE-213: Exposure of Sensitive Information Due to Incompatible Policies </li> <li>CWE-235: Improper Handling of Extra Parameters </li> <li>CWE-256: Plaintext Storage of a Password </li> <li>CWE-257: Storing Passwords in a Recoverable Format </li> <li>CWE-266: Incorrect Privilege Assignment </li> <li>CWE-269: Improper Privilege Management </li> <li>CWE-280: Improper Handling of Insufficient Permissions or Privileges  </li> <li>CWE-311: Missing Encryption of Sensitive Data </li> <li>CWE-312: Cleartext Storage of Sensitive Information </li> <li>CWE-313: Cleartext Storage in a File or on Disk </li> <li>CWE-316: Cleartext Storage of Sensitive Information in Memory </li> <li>CWE-419: Unprotected Primary Channel </li> <li>CWE-430: Deployment of Wrong Handler </li> <li>CWE-434: Unrestricted Upload of File with Dangerous Type </li> <li>CWE-444: Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') </li> <li>CWE-451: User Interface (UI) Misrepresentation of Critical Information </li> <li>CWE-472: External Control of Assumed-Immutable Web Parameter </li> <li>CWE-501: Trust Boundary Violation </li> <li>CWE-522: Insufficiently Protected Credentials </li> <li>CWE-525: Use of Web Browser Cache Containing Sensitive Information </li> <li>CWE-539: Use of Persistent Cookies Containing Sensitive Information </li> <li>CWE-579: J2EE Bad Practices: Non-serializable Object Stored in Session </li> <li>CWE-598: Use of GET Request Method With Sensitive Query Strings </li> <li>CWE-602: Client-Side Enforcement of Server-Side Security </li> <li>CWE-642: External Control of Critical State Data </li> <li>CWE-646: Reliance on File Name or Extension of Externally-Supplied File </li> <li>CWE-650: Trusting HTTP Permission Methods on the Server Side </li> <li>CWE-653: Improper Isolation or Compartmentalization </li> <li>CWE-656: Reliance on Security Through Obscurity </li> <li>CWE-657: Violation of Secure Design Principles </li> <li>CWE-799: Improper Control of Interaction Frequency </li> <li>CWE-807: Reliance on Untrusted Inputs in a Security Decision </li> <li>CWE-840: Business Logic Errors (CWE CATEGORY) </li> <li>CWE-841: Improper Enforcement of Behavioral Workflow </li> <li>CWE-927: Use of Implicit Intent for Sensitive Communication </li> <li>CWE-1021: Improper Restriction of Rendered UI Layers or Frames </li> <li>CWE-1173: Improper Use of Validation Framework </li> </ul>"},{"location":"de/A05_2021-Security_Misconfiguration/","title":"A05:2021 \u2013 Sicherheitsrelevante Fehlkonfiguration","text":""},{"location":"de/A05_2021-Security_Misconfiguration/#beurteilungskriterien","title":"Beurteilungskriterien","text":"Zugeordnete CWEs Maximale H\u00e4ufigkeit Durchschn. H\u00e4ufigkeit Durchschn. Ausnutzbarkeit (gewichtet) Durchschn. Auswirkungen (gewichtet) Maximale Abdeckung Durchschnittliche Abdeckung Gesamtanzahl CVEs insgesamt 20 19.84 % 4.51 % 8.12 6.56 89.58 % 44.84 % 208,387 789"},{"location":"de/A05_2021-Security_Misconfiguration/#ubersicht","title":"\u00dcbersicht","text":"<p>Die Kategorie r\u00fcckt auf von Platz 6 in der vorherigen Ausgabe: 90 % der Anwendungen wurden auf irgendeine Form von Fehlkonfiguration getestet, mit einer durchschnittlichen Inzidenzrate von 4 % und \u00fcber 208.000 Vorkommen einer Common Weakness Enumeration (CWE) in dieser Risikokategorie. Angesichts der zunehmenden Verlagerung hin zu hoch konfigurierbarer Software ist es nicht verwunderlich, dass diese Kategorie aufsteigt. Bemerkenswerte enthaltene CWEs sind CWE-16 Configuration und CWE-611 Unproper Restriction of XML External Entity Reference.</p>"},{"location":"de/A05_2021-Security_Misconfiguration/#beschreibung","title":"Beschreibung","text":"<p>Die Anwendung besitzt m\u00f6glicherweise Schwachstellen, wenn folgendes zutrifft:</p> <ul> <li> <p>Mangelhafte Sicherheitsh\u00e4rtung des Anwendungsstacks oder ungeeignet konfigurierte Berechtigungen auf Cloud-Diensten.</p> </li> <li> <p>Nicht ben\u00f6tigte Features sind aktiviert oder installiert (z. B. unn\u00f6tige Ports, Dienste, Seiten, Accounts oder Rechte).</p> </li> <li> <p>Standardkonten und -passw\u00f6rter sind aktiviert bzw. unver\u00e4ndert.</p> </li> <li> <p>Die Fehlerbehandlung gibt Stack-Traces oder andere interne technische Fehlermeldungen an Anwendende preis.</p> </li> <li> <p>F\u00fcr aktualisierte Systeme sind die neuesten Sicherheitsfeatures deaktiviert oder nicht sicher konfiguriert.</p> </li> <li> <p>Die Sicherheitseinstellungen in den Anwendungsservern und -frameworks (z. B. Struts, Spring, ASP.NET), Bibliotheken, Datenbanken etc. sind nicht auf sichere Werte gesetzt.</p> </li> <li> <p>Der Server sendet keine Sicherheits-Header oder -Direktiven, bzw. diese sind nicht sicher konfiguriert.</p> </li> <li> <p>Die Software ist veraltet oder verwundbar (siehe A06:2021-Unsichere oder veraltete Komponenten).</p> </li> </ul> <p>Ohne einen abgestimmten und reproduzierbaren Prozess zur sicheren Konfiguration sind Systeme einem h\u00f6heren Risiko ausgesetzt!</p>"},{"location":"de/A05_2021-Security_Misconfiguration/#pravention-und-gegenmanahmen","title":"Pr\u00e4vention und Gegenma\u00dfnahmen","text":"<p>Es sollten sichere Installationsprozesse implementiert werden, darunter:</p> <ul> <li> <p>Ein wiederholbarer H\u00e4rtungsprozess erm\u00f6glicht die schnelle und einfache Bereitstellung zus\u00e4tzlicher Umgebungen, die entsprechend abgesichert sind. Entwicklungs-, Qualit\u00e4tssicherungs- und Produktionsumgebungen sollten alle identisch konfiguriert sein, wobei in jeder Umgebung unterschiedliche Anmeldeinformationen verwendet werden sollten. Dieser Prozess sollte automatisiert werden, um den Aufwand f\u00fcr die Einrichtung einer neuen sicheren Umgebung zu minimieren.</p> </li> <li> <p>Eine minimale Plattform ohne unn\u00f6tige Funktionen, Komponenten, Dokumentation und Beispiele: Entfernen Sie Funktionen und Frameworks die Sie nicht verwenden oder installieren Sie diese erst gar nicht.</p> </li> <li> <p>\u00dcberpr\u00fcfen und Aktualisieren der Konfigurationen, die f\u00fcr alle Sicherheitshinweise, Updates und Patches im Rahmen des Patch-Verwaltungsprozesses geeignet sind (siehe A06:2021-Unsichere oder veraltete Komponenten). \u00dcberpr\u00fcfen Sie die Cloud-Speicherberechtigungen (z. B. S3-Bucket-Berechtigungen).</p> </li> <li> <p>Eine segmentierte Anwendungsarchitektur sorgt durch Segmentierung, Containerisierung oder Cloud-Sicherheitsgruppen (ACLs) f\u00fcr eine effektive und sichere Trennung zwischen Komponenten oder Mandanten.</p> </li> <li> <p>Senden von Sicherheitsanweisungen an Clients, z. B. Sicherheits-Header.</p> </li> <li> <p>Ein automatisierter Prozess zur \u00dcberpr\u00fcfung der Wirksamkeit der Konfigurationen und Einstellungen in allen Umgebungen.</p> </li> </ul>"},{"location":"de/A05_2021-Security_Misconfiguration/#beispielhafte-angriffsszenarien","title":"Beispielhafte Angriffsszenarien","text":"<p>Szenario Nr. 1: Der Anwendungsserver wird mit Beispielanwendungen geliefert, die nicht vom Produktionsserver entfernt wurden. Diese Beispielanwendungen weisen bekannte Sicherheitsl\u00fccken auf, die Angreifende nutzen, um den Server zu gef\u00e4hrden. Angenommen, eine dieser Anwendungen ist die Admin-Konsole und die Standardkonten wurden nicht ge\u00e4ndert. In diesem Fall meldet sich die angreifende Person mit Standardkennw\u00f6rtern an und \u00fcbernimmt die Kontrolle.</p> <p>Szenario Nr. 2: Die Directory Listings wurden auf dem Server nicht deaktiviert. Angreifende entdecken, dass Verzeichnisse einfach aufgelistet werden k\u00f6nnen. Die angreifende Person findet die kompilierten Java-Klassen und l\u00e4dt sie herunter, dekompiliert sie und betreibt Reverse Engineering, um den Code anzuzeigen. Dies erm\u00f6glicht das Findet eines schwerwiegenden Fehlers in der Zugriffskontrolle in der Anwendung.</p> <p>Szenario Nr. 3: Die Konfiguration des Anwendungsservers erm\u00f6glicht die R\u00fcckgabe detaillierter Fehlermeldungen an Anwendende, z. B. Stack-Traces. Dadurch werden m\u00f6glicherweise vertrauliche Informationen oder zugrunde liegende Fehler wie Komponentenversionen offengelegt, die bekannterma\u00dfen anf\u00e4llig sind.</p> <p>Szenario Nr. 4: Ein Cloud-Dienstanbieter (CSP) enth\u00e4lt Standardfreigaben, die aus dem Internet f\u00fcr andere Cloud-Nutzende erreichbar sind und erm\u00f6glicht dadurch Zugriff auf sensitive Daten in der Cloud.</p>"},{"location":"de/A05_2021-Security_Misconfiguration/#referenzen","title":"Referenzen","text":"<ul> <li>OWASP Web Security Testing Guide: Configuration and Deployment Management Testing </li> <li>OWASP Web Security Testing Guide: Testing for Error Handling </li> <li>OWASP Application Security Verification Standard (ASVS): V14 Configuration </li> <li>NIST Computer Security Resource Center: SP 800-123: Guide to General Server Security </li> <li>CIS Security Configuration Guides/Benchmarks </li> <li>AWS S3 Bucket Discovery </li> </ul>"},{"location":"de/A05_2021-Security_Misconfiguration/#liste-der-zugeordneten-cwes","title":"Liste der zugeordneten CWEs","text":"<ul> <li>CWE-2: 7PK - Environment (CWE CATEGORY) </li> <li>CWE-11: ASP.NET Misconfiguration: Creating Debug Binary </li> <li>CWE-13: ASP.NET Misconfiguration: Password in Configuration File </li> <li>CWE-15: External Control of System or Configuration Setting </li> <li>CWE-16: Configuration (CWE CATEGORY) </li> <li>CWE-260: Password in Configuration File </li> <li>CWE-315: Cleartext Storage of Sensitive Information in a Cookie </li> <li>CWE-520: .NET Misconfiguration: Use of Impersonation </li> <li>CWE-526: Cleartext Storage of Sensitive Information in an Environment Variable </li> <li> <p>CWE-537: Java Runtime Error Message Containing Sensitive Information </p> </li> <li> <p>CWE-547: Use of Hard-coded, Security-relevant Constants </p> </li> <li>CWE-611: Improper Restriction of XML External Entity Reference </li> <li>CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute </li> <li>CWE-756: Missing Custom Error Page </li> <li>CWE-776: Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion') </li> <li>CWE-942: Permissive Cross-domain Policy with Untrusted Domains </li> <li>CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag </li> <li>CWE-1032: OWASP Top Ten 2017 Category A6 - Security Misconfiguration (CWE CATEGORY) </li> <li>CWE-1174: ASP.NET Misconfiguration: Improper Model Validation </li> </ul>"},{"location":"de/A06_2021-Vulnerable_and_Outdated_Components/","title":"A06:2021 \u2013 Unsichere oder veraltete Komponenten","text":""},{"location":"de/A06_2021-Vulnerable_and_Outdated_Components/#beurteilungskriterien","title":"Beurteilungskriterien","text":"Zugeordnete CWEs Maximale H\u00e4ufigkeit Durchschn. H\u00e4ufigkeit Durchschn. Ausnutzbarkeit (gewichtet) Durchschn. Auswirkungen (gewichtet) Maximale Abdeckung Durchschnittliche Abdeckung Gesamtanzahl CVEs insgesamt 3 27.96 % 8.77 % 5.00 5.00 51.78 % 22.47 % 30,457 0"},{"location":"de/A06_2021-Vulnerable_and_Outdated_Components/#ubersicht","title":"\u00dcbersicht","text":"<p>Es belegte Platz 2 in der Top-10-Community-Umfrage, verf\u00fcgte aber auch \u00fcber gen\u00fcgend Daten, um es datentechnisch in die Top 10 zu schaffen.  Unsichere Komponenten sind ein bekanntes Problem, das wir nur schwer testen und bewerten k\u00f6nnen. Sie stellen die einzige Kategorie dar, in der den enthaltenen CWEs keine Common Vulnerability and Exposures (CVEs) zugeordnet sind. Daher wird eine standardm\u00e4\u00dfige Exploit-/Auswirkungsgewichtung von 5,0 verwendet. Bemerkenswerte CWEs sind CWE-1104: Use of Unmaintained Third-Party Components und die beiden CWEs aus den Top 10 2013 und 2017.</p>"},{"location":"de/A06_2021-Vulnerable_and_Outdated_Components/#beschreibung","title":"Beschreibung","text":"<p>Die Anwendung besitzt m\u00f6glicherweise Schwachstellen, wenn folgendes zutrifft:</p> <ul> <li> <p>Fehlende Kenntnis \u00fcber die Versionen aller verwendeten Komponenten der in der Anwendung (sowohl client- als auch serverseitig). Dies beinhaltet sowohl direkte als auch indirekte, verschachtelte Abh\u00e4ngigkeiten.</p> </li> <li> <p>Die verwendete Software besitzt Schwachstellen, wird nicht mehr unterst\u00fctzt oder ist veraltet. Dies beinhaltet das Betriebssystem, den Web-/Applikationsserver, das Datenbankmanagementsystem (DBMS), Anwendungen, APIs und alle verwendeten Komponenten, Laufzeitumgebungen sowie Bibliotheken.</p> </li> <li> <p>Schwachstellenscans werden nicht regelm\u00e4\u00dfig durchgef\u00fchrt und die sicherheitsrelevanten Bulletins der verwendeten Komponenten sind nicht abonniert.</p> </li> <li> <p>Die zugrundeliegende Plattform, die Frameworks und die Abh\u00e4ngigkeiten werden nicht risikobasiert und rechtzeitig repariert oder aktualisiert. Dies geschiet in der Regel in Umgebungen, in denen Patchen eine monatliche oder quartalsweise T\u00e4tigkeit ist und einer \u00c4nderungskontrolle unterliegt. Dies setzt die Organisation unn\u00f6tigerweise \u00fcber Tage oder Monate dem Risiko von Schwachstellen aus, f\u00fcr die schon Patches existieren.</p> </li> <li> <p>Softwareentwickler f\u00fchren keine Kompatibilit\u00e4ts-Tests der aktualisierten oder gepatchten Bibliotheken durch.</p> </li> <li> <p>Die Komponenten sind nicht sicher konfiguriert (siehe A05:2021-Sicherheitsrelevante Fehlkonfiguration).</p> </li> </ul>"},{"location":"de/A06_2021-Vulnerable_and_Outdated_Components/#pravention-und-gegenmanahmen","title":"Pr\u00e4vention und Gegenma\u00dfnahmen","text":"<p>Es sollte ein Patch-Management-Prozess vorhanden sein:</p> <ul> <li> <p>Entfernen Sie ungenutzte Abh\u00e4ngigkeiten, unn\u00f6tige Funktionen, Komponenten, Dateien und Dokumentation.</p> </li> <li> <p>Kontinuierliche Bestandsaufnahme der Versionen sowohl der clientseitigen als auch der serverseitigen Komponenten (z. B. Frameworks, Bibliotheken) und ihrer Abh\u00e4ngigkeiten mithilfe von Tools wie \"versions\", \"OWASP Dependency Check\", \"retire.js\" usw. \u00dcberwachen Sie kontinuierlich Quellen wie Common Vulnerability and Exposures (CVE) und die National Vulnerability Database (NVD) f\u00fcr Schwachstellen in den Komponenten. Verwenden Sie Software-Tools zur Analyse der Softwarebestandteile, um den Prozess zu automatisieren. Abonnieren Sie E-Mail-Benachrichtigungen zu Sicherheitsl\u00fccken im Zusammenhang mit den verwendeten Komponenten.</p> </li> <li> <p>Beziehen Sie Komponenten nur von offiziellen Quellen \u00fcber sichere Links. Bevorzugen Sie signierte Pakete, um die Wahrscheinlichkeit zu verringern, dass eine modifizierte, b\u00f6sartige Komponente enthalten ist (siehe A08:2021-Fehlerhafte Pr\u00fcfung der Software- und Datenintegrit\u00e4t).</p> </li> <li> <p>\u00dcberwachen Sie Bibliotheken und Komponenten, die nicht gewartet werden oder keine Sicherheitspatches f\u00fcr \u00e4ltere Versionen erstellen. Wenn das Patchen nicht m\u00f6glich ist, erw\u00e4gen Sie die Bereitstellung eines virtuellen Patches zur \u00dcberwachung, Erkennung oder zum Schutz vor dem entdeckten Problem.</p> </li> </ul> <p>Jede Organisation muss einen fortlaufenden Plan f\u00fcr die \u00dcberwachung, Triage und Anwendung von Updates oder Konfigurations\u00e4nderungen w\u00e4hrend der gesamten Lebensdauer der Anwendung oder des Portfolios sicherstellen.</p>"},{"location":"de/A06_2021-Vulnerable_and_Outdated_Components/#beispielhafte-angriffsszenarien","title":"Beispielhafte Angriffsszenarien","text":"<p>Szenario Nr. 1: Komponenten werden normalerweise mit denselben Berechtigungen wie die Anwendung selbst ausgef\u00fchrt, sodass Fehler in einer Komponente schwerwiegende Auswirkungen haben k\u00f6nnen. Solche Fehler k\u00f6nnen zuf\u00e4llig (z. B. ein Programmierfehler) oder absichtlich (z. B. eine Backdoor in einer Komponente) sein. Einige Beispiele f\u00fcr entdeckte ausnutzbare Komponentenschwachstellen sind:</p> <ul> <li> <p>CVE-2017-5638, eine Remote Code Execution Schwachstelle in Struts 2, die Angreifende erm\u00e4chtigt, beliebigen Code auf dem Server auszuf\u00fchren, wurde f\u00fcr einige erhebliche Sicherheitsvorf\u00e4lle verantwortlich gemacht.</p> </li> <li> <p>Obwohl das Patchen von Internet of Things (IoT) Ger\u00e4ten oft nur sehr schwierig oder unm\u00f6glich ist, kann dies sehr wichtig sein (z. B. f\u00fcr biomedizinische Ger\u00e4te).</p> </li> </ul> <p>Es existieren automatisierte Tools, die Angreifenden helfen, nicht gepatchte oder falsch konfigurierte Systeme zu finden. Die Shodan IoT-Suchmaschine kann Ihnen beispielsweise dabei helfen, Ger\u00e4te zu finden, die immer noch f\u00fcr die im April 2014 gepatchte Heartbleed-Sicherheitsl\u00fccke verwundbar sind.</p>"},{"location":"de/A06_2021-Vulnerable_and_Outdated_Components/#referenzen","title":"Referenzen","text":"<ul> <li>OWASP Application Security Verification Standard (ASVS): V1 Architecture, Design and Threat Modeling </li> <li>OWASP Dependency Check (for Java and .NET libraries) </li> <li>OWASP Web Security Testing Guide: Map Application Architecture </li> <li>OWASP Community Content: Virtual Patching Best Practices </li> <li>Contrast Security: The Unfortunate Reality of Insecure Libraries </li> <li>MITRE Common Vulnerabilities and Exposures (CVE): search by cvedetails </li> <li>National Vulnerability Database (NVD) </li> <li>Retire.js for detecting known vulnerable JavaScript libraries </li> <li>GitHub Advisory Database </li> <li>RubySec: Ruby Libraries Security Advisory Database and Tools </li> <li>SAFECode: Software Integrity Controls [PDF] </li> </ul>"},{"location":"de/A06_2021-Vulnerable_and_Outdated_Components/#liste-der-zugeordneten-cwes","title":"Liste der zugeordneten CWEs","text":"<ul> <li>CWE-937: OWASP Top Ten 2013 Category A9 - Using Components with Known Vulnerabilities (CWE CATEGORY) </li> <li>CWE-1035: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities (CWE CATEGORY) </li> <li>CWE-1104: Use of Unmaintained Third Party Components </li> </ul>"},{"location":"de/A07_2021-Identification_and_Authentication_Failures/","title":"A07:2021 \u2013 Fehlerhafte Authentifizierung","text":""},{"location":"de/A07_2021-Identification_and_Authentication_Failures/#beurteilungskriterien","title":"Beurteilungskriterien","text":"Zugeordnete CWEs Maximale H\u00e4ufigkeit Durchschn. H\u00e4ufigkeit Durchschn. Ausnutzbarkeit (gewichtet) Durchschn. Auswirkungen (gewichtet) Maximale Abdeckung Durchschnittliche Abdeckung Gesamtanzahl CVEs insgesamt 22 14.84 % 2.55 % 7.40 6.50 79.51 % 45.72 % 132,195 3,897"},{"location":"de/A07_2021-Identification_and_Authentication_Failures/#ubersicht","title":"\u00dcbersicht","text":"<p>Diese Kategorie, die fr\u00fcher als Broken Authentication bekannt war, rutschte von der zweiten Position nach unten und umfasst nun Common Weakness Enumerations (CWEs) im Zusammenhang mit Identifikationsfehlern. Die bedeutendsten CWEs sind</p> <ul> <li> <p>CWE-297: Improper Validation of Certificate with Host Mismatch </p> </li> <li> <p>CWE-287: Improper Authentication und </p> </li> <li> <p>CWE-384: Session Fixation </p> </li> </ul>"},{"location":"de/A07_2021-Identification_and_Authentication_Failures/#beschreibung","title":"Beschreibung","text":"<p>Die \u00dcberpr\u00fcfung der Identit\u00e4t des Nutzenden, die Authentifizierung und die Sitzungsverwaltung sind entscheidend f\u00fcr den Schutz vor authentifizierungsbezogenen Angriffen. Schwachstellen bei der Authentifizierung k\u00f6nnen auftreten, falls die Anwendung:</p> <ul> <li> <p>automatisierte Angriffe wie Credential Stuffing zul\u00e4sst, bei dem Angreifende \u00fcber eine Liste g\u00fcltiger Usernamen und Passw\u00f6rter verf\u00fcgen.</p> </li> <li> <p>Brute-Force- oder andere automatisierte Angriffe erm\u00f6glicht.</p> </li> <li> <p>Standard-, schwache oder g\u00e4ngige Passw\u00f6rter zul\u00e4sst, wie z. B. \"Passwort1\" oder \"admin/admin\".</p> </li> <li> <p>schwache oder ineffektive Verfahren zur Wiederherstellung von Anmeldeinformationen  und   Verfahren f\u00fcr vergessene Passw\u00f6rtern, wie z. B. \u201ewissensbasierte Antworten\u201c, die nicht sicher gemacht werden k\u00f6nnen,  verwendet werden.</p> </li> <li> <p>Klartext-, verschl\u00fcsselte oder schwach gehashte Kennwortdatenspeicher (siehe     A02:2021-Cryptographic Failures) verwendet.</p> </li> <li> <p>Fehlende oder unwirksame Multi-Faktor-Authentifizierung.</p> </li> <li> <p>Die Session-ID wird in der URL angezeigt.</p> </li> <li> <p>Session-IDs nach erfolgreichem Login wieder verwendet werden.</p> </li> <li> <p>Session-IDs werden nicht korrekt ung\u00fcltig gemacht. Sitzungen von Benutzenden (user sessions) oder Authentifizierungs-Tokens (haupts\u00e4chlich Single Sign-On (SSO) Tokens) werden beim Abmelden oder bei Inaktivit\u00e4t nicht ordnungsgem\u00e4\u00df invalidiert.</p> </li> </ul>"},{"location":"de/A07_2021-Identification_and_Authentication_Failures/#pravention-und-gegenmanahmen","title":"Pr\u00e4vention und Gegenma\u00dfnahmen","text":"<ul> <li> <p>Wenn m\u00f6glich, sollte eine Multi-Faktor-Authentifizierung implementiert werden, um automatisiertes Credential Stuffing, Brute Force-Angriffe und die Wiederverwendung gestohlener Zugangsdaten zu verhindern.</p> </li> <li> <p>Liefern Sie die Anwendung nicht mit Standard Login-Daten aus, insbesondere nicht f\u00fcr Administrator-Konten.</p> </li> <li> <p>Implementieren Sie Pr\u00fcfungen auf schwache Passw\u00f6rter, wie z. B. durch den Vergleich von neuen oder ge\u00e4nderten Passw\u00f6rtern mit der Liste der 10.000 schlechtesten Passw\u00f6rter.</p> </li> <li> <p>Angleichung der Passwortl\u00e4nge, -komplexit\u00e4t und -rotation an die Richtlinien des National Institute of Standards and Technology (NIST) 800-63b in Abschnitt 5.1.1 \"Memorized Secrets\" oder andere modernen, bew\u00e4hrten Passwortrichtlinien.</p> </li> <li> <p>Sicherstellen, dass die Registrierung, die Wiederherstellung von Zugangsdaten und die API-Pfade gegen Angriffe zur Ermittlung von Konten geh\u00e4rtet sind, indem f\u00fcr alle Resultate die gleiche Nachricht ausgegeben wird.</p> </li> <li> <p>Begrenzen oder bremsen Sie fehlgeschlagene Anmeldeversuche immer weiter aus, aber achten Sie darauf, dass hierbei kein Denial-of-Service-Szenario entsteht. Loggen Sie alle Fehlversuche und alarmieren Sie die Administratoren, wenn Credential Stuffing, Brute Force oder andere Angriffe erkannt werden.</p> </li> <li> <p>Verwenden Sie einen serverseitigen, sicheren, integrierten Sitzungsmanager, der f\u00fcr jede Sitzung eine neue zuf\u00e4llige Sitzungs-ID mit hoher Entropie erzeugt. Die Sitzungs-ID sollte nicht in der URL enthalten sein, sicher gespeichert werden und nach Abmeldung, Inaktivit\u00e4t und Absoluten Timeouts entwertet werden.</p> </li> </ul>"},{"location":"de/A07_2021-Identification_and_Authentication_Failures/#beispielhafte-angriffsszenarien","title":"Beispielhafte Angriffsszenarien","text":"<p>Szenario Nr. 1: Credential Stuffing, die Verwendung von Listen mit bekannten Kennw\u00f6rtern, ist ein g\u00e4ngiger Angriff. Angenommen, eine Anwendung verf\u00fcgt keinen automatischen Schutz vor Bedrohungen oder Credential Stuffing. In diesem Fall kann die Anwendung als Passwort-Orakel verwendet werden, um festzustellen, ob die Anmeldeinformationen g\u00fcltig sind.</p> <p>Szenario #2: Die meisten Authentifizierungsangriffe erfolgen aufgrund der andauernden Verwendung von Kennw\u00f6rtern als einzigem Zugangsmerkmal. Die fr\u00fcher als Best Practices geltenden Anforderungen an den Wechsel und die Komplexit\u00e4t von Passw\u00f6rtern verleiten die Nutzende zur Verwendung und Wiederverwendung schwacher Passw\u00f6rter. Organisationen wird empfohlen, diese Praktiken gem\u00e4\u00df NIST 800-63 einzustellen und eine Mehrfaktor-Authentifizierung zu verwenden.</p> <p>Szenario #3: Die Session-Timeouts von Anwendungen sind nicht korrekt gesetzt. Eine Nutzerin/Nutzer verwendet einen \u00f6ffentlichen Computer, um auf eine Anwendung zuzugreifen. Anstatt sich abzumelden, schlie\u00dft die nutzende Person einfach die Browser-Registerkarte und geht weg. Angreifende verwenden denselben Browser eine Stunde sp\u00e4ter, und die Nutzerin/Nutzer ist noch immer authentifiziert.</p>"},{"location":"de/A07_2021-Identification_and_Authentication_Failures/#referenzen","title":"Referenzen","text":"<ul> <li>OWASP Proactive Controls: C6: Implement Digital Identity </li> <li>OWASP Application Security Verification Standard (ASVS): V2 Authentication </li> <li>OWASP Application Security Verification Standard (ASVS): V3 Session Management </li> <li>OWASP Web Security Testing Guide: Identity Management Testing,  Authentication Testing </li> <li>OWASP Cheat Sheet Series: Authentication Cheat Sheet </li> <li>OWASP Cheat Sheet Series: Credential Stuffing Prevention Cheat Sheet </li> <li>OWASP Cheat Sheet Series: Forgot Password Cheat Sheet </li> <li>OWASP Cheat Sheet Series: Session Management Cheat Sheet </li> <li>OWASP Automated Threats to Web Applications </li> <li>NIST SP 800-63b: Digital Identity Guidelines: Authentication and Lifecycle Management: 5.1.1 Memorized Secrets </li> </ul>"},{"location":"de/A07_2021-Identification_and_Authentication_Failures/#liste-der-zugeordneten-cwes","title":"Liste der zugeordneten CWEs","text":"<ul> <li>CWE-255: Credentials Management Errors (CWE CATEGORY) </li> <li>CWE-259: Use of Hard-coded Password </li> <li>CWE-287: Improper Authentication </li> <li>CWE-288: Authentication Bypass Using an Alternate Path or Channel </li> <li>CWE-290: Authentication Bypass by Spoofing </li> <li>CWE-294: Authentication Bypass by Capture-replay </li> <li>CWE-295: Improper Certificate Validation </li> <li>CWE-297: Improper Validation of Certificate with Host Mismatch </li> <li>CWE-300: Channel Accessible by Non-Endpoint </li> <li>CWE-302: Authentication Bypass by Assumed-Immutable Data </li> <li>CWE-304: Missing Critical Step in Authentication </li> <li>CWE-306: Missing Authentication for Critical Function </li> <li>CWE-307: Improper Restriction of Excessive Authentication Attempts </li> <li>CWE-346: Origin Validation Error </li> <li>CWE-384: Session Fixation </li> <li>CWE-521: Weak Password Requirements </li> <li>CWE-613: Insufficient Session Expiration </li> <li>CWE-620: Unverified Password Change </li> <li>CWE-640: Weak Password Recovery Mechanism for Forgotten Password </li> <li>CWE-798: Use of Hard-coded Credentials </li> <li>CWE-940: Improper Verification of Source of a Communication Channel </li> <li>CWE-1216: Lockout Mechanism Errors (CWE CATEGORY) </li> </ul>"},{"location":"de/A08_2021-Software_and_Data_Integrity_Failures/","title":"A08:2021 \u2013 Fehlerhafte Pr\u00fcfung der Software- und Datenintegrit\u00e4t","text":""},{"location":"de/A08_2021-Software_and_Data_Integrity_Failures/#beurteilungskriterien","title":"Beurteilungskriterien","text":"Zugeordnete CWEs Maximale H\u00e4ufigkeit Durchschn. H\u00e4ufigkeit Durchschn. Ausnutzbarkeit (gewichtet) Durchschn. Auswirkungen (gewichtet) Maximale Abdeckung Durchschnittliche Abdeckung Gesamtanzahl CVEs insgesamt 10 16.67 % 2.05 % 6.94 7.94 75.04 % 45.35 % 47,972 1,152"},{"location":"de/A08_2021-Software_and_Data_Integrity_Failures/#ubersicht","title":"\u00dcbersicht","text":"<p>Bei der neuen Kategorie f\u00fcr 2021 liegt der Schwerpunkt auf Annahmen in Bezug auf Software-Updates, relevante Daten und CI/CD-Pipelines ohne \u00dcberpr\u00fcfung der Integrit\u00e4t. Eine der am h\u00f6chsten gewichteten Auswirkungen von Common Vulnerability and Exposures/Common Vulnerability Scoring System (CVE/CVSS) Daten. Zu den erw\u00e4hnenswerten Common Weakness Enumerations (CWEs) geh\u00f6ren: CWE-829: Inclusion of Functionality from Untrusted Control Sphere, CWE-494: Download of Code Without Integrity Check und CWE-502: Deserialization of Untrusted Data.</p>"},{"location":"de/A08_2021-Software_and_Data_Integrity_Failures/#beschreibung","title":"Beschreibung","text":"<p>Software- und Datenintegrit\u00e4tsfehler beziehen sich auf Code und Infrastruktur, die keine Schutzma\u00dfnahmen gegen Integrit\u00e4tsverletzungen bieten. Ein Beispiel hierf\u00fcr ist, wenn eine Anwendung auf Plugins, Bibliotheken oder Module aus nicht vertrauensw\u00fcrdigen Quellen, Repositories und Content Delivery Networks (CDNs) angewiesen ist. Eine unsichere CI/CD-Pipeline kann das Potenzial f\u00fcr unbefugten Zugriff, b\u00f6sartigen Code oder Systemkompromittierung bieten. Schlie\u00dflich enthalten viele Anwendungen heute eine automatische Update-Funktion, bei der Updates ohne ausreichende Integrit\u00e4tspr\u00fcfung heruntergeladen und auf die zuvor vertrauensw\u00fcrdige Anwendung angewendet werden. Angreifende k\u00f6nnten ihre eigenen Updates hochladen, die dann auf alle Installationen verbreitet und ausgef\u00fchrt werden. Ein weiteres Beispiel besteht darin, dass Objekte oder Daten in eine Struktur kodiert oder serialisiert werden, die Angreifende sehen und \u00e4ndern k\u00f6nnen, und die durch eine unsichere Deserialisierung verwundbar sind.</p>"},{"location":"de/A08_2021-Software_and_Data_Integrity_Failures/#pravention-und-gegenmanahmen","title":"Pr\u00e4vention und Gegenma\u00dfnahmen","text":"<ul> <li> <p>Verwenden Sie digitale Signaturen oder \u00e4hnliche Mechanismen, um sicherzustellen, dass die Software oder Daten aus der erwarteten Quelle stammen und nicht ver\u00e4ndert wurden.</p> </li> <li> <p>Stellen Sie sicher, dass Bibliotheken und Abh\u00e4ngigkeiten, wie z. B. npm oder Maven, vertrauensw\u00fcrdige Repositories nutzen. Wenn Sie ein h\u00f6heres Risikoprofil haben, sollten Sie in Erw\u00e4gung ziehen, ein internes Repository zu hosten, das als vertrauensw\u00fcrdig gilt und \u00fcberpr\u00fcft wurde.</p> </li> <li> <p>Stellen Sie sicher, dass ein Software-Supply-Chain-Sicherheitstool wie OWASP Dependency Check oder OWASP CycloneDX verwendet wird, um zu \u00fcberpr\u00fcfen, dass Komponenten keine bekannten Schwachstellen enthalten.</p> </li> <li> <p>Stellen Sie sicher, dass es einen \u00dcberpr\u00fcfungsprozess f\u00fcr Code- und Konfigurations\u00e4nderungen gibt, um das Risiko zu minimieren, dass b\u00f6sartiger Code oder b\u00f6sartige Konfigurationen in Ihre Software-Pipeline eingeschleust werden.</p> </li> <li> <p>Stelle Sie sicher, dass Ihre CI/CD-Pipeline \u00fcber eine angemessene Trennung, Konfiguration und Zugriffskontrolle verf\u00fcgt, um die Integrit\u00e4t des Codes zu gew\u00e4hrleisten, der den Build- und Bereitstellungsprozess durchl\u00e4uft.</p> </li> <li> <p>Stellen Sie sicher, dass unsignierte oder unverschl\u00fcsselte serialisierte Daten nicht an nicht vertrauensw\u00fcrdige Clients ohne eine Form der Integrit\u00e4tspr\u00fcfung oder digitalen Signatur gesendet werden, um dadurch eine Manipulation oder ein erneutes Versenden der serialisierten Daten zu erkennen.</p> </li> </ul>"},{"location":"de/A08_2021-Software_and_Data_Integrity_Failures/#beispielhafte-angriffsszenarien","title":"Beispielhafte Angriffsszenarien","text":"<p>Szenario Nr. 1: Update ohne Signierung: Viele Heimrouter, Set-Top-Boxen, Ger\u00e4te-Firmware und Andere verifizieren Updates nicht \u00fcber signierte Firmware. Unsignierte Firmware ist ein wachsendes Ziel f\u00fcr Angreifende, und es wird erwartet, dass es in Zukunft noch schlimmer werden wird. Dies ist besonders besorgniserregend, da es in vielen F\u00e4llen keinen anderen Mechanismus zur Behebung gibt, als die Fehler in einer zuk\u00fcnftigen Version zu beheben und zu warten, bis die vorherigen Versionen veraltet sind.</p> <p>Szenario #2 SolarWinds b\u00f6sartiges Update: Nationalstaaten sind daf\u00fcr bekannt, dass sie Update-Mechanismen angreifen. Ein bemerkenswerter Angriff war vor kurzem der SolarWinds-Orion-Angriff. Das Unternehmen, das die Software entwickelt, verf\u00fcgte \u00fcber sichere Build- und Update-Integrit\u00e4tsprozesse. Dennoch konnten diese unterwandert werden, und das Unternehmen verteilte \u00fcber mehrere Monate hinweg ein sehr gezieltes b\u00f6sartiges Update an mehr als 18.000 Organisationen, von denen etwa 100 betroffen waren. Dies ist eine der weitreichendsten und bedeutendsten Sicherheitsverletzungen dieser Art in der Geschichte.</p> <p>Szenario #3 Unsichere Deserialisierung: Eine React-Anwendung ruft eine Reihe von Spring Boot Microservices auf. Als funktionale Programmierer versuchten sie sicherzustellen, dass ihr Code unver\u00e4nderlich ist. Die L\u00f6sung, die sie gefunden haben, besteht darin, den Sitzungszustand zu serialisieren und ihn mit jeder Anfrage hin und her zu schicken. Eine angreifende Person bemerkt die \"`rO0\" Java-Objektsignatur (in base64) und verwendet das Java Serial Killer-Tool, um Remote-Code-Ausf\u00fchrung auf dem Anwendungsserver zu erlangen.</p>"},{"location":"de/A08_2021-Software_and_Data_Integrity_Failures/#referenzen","title":"Referenzen","text":"<ul> <li>OWASP Cheat Sheet Series: Software Supply Chain Security </li> <li>OWASP Cheat Sheet Series: OWASP Cheat Sheet: Secure build and deployment (Coming Soon) </li> <li>OWASP Cheat Sheet Series: Infrastructure as Code Security Cheat Sheet </li> <li>OWASP Cheat Sheet Series: Deserialization Cheat Sheet </li> <li>SAFECode Publications: Software Integrity Controls [PDF] </li> <li>NPR News: A 'Worst Nightmare' Cyberattack: The Untold Story Of The SolarWinds Hack </li> <li>Bash Uploader Security Update </li> <li>Securing DevOps </li> </ul>"},{"location":"de/A08_2021-Software_and_Data_Integrity_Failures/#liste-der-zugeordneten-cwes","title":"Liste der zugeordneten CWEs","text":"<ul> <li>CWE-345: Insufficient Verification of Data Authenticity </li> <li>CWE-353: Missing Support for Integrity Check </li> <li>CWE-426: Untrusted Search Path </li> <li>CWE-494: Download of Code Without Integrity Check </li> <li>CWE-502: Deserialization of Untrusted Data </li> <li>CWE-565: Reliance on Cookies without Validation and Integrity Checking </li> <li>CWE-784: Reliance on Cookies without Validation and Integrity Checking in a Security Decision </li> <li>CWE-829: Inclusion of Functionality from Untrusted Control Sphere </li> <li>CWE-830: Inclusion of Web Functionality from an Untrusted Source </li> <li>CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes </li> </ul>"},{"location":"de/A09_2021-Security_Logging_and_Monitoring_Failures/","title":"A09:2021 \u2013 Unzureichendes Logging und Sicherheitsmonitoring","text":""},{"location":"de/A09_2021-Security_Logging_and_Monitoring_Failures/#beurteilungskriterien","title":"Beurteilungskriterien","text":"Zugeordnete CWEs Maximale H\u00e4ufigkeit Durchschn. H\u00e4ufigkeit Durchschn. Ausnutzbarkeit (gewichtet) Durchschn. Auswirkungen (gewichtet) Maximale Abdeckung Durchschnittliche Abdeckung Gesamtanzahl CVEs insgesamt 4 19.23 % 6.51 % 6.87 4.99 53.67 % 39.97 % 53,615 242"},{"location":"de/A09_2021-Security_Logging_and_Monitoring_Failures/#ubersicht","title":"\u00dcbersicht","text":"<p>Sicherheitsprotokollierung und -\u00fcberwachung wurden in der Top-10-Community-Umfrage (Platz 3) genannt, was eine leichte Verbesserung gegen\u00fcber dem zehnten Platz in der OWASP Top 10 2017 bedeutet. Das Logging und Monitoring k\u00f6nnen schwierig zu testen sein, da sie oft Interviews oder die Frage nach der Erkennung von Angriffen w\u00e4hrend eines Penetrationstests beinhalten. Es gibt nicht viele CVE/CVSS-Daten f\u00fcr diese Kategorie, aber das Erkennen von und Reagieren auf Angriffe ist von entscheidender Bedeutung. Allerdings kann dies f\u00fcr die Nachweisbarkeit, die Nachvollziehbarkeit, die Alarmierung bei Vorf\u00e4llen und Forensik von gro\u00dfer Bedeutung sein. Diese Kategorie erstreckt sich \u00fcber CWE-778 Insufficient Logging hinaus und umfasst auch CWE-117 Improper Output Neutralization for Logs, CWE-223 Omission of Security-relevant Information und CWE-532 Insertion of Sensitive Information into Log File.</p>"},{"location":"de/A09_2021-Security_Logging_and_Monitoring_Failures/#beschreibung","title":"Beschreibung","text":"<p>Mit Blick auf die OWASP Top 10 2021 soll diese Kategorie bei der Erkennung, Eskalation und Reaktion auf laufende Angriffe unterst\u00fctzen. Ohne Protokollierung und \u00dcberwachung k\u00f6nnen Angriffe nicht erkannt werden. Unzureichende Protokollierung, Erkennung, \u00dcberwachung und aktive Reaktion sind jederzeit m\u00f6glich:</p> <ul> <li> <p>Nachvollziehbare Ereignisse, wie Anmeldungen, fehlgeschlagene Anmeldungen und wertvolle Transaktionen, werden nicht protokolliert.</p> </li> <li> <p>Warnungen und Fehler erzeugen keine, unangemessene oder unklare Log-Eintr\u00e4ge.</p> </li> <li> <p>Die Logs von Anwendungen und APIs werden nicht auf verd\u00e4chtige Aktivit\u00e4ten \u00fcberwacht.</p> </li> <li> <p>Protokolle werden nur lokal gespeichert.</p> </li> <li> <p>Geeignete Schwellenwerte f\u00fcr Warnmeldungen und Eskalationsprozesse f\u00fcr Gegenma\u00dfnahmen sind nicht vorhanden oder nicht wirksam.</p> </li> <li> <p>Penetrationstests und Scans durch DAST-Tools (Dynamic Application Security Testing) (wie OWASP ZAP) l\u00f6sen keine Alarme aus.</p> </li> <li> <p>Die Anwendungen k\u00f6nnen Angriffe weder in Echtzeit noch nahezu in Echtzeit erkennen, eskalieren oder Alarm schlagen.</p> </li> </ul> <p>Es besteht die Gefahr von Informationslecks, falls Sie die Logging- und Alerting Ereignisse f\u00fcr Nutzende oder Angreifende sichtbar gemacht werden (siehe A01:2021-Broken Access Control).</p>"},{"location":"de/A09_2021-Security_Logging_and_Monitoring_Failures/#pravention-und-gegenmanahmen","title":"Pr\u00e4vention und Gegenma\u00dfnahmen","text":"<p>Je nach dem Risiko der Anwendung sollten Entwickler einige oder alle der folgenden Ma\u00dfnahmen ergreifen:</p> <ul> <li> <p>Sicherstellen, dass alle Anmeldevorg\u00e4nge, Zugriffskontrollen und Fehler bei der serverseitigen Eingabe\u00fcberpr\u00fcfung mit ausreichendem Sitzungskontext der Nutzenden erfasst werden, um verd\u00e4chtige oder b\u00f6swillige Anwendende zu identifizieren und ausreichend lange gespeichert werden, um eine sp\u00e4tere forensische Analyse zu erm\u00f6glichen.</p> </li> <li> <p>Stellen Sie sicher, dass die Protokolle in einem Format gespeichert werden, das von Protokollmanagement L\u00f6sungen leicht verarbeitet werden k\u00f6nnen.</p> </li> <li> <p>Es sollte sichergestellt werden, dass die Protokolldaten korrekt umgewandelt werden, sodass Injection-Angriffe oder Angriffe auf Logging- oder \u00dcberwachungssysteme verhindert werden.</p> </li> <li> <p>Es soll sichergestellt sein, dass hochwertige Transaktionen einen Pr\u00fcfpfad mit Integrit\u00e4tskontrollen aufweisen um Manipulationen oder L\u00f6schungen zu verhindern, z. B. durch Datenbanktabellen, die nur erweitert werden k\u00f6nnen, oder \u00e4hnliches.</p> </li> <li> <p>DevSecOps-Teams sollten eine effektive \u00dcberwachung und Alarmierung einrichten, sodass verd\u00e4chtige Aktivit\u00e4ten schnell erkannt und darauf reagiert werden kann.</p> </li> <li> <p>Erstellen oder \u00fcbernehmen Sie einen Notfallplan f\u00fcr die Reaktion auf Vorf\u00e4lle und f\u00fcr die Wiederherstellung, wie z. B. dem Leitfaden des National Institute of Standards and Technology (NIST) 800-61r2 oder neuer.</p> </li> </ul> <p>Es gibt kommerzielle und Open-Source-Frameworks zum Schutz von Anwendungen wie das OWASP ModSecurity Core Rule Set, und Open-Source-Log correlation software, wie Elasticsearch, Logstash, Kibana (ELK) Stack, die individuelle Dashboards und Warnmeldungen bereitstellen.</p>"},{"location":"de/A09_2021-Security_Logging_and_Monitoring_Failures/#beispielhafte-angriffsszenarien","title":"Beispielhafte Angriffsszenarien","text":"<p>Szenario 1:  Der Betreiber der Website eines Anbieters von Kinderkrankenversicherungen konnte das Eindringen in das System aufgrund mangelnder \u00dcberwachung und Protokollierung nicht erkennen. Eine externe Partei informierte den Krankenversicherungsanbieter, dass Angreifende auf Tausende der mehr als 3,5 Millionen sensiblen Gesundheitsdaten der Kinder zugegriffen und diese ver\u00e4ndert hatten. Eine \u00dcberpr\u00fcfung nach dem Vorfall ergab, dass die Entwickler der Website wesentliche Schwachstellen nicht behoben hatten. Da es weder eine Protokollierung noch eine \u00dcberwachung des Systems gab, bestand die Datenl\u00fccke m\u00f6glicherweise bereits seit 2013, also \u00fcber einen Zeitraum von mehr als sieben Jahren.</p> <p>Szenario #2: Bei einer gr\u00f6\u00dferen indischen Fluggesellschaft kam es zu einer Datenpanne, die mehr als zehn Jahre lang personenbezogene Daten von Millionen von Flugg\u00e4sten betraf, einschlie\u00dflich Reisepass- und Kreditkartendaten. Die Datenpanne trat bei einem externen Cloud-Hosting-Anbieter auf, der die Fluggesellschaft nach einiger Zeit \u00fcber die L\u00fccke informierte.</p> <p>Szenario #3: Bei einer gro\u00dfen europ\u00e4ischen Fluggesellschaft kam es zu einem meldepflichtigen Versto\u00df gegen die DSGVO. Der Versto\u00df wurde Berichten zufolge durch Sicherheitsschwachstellen in Zahlungsanwendungen verschuldet, die von Angreifenden ausgenutzt wurden, die mehr als 400.000 Zahlungsdatens\u00e4tze von Kunden abfingen. Die Fluggesellschaft wurde daraufhin von der Datenschutzbeh\u00f6rde mit einer Geldstrafe von 20 Millionen Pfund belegt.</p>"},{"location":"de/A09_2021-Security_Logging_and_Monitoring_Failures/#referenzen","title":"Referenzen","text":"<ul> <li>OWASP Proactive Controls: C9: Implement Security Logging and Monitoring </li> <li>OWASP Application Security Verification Standard (ASVS): V7 Error Handling and Logging </li> <li>OWASP Web Security Testing Guide: Testing for Improper Error Handling </li> <li>OWASP Cheat Sheet Series: Logging Vocabulary Cheat Sheet </li> <li>OWASP Cheat Sheet Series: Logging Cheat Sheet </li> <li>NIST Computer Security Resource Center: SP 1800-11: Data Integrity: Recovering from Ransomware and Other Destructive Events </li> <li>NIST Computer Security Resource Center: SP 1800-25: Data Integrity: Identifying and Protecting Assets Against Ransomware and Other Destructive Events </li> <li>NIST Computer Security Resource Center: SP 1800-26: Data Integrity: Recovering from Ransomware and Other Destructive Events </li> </ul>"},{"location":"de/A09_2021-Security_Logging_and_Monitoring_Failures/#liste-der-zugeordneten-cwes","title":"Liste der zugeordneten CWEs","text":"<ul> <li>CWE-117: Improper Output Neutralization for Logs </li> <li>CWE-223: Omission of Security-relevant Information </li> <li>CWE-532: Insertion of Sensitive Information into Log File </li> <li>CWE-778: Insufficient Logging </li> </ul>"},{"location":"de/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#beurteilungskriterien","title":"Beurteilungskriterien","text":"Zugeordnete CWEs Maximale H\u00e4ufigkeit Durchschn. H\u00e4ufigkeit Durchschn. Ausnutzbarkeit (gewichtet) Durchschn. Auswirkungen (gewichtet) Maximale Abdeckung Durchschnittliche Abdeckung Gesamtanzahl CVEs insgesamt 1 2.72 % 2.72 % 8.28 6.72 67.72 % 67.72 % 9,503 385"},{"location":"de/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#ubersicht","title":"\u00dcbersicht","text":"<p>Diese Kategorie stammt aus der Top-10-Community-Umfrage (Nr. 1). Die Daten zeigen eine relativ niedrige H\u00e4ufigkeit mit einer \u00fcberdurchschnittlichen Testabdeckung und \u00fcberdurchschnittlichen Missbrauchs- und Auswirkungspotentialen. Da es sich bei neuen Eintr\u00e4gen wahrscheinlich um einzelne oder kleine Gruppen von Common Weakness Enumerations (CWEs) handelt, die f\u00fcr Aufmerksamkeit und Bewusstsein sorgen, besteht die Hoffnung, dass sie in einer zuk\u00fcnftigen Ausgabe in eine gr\u00f6\u00dfere Kategorie aufgenommen werden k\u00f6nnen.</p>"},{"location":"de/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#beschreibung","title":"Beschreibung","text":"<p>SSRF-Schwachstellen treten immer dann auf, wenn eine Webanwendung eine Remote-Ressource abruft, ohne die, vom Nutzenden angegebene URL zu \u00fcberpr\u00fcfen. Dadurch kann ein Angreifender die Anwendung dazu zwingen, eine manipulierte Anfrage an ein unerwartetes Ziel zu senden, selbst wenn sie durch eine Firewall, ein VPN oder eine andere Art von Netzwerkzugriffskontrollliste (ACL) gesch\u00fctzt ist.</p> <p>Da moderne Webanwendungen Nutzenden komfortable Funktionen bieten, wird das Abrufen einer URL zu einem g\u00e4ngigen Szenario.  Infolgedessen nimmt die H\u00e4ufigkeit von SSRF zu.  Au\u00dferdem nimmt der Schweregrad von SSRF aufgrund von der Verbreitung von Cloud-Diensten und der Komplexit\u00e4t der Architekturen zu.</p>"},{"location":"de/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#pravention-und-gegenmanahmen","title":"Pr\u00e4vention und Gegenma\u00dfnahmen","text":"<p>Entwickler k\u00f6nnen SSRF verhindern, indem sie folgende Defense-in-Depth-Controls implementieren:</p>"},{"location":"de/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#auf-der-netzwerk-ebene","title":"Auf der Netzwerk-Ebene","text":"<ul> <li> <p>Segmentieren Sie die Remote-Ressourcenzugriffsfunktionalit\u00e4t in separate Netzwerke, um die Auswirkungen von SSRF zu reduzieren.</p> </li> <li> <p>Setzen Sie standardm\u00e4\u00dfig blockierende Firewall-Richtlinien oder Netzwerkzugriffskontrollregeln ein, um den gesamten Intranet-Verkehr zu blockieren, der nicht unbedingt erforderlich ist.  Hinweise:  ~ Legen Sie eine Zust\u00e4ndigkeit und einen Lebenszyklus f\u00fcr Firewall-Regeln auf der Grundlage von Anwendungen fest. ~ Protokollieren aller akzeptierten und blockierten Netzstr\u00f6me auf Firewalls (siehe A09:2021 \u2013 Fehler beim Logging und Monitoring).</p> </li> </ul>"},{"location":"de/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#auf-der-anwendungsebene","title":"Auf der Anwendungsebene:","text":"<ul> <li>Bereinigung und Validierung aller vom Client gelieferten Eingabedaten</li> <li>Erzwingen Sie das URL-Schema, den Port und das Ziel mit einer Positivliste</li> <li>Senden Sie keine ungepr\u00fcften Antworten an Clients.</li> <li>Deaktivieren Sie HTTP-Umleitungen.</li> <li>Achten Sie auf die URL-Konsistenz, um Angriffe wie DNS-Rebinding und \u201etime of check, time of use\u201c (TOCTOU) Race Conditions zu vermeiden</li> </ul> <p>Verhindern Sie SSRF nicht durch die Verwendung einer Negativliste oder eines regul\u00e4ren Ausdrucks. Angreifer verf\u00fcgen \u00fcber Payload-Listen, Tools und F\u00e4higkeiten zum Umgehen von Negativlisten.</p>"},{"location":"de/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#zusatzliche-zu-berucksichtigende-manahmen","title":"Zus\u00e4tzliche zu ber\u00fccksichtigende Ma\u00dfnahmen:","text":"<ul> <li> <p>Setzen Sie keine anderen sicherheitsrelevanten Dienste auf Frontsystemen ein (z. B. OpenID). Kontrollieren Sie den lokalen Verkehr auf diesen Systemen (z. B. localhost).</p> </li> <li> <p>F\u00fcr Frontends mit dedizierten und verwaltbaren Gruppen f\u00fcr Anwendende nutzen Sie Netzwerkverschl\u00fcsselung (z. B. VPNs) auf unabh\u00e4ngigen Systemen um sehr hohen Schutzbedarf zu ber\u00fccksichtigen.</p> </li> </ul>"},{"location":"de/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#beispielhafte-angriffsszenarien","title":"Beispielhafte Angriffsszenarien","text":"<p>Angreifende k\u00f6nnen SSRF nutzen, um Systeme anzugreifen, die durch Web Application Firewalls, Firewalls oder Netzwerk-ACLs gesch\u00fctzt sind, und dabei Szenarien wie folgende verwenden:</p> <p>Szenario Nr. 1: Port-Scan interner Server \u2013 Wenn die Netzwerkarchitektur nicht segmentiert ist, k\u00f6nnen Angreifende interne Netzwerke abbilden und anhand der Verbindungsergebnisse oder der verstrichenen Zeit f\u00fcr die Verbindung oder Ablehnung von SSRF-Nutzlast-Verbindungen feststellen, ob Ports auf internen Servern offen oder geschlossen sind.</p> <p>Szenario Nr. 2: Preisgabe sensibler Daten \u2013 Angreifende k\u00f6nnen auf lokale Dateien oder interne Dienste zugreifen, um vertrauliche Informationen wie \u201efile:///etc/passwd\u201c und \u201ehttp://localhost:28017/\u201c zu erhalten.</p> <p>Szenario Nr. 3: Zugriff auf Metadatenspeicher von Cloud-Diensten \u2013 Die meisten Cloud-Anbieter verf\u00fcgen \u00fcber Metadatenspeicher wie \u201ehttp://169.254.169.254/\u201c. Eine angreifende Person kann die Metadaten lesen, um an vertrauliche Informationen zu gelangen.</p> <p>Szenario Nr. 4: Kompromittierung interner Dienste \u2013 Die angreifende Person kann interne Dienste missbrauchen, um weitere Angriffe wie beispielsweise Remote Code Execution (RCE) oder Denial of Service (DoS) durchzuf\u00fchren.</p>"},{"location":"de/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#referenzen","title":"Referenzen","text":"<ul> <li>OWASP Cheat Sheet Series: Server Side Request Forgery Prevention Cheat Sheet </li> <li>Portswigger Web Security Academy: Server-side request forgery (SSRF) </li> <li>Acunetix Web Security Blog: What is Server-Side Request Forgery (SSRF)? </li> <li>Wallarm: SSRF bible [PDF] </li> <li>Blackhat USA 2017: Orange Tsai: A New Era of SSRF - Exploiting URL Parser in Trending Programming Languages! [pdf] </li> </ul>"},{"location":"de/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#liste-der-zugeordneten-cwes","title":"Liste der zugeordneten CWEs","text":"<ul> <li>CWE-918: Server-Side Request Forgery (SSRF) </li> </ul>"},{"location":"de/A11_2021-Next_Steps/","title":"A11:2021 \u2013 N\u00e4chste Schritte","text":"<p>Die OWASP Top 10 sind von Natur aus auf die zehn bedeutendsten Risiken beschr\u00e4nkt. Jede OWASP Top 10 hat Risiken, die an der Schwelle zur Aufnahme in die Top 10 stehen, die aber letztendlich doch nicht in die Liste aufgenommen wurden. Ganz gleich, wie wir die Daten zu interpretieren oder zu ver\u00e4ndern versuchten, die anderen Risiken waren weitaus h\u00e4ufiger und schwerwiegender.</p> <p>F\u00fcr Unternehmen, die auf ein ausgereiftes Programm zur Anwendungssicherheit hinarbeiten, oder f\u00fcr Sicherheitsberatungsunternehmen und Tool-Anbieter, die ihre Angebote erweitern m\u00f6chten, lohnen sich die folgenden vier Probleme, die es zu identifizieren und zu beheben gilt.</p>"},{"location":"de/A11_2021-Next_Steps/#probleme-mit-der-codequalitat","title":"Probleme mit der Codequalit\u00e4t","text":"Zugeordnete CWEs Maximale H\u00e4ufigkeit Durchschn. H\u00e4ufigkeit Durchschn. Ausnutzbarkeit (gewichtet) Durchschn. Auswirkungen (gewichtet) Maximale Abdeckung Durchschnittliche Abdeckung Gesamtanzahl CVEs insgesamt 38 49.46 % 2.22 % 7.1 6.7 60.85 % 23.42 % 101736 7564 <ul> <li>Beschreibung. Zu den Problemen der Codequalit\u00e4t geh\u00f6ren bekannte Sicherheitsm\u00e4ngel oder -muster, die Wiederverwendung von Variablen f\u00fcr mehrere Zwecke, die Offenlegung vertraulicher Informationen in der Debugging-Ausgabe, Off-by-One-Fehler, TOCTOU-Race-Conditions (Time of Check/Time of Use), Konvertierungsfehler bei der Verwendung von vorzeichenlosen oder vorzeichenbehafteten Daten, die Verarbeitung nach dem Freigeben von Daten und vieles mehr. Das Besondere an diesem Abschnitt ist, dass sie in der Regel durch strenge Compiler-Flags, statische Code-Analyse-Tools und Linter-IDE-Plugins identifiziert werden k\u00f6nnen. Moderne Sprachen haben viele dieser Probleme durch ihr Design eliminiert, wie z. B. Rusts Konzept des Speicherbesitzes und der -ausleihe, Rusts Threading-Design und die strikte Typisierung und Grenzwertpr\u00fcfung in Go.</li> <li> <p>Pr\u00e4vention und Gegenma\u00dfnahmen. Aktivieren und verwenden Sie die statische Code- Analyse Ihres Editors und Ihrer Sprache. Erw\u00e4gen Sie die Verwendung eines Tools zur statischen Codeanalyse. \u00dcberlegen Sie, ob es m\u00f6glich ist, eine Sprache oder ein Framework zu verwenden oder dorthin zu migrieren, welches Fehlerklassen eliminiert, wie z. B. in Rust oder Go.</p> </li> <li> <p>Beispielhafte Angriffsszenarien. Ein Angreifer k\u00f6nnte vertrauliche Informationen erhalten oder ver\u00e4ndern, indem er eine Race Condition ausnutzt, die eine statisch freigegebene Variable in mehreren Threads verwendet.</p> </li> <li> <p>Referenzen</p> </li> <li>OWASP Code Review Guide: OWASP Code Review Guide [PDF] </li> <li>Google Engineering Practices Documentation: Code Review Guide </li> </ul>"},{"location":"de/A11_2021-Next_Steps/#denial-of-service","title":"Denial of Service","text":"Zugeordnete CWEs Maximale H\u00e4ufigkeit Durchschn. H\u00e4ufigkeit Durchschn. Ausnutzbarkeit (gewichtet) Durchschn. Auswirkungen (gewichtet) Maximale Abdeckung Durchschnittliche Abdeckung Gesamtanzahl CVEs insgesamt 8 17.54 % 4.89 % 8.3 5.9 79.58 % 33.26 % 66985 973 <ul> <li> <p>Beschreibung. Mit den n\u00f6tigen Ressourcen ist ein Denial-of-Service immer m\u00f6glich. Design- und Programmierpraktiken haben jedoch einen erheblichen Einfluss auf das Ausma\u00df des Denial-of-Service. Mit ausreichenden Ressourcen ist eine Denial of Service immer m\u00f6glich. Allerdings haben Design und Programmierpraktiken einen erheblichen Einfluss auf das Ausma\u00df des Denial of Service. Angenommen, jede Person mit einem Link kann auf eine gro\u00dfe Datei zugreifen, oder auf jeder Seite findet eine rechenintensive Transaktion statt. In diesem Fall ist die Denial-of-Service-Attacke mit weniger Aufwand zu bewerkstelligen.</p> </li> <li> <p>Pr\u00e4vention und Gegenma\u00dfnahmen. Testen Sie die Effizienz des Codes auf CPU-, E/A- und Speichernutzung, \u00fcberarbeiten, optimieren oder cachen Sie aufwendige Operationen. Erw\u00e4gen Sie Zugriffskontrollen f\u00fcr gr\u00f6\u00dfere Objekte, um sicherzustellen, dass nur autorisierte Personen auf gro\u00dfe Dateien oder Objekte zugreifen k\u00f6nnen, oder stellen Sie sie \u00fcber ein Edge-Caching-Netzwerk bereit.</p> </li> <li> <p>Beispielhafte Angriffsszenarien. Ein Angreifer k\u00f6nnte feststellen, dass ein Vorgang 5-10 Sekunden ben\u00f6tigt, um ihn abzuschlie\u00dfen. Wenn vier Threads gleichzeitig laufen, scheint der Server nicht mehr zu reagieren. Der Angreifer nutzt 1000 Threads und nimmt das gesamte System offline.</p> </li> <li> <p>Referenzen </p> <ul> <li>OWASP Cheat Sheet Series: Denial of Service Cheat Sheet </li> <li>OWASP Community Content: Denial of Service </li> </ul> </li> </ul>"},{"location":"de/A11_2021-Next_Steps/#speicherverwaltungsfehler","title":"Speicherverwaltungsfehler","text":"Zugeordnete CWEs Maximale H\u00e4ufigkeit Durchschn. H\u00e4ufigkeit Durchschn. Ausnutzbarkeit (gewichtet) Durchschn. Auswirkungen (gewichtet) Maximale Abdeckung Durchschnittliche Abdeckung Gesamtanzahl CVEs insgesamt 14 7.03 % 1.16 % 6.7 8.1 56.06 % 31.74 % 26576 16184 <ul> <li> <p>Beschreibung. Webanwendungen werden in der Regel in Managed Memory-Sprachen geschrieben, wie zum Beispiel Java, .NET oder node.js (JavaScript oder TypeScript). Allerdings sind diese Sprachen in Systemsprachen geschrieben, die Probleme mit der Speicherverwaltung haben, z. B. Puffer- oder Heap-\u00dcberl\u00e4ufe, Use after free, Integer-\u00dcberl\u00e4ufe und mehr. Im Laufe der Jahre gab es viele Sandbox-\u201eAusbr\u00fcche\u201c, die zeigen, dass nur weil die Webanwendungssprache nominell \u201e speicher- sicher\u201c ist, die Grundlagen es nicht sind.</p> </li> <li> <p>Pr\u00e4vention und Gegenma\u00dfnahmen. Viele moderne APIs sind heute in speichersicheren Sprachen wie Rust oder Go geschrieben. Im Fall von Rust ist die Speichersicherheit ein entscheidendes Merkmal der Sprache. Bei vorhandenem Code kann die Verwendung von strengen Compiler-Flags, starker Typisierung, statischer Codeanalyse und Fuzzing-Tests bei der Identifizierung von Speicherlecks, Speicher- und Array-\u00dcberl\u00e4ufen und vielem mehr hilfreich sein.</p> </li> <li> <p>Beispielhafte Angriffsszenarien. Puffer- und Heap-\u00dcberl\u00e4ufe sind seit Jahren ein beliebtes Ziel von Angreifern. Der Angreifer sendet dabei Daten an ein Programm, welches diese in einem zu kleinen Stack-Puffer speichert. Dies hat zur Folge, dass Informationen auf dem Call Stack \u00fcberschrieben werden, darunter auch der R\u00fcckgabezeiger der Funktion. Die Daten legen den Wert des R\u00fcckgabezeigers fest, so dass bei der R\u00fcckkehr der Funktion die Kontrolle an den in den Daten des Angreifers enthaltenen Schadcode \u00fcbergeben wird.</p> </li> <li> <p>Referenzen</p> <ul> <li>OWASP Community Content: Buffer Overflow </li> <li>OWASP Community Content: Buffer Overflow Attack </li> <li>Science Direct - Computer Science: Integer Overflow </li> </ul> </li> </ul>"},{"location":"es/","title":"Introducci\u00f3n","text":""},{"location":"es/#bienvenido-al-owasp-top-10-2021","title":"Bienvenido al OWASP Top 10 - 2021","text":"<p>\u00a1Bienvenido a la \u00faltima entrega del OWASP Top 10! El OWASP Top 10 2021 ha sido totalmente renovado, con un nuevo dise\u00f1o gr\u00e1fico y una infograf\u00eda de una sola p\u00e1gina que puedes imprimir u obtener desde nuestra p\u00e1gina web.</p> <p>Un enorme agradecimiento a todos los que han contribuido con su tiempo y datos para esta iteraci\u00f3n. Sin ustedes, esta entrega no ser\u00eda posible. GRACIAS!</p>"},{"location":"es/#que-ha-cambiado-en-el-top-10-de-2021","title":"Qu\u00e9 ha cambiado en el Top 10 de 2021","text":"<p>Hay tres nuevas categor\u00edas, cuatro categor\u00edas con cambios de nombre y alcance, y alguna consolidaci\u00f3n en el Top 10 de 2021. Hemos cambiado los nombres cuando ha sido necesario para centrarnos en la causa principal en lugar del s\u00edntoma.</p> <p></p> <ul> <li>A01:2021 - P\u00e9rdida de Control de Acceso sube de la quinta posici\u00f3n a la categor\u00eda con el mayor riesgo en seguridad de aplicaciones web; los datos proporcionados indican que, en promedio, el 3,81% de las aplicaciones probadas ten\u00edan una o m\u00e1s Common Weakness Enumerations (CWEs) con m\u00e1s de 318.000 ocurrencias de CWEs en esta categor\u00eda de riesgo. Las 34 CWEs relacionadas con la P\u00e9rdida de Control de Acceso tuvieron m\u00e1s apariciones en las aplicaciones que cualquier otra categor\u00eda.</li> <li>A02:2021 - Fallas Criptogr\u00e1ficas sube una posici\u00f3n ubic\u00e1ndose en la segunda, antes conocida como A3:2017-Exposici\u00f3n de Datos Sensibles, que era m\u00e1s una caracter\u00edstica que una causa ra\u00edz. El nuevo nombre se centra en las fallas relacionadas con la criptograf\u00eda, como se ha hecho impl\u00edcitamente antes. Esta categor\u00eda frecuentemente conlleva a la exposici\u00f3n de datos confidenciales o al compromiso del sistema.</li> <li>A03:2021 - Inyecci\u00f3n desciende hasta la tercera posici\u00f3n. El 94% de las aplicaciones fueron probadas con alg\u00fan tipo de inyecci\u00f3n y estas mostraron una tasa de incidencia m\u00e1xima del 19%,  promedio de 3.37%, y las 33 CWEs relacionadas con esta categor\u00eda tienen la segunda mayor cantidad de ocurrencias en aplicaciones con 274.000 ocurrencias. El Cross-Site Scripting, en esta edici\u00f3n, forma parte de esta categor\u00eda de riesgo.</li> <li>A04:2021 - Dise\u00f1o Inseguro nueva categor\u00eda para la edici\u00f3n 2021, con un enfoque en los riesgos relacionados con fallas de dise\u00f1o. Si realmente queremos madurar como industria, debemos \"mover a la izquierda\" del proceso de desarrollo las actividades de seguridad. Necesitamos m\u00e1s modelos de amenazas, patrones y principios con dise\u00f1os seguros y arquitecturas de referencia. Un dise\u00f1o inseguro no puede ser corregida con una implementaci\u00f3n perfecta debido a que, por definici\u00f3n, los controles de seguridad necesarios nunca se crearon para defenderse de ataques espec\u00edficos.</li> <li>A05:2021 - Configuraci\u00f3n de Seguridad Incorrecta asciende desde la sexta posici\u00f3n en la edici\u00f3n anterior; el 90% de las aplicaciones se probaron para detectar alg\u00fan tipo de configuraci\u00f3n incorrecta, con una tasa de incidencia promedio del 4,5% y m\u00e1s de 208.000 casos de CWEs relacionadas con esta categor\u00eda de riesgo. Con mayor presencia de software altamente configurable, no es sorprendente ver qu\u00e9 esta categor\u00eda ascendiera. El A4:2017-Entidades Externas XML(XXE), ahora en esta edici\u00f3n, forma parte de esta categor\u00eda de riesgo.</li> <li>A06:2021 - Componentes Vulnerables y Desactualizados antes denominado como Uso de Componentes con Vulnerabilidades Conocidas, ocupa el segundo lugar en el Top 10 de la encuesta a la comunidad, pero tambi\u00e9n tuvo datos suficientes para estar en el Top 10 a trav\u00e9s del an\u00e1lisis de datos. Esta categor\u00eda asciende desde la novena posici\u00f3n en la edici\u00f3n 2017 y es un problema conocido que cuesta probar y evaluar el riesgo. Es la \u00fanica categor\u00eda que no tiene ninguna CVE relacionada con las CWEs incluidas, por lo que una vulnerabilidad predeterminada y con ponderaciones de impacto de 5,0 son consideradas en sus puntajes.</li> <li>A07:2021 - Fallas de Identificaci\u00f3n y Autenticaci\u00f3n previamente denominada como P\u00e9rdida de Autenticaci\u00f3n, descendi\u00f3 desde la segunda posici\u00f3n, y ahora incluye CWEs que est\u00e1n m\u00e1s relacionadas con fallas de identificaci\u00f3n. Esta categor\u00eda sigue siendo una parte integral del Top 10, pero el incremento en la disponibilidad de frameworks estandarizados parece estar ayudando.</li> <li>A08:2021 - Fallas en el Software y en la Integridad de los Datos es una nueva categor\u00eda para la edici\u00f3n 2021, que se centra en hacer suposiciones relacionadas con actualizaciones de software, los datos cr\u00edticos y los pipelines CI/CD sin verificaci\u00f3n de integridad. Corresponde a uno de los mayores impactos seg\u00fan los sistemas de ponderaci\u00f3n de vulnerabilidades (CVE/CVSS, siglas en ingl\u00e9s para Common Vulnerability and Exposures/Common Vulnerability Scoring System). La A8:2017-Deserializaci\u00f3n Insegura en esta edici\u00f3n forma parte de esta extensa categor\u00eda de riesgo.</li> <li>A09:2021 - Fallas en el Registro y Monitoreo previamente denominada como A10:2017-Registro y Monitoreo Insuficientes, es adicionada desde el Top 10 de la encuesta a la comunidad (tercer lugar) y ascendiendo desde la d\u00e9cima posici\u00f3n de la edici\u00f3n anterior. Esta categor\u00eda se ampl\u00eda para incluir m\u00e1s tipos de fallas, es dif\u00edcil de probar y no est\u00e1 bien representada en los datos de CVE/CVSS. Sin embargo, las fallas en esta categor\u00eda pueden afectar directamente la visibilidad, las alertas de incidentes y los an\u00e1lisis forenses.</li> <li>A10:2021 - Falsificaci\u00f3n de Solicitudes del Lado del Servidor es adicionada desde el Top 10 de la encuesta a la comunidad (primer lugar). Los datos muestran una tasa de incidencia relativamente baja con una cobertura de pruebas por encima del promedio, junto con calificaciones por encima del promedio para la capacidad de explotaci\u00f3n e impacto. Esta categor\u00eda representa el escenario en el que los miembros de la comunidad de seguridad nos dicen que esto es importante, aunque no est\u00e1 visualizado en los datos en este momento.</li> </ul>"},{"location":"es/#metodologia","title":"Metodolog\u00eda","text":"<p>Esta entrega del Top 10 est\u00e1 m\u00e1s orientada a los datos que nunca, pero no a ciegas. Hemos seleccionado ocho de las diez categor\u00edas a partir de los datos aportados y dos categor\u00edas a partir de la encuesta de la comunidad del Top 10 a un alto nivel. Hacemos esto por una raz\u00f3n fundamental, mirar los datos aportados es mirar al pasado. Los investigadores de seguridad en aplicaciones se toman su tiempo para encontrar nuevas vulnerabilidades y nuevas formas de probarlas. Se necesita tiempo para integrar estas pruebas en las herramientas y los procesos. Para el momento en que podamos probar de forma fiable una vulnerabilidad a escala, es probable que hayan pasado a\u00f1os. Para compensar este punto de vista, utilizamos una encuesta de la comunidad en la que preguntamos a los expertos en seguridad y desarrollo de aplicaciones que se encuentran en primera l\u00ednea cu\u00e1les son, en su opini\u00f3n, las vulnerabilidades esenciales que los datos a\u00fan no muestran.</p> <p>Hay algunos cambios cr\u00edticos que hemos adoptado para seguir madurando el Top 10.</p>"},{"location":"es/#como-se-estructuran-las-categorias","title":"C\u00f3mo se estructuran las categor\u00edas","text":"<p>Algunas categor\u00edas han cambiado con respecto a la anterior entrega del OWASP Top Ten. A continuaci\u00f3n se presenta un resumen de alto nivel de los cambios de categor\u00eda.</p> <p>Los trabajos anteriores de recopilaci\u00f3n de datos se centraban en un subconjunto prescrito de aproximadamente 30 CWEs, con un campo que solicitaba hallazgos adicionales. Nos dimos cuenta de que las organizaciones se centraban principalmente en esas 30 CWEs y rara vez a\u00f1ad\u00edan otras CWEs que ve\u00edan. En esta iteraci\u00f3n, lo abrimos y solo pedimos datos, sin ninguna restricci\u00f3n sobre las CWEs. Solicitamos el n\u00famero de aplicaciones analizadas para un a\u00f1o determinado (a partir de 2017) y el n\u00famero de aplicaciones con al menos una instancia de una CWE encontrada en las pruebas. Este formato nos permite rastrear la prevalencia de cada CWE dentro de la poblaci\u00f3n de aplicaciones. Ignoramos la frecuencia para nuestros prop\u00f3sitos; aunque puede ser necesaria para otras situaciones, solo oculta la prevalencia real en la poblaci\u00f3n de aplicaciones. El hecho de que una aplicaci\u00f3n tenga cuatro instancias de una CWE o 4.000 instancias no forma parte del c\u00e1lculo para el Top 10. Hemos pasado de aproximadamente 30 CWEs a casi 400 CWEs para analizar en el conjunto de datos. Tenemos previsto realizar an\u00e1lisis de datos adicionales como complemento en el futuro. Este aumento significativo en el n\u00famero de CWEs hace necesario cambiar la estructura de las categor\u00edas.</p> <p>Pasamos varios meses agrupando y clasificando las CWEs y podr\u00edamos haber seguido durante m\u00e1s tiempo. En alg\u00fan momento tuvimos que parar. Hay tipos de CWE de causa ra\u00edz y de s\u00edntoma, donde los de causa ra\u00edz ser\u00edan \"Falla Criptogr\u00e1fica\" y \"Configuraci\u00f3n de Seguridad Incorrecta\" en contraste con los de s\u00edntoma como \"Exposici\u00f3n de Datos Sensibles\" y \"Denegaci\u00f3n de Servicio\". Hemos decidido centrarnos en la causa ra\u00edz siempre que sea posible, ya que es m\u00e1s l\u00f3gico para proporcionar orientaci\u00f3n sobre la identificaci\u00f3n y la reparaci\u00f3n. Centrarse en la causa ra\u00edz en lugar de en el s\u00edntoma no es un concepto nuevo; el Top Ten ha sido una mezcla de s\u00edntoma y causa ra\u00edz. Las CWEs tambi\u00e9n son una mezcla de s\u00edntoma y causa ra\u00edz; simplemente estamos siendo m\u00e1s expl\u00edcitos al respecto y lo se\u00f1alamos. Hay un promedio de 19,6 CWEs por categor\u00eda en esta entrega, con el l\u00edmite inferior de 1 CWE para A10:2021-Falsificaci\u00f3n de Solicitudes del Lado del Servidor (SSRF) a 40 CWEs en A04:2021-Dise\u00f1o Inseguro. Esta actualizaci\u00f3n en la estructura de las categor\u00edas ofrece beneficios adicionales de capacitaci\u00f3n, ya que las empresas pueden centrarse en las CWE que tienen sentido para un lenguaje/framework.</p>"},{"location":"es/#como-se-utilizan-los-datos-para-seleccionar-las-categorias","title":"C\u00f3mo se utilizan los datos para seleccionar las categor\u00edas","text":"<p>En 2017, seleccionamos las categor\u00edas seg\u00fan la tasa de incidencia para determinar la probabilidad, y luego las clasificamos seg\u00fan la discusi\u00f3n del equipo basada en d\u00e9cadas de experiencia respecto a la Explotabilidad, la Detectabilidad (tambi\u00e9n probabilidad) y el Impacto t\u00e9cnico. Para 2021, queremos utilizar los datos de Explotabilidad e Impacto (t\u00e9cnico) si es posible.</p> <p>Descargamos OWASP Dependency Check y extrajimos las puntuaciones de CVSS de Explotaci\u00f3n e Impacto agrupadas por CWEs relacionadas. Nos cost\u00f3 bastante investigaci\u00f3n y esfuerzo, ya que todas las CVEs tienen puntuaciones CVSSv2, pero hay fallos en CVSSv2 que CVSSv3 deber\u00eda solucionar. A partir de cierto momento, a todas las CVEs se les asign\u00f3 tambi\u00e9n una puntuaci\u00f3n CVSSv3. Adem\u00e1s, los rangos y f\u00f3rmulas se han actualizado entre CVSSv2 y CVSSv3.</p> <p>En CVSSv2, tanto Explotabilidad como Impacto t\u00e9cnico pod\u00edan llegar a 10,0, pero la f\u00f3rmula los rebajaba al 60% para Explotabilidad y al 40% para Impacto t\u00e9cnico. En CVSSv3, el m\u00e1ximo te\u00f3rico se limit\u00f3 a 6,0 para Explotabilidad y 4,0 para Impacto t\u00e9cnico. Con la ponderaci\u00f3n considerada, la puntuaci\u00f3n de Impacto T\u00e9cnico se elev\u00f3, casi un punto y medio en promedio en CVSSv3, y la Explotabilidad se redujo casi medio punto.</p> <p>Hay 125 mil registros de una CVE mapeadas a una CWE en los datos de la Base de Datos Nacional de Vulnerabilidades (NVD) extra\u00eddos del OWASP Dependency Check, y hay 241 CWEs \u00fanicas mapeadas a una CVE. 62 mil mapeos de CWE tienen una puntuaci\u00f3n CVSSv3, lo cual representa aproximadamente la mitad de la poblaci\u00f3n en el conjunto de datos.</p> <p>Para el Top Ten 2021, calculamos las puntuaciones promedio de explotabilidad e impacto t\u00e9cnico de la siguiente manera. Agrupamos todas las CVEs con puntuaciones CVSS por CWE y ponderamos las puntuaciones de explotabilidad e impacto t\u00e9cnico por el porcentaje de la poblaci\u00f3n que ten\u00eda CVSSv3 + la poblaci\u00f3n restante de puntuaciones CVSSv2 para obtener una media global. Mapeamos estos promedios a las CWEs en el conjunto de datos para utilizarlos como puntuaci\u00f3n de Explotabilidad e Impacto (T\u00e9cnico) para la otra mitad de la ecuaci\u00f3n del riesgo.</p>"},{"location":"es/#por-que-no-solo-los-datos-estadisticos-puros","title":"\u00bfPor qu\u00e9 no solo los datos estad\u00edsticos puros?","text":"<p>Los resultados de los datos se limitan principalmente a lo que podemos comprobar de forma automatizada. Si hablas con un profesional experimentado de la seguridad de las aplicaciones, te hablar\u00e1 de las cosas que encuentra y de las tendencias que ve y que a\u00fan no est\u00e1n en los datos. Se necesita tiempo para desarrollar metodolog\u00edas de pruebas para ciertos tipos de vulnerabilidades y m\u00e1s tiempo a\u00fan para que esas pruebas sean automatizadas y ejecutadas contra una gran poblaci\u00f3n de aplicaciones. Todo lo que hallamos est\u00e1 mirando al pasado y puede que falten algunas tendencias del \u00faltimo a\u00f1o, que a\u00fan no est\u00e1n presentes en los datos.</p> <p>Es por eso que solo recogemos ocho de las diez categor\u00edas de los datos, porque est\u00e1n incompletos. Las otras dos categor\u00edas proceden de la encuesta a la comunidad del Top 10. Esto permite a los profesionales de primera l\u00ednea votar por los que ellos consideran que son los mayores riesgos y que podr\u00edan no estar en los datos (y puede que nunca se expresen en ellos).</p>"},{"location":"es/#por-que-la-tasa-de-incidencia-en-lugar-de-la-frecuencia","title":"\u00bfPor qu\u00e9 la tasa de incidencia en lugar de la frecuencia?","text":"<p>Hay tres fuentes principales de datos. Las identificamos como Herramienta asistida por Humanos (HaT), Humano asistido por Herramientas (TaH) y Herramientas en bruto.</p> <p>Herramientas y HaT son generadores de hallazgos de alta frecuencia. Las herramientas buscar\u00e1n vulnerabilidades espec\u00edficas e intentar\u00e1n incansablemente encontrar cada instancia de esa vulnerabilidad y generar\u00e1n un elevado n\u00famero de hallazgos para algunos tipos de vulnerabilidades. Por ejemplo, el Cross-Site Scripting, suele ser de dos tipos: o bien es un error menor y aislado, o bien es un problema sist\u00e9mico. Cuando se trata de un problema sist\u00e9mico, el n\u00famero de hallazgos puede ser de miles para una sola aplicaci\u00f3n. Esta alta frecuencia ahoga a la mayor\u00eda de las dem\u00e1s vulnerabilidades encontradas en los informes o datos.</p> <p>Por otro lado, TaH encontrar\u00e1 una gama m\u00e1s amplia de tipos de vulnerabilidades, pero con una frecuencia mucho menor debido a las limitaciones de tiempo. Cuando los humanos prueban una aplicaci\u00f3n y ven algo como un Cross-Site Scripting, normalmente encontrar\u00e1n tres o cuatro instancias y se detendr\u00e1n. Pueden determinar un hallazgo sist\u00e9mico y escribir una recomendaci\u00f3n para corregirlo a gran escala en la aplicaci\u00f3n. No hay necesidad (ni tiempo) de encontrar cada instancia.</p> <p>Supongamos que tomamos estos dos conjuntos de datos distintos y tratamos de fusionarlos por su frecuencia. En ese caso, los datos de Herramientas y HaT ahogar\u00e1n los datos m\u00e1s precisos (aunque amplios) de TaH y es en buena parte la raz\u00f3n por la que algo como el Cross-Site Scripting ha sido clasificado tan alto en muchas listas cuando el impacto es generalmente bajo o moderado. Se debe al gran volumen de hallazgos. (El Cross-Site Scripting es adem\u00e1s razonablemente f\u00e1cil de probar, por lo que hay muchas m\u00e1s pruebas para ello).</p> <p>En 2017, introdujimos el uso de la tasa de incidencia en su lugar para dar una nueva mirada a los datos y combinar de manera transparente los datos de Herramientas y HaT con los datos de TaH. La tasa de incidencia se refiere al porcentaje de la poblaci\u00f3n de aplicaciones que tiene al menos una instancia de un tipo de vulnerabilidad. No nos importa si fue algo puntual o sist\u00e9mico. Eso es irrelevante para nuestros objetivos; solo necesitamos saber cu\u00e1ntas aplicaciones ten\u00edan al menos una instancia, lo cual ayuda a proporcionar una visi\u00f3n m\u00e1s clara de los hallazgos de las pruebas a trav\u00e9s de m\u00faltiples tipos de pruebas sin ahogar los datos en resultados de alta frecuencia. Esto corresponde a una visi\u00f3n relacionada con el riesgo, ya que un atacante solo necesita una instancia para atacar una aplicaci\u00f3n con \u00e9xito a trav\u00e9s de dicha categor\u00eda.</p>"},{"location":"es/#cual-es-su-proceso-de-recopilacion-y-analisis-de-datos","title":"\u00bfCu\u00e1l es su proceso de recopilaci\u00f3n y an\u00e1lisis de datos?","text":"<p>En el Open Security Summit de 2017 formalizamos el proceso de recopilaci\u00f3n de datos del OWASP Top 10. Los l\u00edderes del OWASP Top 10 y la comunidad pasaron dos d\u00edas trabajando en la formalizaci\u00f3n de un proceso de recopilaci\u00f3n de datos transparente. La edici\u00f3n de 2021 es la segunda vez que utilizamos esta metodolog\u00eda.</p> <p>Publicamos la solicitud de datos a trav\u00e9s de las redes sociales de las que disponemos, tanto del proyecto como de OWASP. En la p\u00e1gina del proyecto, enumeramos los elementos y la estructura de los datos que buscamos y c\u00f3mo presentarlos. En el proyecto de GitHub, disponemos de archivos de ejemplo que sirven como plantillas. Tambi\u00e9n, en caso necesario, trabajamos con las organizaciones para ayudarles a determinar la estructura y el mapeo con las CWEs.</p> <p>Recibimos estos datos de organizaciones que son proveedores de servicios de seguridad, proveedores de bug bounty y organizaciones que aportan datos de pruebas internas. Una vez que recibimos los datos, los cargamos y realizamos un an\u00e1lisis fundamental de las categor\u00edas de riesgo de las CWEs. Hay un solapamiento entre algunas CWEs, y otros est\u00e1n muy relacionados (por ejemplo, las fallas criptogr\u00e1ficas). Toda decisi\u00f3n relacionada con los datos en bruto se ha documentado y publicado para ser abiertos y transparentes en cuanto a la normalizaci\u00f3n de los datos.</p> <p>Analizamos las ocho categor\u00edas con las tasas de incidencia m\u00e1s altas para incluirlas en el Top 10. Tambi\u00e9n miramos los resultados de la encuesta a la comunidad del Top 10 para ver cu\u00e1les pueden estar ya presentes en los datos. Las dos m\u00e1s votadas que no est\u00e9n ya presentes en los datos ser\u00e1n seleccionadas para los otros dos puestos del Top 10. Una vez seleccionados las diez, aplicamos factores generalizados de explotabilidad e impacto; para as\u00ed poder ordenar el Top 10 2021 en funci\u00f3n del riesgo.</p>"},{"location":"es/#data-factors","title":"Data Factors","text":"<p>Hay factores de datos que se enumeran para cada una de las 10 categor\u00edas, aqu\u00ed est\u00e1 lo que significan:</p> <ul> <li>CWEs mapeadas: El n\u00famero de CWEs asignadas a una categor\u00eda por el equipo del Top 10.</li> <li>Tasa de incidencia: La tasa de incidencia es el porcentaje de aplicaciones vulnerables a esa CWE de la poblaci\u00f3n analizada por esa organizaci\u00f3n para ese a\u00f1o.</li> <li>Cobertura (de pruebas): El porcentaje de aplicaciones que han sido testadas por todas las organizaciones para una determinada CWE.</li> <li>Explotabilidad ponderada: La sub-puntuaci\u00f3n de explotabilidad de las puntuaciones CVSSv2 y CVSSv3 asignadas a las CVEs mapeadas a las CWEs, normalizados y colocados en una escala de 10 puntos.</li> <li>Impacto ponderado: La sub-puntuaci\u00f3n de Impacto de las puntuaciones CVSSv2 y CVSSv3 asignadas a las CVEs mapeadas a las CWEs, normalizados y colocados en una escala de 10 puntos.</li> <li>Total de ocurrencias: N\u00famero total de aplicaciones en las que se han encontrado las CWEs asignados a una categor\u00eda.</li> <li>Total de CVEs: N\u00famero total de CVEs en la base de datos del NVD que fueron asignadas a las CWEs asignados a una categor\u00eda.</li> </ul>"},{"location":"es/#gracias-a-nuestros-proveedores-de-datos","title":"Gracias a nuestros proveedores de datos","text":"<p>Las siguientes organizaciones (junto con algunos donantes an\u00f3nimos) han tenido la amabilidad de donar datos de m\u00e1s de 500.000 aplicaciones para hacer de este el mayor y m\u00e1s completo conjunto de datos sobre seguridad de las aplicaciones. Sin ustedes, esto no ser\u00eda posible.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"es/#gracias-a-nuestro-patrocinador","title":"Gracias a nuestro patrocinador","text":"<p>El equipo del OWASP Top 10 2021 agradece el apoyo financiero de Secure Code Warrior y Just Eat.</p> <p></p> <p></p>"},{"location":"es/0x01_2021-about-owasp/","title":"Acerca de OWASP","text":"<p>El proyecto abierto de seguridad en aplicaciones Web (OWASP por sus siglas en ingle\u0301s) es una comunidad abierta dedicada a facultar a las organizaciones a desarrollar, adquirir y mantener aplicaciones y APIS que pueden ser confiables.</p> <p>En OWASP, encontrara\u0301 gratuitas y abiertas:</p> <ul> <li>Herramientas y esta\u0301ndares de seguridad en aplicaciones.</li> <li>Investigaci\u00f3n de vanguardia.</li> <li>Controles est\u00e1ndar de seguridad y bibliotecas.</li> <li>Libros completos de revisiones de seguridad en aplicaciones, desarrollo de co\u0301digo fuente seguro, y revisiones de seguridad en co\u0301digo fuente.</li> <li>Presentaciones y videos.</li> <li>Hojas de ayuda (Cheat sheets) en varios t\u00f3picos comunes.</li> <li>Reuniones de Cap\u00edtulos</li> <li>Eventos, entrenamientos y conferencias.</li> <li>Grupos de Google</li> </ul> <p>Conozca ma\u0301s en: https://www.owasp.org.</p> <p>Todas las herramientas, documentos, videos, presentaciones y cap\u00edtulos de OWASP son gratuitos y est\u00e1n abiertos a cualquier interesado en mejorar la seguridad en aplicaciones.</p> <p>Abogamos por resolver la seguridad en aplicaciones como un problema de personas, procesos y tecnologi\u0301a, ya que los enfoques ma\u0301s efectivos para la seguridad en aplicaciones requieren mejoras en todas estas a\u0301reas.</p> <p>OWASP es un nuevo tipo de organizacio\u0301n. Nuestra libertad de presiones comerciales nos permite proveer informacio\u0301n sobre seguridad en aplicaciones sin sesgos, pra\u0301ctica y efectiva. </p> <p>OWASP no esta\u0301 afiliada con ninguna compan\u0303i\u0301a de tecnologi\u0301a, aunque apoyamos el uso instruido de tecnologi\u0301as de seguridad comercial. OWASP produce muchos tipos de materiales en una manera colaborativa, transparente y abierta.</p> <p>La fundacio\u0301n OWASP es una entidad sin fines de lucro para asegurar el e\u0301xito a largo plazo del proyecto. Casi todos los asociados con OWASP son voluntarios, incluyendo la junta directiva de OWASP, li\u0301deres de capi\u0301tulos, li\u0301deres y miembros de proyectos. Apoyamos la investigacio\u0301n innovadora sobre seguridad a trave\u0301s de becas e infraestructura.</p> <p>\u00a1U\u0301nase a nosotros!</p>"},{"location":"es/0x01_2021-about-owasp/#derechos-de-autor-y-licencia","title":"Derechos de Autor y Licencia","text":"<p>Copyright \u00a9 2003-2025 The OWASP\u00ae Foundation. Este documento se publica bajo la licencia Creative Commons Attribution Share-Alike 4.0. Para cualquier reutilizaci\u00f3n o distribuci\u00f3n, debe dejar en claro los t\u00e9rminos de la licencia de este trabajo.</p>"},{"location":"es/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/","title":"C\u00f3mo iniciar un programa de Seguridad en Aplicaciones (AppSec) con el OWASP Top 10","text":"<p>Anteriormente, el OWASP Top 10 no hab\u00eda sido dise\u00f1ado para ser la base de un programa de AppSec. Sin embargo, es esencial comenzar en alg\u00fan lugar, sobre todo para aquellas organizaciones que reci\u00e9n comienzan su traves\u00eda en seguridad de aplicaciones. El OWASP Top 10 2021 no es suficiente en s\u00ed mismo, pero es un buen comienzo como base para las listas de controles, etc.</p>"},{"location":"es/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etapa-1-identifique-las-necesidades-y-los-objetivos-de-su-programa-de-appsec","title":"Etapa 1. Identifique las necesidades y los objetivos de su programa de AppSec","text":"<p>Muchos programas de seguridad en aplicaciones intentan correr antes de poder gatear o caminar. Estos esfuerzos est\u00e1n condenados al fracaso. Recomendamos encarecidamente a los CISO y a los l\u00edderes de AppSec que utilicen el Modelo de Madurez para el Aseguramiento del Software (SAMM) de OWASP para identificar debilidades y \u00e1reas de mejora durante un per\u00edodo de 1 a 3 a\u00f1os. El primer paso es evaluar d\u00f3nde se encuentra ahora, identificar las brechas en las \u00e1reas de gobernanza, dise\u00f1o, implementaci\u00f3n, verificaci\u00f3n y operaciones que necesita resolver de inmediato frente a las que pueden esperar, priorizando la implementaci\u00f3n o mejora de las quince pr\u00e1cticas de seguridad SAMM de OWASP. OWASP SAMM puede ayudar a construir y medir mejoras en sus esfuerzos de aseguramiento de software.</p>"},{"location":"es/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etapa-2-planifique-un-ciclo-de-vida-de-desarrollo-seguro-de-carretera-pavimentada-paved-road","title":"Etapa 2. Planifique un ciclo de vida de desarrollo seguro de carretera pavimentada (\"paved road\")","text":"<p>El concepto de carretera pavimentada (\"paved road\") en seguridad inform\u00e1tica es una forma concisa de expresar que el camino mas r\u00e1pido tambi\u00e9n es el mas seguro. Esto permite escalar los recursos necesarios de AppSec al mismo ritmo que aumenta la velocidad requerida por los equipos de desarrollo; que dicho sea de paso, se acelera cada a\u00f1o.</p> <p>El concepto de camino pavimentado es: \"la forma m\u00e1s f\u00e1cil es tambi\u00e9n la forma m\u00e1s segura\" y debe involucrar una cultura de asociaciones profundas entre el equipo de desarrollo y el equipo de seguridad, preferiblemente de manera que sean el mismo equipo. El camino pavimentado tiene como objetivo mejorar, medir, detectar y reemplazar alternativas inseguras, teniendo a nivel de toda la organizaci\u00f3n una biblioteca de alternativas seguras, utilizando a su vez herramientas de apoyo para detectar d\u00f3nde es posible realizar mejoras al adoptar el camino pavimentado. Esto permite que las herramientas de desarrollo ya existentes informen sobre compilaciones inseguras y ayude a los equipos de desarrollo a autocorregirse.</p> <p>La carretera pavimentada puede parecer mucho para asimilar, pero debe construirse gradualmente con el tiempo. Existen otras formas de programas de AppSec, como por ejemplo el ciclo de vida de desarrollo seguro \u00e1gil de Microsoft. No todas las metodolog\u00edas de programas de AppSec se adaptan a todas las organizaciones.</p>"},{"location":"es/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etapa-3-implemente-la-carretera-pavimentada-con-sus-equipos-de-desarrollo","title":"Etapa 3. Implemente la carretera pavimentada con sus equipos de desarrollo.","text":"<p>Las carreteras pavimentadas se construyen con el consentimiento y la participaci\u00f3n directa de los equipos de desarrollo y operaciones involucrados. Debe estar alineada estrat\u00e9gicamente con el negocio y ayudar a entregar aplicaciones m\u00e1s seguras con mayor rapidez. El desarrollo de la carretera pavimentada deber\u00eda ser un ejercicio hol\u00edstico que cubra todo el ecosistema de aplicaciones de la organizaci\u00f3n, no un remiendo por aplicaci\u00f3n, como en los viejos tiempos.</p>"},{"location":"es/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etapa-4-migre-todas-las-aplicaciones-existentes-y-futuras-a-la-carretera-pavimentada","title":"Etapa 4. Migre todas las aplicaciones existentes y futuras a la carretera pavimentada.","text":"<p>Agregue herramientas de detecci\u00f3n a la carretera pavimentada a medida que las desarrolle y proporcione informaci\u00f3n a los equipos de desarrollo para mejorar la seguridad de sus aplicaciones a trav\u00e9s de la adopci\u00f3n de herramientas ya incluidas en la carretera pavimentada. Una vez que se ha adoptado un aspecto de la carretera pavimentada, las organizaciones deber\u00edan implementar controles en los procesos de integraci\u00f3n continua que inspeccionen el c\u00f3digo ya existente y las modificaciones (check-ins), rechazando o advirtiendo sobre aquellas que introducen alternativas prohibidas. Esto evita que las opciones inseguras se introduzcan en el c\u00f3digo con el tiempo, evitando la deuda t\u00e9cnica y una aplicaci\u00f3n insegura defectuosa. Dichas advertencias deben estar ligadas a la alternativa segura, de modo que el equipo de desarrollo reciba la respuesta correcta de inmediato. Ellos pueden refactorizar y adoptar los componentes de la carretera pavimentada r\u00e1pidamente.</p>"},{"location":"es/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etapa-5-pruebe-que-la-carretera-pavimentada-haya-mitigado-los-problemas-encontrados-en-el-top-10-de-owasp","title":"Etapa 5. Pruebe que la carretera pavimentada haya mitigado los problemas encontrados en el Top 10 de OWASP","text":"<p>Los componentes de carretera pavimentada deben abordar un problema importante del OWASP Top 10, por ejemplo, c\u00f3mo detectar o reparar autom\u00e1ticamente componentes vulnerables, o un complemento IDE de an\u00e1lisis de c\u00f3digo est\u00e1tico para detectar inyecciones o, mejor a\u00fan, comenzar a usar una biblioteca que se sabe que es segura contra inyecciones. Cuantas m\u00e1s de estas sustituciones seguras se proporcionen a los equipos, mejor. Una tarea vital del equipo de AppSec es garantizar que la seguridad de estos componentes se eval\u00fae y mejore continuamente. Una vez mejorados, alguna forma de comunicaci\u00f3n debe existir con los consumidores del componente para indicar que existe una actualizaci\u00f3n disponible. Es preferiblemente una forma autom\u00e1tica, pero si no es posible, se recomienda utilizar al menos un resaltado en un dashboard o algo similar.</p>"},{"location":"es/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etapa-6-transforme-su-programa-en-un-programa-de-appsec-maduro","title":"Etapa 6. Transforme su programa en un programa de AppSec maduro","text":"<p>No debe detenerse en el OWASP Top 10. S\u00f3lo cubre 10 categor\u00edas de riesgo. Recomendamos enf\u00e1ticamente a las organizaciones que adopten el Est\u00e1ndar de Verificaci\u00f3n de Seguridad de Aplicaciones (ASVS) de OWASP  y agreguen progresivamente componentes a la carretera pavimentada pensados en los niveles 1, 2 y 3, seg\u00fan el nivel objetivo determinado para cada aplicaci\u00f3n desarrolladas.</p>"},{"location":"es/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#yendo-mas-alla","title":"Yendo m\u00e1s all\u00e1","text":"<p>Todos los grandes programas de AppSec van m\u00e1s all\u00e1 del m\u00ednimo indispensable. Todos deben ir m\u00e1s all\u00e1 si queremos realmente superar las vulnerabilidades de AppSec.</p> <ul> <li> <p>Integridad conceptual. Los programas maduros de AppSec deben contener alg\u00fan concepto de arquitectura de seguridad, ya sea una arquitectura formal de seguridad en la nube o empresarial o modelado de amenazas.</p> </li> <li> <p>Automatizaci\u00f3n y escala. Los programas maduros de AppSec intentan automatizar la mayor cantidad de entregables posibles, utilizando scripts para emular pasos complejos de pruebas de penetraci\u00f3n, herramientas de an\u00e1lisis de c\u00f3digo est\u00e1tico directamente disponibles para los equipos de desarrollo, ayudando a los equipos de desarrollo a crear pruebas de integraci\u00f3n y unitarias de AppSec, y m\u00e1s.</p> </li> <li> <p>Cultura. Los programas maduros de AppSec intentan evitar el dise\u00f1o inseguro y eliminan la deuda t\u00e9cnica del c\u00f3digo existente al ser parte del equipo de desarrollo y no uno anexo. Los equipos de AppSec que ven a los equipos de desarrollo como \"ellos\" y \"nosotros\", est\u00e1n condenados al fracaso.</p> </li> <li> <p>Mejora continua. Los programas maduros de AppSec buscan mejorar constantemente. Si algo no funciona, deje de hacerlo. Si algo es in\u00fatil o no escalable, trabaje para mejorarlo. Si los equipos de desarrollo no est\u00e1n utilizando algo o tiene un impacto nulo o limitado, haga algo diferente. El hecho de que hayamos realizado pruebas como comprobaciones de escritorio desde la d\u00e9cada de 1970 no significa que sea una buena idea. Haga mediciones, eval\u00fae y luego construya o mejore.</p> </li> </ul>"},{"location":"es/A00_2021_How_to_use_the_OWASP_Top_10_as_a_standard/","title":"C\u00f3mo utilizar OWASP Top 10 como est\u00e1ndar","text":"<p>El OWASP Top 10 es principalmente un documento de concientizaci\u00f3n. Sin embargo, esto no ha impedido que organizaciones lo utilicen como est\u00e1ndar de facto de la industria AppSec desde su creaci\u00f3n en 2003. Si desea utilizar OWASP Top 10 como un est\u00e1ndar de codificaci\u00f3n o pruebas, sepa que es lo m\u00ednimo y s\u00f3lo un punto de partida.</p> <p>Una de las dificultades de utilizar el OWASP Top 10 como est\u00e1ndar es que documentamos riesgos de AppSec y no necesariamente problemas f\u00e1cilmente comprobables. Por ejemplo, A04:2021-Dise\u00f1o Inseguro est\u00e1 m\u00e1s all\u00e1 del alcance de la mayor\u00eda de las formas de prueba. Otro ejemplo son las pruebas en el lugar y en uso del registro y monitoreo efectivos. S\u00f3lo se pueden realizar a trav\u00e9s de entrevistas y solicitando un muestreo de respuestas efectivas a incidentes. Una herramienta de an\u00e1lisis est\u00e1tico de c\u00f3digo puede detectar la ausencia de registro, pero puede ser imposible determinar si se registran correctamente brechas de seguridad cr\u00edticas en la l\u00f3gica de negocio o en el control de acceso. Los testers de penetraci\u00f3n s\u00f3lo pueden determinar que han invocado la respuesta a incidentes en un entorno de prueba, el cual rara vez se monitorea de la misma manera que en un entorno de producci\u00f3n.</p> <p>Estas son nuestras recomendaciones sobre cu\u00e1ndo es apropiado utilizar el OWASP Top 10:</p> Caso de uso OWASP Top 10 2021 Est\u00e1ndar de Verificaci\u00f3n de Seguridad en Aplicaciones de OWASP (ASVS) Concientizaci\u00f3n S\u00ed Capacitaci\u00f3n Nivel Introductorio Completo Dise\u00f1o y arquitectura Ocasionalmente S\u00ed Est\u00e1ndar de codificaci\u00f3n Apenas M\u00ednimo S\u00ed Revisi\u00f3n de c\u00f3digo seguro Apenas M\u00ednimo S\u00ed Lista verificaci\u00f3n para la revisi\u00f3n por pares Apenas M\u00ednimo S\u00ed Pruebas unitarias Ocasionalmente S\u00ed Pruebas de integraci\u00f3n Ocasionalmente S\u00ed Pruebas de penetraci\u00f3n Apenas M\u00ednimo S\u00ed Soporte de herramientas Apenas M\u00ednimo S\u00ed Cadena de suministro segura Ocasionalmente S\u00ed <p>Alentamos a cualquiera que desee adoptar un est\u00e1ndar de seguridad de aplicaciones a usar el Est\u00e1ndar de Verificaci\u00f3n de Seguridad de Aplicaciones (ASVS) de OWASP, ya que fue dise\u00f1ado para ser verificable, testeble, y puede usarse en todas las etapas de un ciclo de desarrollo seguro.</p> <p>El ASVS es la \u00fanica opci\u00f3n aceptable para los proveedores de herramientas. Las herramientas no pueden detectar, probar o proteger de manera integral contra los riesgos descriptos en OWASP Top 10, tomando como referencia el A04:2021-Dise\u00f1o Inseguro. OWASP disuade el uso cualquier afirmaci\u00f3n pretensiosa de cobertura completa del OWASP Top 10, porque simplemente no es cierto.</p>"},{"location":"es/A00_2021_Introduction/","title":"Introducci\u00f3n","text":""},{"location":"es/A00_2021_Introduction/#bienvenido-al-owasp-top-10-2021","title":"Bienvenido al OWASP Top 10 - 2021","text":"<p>\u00a1Bienvenido a la \u00faltima entrega del OWASP Top 10! El OWASP Top 10 2021 ha sido totalmente renovado, con un nuevo dise\u00f1o gr\u00e1fico y una infograf\u00eda de una sola p\u00e1gina que puedes imprimir u obtener desde nuestra p\u00e1gina web.</p> <p>Un enorme agradecimiento a todos los que han contribuido con su tiempo y datos para esta iteraci\u00f3n. Sin ustedes, esta entrega no ser\u00eda posible. GRACIAS!</p>"},{"location":"es/A00_2021_Introduction/#que-ha-cambiado-en-el-top-10-de-2021","title":"Qu\u00e9 ha cambiado en el Top 10 de 2021","text":"<p>Hay tres nuevas categor\u00edas, cuatro categor\u00edas con cambios de nombre y alcance, y alguna consolidaci\u00f3n en el Top 10 de 2021. Hemos cambiado los nombres cuando ha sido necesario para centrarnos en la causa ra\u00edz en lugar del s\u00edntoma.</p> <p></p> <ul> <li>A01:2021-P\u00e9rdida de Control de Acceso sube de la quinta posici\u00f3n a la categor\u00eda con el mayor riesgo en seguridad de aplicaciones web; los datos proporcionados indican que, en promedio, el 3,81% de las aplicaciones analizadas pose\u00edan una o m\u00e1s de las debilidades identificadas en el Common Weakness Enumerations (CWEs), con m\u00e1s de 318 mil ocurrencias en estas categor\u00edas de riesgo. Las 34 CWEs relacionadas con la P\u00e9rdida de Control de Acceso tuvieron m\u00e1s apariciones en las aplicaciones que cualquier otra categor\u00eda.</li> <li>A02:2021-Fallas Criptogr\u00e1ficas sube una posici\u00f3n ubic\u00e1ndose en la segunda, antes conocida como A3:2017-Exposici\u00f3n de Datos Sensibles, que era m\u00e1s una caracter\u00edstica que una causa ra\u00edz. El nuevo nombre se centra en las fallas relacionadas con la criptograf\u00eda, como se ha hecho impl\u00edcitamente antes. Esta categor\u00eda frecuentemente conlleva a la exposici\u00f3n de datos confidenciales o al compromiso del sistema.</li> <li>A03:2021-Inyecci\u00f3n descienden hasta la tercera posici\u00f3n. El 94% de las aplicaciones fueron analizadas en b\u00fasqueda de alg\u00fan tipo de inyecci\u00f3n, mostrando una tasa de incidencia m\u00e1xima del 19% y de 3.37% de promedio. Las 33 CWEs relacionadas con esta categor\u00eda tienen la segunda mayor cantidad de ocurrencias en aplicaciones con 274.000. Las Secuencia de Comandos en Sitios Cruzados (Cross-Site Scripting o XSS), son parte de esta categor\u00eda en esta edici\u00f3n.</li> <li>A04:2021-Dise\u00f1o Inseguro es nueva categor\u00eda en la edici\u00f3n 2021, con un foco en los riesgos relacionados a las fallas de dise\u00f1o. Si realmente deseamos avanzar como industria, necesitamos m\u00e1s modelado de amenazas, utilizar mas patrones y principios de dise\u00f1o seguro y arquitecturas de referencia. Un dise\u00f1o inseguro no puede ser corregido con una implementaci\u00f3n perfecta debido a que, por definici\u00f3n, los controles de seguridad necesarios nunca se crearon para defenderse de ataques espec\u00edficos.</li> <li>A05:2021-Configuraci\u00f3n de Seguridad Incorrecta asciende desde la sexta posici\u00f3n en la edici\u00f3n anterior. El 90% de las aplicaciones fueron probadas para detectar alg\u00fan tipo de configuraci\u00f3n incorrecta, con una tasa de incidencia promedio del 4,5% y m\u00e1s de 208 mil casos de CWEs relacionadas con esta categor\u00eda de riesgo. Con la adopci\u00f3n de software altamente configurable, no es sorprendente ver que esta categor\u00eda asciende. Las A4:2017-Entidades Externas XML(XXE) en esta edici\u00f3n, forman parte de esta categor\u00eda de riesgo.</li> <li>A06:2021-Componentes Vulnerables y Desactualizados antes denominado como Uso de Componentes con Vulnerabilidades Conocidas, ocupa el segundo lugar en el Top 10 de la encuesta a la comunidad, pero tambi\u00e9n ten\u00eda datos suficientes para estar en el Top 10 a trav\u00e9s del an\u00e1lisis de datos. Esta categor\u00eda asciende desde la novena posici\u00f3n en la edici\u00f3n 2017 y es un problema conocido que cuesta probar y evaluar el riesgo. Es la \u00fanica categor\u00eda que no tiene ninguna CVE (Common Vulnerability and Exposures) relacionada con las CWEs incluidas, por lo que una vulnerabilidad predeterminada y con ponderaciones de impacto de 5.0 son consideradas en sus puntajes.</li> <li>A07:2021-Fallas de Identificaci\u00f3n y Autenticaci\u00f3n previamente denominada como P\u00e9rdida de Autenticaci\u00f3n, descendi\u00f3 desde la segunda posici\u00f3n, y ahora incluye CWEs que est\u00e1n m\u00e1s relacionadas con fallas de identificaci\u00f3n. Esta categor\u00eda sigue siendo una parte integral del Top 10, pero el incremento en la disponibilidad de frameworks estandarizados parece estar ayudando.</li> <li>A08:2021-Fallas en la Integridad del Software y de los Datos es una nueva categor\u00eda para la edici\u00f3n 2021, enfoc\u00e1ndose en realizar hip\u00f3tesis relacionadas con actualizaciones de software, datos cr\u00edticos y pipelines de CI/CD sin verificar su integridad. Uno de los mayores impactos ponderados de los datos del CVE/CVSS (Common Vulnerability and Exposures/Common Vulnerability Scoring System) asignados a los 10 CWE de esta categor\u00eda. El A8:2017-Deserializaci\u00f3n Insegura, pasa a formar parte de esta categor\u00eda mas \u00e1mplia.</li> <li>A09:2021-Fallas en el Registro y Monitoreo de la Seguridad previamente denominada como A10:2017 Registro y Monitoreo Insuficientes es a\u00f1adido a partir de la encuesta a la comunidad del Top 10 (tercer lugar), ascendiendo desde la d\u00e9cima posici\u00f3n de la edici\u00f3n anterior. Esta categor\u00eda se ampl\u00eda para incluir m\u00e1s tipos de fallas que son dif\u00edciles de probar y no est\u00e1n bien representadas en los datos de CVE/CVSS. Igualmente, las fallas incluidas en esta categor\u00eda pueden afectar directamente la visibilidad, las alertas de incidentes y los an\u00e1lisis forenses.</li> <li>A10:2021-Falsificaci\u00f3n de Solicitudes del Lado del Servidor (SSRF) es a\u00f1adido a partir de la encuesta a la comunidad del Top 10 (primer lugar). Los datos muestran una tasa de incidencia relativamente baja con una cobertura de pruebas por encima del promedio, junto con calificaciones por encima del promedio para la capacidad de explotaci\u00f3n e impacto. Esta categor\u00eda representa el escenario en el que los miembros de la comunidad de seguridad nos dicen que esto es importante, a pesar de no ser visible en los datos en este momento.</li> </ul>"},{"location":"es/A00_2021_Introduction/#metodologia","title":"Metodolog\u00eda","text":"<p>Esta entrega del Top 10 est\u00e1 m\u00e1s orientada a los datos que nunca, pero no a ciegas. Hemos seleccionado ocho de las diez categor\u00edas a partir de los datos aportados y dos categor\u00edas a partir de la encuesta de la comunidad del Top 10 a un alto nivel. Hacemos esto por una raz\u00f3n fundamental, mirar los datos aportados es mirar al pasado. Los investigadores de seguridad en aplicaciones se toman su tiempo para encontrar nuevas vulnerabilidades y nuevas formas de probarlas. Se necesita tiempo para integrar estas pruebas en las herramientas y los procesos. Para el momento en que podamos probar de forma fiable una vulnerabilidad a escala, es probable que hayan pasado a\u00f1os. Para compensar este punto de vista, utilizamos una encuesta de la comunidad en la que preguntamos a los expertos en seguridad y desarrollo de aplicaciones que se encuentran en primera l\u00ednea cu\u00e1les son, en su opini\u00f3n, las vulnerabilidades esenciales que los datos a\u00fan no muestran.</p> <p>Hay algunos cambios cr\u00edticos que hemos adoptado para seguir madurando el Top 10.</p>"},{"location":"es/A00_2021_Introduction/#como-se-estructuran-las-categorias","title":"C\u00f3mo se estructuran las categor\u00edas","text":"<p>Algunas categor\u00edas han cambiado con respecto a la anterior entrega del OWASP Top 10. A continuaci\u00f3n se presenta un resumen de alto nivel de los cambios de categor\u00eda.</p> <p>Los trabajos anteriores de recopilaci\u00f3n de datos se centraban en un subconjunto prescrito de aproximadamente 30 CWEs, con un campo que solicitaba hallazgos adicionales. Nos dimos cuenta de que las organizaciones se centraban principalmente en esas 30 CWEs y rara vez a\u00f1ad\u00edan otras CWEs que ve\u00edan. En esta iteraci\u00f3n, lo abrimos y solo pedimos datos, sin ninguna restricci\u00f3n sobre las CWEs. Solicitamos el n\u00famero de aplicaciones analizadas para un a\u00f1o determinado (a partir de 2017) y el n\u00famero de aplicaciones con al menos una instancia de una CWE encontrada en las pruebas. Este formato nos permite rastrear la prevalencia de cada CWE dentro de la poblaci\u00f3n de aplicaciones. Ignoramos la frecuencia para nuestros prop\u00f3sitos; aunque puede ser necesaria para otras situaciones, solo oculta la prevalencia real en la poblaci\u00f3n de aplicaciones. El hecho de que una aplicaci\u00f3n tenga cuatro instancias de una CWE o 4.000 instancias, no forma parte del c\u00e1lculo para el Top 10. Hemos pasado de aproximadamente 30 a casi 400 CWEs para analizar en el conjunto de datos. Tenemos previsto realizar an\u00e1lisis de datos adicionales como complemento en el futuro. Este aumento significativo en el n\u00famero de CWEs hace necesario cambiar la estructura de las categor\u00edas.</p> <p>Pasamos varios meses agrupando y clasificando las CWEs y podr\u00edamos haber seguido durante m\u00e1s tiempo. En alg\u00fan momento tuvimos que detenernos. Hay tipos de CWE de causa ra\u00edz y de s\u00edntoma, donde los de causa ra\u00edz ser\u00edan \"Falla Criptogr\u00e1fica\" y \"Configuraci\u00f3n de Seguridad Incorrecta\" en contraste con los de s\u00edntoma como \"Exposici\u00f3n de Datos Sensibles\" y \"Denegaci\u00f3n de Servicio\". Hemos decidido centrarnos en la causa ra\u00edz siempre que sea posible, ya que es m\u00e1s l\u00f3gico para proporcionar orientaci\u00f3n sobre la identificaci\u00f3n y la remediaci\u00f3n. Centrarse en la causa ra\u00edz en lugar de en el s\u00edntoma no es un concepto nuevo; el Top 10 ha sido una mezcla de s\u00edntoma y causa ra\u00edz. Las CWEs tambi\u00e9n son una mezcla de s\u00edntoma y causa ra\u00edz; simplemente estamos siendo m\u00e1s expl\u00edcitos al respecto y lo se\u00f1alamos. Hay un promedio de 19,6 CWEs por categor\u00eda en esta entrega, con el l\u00edmite inferior de 1 CWE para A10:2021-Falsificaci\u00f3n de Solicitudes del Lado del Servidor (SSRF) a 40 CWEs en A04:2021-Dise\u00f1o Inseguro. Esta actualizaci\u00f3n en la estructura de las categor\u00edas ofrece beneficios adicionales de capacitaci\u00f3n, ya que las empresas pueden centrarse en las CWE que tienen sentido para cierto lenguaje/framework.</p>"},{"location":"es/A00_2021_Introduction/#como-se-utilizan-los-datos-para-seleccionar-las-categorias","title":"C\u00f3mo se utilizan los datos para seleccionar las categor\u00edas","text":"<p>En 2017, seleccionamos las categor\u00edas seg\u00fan la tasa de incidencia para determinar la probabilidad, y luego las clasificamos seg\u00fan la discusi\u00f3n del equipo basada en d\u00e9cadas de experiencia respecto a la explotabilidad, la detectabilidad (tambi\u00e9n probabilidad) y el impacto t\u00e9cnico. Para 2021, queremos utilizar los datos de explotabilidad e impacto (t\u00e9cnico), si es posible.</p> <p>Descargamos OWASP Dependency Check y extrajimos las puntuaciones de CVSS de Explotaci\u00f3n e Impacto agrupadas por CWEs relacionadas. Nos cost\u00f3 bastante investigaci\u00f3n y esfuerzo, ya que todas las CVEs tienen puntuaciones CVSSv2, pero hay fallos en CVSSv2 que CVSSv3 deber\u00eda solucionar. A partir de cierto momento, a todas las CVEs se les asign\u00f3 tambi\u00e9n una puntuaci\u00f3n CVSSv3. Adem\u00e1s, los rangos y f\u00f3rmulas se han actualizado entre CVSSv2 y CVSSv3.</p> <p>En CVSSv2, tanto explotabilidad como impacto t\u00e9cnico pod\u00edan llegar a 10,0, pero la f\u00f3rmula los rebajaba al 60% para explotabilidad y al 40% para impacto t\u00e9cnico. En CVSSv3, el m\u00e1ximo te\u00f3rico se limit\u00f3 a 6,0 para explotabilidad y 4,0 para impacto t\u00e9cnico. Con la ponderaci\u00f3n considerada, la puntuaci\u00f3n de impacto t\u00e9cnico se elev\u00f3, casi un punto y medio en promedio en CVSSv3, y la explotabilidad se redujo casi medio punto.</p> <p>Hay 125.000 registros de una CVE mapeadas a una CWE en los datos de la NVD (National Vulnerability Database) extra\u00eddos del OWASP Dependency Check y hay 241 CWEs \u00fanicas mapeadas a una CVE. 62.000 mapeos de CWE tienen una puntuaci\u00f3n CVSSv3, lo cual representa aproximadamente la mitad de la poblaci\u00f3n en el conjunto de datos.</p> <p>Para el Top 10 2021, calculamos las puntuaciones promedio de explotabilidad e impacto t\u00e9cnico de la siguiente manera. Agrupamos todas las CVEs con puntuaciones CVSS por CWE y ponderamos las puntuaciones de explotabilidad e impacto t\u00e9cnico por el porcentaje de la poblaci\u00f3n que ten\u00eda CVSSv3 + la poblaci\u00f3n restante de puntuaciones CVSSv2 para obtener una media global. Mapeamos estos promedios a las CWEs en el conjunto de datos para utilizarlos como puntuaci\u00f3n de explotabilidad e impacto (T\u00e9cnico) para la otra mitad de la ecuaci\u00f3n del riesgo.</p>"},{"location":"es/A00_2021_Introduction/#por-que-no-unicamente-los-datos-estadisticos-puros","title":"\u00bfPor qu\u00e9 no \u00fanicamente los datos estad\u00edsticos puros?","text":"<p>Los resultados de los datos se limitan principalmente a lo que podemos comprobar de forma automatizada. Si hablas con un profesional experimentado de la seguridad de las aplicaciones, te hablar\u00e1 de las cosas que encuentra y de las tendencias que ve y que a\u00fan no est\u00e1n en los datos. Se necesita tiempo para desarrollar metodolog\u00edas de pruebas para ciertos tipos de vulnerabilidades y m\u00e1s tiempo a\u00fan para que esas pruebas sean automatizadas y ejecutadas contra una gran poblaci\u00f3n de aplicaciones. Todo lo que hallamos es mirando al pasado y puede que falten algunas tendencias del \u00faltimo a\u00f1o, que a\u00fan no est\u00e1n presentes en los datos.</p> <p>Es por eso que solo recogemos ocho de las diez categor\u00edas de los datos, porque est\u00e1n incompletos. Las otras dos categor\u00edas proceden de la encuesta a la comunidad del Top 10. Esto permite a los profesionales de primera l\u00ednea votar por los que ellos consideran que son los mayores riesgos y que podr\u00edan no estar en los datos (y puede que nunca se expresen en ellos).</p>"},{"location":"es/A00_2021_Introduction/#por-que-la-tasa-de-incidencia-en-lugar-de-la-frecuencia","title":"\u00bfPor qu\u00e9 la tasa de incidencia en lugar de la frecuencia?","text":"<p>Hay tres fuentes principales de datos. Las identificamos como Herramienta asistida por Humanos (HaT), Humano asistido por Herramientas (TaH) y Herramientas en bruto.</p> <p>Herramientas y HaT son generadores de hallazgos de alta frecuencia. Las herramientas buscar\u00e1n vulnerabilidades espec\u00edficas e intentar\u00e1n incansablemente encontrar cada instancia de esa vulnerabilidad y generar\u00e1n un elevado n\u00famero de hallazgos para algunos tipos de vulnerabilidades. Por ejemplo el Cross-Site Scripting que suelen ser de dos tipos: o bien es un error menor y aislado, o bien es un problema sist\u00e9mico. Cuando se trata de un problema sist\u00e9mico, el n\u00famero de hallazgos puede ser de miles para una sola aplicaci\u00f3n. Esta alta frecuencia ahoga a la mayor\u00eda de las dem\u00e1s vulnerabilidades encontradas en los informes o datos.</p> <p>Por otro lado, TaH encontrar\u00e1 una gama m\u00e1s amplia de tipos de vulnerabilidades, pero con una frecuencia mucho menor debido a las limitaciones de tiempo. Cuando se prueba manualmente una aplicaci\u00f3n y se ve algo como un Cross-Site Scripting, normalmente se encontrar\u00e1n tres o cuatro instancias y se detendr\u00e1, siendo suficiente para determinar un hallazgo sist\u00e9mico y escribir una recomendaci\u00f3n para corregirlo en la aplicaci\u00f3n en general. No hay necesidad (ni tiempo) de encontrar cada instancia en particular.</p> <p>Supongamos que tomamos estos dos conjuntos de datos distintos y tratamos de fusionarlos por su frecuencia. En ese caso, los datos de Herramientas y HaT enmascarar\u00e1n los datos m\u00e1s precisos (aunque amplios) de TaH y es en buena parte la raz\u00f3n por la que algo como el Cross-Site Scripting ha sido clasificado tan alto en muchas listas, cuando el impacto es generalmente bajo o moderado. Esto se debe al gran volumen de hallazgos. El Cross-Site Scripting es relativamente f\u00e1cil de probar, por lo que hay muchas m\u00e1s pruebas para ello.</p> <p>En 2017, introdujimos el uso de la tasa de incidencia en su lugar para dar una nueva mirada y combinar de manera transparente los datos de Herramientas y HaT con los de TaH. La tasa de incidencia se refiere al porcentaje de la poblaci\u00f3n de aplicaciones que tiene al menos una instancia de un tipo de vulnerabilidad. No nos importa si fue algo puntual o sist\u00e9mico. Eso es irrelevante para nuestros objetivos, solo necesitamos saber cu\u00e1ntas aplicaciones ten\u00edan al menos una instancia, lo cual ayuda a proporcionar una visi\u00f3n m\u00e1s clara de los hallazgos de las pruebas a trav\u00e9s de m\u00faltiples tipos de pruebas sin enmascarar los datos en resultados de alta frecuencia. Esto corresponde a una visi\u00f3n relacionada con el riesgo, ya que un atacante solo necesita una instancia para atacar una aplicaci\u00f3n con \u00e9xito a trav\u00e9s de dicha categor\u00eda.</p>"},{"location":"es/A00_2021_Introduction/#cual-es-el-proceso-de-recopilacion-y-analisis-de-datos","title":"\u00bfCu\u00e1l es el proceso de recopilaci\u00f3n y an\u00e1lisis de datos?","text":"<p>En el Open Security Summit de 2017 formalizamos el proceso de recopilaci\u00f3n de datos del OWASP Top 10. Los l\u00edderes del OWASP Top 10 y la comunidad pasaron dos d\u00edas trabajando en la formalizaci\u00f3n de un proceso de recopilaci\u00f3n de datos transparente. La edici\u00f3n de 2021 es la segunda en la que utilizamos esta metodolog\u00eda.</p> <p>Publicamos la solicitud de datos a trav\u00e9s de las redes sociales que disponemos, tanto del proyecto como de OWASP. En la p\u00e1gina del proyecto, enumeramos los elementos y la estructura de los datos que buscamos y c\u00f3mo presentarlos. En el proyecto de GitHub, disponemos de archivos de ejemplo que sirven como plantillas. Tambi\u00e9n, en caso necesario, trabajamos con las organizaciones para ayudarles a determinar la estructura y el mapeo con las CWEs.</p> <p>Recibimos datos de organizaciones que son proveedores de servicios de seguridad, proveedores de bug bounty y organizaciones que aportan datos de pruebas internas. Una vez que recibimos los datos, los cargamos y realizamos un an\u00e1lisis fundamental de las categor\u00edas de riesgo de las CWEs. Hay un solapamiento entre algunas CWEs, y otros est\u00e1n muy relacionados (por ejemplo, las fallas criptogr\u00e1ficas). Toda decisi\u00f3n relacionada con los datos en bruto se ha documentado y publicado para ser abiertos y transparentes en cuanto a su la normalizaci\u00f3n.</p> <p>Analizamos las ocho categor\u00edas con las tasas de incidencia m\u00e1s altas para incluirlas en el Top 10. Tambi\u00e9n miramos los resultados de la encuesta a la comunidad del Top 10 para ver cu\u00e1les ya se encuentran presentes en los datos. Las dos m\u00e1s votadas que no est\u00e9n ya presentes fueron seleccionadas para los otros dos puestos del Top 10. Una vez seleccionados las diez, aplicamos factores generalizados de explotabilidad e impacto; para as\u00ed poder ordenar el Top 10 2021 en funci\u00f3n del riesgo.</p>"},{"location":"es/A00_2021_Introduction/#factores-de-datos","title":"Factores de datos","text":"<p>Existen factores de datos que se enumeran para cada una de las categor\u00edas, aqu\u00ed se explica su significado:</p> <ul> <li>CWEs mapeadas: El n\u00famero de CWEs asignadas a una categor\u00eda por el equipo del Top 10.</li> <li>Tasa de incidencia: La tasa de incidencia es el porcentaje de aplicaciones vulnerables a esa CWE de la poblaci\u00f3n analizada por esa organizaci\u00f3n para ese a\u00f1o.</li> <li>Cobertura (de pruebas): El porcentaje de aplicaciones que han sido testadas por todas las organizaciones para una determinada CWE.</li> <li>Explotabilidad ponderada: La sub-puntuaci\u00f3n de Explotabilidad de las puntuaciones CVSSv2 y CVSSv3 asignadas a las CVEs mapeadas a las CWEs, normalizados y colocados en una escala de 10 puntos.</li> <li>Impacto ponderado: La sub-puntuaci\u00f3n de Impacto de las puntuaciones CVSSv2 y CVSSv3 asignadas a las CVEs mapeadas a las CWEs, normalizados y colocados en una escala de 10 puntos.</li> <li>Total de ocurrencias: N\u00famero total de aplicaciones en las que se han encontrado las CWEs asignados a una categor\u00eda.</li> <li>Total de CVEs: N\u00famero total de CVEs en la base de datos del NVD que fueron asignadas a las CWEs asignados a una categor\u00eda.</li> </ul>"},{"location":"es/A00_2021_Introduction/#agradecimiento-a-nuestros-proveedores-de-datos","title":"Agradecimiento a nuestros proveedores de datos","text":"<p>Las siguientes organizaciones (junto con algunos donantes an\u00f3nimos) han tenido la amabilidad de donar datos de m\u00e1s de 500.000 aplicaciones para hacer de este el mayor y m\u00e1s completo conjunto de datos sobre seguridad de las aplicaciones. Sin ustedes, esto no ser\u00eda posible.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"es/A00_2021_Introduction/#gracias-a-nuestros-patrocinadores","title":"Gracias a nuestros patrocinadores","text":"<p>El equipo del OWASP Top 10 2021 agradece el apoyo financiero de Secure Code Warrior y Just Eat.</p> <p></p> <p></p>"},{"location":"es/A01_2021-Broken_Access_Control/","title":"A01:2021 \u2013 P\u00e9rdida de Control de Acceso","text":""},{"location":"es/A01_2021-Broken_Access_Control/#factores","title":"Factores","text":"CWEs mapeadas Tasa de incidencia m\u00e1x Tasa de incidencia prom Explotabilidad ponderada prom Impacto ponderado prom Cobertura m\u00e1x Cobertura prom Incidencias totales Total CVEs 34 55.97% 3.81% 6.92 5.93 94.55% 47.72% 318,487 19,013"},{"location":"es/A01_2021-Broken_Access_Control/#resumen","title":"Resumen","text":"<p>Subiendo desde la quinta posici\u00f3n, el 94% de las aplicaciones fueron probadas para detectar alg\u00fan tipo de p\u00e9rdida de control de acceso con una tasa de incidencia promedio del 3,81%. Tuvo la mayor cantidad de ocurrencias en el conjunto de datos analizado con m\u00e1s de 318.000. Las CWE (Common Weakness Enumerations) m\u00e1s importantes incluidas son CWE-200: Exposici\u00f3n de informaci\u00f3n sensible a un actor no autorizado, CWE-201: Exposici\u00f3n de informaci\u00f3n confidencial a trav\u00e9s de datos enviados, y CWE-352: Falsificaci\u00f3n de Petciones en Sitos Cruzados (Cross Site Request Forgery, CSRF por su siglas en ingl\u00e9s).</p>"},{"location":"es/A01_2021-Broken_Access_Control/#descripcion","title":"Descripci\u00f3n","text":"<p>El control de acceso implementa el cumplimiento de pol\u00edtica de modo que los usuarios no pueden actuar fuera de los permisos que le fueron asignados. Las fallas generalmente conducen a la divulgaci\u00f3n de informaci\u00f3n no autorizada, la modificaci\u00f3n o la destrucci\u00f3n de todos los datos o la ejecuci\u00f3n de una funci\u00f3n de negocio fuera de los l\u00edmites del usuario. Las vulnerabilidades comunes de control de acceso incluyen:</p> <ul> <li> <p>Violaci\u00f3n del principio de m\u00ednimo privilegio o denegaci\u00f3n por defecto, seg\u00fan el cual el acceso s\u00f3lo debe ser permitido para capacidades, roles o usuarios particulares, y no disponible para cualquier persona.</p> </li> <li> <p>Eludir las comprobaciones de control de acceso modificando la URL (alteraci\u00f3n de par\u00e1metros o navegaci\u00f3n forzada), el estado interno de la aplicaci\u00f3n o la p\u00e1gina HTML, o mediante el uso de una herramienta que modifique los pedidos a APIs.</p> </li> <li> <p>Permitir ver o editar la cuenta de otra persona, con tan solo conocer su identificador \u00fanico (referencia directa insegura a objetos)</p> </li> <li> <p>Acceder a APIs con controles de acceso inexistentes para los m\u00e9todos POST, PUT y DELETE.</p> </li> <li> <p>Elevaci\u00f3n de privilegios. Actuar como usuario sin haber iniciado sesi\u00f3n o actuar como administrador cuando se inici\u00f3 sesi\u00f3n como usuario regular.</p> </li> <li> <p>Manipulaci\u00f3n de metadatos, como reutilizar o modificar un token de control de acceso JSON Web Token (JWT), una cookie o un campo oculto, manipul\u00e1ndolos para elevar privilegios o abusar de la invalidaci\u00f3n de tokens JWT.</p> </li> <li> <p>Configuraciones incorrectas de CORS (uso compartido de recursos de origen cruzado) que permiten el acceso a APIs desde or\u00edgenes no autorizados o confiables.</p> </li> <li> <p>Forzar la navegaci\u00f3n a p\u00e1ginas autenticadas siendo usuario no autenticado o a p\u00e1ginas privilegiadas siendo usuario regular.</p> </li> </ul>"},{"location":"es/A01_2021-Broken_Access_Control/#como-se-previene","title":"C\u00f3mo se previene","text":"<p>El control de acceso solo es efectivo si es implementado en el servidor (server-side) o en la API (caso serverless), donde el atacante no puede modificarlo ni manipular metadatos.</p> <ul> <li> <p>A excepci\u00f3n de los recursos p\u00fablicos, denegar por defecto.</p> </li> <li> <p>Implemente mecanismos de control de acceso una \u00fanica vez y reutil\u00edcelos en toda la aplicaci\u00f3n, incluyendo la minimizaci\u00f3n del uso de CORS.</p> </li> <li> <p>El control de acceso debe implementar su cumplimiento a nivel de dato y no permitir que el usuario pueda crear, leer, actulizar o borrar cualquier dato.</p> </li> <li> <p>Los modelos de dominio deben hacer cumplir los requisitos \u00fanicos de l\u00edmite de negocio de aplicaciones.</p> </li> <li> <p>Deshabilite el listado de directorios del servidor web y aseg\u00farese de que los archivos de metadatos (por ejemplo una carpeta .git) y archivos de respaldo no puedan ser accedidos a partir de la ra\u00edz del sitio web.</p> </li> <li> <p>Registre las fallas de control de acceso (loggin), alertando a los administradores cuando sea apropiado (por ejemplo, fallas repetidas).</p> </li> <li> <p>Establezca l\u00edmites a la tasa de accesos permitidos a APIs y controladores de forma de poder minimizar el da\u00f1o provocado por herramientas automatizadas de ataque.</p> </li> <li> <p>Los identificadores de sesiones deben invalidarse en el servidor luego de cerrar la sesi\u00f3n.     Los tokens JWT deber\u00edan ser preferiblemente de corta duraci\u00f3n para minimizar la ventana de oportunidad de ataque. Para tokens JWT de mayor duraci\u00f3n, es sumamente recomendable seguir los est\u00e1ndares de OAuth de revocaci\u00f3n de acceso.</p> </li> </ul> <p>Tanto desarrolladores como personal de control de calidad deben incluir pruebas funcionales de control de acceso tanto a nivel unitario como de integraci\u00f3n.</p>"},{"location":"es/A01_2021-Broken_Access_Control/#ejemplos-de-escenarios-de-ataque","title":"Ejemplos de escenarios de ataque","text":"<p>Escenario #1: La aplicaci\u00f3n utiliza datos no verificados en una llamada SQL que accede a informaci\u00f3n de una cuenta:</p> <pre><code> pstmt.setString(1, request.getParameter(\"acct\"));\n ResultSet results = pstmt.executeQuery( );\n</code></pre> <p>Un atacante simplemente modifica el par\u00e1metro 'acct' en el navegador para enviar el n\u00famero de cuenta que desee. Si no es verificado correctamente, el atacante puede acceder a la cuenta de cualquier usuario.</p> <pre><code> https://example.com/app/accountInfo?acct=notmyacct\n</code></pre> <p>Escenario #2: Un atacante simplemente navega a una URL espec\u00edfica. Se deber\u00edan requerir derechos de administrador para acceder a la p\u00e1gina de administraci\u00f3n.</p> <pre><code> https://example.com/app/getappInfo\n https://example.com/app/admin_getappInfo\n</code></pre> <p>Si un usuario no autenticado puede acceder a cualquiera de las p\u00e1ginas, es una falla. Si una persona que no es administrador puede acceder a la p\u00e1gina de administraci\u00f3n, esto es tambi\u00e9n una falla.</p>"},{"location":"es/A01_2021-Broken_Access_Control/#referencias","title":"Referencias","text":"<ul> <li> <p>OWASP Proactive Controls: Enforce Access     Controls</p> </li> <li> <p>OWASP Application Security Verification Standard: V4 Access     Control</p> </li> <li> <p>OWASP Testing Guide: Authorization     Testing</p> </li> <li> <p>OWASP Cheat Sheet: Access Control</p> </li> <li> <p>OWASP Cheat Sheet: Authorization</p> </li> <li> <p>PortSwigger: Exploiting CORS     misconfiguration</p> </li> <li> <p>OAuth: Revoking Access</p> </li> </ul>"},{"location":"es/A01_2021-Broken_Access_Control/#lista-de-cwes-mapeadas","title":"Lista de CWEs mapeadas","text":"<p>CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</p> <p>CWE-23 Relative Path Traversal</p> <p>CWE-35 Path Traversal: '.../...//'</p> <p>CWE-59 Improper Link Resolution Before File Access ('Link Following')</p> <p>CWE-200 Exposure of Sensitive Information to an Unauthorized Actor</p> <p>CWE-201 Exposure of Sensitive Information Through Sent Data</p> <p>CWE-219 Storage of File with Sensitive Data Under Web Root</p> <p>CWE-264 Permissions, Privileges, and Access Controls (should no longer be used)</p> <p>CWE-275 Permission Issues</p> <p>CWE-276 Incorrect Default Permissions</p> <p>CWE-284 Improper Access Control</p> <p>CWE-285 Improper Authorization</p> <p>CWE-352 Cross-Site Request Forgery (CSRF)</p> <p>CWE-359 Exposure of Private Personal Information to an Unauthorized Actor</p> <p>CWE-377 Insecure Temporary File</p> <p>CWE-402 Transmission of Private Resources into a New Sphere ('Resource Leak')</p> <p>CWE-425 Direct Request ('Forced Browsing')</p> <p>CWE-441 Unintended Proxy or Intermediary ('Confused Deputy')</p> <p>CWE-497 Exposure of Sensitive System Information to an Unauthorized Control Sphere</p> <p>CWE-538 Insertion of Sensitive Information into Externally-Accessible File or Directory</p> <p>CWE-540 Inclusion of Sensitive Information in Source Code</p> <p>CWE-548 Exposure of Information Through Directory Listing</p> <p>CWE-552 Files or Directories Accessible to External Parties</p> <p>CWE-566 Authorization Bypass Through User-Controlled SQL Primary Key</p> <p>CWE-601 URL Redirection to Untrusted Site ('Open Redirect')</p> <p>CWE-639 Authorization Bypass Through User-Controlled Key</p> <p>CWE-651 Exposure of WSDL File Containing Sensitive Information</p> <p>CWE-668 Exposure of Resource to Wrong Sphere</p> <p>CWE-706 Use of Incorrectly-Resolved Name or Reference</p> <p>CWE-862 Missing Authorization</p> <p>CWE-863 Incorrect Authorization</p> <p>CWE-913 Improper Control of Dynamically-Managed Code Resources</p> <p>CWE-922 Insecure Storage of Sensitive Information</p> <p>CWE-1275 Sensitive Cookie with Improper SameSite Attribute</p>"},{"location":"es/A02_2021-Cryptographic_Failures/","title":"A02:2021 \u2013 Fallas Criptogr\u00e1ficas","text":""},{"location":"es/A02_2021-Cryptographic_Failures/#factores","title":"Factores","text":"CWEs mapeadas Tasa de incidencia m\u00e1x Tasa de incidencia prom Explotabilidad ponderada prom Impacto ponderado prom Cobertura m\u00e1x Cobertura prom Incidencias totales Total CVEs 29 46.44% 4.49% 7.29 6.81 79.33% 34.85% 233,788 3,075"},{"location":"es/A02_2021-Cryptographic_Failures/#resumen","title":"Resumen","text":"<p>Subiendo una posici\u00f3n al n\u00famero 2, anteriormente conocido como Exposici\u00f3n de datos sensibles, que es m\u00e1s un amplio s\u00edntoma que una causa ra\u00edz, la atenci\u00f3n se centra en las fallas relacionadas con la criptograf\u00eda (o la falta de \u00e9sta). Esto a menudo conduce a la exposici\u00f3n de datos sensibles. Las CWE incluidas son CWE-259: Uso de contrase\u00f1a en c\u00f3digo fuente, CWE-327: Algoritmo criptogr\u00e1fico vulnerado o inseguro y CWE-331: Entrop\u00eda insuficiente.</p>"},{"location":"es/A02_2021-Cryptographic_Failures/#descripcion","title":"Descripci\u00f3n","text":"<p>Lo primero es determinar las necesidades de protecci\u00f3n de los datos en tr\u00e1nsito y en reposo. Por ejemplo, contrase\u00f1as, n\u00fameros de tarjetas de cr\u00e9dito, registros m\u00e9dicos, informaci\u00f3n personal y secretos comerciales requieren protecci\u00f3n adicional, principalmente si est\u00e1n sujetos a leyes de privacidad (por ejemplo, el Reglamento General de Protecci\u00f3n de Datos -GDPR- de la UE), o regulaciones, (por ejemplo, protecci\u00f3n de datos financieros como el Est\u00e1ndar de Seguridad de Datos de PCI -PCI DSS-). Para todos esos datos:</p> <ul> <li> <p>\u00bfSe transmiten datos en texto claro? Esto se refiere a protocolos como HTTP, SMTP, FTP que tambi\u00e9n utilizan actualizaciones de TLS como STARTTLS. El tr\u00e1fico externo de Internet es peligroso. Verifique todo el tr\u00e1fico interno, por ejemplo, entre balanceadores de carga, servidores web o sistemas de back-end.</p> </li> <li> <p>\u00bfSe utilizan algoritmos o protocolos criptogr\u00e1ficos antiguos o d\u00e9biles de forma predeterminada o en c\u00f3digo antiguo?</p> </li> <li> <p>\u00bfSe utilizan claves criptogr\u00e1ficas predeterminadas, se generan o reutilizan claves criptogr\u00e1ficas d\u00e9biles, o es inexistente la gesti\u00f3n o rotaci\u00f3n de claves adecuadas?     \u00bfSe incluyen las claves criptogr\u00e1ficas en los repositorios de c\u00f3digo fuente?</p> </li> <li> <p>\u00bfNo es forzado el cifrado, por ejemplo, faltan las directivas de seguridad de los encabezados HTTP (navegador) o los encabezados?</p> </li> <li> <p>\u00bfEl certificado de servidor recibido y la cadena de confianza se encuentran debidamente validados?</p> </li> <li> <p>\u00bfLos vectores de inicializaci\u00f3n se ignoran, se reutilizan o no se generan de forma suficientemente seguros para el modo de operaci\u00f3n criptogr\u00e1fico?     \u00bfSe utiliza un modo de funcionamiento inseguro como el ECB? \u00bfSe utiliza un cifrado cuando el cifrado autenticado es m\u00e1s apropiada?</p> </li> <li> <p>\u00bfLas contrase\u00f1as se utilizan como claves criptogr\u00e1ficas en ausencia de una funci\u00f3n de derivaci\u00f3n de claves a partir de contrase\u00f1as?</p> </li> <li> <p>\u00bfSe utiliza con fines criptogr\u00e1ficos generadores de aleatoriedad que no fueron dise\u00f1aron para dicho fin? Incluso si se elige la funci\u00f3n correcta, debe ser inicializada (seed) por el desarrollador y, de no ser as\u00ed, \u00bfel desarrollador ha sobrescrito la funcionalidad de semilla fuerte incorporada con una semilla que carece de suficiente entrop\u00eda/imprevisibilidad?</p> </li> <li> <p>\u00bfSe utilizan funciones hash en obsoletas, como MD5 o SHA1, o se utilizan funciones hash no criptogr\u00e1ficas cuando se necesitan funciones hash criptogr\u00e1ficas?</p> </li> <li> <p>\u00bfSe utilizan m\u00e9todos criptogr\u00e1ficos de relleno(padding) obsoletos, como PKCS n\u00famero 1 v1.5?</p> </li> <li> <p>\u00bfSe pueden explotar los mensajes de errores criptogr\u00e1ficos como un canal lateral, por ejemplo, en forma de ataques de  criptoan\u00e1lisis por modificaci\u00f3n relleno (Oracle Padding)?</p> </li> </ul> <p>Consulte ASVS Crypto (V7), Data Protection (V9) y SSL/TLS (V10)</p>"},{"location":"es/A02_2021-Cryptographic_Failures/#como-se-previene","title":"C\u00f3mo se previene","text":"<p>Haga lo siguiente como m\u00ednimo, y consulte las referencias:</p> <ul> <li> <p>Clasifique los datos procesados, almacenados o transmitidos por una aplicaci\u00f3n.     Identifique qu\u00e9 datos son confidenciales de acuerdo con las leyes de privacidad, los requisitos reglamentarios o las necesidades comerciales.</p> </li> <li> <p>No almacene datos sensibles innecesariamente. Desc\u00e1rtelos lo antes posible o utilice una utilizaci\u00f3n de tokens compatible con PCI DSS o incluso el truncamiento.     Los datos que no se conservan no se pueden robar.</p> </li> <li> <p>Aseg\u00farese de cifrar todos los datos sensibles en reposo (almacenamiento).</p> </li> <li> <p>Garantice la implementaci\u00f3n de algoritmos, protocolos y claves que utilicen est\u00e1ndares s\u00f3lidos y actualizados; utilice una gesti\u00f3n de claves adecuada.</p> </li> <li> <p>Cifre todos los datos en tr\u00e1nsito con protocolos seguros como TLS con cifradores de confidencialidad adelantada (forward secrecy, o FS), priorizaci\u00f3n de cifradores por parte del servidor y par\u00e1metros seguros. Aplique el cifrado mediante directivas como HTTP Strict Transport Security (HSTS).</p> </li> <li> <p>Deshabilite el almacenamiento en cach\u00e9 para respuestas que contengan datos sensibles.</p> </li> <li> <p>Aplique los controles de seguridad requeridos seg\u00fan la clasificaci\u00f3n de los datos.</p> </li> <li> <p>No utilice protocolos antiguos como FTP y SMTP para transportar datos sensibles.</p> </li> <li> <p>Almacene las contrase\u00f1as utilizando funciones robustas, flexibles, que utilicen sal en los hashes y use un factor de retraso (factor de trabajo), como Argon2, scrypt, bcrypt o PBKDF2.</p> </li> <li> <p>Elija vectores de inicializaci\u00f3n apropiados para el modo de operaci\u00f3n. Para muchos modos, esto significa usar un CSPRNG (generador de n\u00fameros pseudoaleatorios criptogr\u00e1ficamente seguro).  Para los modos que requieren un nonce, el vector de inicializaci\u00f3n (IV) no necesita un CSPRNG.  En todos los casos, el IV nunca debe usarse dos veces para una clave fija.</p> </li> <li> <p>Utilice siempre cifrado autenticado en lugar de solo cifrado.</p> </li> <li> <p>Las claves deben generarse criptogr\u00e1ficamente al azar y almacenarse en la memoria como arrays de bytes. Si se utiliza una contrase\u00f1a, debe convertirse en una clave mediante una funci\u00f3n adecuada de derivaci\u00f3n de claves basada en contrase\u00f1a.</p> </li> <li> <p>Aseg\u00farese de que se utilice la aleatoriedad criptogr\u00e1fica cuando sea apropiado y que no se utilice una semilla de una manera predecible o con baja entrop\u00eda.     La mayor\u00eda de las API modernas no requieren que el desarrollador genere el CSPRNG para obtener seguridad.</p> </li> <li> <p>Evite las funciones criptogr\u00e1ficas y los esquemas de relleno(padding) en desuso, como MD5, SHA1, PKCS n\u00famero 1 v1.5.</p> </li> <li> <p>Verifique de forma independiente la efectividad de la configuraci\u00f3n y los ajustes.</p> </li> </ul>"},{"location":"es/A02_2021-Cryptographic_Failures/#ejemplos-de-escenarios-de-ataque","title":"Ejemplos de escenarios de ataque","text":"<p>Escenario #1: Una aplicaci\u00f3n cifra los n\u00fameros de tarjetas de cr\u00e9dito en una base de datos mediante el cifrado autom\u00e1tico de la base de datos. Sin embargo, estos datos se descifran autom\u00e1ticamente cuando se recuperan, lo que permite que por una falla de inyecci\u00f3n SQL se recuperen n\u00fameros de tarjetas de cr\u00e9dito en texto sin cifrar.</p> <p>Escenario #2: Un sitio no utiliza ni aplica TLS para todas sus p\u00e1ginas o admite un cifrado d\u00e9bil. Un atacante monitorea el tr\u00e1fico de la red (por ejemplo, en una red inal\u00e1mbrica insegura), degrada las conexiones de HTTPS a HTTP, intercepta solicitudes y roba la cookie de sesi\u00f3n del usuario. El atacante luego reutiliza esta cookie y secuestra la sesi\u00f3n (autenticada) del usuario, accediendo o modificando los datos privados del usuario. En lugar de lo anterior, podr\u00edan alterar todos los datos transportados, por ejemplo, el destinatario de una transferencia de dinero.</p> <p>Escenario #3: La base de datos de contrase\u00f1as utiliza hashes simples o sin un valor inicial aleatorio \u00fanico(salt) para almacenar todas las contrase\u00f1as. Una falla en la carga de archivos permite a un atacante recuperar la base de datos de contrase\u00f1as. Todos los hashes sin salt se pueden calcular a partir de una rainbow table de hashes pre calculados. Los hash generados por funciones hash simples o r\u00e1pidas pueden ser descifrados a trav\u00e9s de c\u00e1lculos intensivos provistos por una o mas GPUs, incluso si utilizan un salt.</p>"},{"location":"es/A02_2021-Cryptographic_Failures/#referencias","title":"Referencias","text":"<ul> <li> <p>OWASP Proactive Controls: Protect Data     Everywhere</p> </li> <li> <p>OWASP Application Security Verification Standard (V7,     9, 10)</p> </li> <li> <p>OWASP Cheat Sheet: Transport Layer     Protection</p> </li> <li> <p>OWASP Cheat Sheet: User Privacy     Protection</p> </li> <li> <p>OWASP Cheat Sheet: Password and Cryptographic Storage</p> </li> <li> <p>OWASP Cheat Sheet:     HSTS</p> </li> <li> <p>OWASP Testing Guide: Testing for weak cryptography</p> </li> </ul>"},{"location":"es/A02_2021-Cryptographic_Failures/#lista-de-cwes-mapeadas","title":"Lista de CWEs mapeadas","text":"<p>CWE-261 Weak Encoding for Password</p> <p>CWE-296 Improper Following of a Certificate's Chain of Trust</p> <p>CWE-310 Cryptographic Issues</p> <p>CWE-319 Cleartext Transmission of Sensitive Information</p> <p>CWE-321 Use of Hard-coded Cryptographic Key</p> <p>CWE-322 Key Exchange without Entity Authentication</p> <p>CWE-323 Reusing a Nonce, Key Pair in Encryption</p> <p>CWE-324 Use of a Key Past its Expiration Date</p> <p>CWE-325 Missing Required Cryptographic Step</p> <p>CWE-326 Inadequate Encryption Strength</p> <p>CWE-327 Use of a Broken or Risky Cryptographic Algorithm</p> <p>CWE-328 Reversible One-Way Hash</p> <p>CWE-329 Not Using a Random IV with CBC Mode</p> <p>CWE-330 Use of Insufficiently Random Values</p> <p>CWE-331 Insufficient Entropy</p> <p>CWE-335 Incorrect Usage of Seeds in Pseudo-Random Number Generator(PRNG)</p> <p>CWE-336 Same Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-337 Predictable Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-338 Use of Cryptographically Weak Pseudo-Random Number Generator(PRNG)</p> <p>CWE-340 Generation of Predictable Numbers or Identifiers</p> <p>CWE-347 Improper Verification of Cryptographic Signature</p> <p>CWE-523 Unprotected Transport of Credentials</p> <p>CWE-720 OWASP Top Ten 2007 Category A9 - Insecure Communications</p> <p>CWE-757 Selection of Less-Secure Algorithm During Negotiation('Algorithm Downgrade')</p> <p>CWE-759 Use of a One-Way Hash without a Salt</p> <p>CWE-760 Use of a One-Way Hash with a Predictable Salt</p> <p>CWE-780 Use of RSA Algorithm without OAEP</p> <p>CWE-818 Insufficient Transport Layer Protection</p> <p>CWE-916 Use of Password Hash With Insufficient Computational Effort</p>"},{"location":"es/A03_2021-Injection/","title":"A03:2021 \u2013 Inyecci\u00f3n","text":""},{"location":"es/A03_2021-Injection/#factores","title":"Factores","text":"CWEs mapeadas Tasa de incidencia m\u00e1x Tasa de incidencia prom Explotabilidad ponderada prom Impacto ponderado prom Cobertura m\u00e1x Cobertura prom Incidencias totales Total CVEs 33 19.09% 3.37% 7.25 7.15 94.04% 47.90% 274,228 32,078"},{"location":"es/A03_2021-Injection/#resumen","title":"Resumen","text":"<p>La Inyecci\u00f3n desciende a la tercera posici\u00f3n. El 94% de las aplicaciones fueron probadas para alg\u00fan tipo de inyecci\u00f3n con una tasa de incidencia m\u00e1xima del 19%, una tasa de incidencia promedio del 3% y 274.000 ocurrencias. Las CWE incluidas son CWE-79: Secuencia de Comandos en Sitios Cruzados (XSS), CWE-89: Inyecci\u00f3n SQL, y la CWE-73:Control Externo de Nombre de archivos o ruta. </p>"},{"location":"es/A03_2021-Injection/#descripcion","title":"Descripci\u00f3n","text":"<p>Una aplicaci\u00f3n es vulnerable a estos tipos de ataque cuando:</p> <ul> <li> <p>Los datos proporcionados por el usuario no son validados, filtrados ni sanitizados por la aplicaci\u00f3n.</p> </li> <li> <p>Se invocan consultas din\u00e1micas o no parametrizadas, sin codificar los par\u00e1metros de forma acorde al contexto.</p> </li> <li> <p>Se utilizan datos da\u00f1inos dentro de los par\u00e1metros de b\u00fasqueda en consultas Object-Relational Mapping (ORM), para extraer registros adicionales sensibles.</p> </li> <li> <p>Se utilizan datos da\u00f1inos directamente o se concatenan, de modo que el SQL o comando resultante contiene datos y estructuras con consultas din\u00e1micas, comandos o procedimientos almacenados.</p> </li> </ul> <p>Algunas de las inyecciones m\u00e1s comunes son SQL, NoSQL, comandos de sistema operativo, Object-Relational Mapping (ORM), LDAP, expresiones de lenguaje u Object Graph Navigation Library (OGNL). El concepto es id\u00e9ntico para todos los int\u00e9rpretes. La revisi\u00f3n del c\u00f3digo fuente es el mejor m\u00e9todo para detectar si las aplicaciones son vulnerables a inyecciones. Las pruebas automatizadas en todos los par\u00e1metros, encabezados, URL, cookies, JSON, SOAP y XML son fuertemente recomendados. Las organizaciones pueden incluir herramientas de an\u00e1lisis est\u00e1tico (SAST), din\u00e1mico (DAST) o interactivo (IAST) en sus pipelines de CI/CD con el fin de identificar fallas recientemente introducidas, antes de ser desplegadas en producci\u00f3n..</p>"},{"location":"es/A03_2021-Injection/#como-se-previene","title":"C\u00f3mo se previene","text":"<p>Prevenir inyecciones requiere separar los datos de los comandos y las consultas.</p> <ul> <li> <p>La opci\u00f3n preferida es utilizar una API segura, que evite el uso de un int\u00e9rprete por completo y proporcione una interfaz parametrizada o utilizar una herramienta de ORM. Nota:: Incluso cuando se parametrizan, los procedimientos almacenados pueden introducir una inyecci\u00f3n SQL si el procedimiento PL/SQL o T-SQL concatena consultas y datos, o se ejecutan par\u00e1metros utilizando EXECUTE IMMEDIATE o exec().</p> </li> <li> <p>Implemente validaciones de entradas de datos en el servidor, utilizando \"listas blancas\". De todos modos, esto no es una defensa completa, ya que muchas aplicaciones requieren el uso de caracteres especiales, como en campos de texto o APIs para aplicaciones m\u00f3viles.</p> </li> <li> <p>Para cualquier consulta din\u00e1mica restante, escape caracteres especiales utilizando la sintaxis de caracteres espec\u00edfica para el int\u00e9rprete que se trate. Nota: La estructura de SQL como nombres de tabla, nombres de columna, etc. no se pueden escapar y, por lo tanto, los nombres de estructura suministrados por el usuario son peligrosos. Este es un problema com\u00fan en el software de redacci\u00f3n de informes.</p> </li> <li> <p>Utilice LIMIT y otros controles SQL dentro de las consultas para evitar la fuga masiva de registros en caso de inyecci\u00f3n SQL.</p> </li> </ul>"},{"location":"es/A03_2021-Injection/#ejemplos-de-escenarios-de-ataque","title":"Ejemplos de escenarios de ataque","text":"<p>Escenario #1: Una aplicaci\u00f3n usa datos no confiables en la construcci\u00f3n de la siguiente sentencia SQL vulnerable:</p> <pre><code>String query = \"SELECT \\* FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\";\n</code></pre> <p>Escenario #2: Del mismo modo, la confianza total de una aplicaci\u00f3n en frameworks puede resultar en consultas que siguen siendo vulnerables a inyecciones, (por ejemplo: Hibernate Query Language (HQL)):</p> <pre><code> Query HQLQuery = session.createQuery(\"FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\");\n</code></pre> <p>En ambos casos, el atacante modifica el valor del par\u00e1metro \"id\" en su navegador y enviar por ejemplo: ' UNION SLEEP(10);--.</p> <pre><code> http://example.com/app/accountView?id=' UNION SELECT SLEEP(10);--\n</code></pre> <p>Esto modifica el significado de ambas consultas, retornando todos los registros de la tabla \u201caccounts. Ataques m\u00e1s peligrosos podr\u00edan modificar datos o incluso invocar procedimientos almacenados.</p>"},{"location":"es/A03_2021-Injection/#referencias","title":"Referencias","text":"<ul> <li> <p>OWASP Proactive Controls: Secure Database Access</p> </li> <li> <p>OWASP ASVS: V5 Input Validation and Encoding</p> </li> <li> <p>OWASP Testing Guide: SQL Injection, Command Injection,     and\u00a0ORM Injection</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: SQL Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention in Java</p> </li> <li> <p>OWASP Cheat Sheet: Query Parameterization</p> </li> <li> <p>OWASP Automated Threats to Web Applications \u2013 OAT-014</p> </li> <li> <p>PortSwigger: Server-side template injection</p> </li> </ul>"},{"location":"es/A03_2021-Injection/#lista-de-cwes-mapeadas","title":"Lista de CWEs mapeadas","text":"<p>CWE-20 Improper Input Validation</p> <p>CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')</p> <p>CWE-75 Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)</p> <p>CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection')</p> <p>CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</p> <p>CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</p> <p>CWE-80 Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</p> <p>CWE-83 Improper Neutralization of Script in Attributes in a Web Page</p> <p>CWE-87 Improper Neutralization of Alternate XSS Syntax</p> <p>CWE-88 Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')</p> <p>CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</p> <p>CWE-90 Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</p> <p>CWE-91 XML Injection (aka Blind XPath Injection)</p> <p>CWE-93 Improper Neutralization of CRLF Sequences ('CRLF Injection')</p> <p>CWE-94 Improper Control of Generation of Code ('Code Injection')</p> <p>CWE-95 Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</p> <p>CWE-96 Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')</p> <p>CWE-97 Improper Neutralization of Server-Side Includes (SSI) Within a Web Page</p> <p>CWE-98 Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')</p> <p>CWE-99 Improper Control of Resource Identifiers ('Resource Injection')</p> <p>CWE-100 Deprecated: Was catch-all for input validation issues</p> <p>CWE-113 Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')</p> <p>CWE-116 Improper Encoding or Escaping of Output</p> <p>CWE-138 Improper Neutralization of Special Elements</p> <p>CWE-184 Incomplete List of Disallowed Inputs</p> <p>CWE-470 Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')</p> <p>CWE-471 Modification of Assumed-Immutable Data (MAID)</p> <p>CWE-564 SQL Injection: Hibernate</p> <p>CWE-610 Externally Controlled Reference to a Resource in Another Sphere</p> <p>CWE-643 Improper Neutralization of Data within XPath Expressions ('XPath Injection')</p> <p>CWE-644 Improper Neutralization of HTTP Headers for Scripting Syntax</p> <p>CWE-652 Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')</p> <p>CWE-917 Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')</p>"},{"location":"es/A04_2021-Insecure_Design/","title":"A04:2021 \u2013 Dise\u00f1o Inseguro","text":""},{"location":"es/A04_2021-Insecure_Design/#factores","title":"Factores","text":"CWEs mapeadas Tasa de incidencia m\u00e1x Tasa de incidencia prom Explotabilidad ponderada prom Impacto ponderado prom Cobertura m\u00e1x Cobertura prom Incidencias totales Total CVEs 40 24.19% 3.00% 6.46 6.78 77.25% 42.51% 262,407 2,691"},{"location":"es/A04_2021-Insecure_Design/#resumen","title":"Resumen","text":"<p>Una nueva categor\u00eda en la versi\u00f3n 2021. se centra en los riesgos relacionados con el dise\u00f1o y las fallas arquitect\u00f3nicas, exhortando a un mayor uso de: modelado de amenazas, patrones de dise\u00f1o seguros y arquitecturas de referencia. Como comunidad, debemos ir m\u00e1s all\u00e1 de la codificaci\u00f3n y adoptar actividades cruciales para obtener Seguridad por Dise\u00f1o. Debemos \"mover a la izquierda\" del proceso de desarrollo las actividades de seguridad. Las CWE notables incluidas son CWE-209: Generaci\u00f3n de mensaje de error que contiene informaci\u00f3n confidencial, CWE-256: Almacenamiento desprotegido de credenciales, CWE-501: Violaci\u00f3n de las fronteras de confianza y CWE-522: Credenciales protegidas insuficientemente.</p>"},{"location":"es/A04_2021-Insecure_Design/#descripcion","title":"Descripci\u00f3n","text":"<p>El dise\u00f1o inseguro es una categor\u00eda amplia que representa diferentes debilidades, expresadas como \"dise\u00f1o de control faltante o ineficaz\". El dise\u00f1o inseguro no es la fuente de las otras 10 categor\u00edas. Existe una diferencia entre un dise\u00f1o inseguro y una implementaci\u00f3n insegura. Distinguimos entre fallas de dise\u00f1o y defectos de implementaci\u00f3n por un motivo, difieren en la causa ra\u00edz y remediaciones. Incluso un dise\u00f1o seguro puede tener defectos de implementaci\u00f3n que conduzcan a vulnerabilidades que pueden explotarse. Un dise\u00f1o inseguro no se puede arreglar con una implementaci\u00f3n perfecta, ya que, por definici\u00f3n, los controles de seguridad necesarios nunca se crearon para defenderse de ataques espec\u00edficos. Uno de los factores que contribuyen al dise\u00f1o inseguro es la falta de perfiles de riesgo empresarial inherentes al software o sistema que se est\u00e1 desarrollando y, por lo tanto, la falta de determinaci\u00f3n del nivel de dise\u00f1o de seguridad que se requiere.</p>"},{"location":"es/A04_2021-Insecure_Design/#gestion-de-requerimientos-y-recursos","title":"Gesti\u00f3n de requerimientos y recursos","text":"<p>Recopile y negocie los requerimientos para la aplicaci\u00f3n con el negocio, incluidos los requisitos de protecci\u00f3n relacionados con la confidencialidad, integridad, disponibilidad y autenticidad de todos los activos de datos y la l\u00f3gica de negocio esperada. Tenga en cuenta qu\u00e9 tan expuesta estar\u00e1 su aplicaci\u00f3n y si necesita segregaci\u00f3n de funcionalidades (adem\u00e1s del control de acceso). Recopile los requerimientos t\u00e9cnicos, incluidos los funcionales de seguridad y los no funcionales. Planifique y negocie que el presupuesto cubra el dise\u00f1o, construcci\u00f3n, prueba y operaci\u00f3n, incluyendo las actividades de seguridad.</p>"},{"location":"es/A04_2021-Insecure_Design/#diseno-seguro","title":"Dise\u00f1o seguro","text":"<p>El dise\u00f1o seguro es una cultura y metodolog\u00eda que eval\u00faa constantemente las amenazas y garantiza que el c\u00f3digo est\u00e9 dise\u00f1ado y probado de manera s\u00f3lida para prevenir m\u00e9todos de ataque conocidos. El modelado de amenazas debe estar integrado en sesiones de refinamiento (o actividades similares); buscar cambios en los flujos de datos y el control de acceso u otros controles de seguridad. Durante la creaci\u00f3n de las historias de usuario, determine el flujo correcto y los estados de falla. Aseg\u00farese de que sean bien entendidos y acordados por las partes responsables e impactadas. Analice las suposiciones y las condiciones para los flujos esperados y de falla, aseg\u00farese de que a\u00fan sean precisos y deseables. Determine c\u00f3mo validar las suposiciones y hacer cumplir las condiciones necesarias para los comportamientos adecuados. Aseg\u00farese de que los resultados est\u00e9n documentados en las historias de usuario. Aprenda de los errores y ofrezca incentivos positivos para promover mejoras. El dise\u00f1o seguro no es un complemento ni una herramienta que pueda agregar al software.</p>"},{"location":"es/A04_2021-Insecure_Design/#ciclo-de-desarrollo-seguro-s-sdlc","title":"Ciclo de Desarrollo Seguro (S-SDLC)","text":"<p>El software seguro requiere un ciclo de desarrollo seguro, alguna forma de patr\u00f3n de dise\u00f1o seguro, metodolog\u00edas de carretera pavimentada (\"paved road\"), bibliotecas de componentes seguros, herramientas y modelado de amenazas. Comun\u00edquese con sus especialistas en seguridad desde el comienzo y durante todo el proyecto, as\u00ed como durante su fase de mantenimiento. Considere aprovechar el Modelo de Madurez para el Aseguramiento del Software (SAMM) para ayudar a estructurar sus esfuerzos de desarrollo de software seguro.</p>"},{"location":"es/A04_2021-Insecure_Design/#como-se-previene","title":"C\u00f3mo se previene","text":"<ul> <li> <p>Establezca y use un ciclo de desarrollo seguro apoyado en Profesionales en Seguridad de Aplicaciones para ayudarlo a evaluar y dise\u00f1ar la seguridad y controles relacionados con la privacidad.</p> </li> <li> <p>Establezca y utilice un cat\u00e1logo de patrones de dise\u00f1o seguros o componentes de \"camino pavimentado\" listos para ser utilizados.</p> </li> <li> <p>Utilice el modelado de amenazas para flujos cr\u00edticos de autenticaci\u00f3n, control de acceso, l\u00f3gica de negocio y todo clave.</p> </li> <li> <p>Integre el lenguaje y los controles de seguridad en las historias de usuario.</p> </li> <li> <p>Integre verificaciones de viabilidad en cada capa de su aplicaci\u00f3n (desde el frontend al backend).</p> </li> <li> <p>Escriba pruebas unitarias y de integraci\u00f3n para validar que todos los flujos cr\u00edticos son resistentes al modelo de amenazas. Recopile casos de uso y casos de mal uso para cada capa de la aplicaci\u00f3n.</p> </li> <li> <p>Separe las capas del sistema y las capas de red seg\u00fan las necesidades de exposici\u00f3n y protecci\u00f3n.</p> </li> <li> <p>Separe a los tenants de manera robusta por dise\u00f1o en todos los niveles.</p> </li> <li> <p>Limitar el consumo de recursos por usuario o servicio.</p> </li> </ul>"},{"location":"es/A04_2021-Insecure_Design/#ejemplos-de-escenarios-de-ataque","title":"Ejemplos de Escenarios de Ataque","text":"<p>Escenario #1: Un flujo de trabajo de recuperaci\u00f3n de credenciales puede incluir \"preguntas y respuestas\", lo cual est\u00e1 prohibido por NIST 800-63b, OWASP ASVS y OWASP Top 10. No se puede confiar en preguntas y respuestas como evidencia de identidad ya que m\u00e1s de una persona puede conocer las respuestas. Dicho c\u00f3digo debe eliminarse y reemplazarse por un dise\u00f1o m\u00e1s seguro.</p> <p>Escenario #2: Una cadena de cines permite descuentos en la reserva de grupos y tiene un m\u00e1ximo de quince asistentes antes de solicitar un dep\u00f3sito. Los atacantes podr\u00edan modelar este flujo y probar si pod\u00edan reservar seiscientos asientos en todos los cines a la vez utilizando unas pocos pedidos, lo que provocar\u00eda grandes p\u00e9rdidas de ingresos.</p> <p>Escenario #3: El sitio web de comercio electr\u00f3nico de una cadena minorista no tiene protecci\u00f3n contra bots administrados por revendedores que compran tarjetas de video de alta gama para revender sitios web de subastas. Esto crea una publicidad terrible para los fabricantes de tarjetas de video y los propietarios de cadenas minoristas y una mala sangre duradera con entusiastas que no pueden obtener estas tarjetas a ning\u00fan precio. El dise\u00f1o cuidadoso de anti automatizaci\u00f3n y las reglas de l\u00f3gica de negocio, como compras realizadas a los pocos segundos de disponibilidad, pueden identificar compras no aut\u00e9nticas y rechazar dichas transacciones.</p>"},{"location":"es/A04_2021-Insecure_Design/#referencias","title":"Referencias","text":"<ul> <li> <p>OWASP Cheat Sheet: Secure Design Principles</p> </li> <li> <p>OWASP SAMM: Design:Security Architecture</p> </li> <li> <p>OWASP SAMM: Design:Threat Assessment</p> </li> <li> <p>NIST \u2013 Guidelines on Minimum Standards for Developer Verification of Software</p> </li> <li> <p>The Threat Modeling Manifesto</p> </li> <li> <p>Awesome Threat Modeling</p> </li> </ul>"},{"location":"es/A04_2021-Insecure_Design/#lista-de-cwes-mapeadas","title":"Lista de CWEs mapeadas","text":"<p>CWE-73 External Control of File Name or Path</p> <p>CWE-183 Permissive List of Allowed Inputs</p> <p>CWE-209 Generation of Error Message Containing Sensitive Information</p> <p>CWE-213 Exposure of Sensitive Information Due to Incompatible Policies</p> <p>CWE-235 Improper Handling of Extra Parameters</p> <p>CWE-256 Unprotected Storage of Credentials</p> <p>CWE-257 Storing Passwords in a Recoverable Format</p> <p>CWE-266 Incorrect Privilege Assignment</p> <p>CWE-269 Improper Privilege Management</p> <p>CWE-280 Improper Handling of Insufficient Permissions or Privileges</p> <p>CWE-311 Missing Encryption of Sensitive Data</p> <p>CWE-312 Cleartext Storage of Sensitive Information</p> <p>CWE-313 Cleartext Storage in a File or on Disk</p> <p>CWE-316 Cleartext Storage of Sensitive Information in Memory</p> <p>CWE-419 Unprotected Primary Channel</p> <p>CWE-430 Deployment of Wrong Handler</p> <p>CWE-434 Unrestricted Upload of File with Dangerous Type</p> <p>CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')</p> <p>CWE-451 User Interface (UI) Misrepresentation of Critical Information</p> <p>CWE-472 External Control of Assumed-Immutable Web Parameter</p> <p>CWE-501 Trust Boundary Violation</p> <p>CWE-522 Insufficiently Protected Credentials</p> <p>CWE-525 Use of Web Browser Cache Containing Sensitive Information</p> <p>CWE-539 Use of Persistent Cookies Containing Sensitive Information</p> <p>CWE-579 J2EE Bad Practices: Non-serializable Object Stored in Session</p> <p>CWE-598 Use of GET Request Method With Sensitive Query Strings</p> <p>CWE-602 Client-Side Enforcement of Server-Side Security</p> <p>CWE-642 External Control of Critical State Data</p> <p>CWE-646 Reliance on File Name or Extension of Externally-Supplied File</p> <p>CWE-650 Trusting HTTP Permission Methods on the Server Side</p> <p>CWE-653 Insufficient Compartmentalization</p> <p>CWE-656 Reliance on Security Through Obscurity</p> <p>CWE-657 Violation of Secure Design Principles</p> <p>CWE-799 Improper Control of Interaction Frequency</p> <p>CWE-807 Reliance on Untrusted Inputs in a Security Decision</p> <p>CWE-840 Business Logic Errors</p> <p>CWE-841 Improper Enforcement of Behavioral Workflow</p> <p>CWE-927 Use of Implicit Intent for Sensitive Communication</p> <p>CWE-1021 Improper Restriction of Rendered UI Layers or Frames</p> <p>CWE-1173 Improper Use of Validation Framework</p>"},{"location":"es/A05_2021-Security_Misconfiguration/","title":"A05:2021 \u2013 Configuraci\u00f3n de Seguridad Incorrecta","text":""},{"location":"es/A05_2021-Security_Misconfiguration/#factores","title":"Factores","text":"CWEs mapeadas Tasa de incidencia m\u00e1x Tasa de incidencia prom Explotabilidad ponderada prom Impacto ponderado prom Cobertura m\u00e1x Cobertura prom Incidencias totales Total CVEs 20 19.84% 4.51% 8.12 6.56 89.58% 44.84% 208,387 789"},{"location":"es/A05_2021-Security_Misconfiguration/#resumen","title":"Resumen","text":"<p>Ascendiendo una posici\u00f3n desde el sexto puesto en la edici\u00f3n anterior, el 90% de las aplicaciones se probaron para detectar alg\u00fan tipo de configuraci\u00f3n incorrecta, con una tasa de incidencia promedio del 4,5% y m\u00e1s de 208.000 ocurrencias de CWEs en esta categor\u00eda de riesgo. Con mayor presencia de software altamente configurable, no es sorprendente ver que esta categor\u00eda ascendiera. Las CWE notables incluidas son CWE-16 Configuraci\u00f3n y CWE-611 Restricci\u00f3n incorrecta entidades externas referenciadas de XML.</p>"},{"location":"es/A05_2021-Security_Misconfiguration/#descripcion","title":"Descripci\u00f3n","text":"<p>La aplicaci\u00f3n puede ser vulnerable si:</p> <ul> <li> <p>Le falta el hardening de seguridad adecuado en cualquier parte del stack tecnol\u00f3gico o permisos configurados incorrectamente en los servicios en la nube.</p> </li> <li> <p>Tiene funciones innecesarias habilitadas o instaladas (puertos, servicios, p\u00e1ginas, cuentas o privilegios innecesarios, por ejemplo).</p> </li> <li> <p>Las cuentas predeterminadas y sus contrase\u00f1as a\u00fan est\u00e1n habilitadas y sin cambios.</p> </li> <li> <p>El manejo de errores revela a los usuarios rastros de pila u otros mensajes de error demasiado informativos.</p> </li> <li> <p>Para sistemas actualizados, las \u00faltimas funciones de seguridad est\u00e1n deshabilitadas o no configuradas de forma segura.</p> </li> <li> <p>Las configuraciones de seguridad en los servidores de aplicaciones, frameworks de aplicaciones (Struts, Spring o ASP.NET por ejemplo), bibliotecas, bases de datos, etc., no poseen configurados valores seguros.</p> </li> <li> <p>El servidor no env\u00eda encabezados o directivas de seguridad, o no poseen configurados valores seguros.</p> </li> <li> <p>El software est\u00e1 desactualizado o es vulnerable (consulte A06:2021-Componentes Vulnerables y Desactualizados).</p> </li> </ul> <p>Sin un proceso de configuraci\u00f3n de seguridad de aplicaciones coordinado y repetible, los sistemas corren un mayor riesgo.</p>"},{"location":"es/A05_2021-Security_Misconfiguration/#como-se-previene","title":"C\u00f3mo se previene","text":"<p>Deben implementarse procesos de instalaci\u00f3n seguros, incluyendo:</p> <ul> <li> <p>Un proceso de hardening repetible agiliza y facilita la implementaci\u00f3n de otro entorno que est\u00e9 debidamente inaccesible. Los entornos de desarrollo, control de calidad y producci\u00f3n deben configurarse de forma id\u00e9ntica, con diferentes credenciales utilizadas en cada uno.     Este proceso debe automatizarse para minimizar el esfuerzo necesario para configurar un nuevo entorno seguro.</p> </li> <li> <p>Una plataforma m\u00ednima sin funciones, componentes, documentaci\u00f3n ni ejemplos innecesarios. Elimine o no instale caracter\u00edsticas y frameworks no utilizados.</p> </li> <li> <p>Una tarea para revisar y actualizar las configuraciones apropiadas para todas las notas de seguridad, actualizaciones y parches como parte del proceso de administraci\u00f3n de parches (consulte A06: 2021-Componentes Vulnerables y Desactualizados). Revise los permisos de almacenamiento en la nube (por ejemplo, Permisos de bucket de S3).</p> </li> <li> <p>Una arquitectura de aplicaci\u00f3n segmentada proporciona una separaci\u00f3n efectiva y segura entre componentes o instancias, con segmentaci\u00f3n, organizaci\u00f3n en contenedores o grupos de seguridad en la nube (ACLs).</p> </li> <li> <p>Env\u00edo de directivas de seguridad a los clientes, por ejemplo, encabezados de seguridad.</p> </li> <li> <p>Un proceso automatizado para verificar la efectividad de las configuraciones y ajustes en todos los entornos.</p> </li> </ul>"},{"location":"es/A05_2021-Security_Misconfiguration/#ejemplos-de-escenarios-de-ataque","title":"Ejemplos de escenarios de ataque","text":"<p>Escenario #1: El servidor de aplicaciones contiene aplicaciones de ejemplo que no se eliminan del servidor de producci\u00f3n. Estas aplicaciones de ejemplo poseen fallas de seguridad conocidas que los atacantes utilizan para comprometer el servidor. Supongamos que una de estas aplicaciones es la consola de administraci\u00f3n y no se modificaron las cuentas predeterminadas. En ese caso, el atacante inicia sesi\u00f3n con las contrase\u00f1as predeterminadas y toma el control.</p> <p>Escenario #2: El listado de directorios no se encuentra deshabilitado en el servidor. Un atacante descubre que simplemente puede enumerar directorios. El atacante detecta y descarga las clases Java compiladas, que decompila y aplica ingenier\u00eda inversa para ver el c\u00f3digo. El atacante luego encuentra una falla severa de control de acceso en la aplicaci\u00f3n.</p> <p>Escenario #3: La configuraci\u00f3n del servidor de aplicaciones permite que se retornen a los usuarios mensajes de error detallados, por ejemplo, trazas de pila(stack traces). Esto potencialmente expone informaci\u00f3n confidencial o fallas subyacentes, como versiones de componentes que se sabe son vulnerables.</p> <p>Escenario #4: Un proveedor de servicios en la nube (CSP) posee permisos de uso compartido predeterminados abiertos a Internet a otros usuarios. Esto permite acceder a los datos confidenciales almacenados en el almacenamiento en la nube.</p>"},{"location":"es/A05_2021-Security_Misconfiguration/#referencias","title":"Referencias","text":"<ul> <li> <p>OWASP Testing Guide: Configuration     Management</p> </li> <li> <p>OWASP Testing Guide: Testing for Error Codes</p> </li> <li> <p>Application Security Verification Standard V14 Configuration</p> </li> <li> <p>NIST Guide to General Server     Hardening</p> </li> <li> <p>CIS Security Configuration     Guides/Benchmarks</p> </li> <li> <p>Amazon S3 Bucket Discovery and     Enumeration</p> </li> </ul>"},{"location":"es/A05_2021-Security_Misconfiguration/#lista-de-cwes-mapeadas","title":"Lista de CWEs mapeadas","text":"<p>CWE-2 7PK - Environment</p> <p>CWE-11 ASP.NET Misconfiguration: Creating Debug Binary</p> <p>CWE-13 ASP.NET Misconfiguration: Password in Configuration File</p> <p>CWE-15 External Control of System or Configuration Setting</p> <p>CWE-16 Configuration</p> <p>CWE-260 Password in Configuration File</p> <p>CWE-315 Cleartext Storage of Sensitive Information in a Cookie</p> <p>CWE-520 .NET Misconfiguration: Use of Impersonation</p> <p>CWE-526 Exposure of Sensitive Information Through Environmental Variables</p> <p>CWE-537 Java Runtime Error Message Containing Sensitive Information</p> <p>CWE-541 Inclusion of Sensitive Information in an Include File</p> <p>CWE-547 Use of Hard-coded, Security-relevant Constants</p> <p>CWE-611 Improper Restriction of XML External Entity Reference</p> <p>CWE-614 Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</p> <p>CWE-756 Missing Custom Error Page</p> <p>CWE-776 Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')</p> <p>CWE-942 Permissive Cross-domain Policy with Untrusted Domains</p> <p>CWE-1004 Sensitive Cookie Without 'HttpOnly' Flag</p> <p>CWE-1032 OWASP Top Ten 2017 Category A6 - Security Misconfiguration</p> <p>CWE-1174 ASP.NET Misconfiguration: Improper Model Validation</p>"},{"location":"es/A06_2021-Vulnerable_and_Outdated_Components/","title":"A06:2021 \u2013 Componentes Vulnerables y Desactualizados","text":""},{"location":"es/A06_2021-Vulnerable_and_Outdated_Components/#factores","title":"Factores","text":"CWEs mapeadas Tasa de incidencia m\u00e1x Tasa de incidencia prom Explotabilidad ponderada prom Impacto ponderado prom Cobertura m\u00e1x Cobertura prom Incidencias totales Total CVEs 3 27.96% 8.77% 51.78% 22.47% 5.00 5.00 30,457 0"},{"location":"es/A06_2021-Vulnerable_and_Outdated_Components/#resumen","title":"Resumen","text":"<p>Era el segundo de la encuesta de la comunidad Top 10, pero tambi\u00e9n tuvo datos suficientes para llegar al Top 10 a trav\u00e9s del an\u00e1lisis de datos. Los componentes vulnerables son un problema conocido que es dif\u00edcil de probar y evaluar el riesgo. Es la \u00fanica categor\u00eda que no tiene enumeraciones de debilidades comunes (CWE) asignadas a las CWE incluidas, por lo que se utiliza un peso de impacto/exploits predeterminado de 5,0. Las CWE notables incluidas son CWE-1104: Uso de componentes de terceros no mantenidos y las dos CWE del OWASP Top 10 2013 y 2017.</p>"},{"location":"es/A06_2021-Vulnerable_and_Outdated_Components/#descripcion","title":"Descripci\u00f3n","text":"<p>Usted probablemente sea vulnerable:</p> <ul> <li> <p>Si no conoce las versiones de todos los componentes que utiliza (tanto en el cliente como en el servidor). Esto incluye los componentes que usa directamente, as\u00ed como las dependencias anidadas.</p> </li> <li> <p>Si el software es vulnerable, carece de soporte o no est\u00e1 actualizado. Esto incluye el sistema operativo, el servidor web/de aplicaciones, el sistema de administraci\u00f3n de bases de datos (DBMS), las aplicaciones, las API y todos los componentes, los entornos de ejecuci\u00f3n y las bibliotecas.</p> </li> <li> <p>Si no analiza en b\u00fasqueda de vulnerabilidades de forma regular y no se suscribe a los boletines de seguridad relacionados con los componentes que utiliza.</p> </li> <li> <p>Si no repara o actualiza la plataforma subyacente, frameworks y dependencias de manera oportuna y basada en el riesgo. Esto suele ocurrir en entornos en los que la aplicaci\u00f3n de parches de seguridad es una tarea mensual o trimestral bajo control de cambios, lo que deja a las organizaciones abiertas a d\u00edas o meses de exposici\u00f3n innecesaria a vulnerabilidades con soluciones disponibles.</p> </li> <li> <p>Si los desarrolladores de software no testean la compatibilidad de las bibliotecas actualizadas, actualizadas o parcheadas.</p> </li> <li> <p>Si no asegura las configuraciones de los componentes (consulte A05:2021 \u2013 Configuraci\u00f3n de Seguridad Incorrecta).</p> </li> </ul>"},{"location":"es/A06_2021-Vulnerable_and_Outdated_Components/#como-se-previene","title":"C\u00f3mo se previene","text":"<p>Debe existir un proceso de administraci\u00f3n de parches que:</p> <ul> <li> <p>Elimine las dependencias que no son utilizadas, funcionalidades, componentes, archivos y documentaci\u00f3n innecesarios.</p> </li> <li> <p>Realice un inventario continuo de las versiones de los componentes en el cliente y en el servidor (por ejemplo, frameworks, bibliotecas) y sus dependencias utilizando herramientas como: versions, OWASP Dependency Check, retire.js, etc. Supervise continuamente fuentes como Common Vulnerability and Exposures (CVE) y National Vulnerability Database (NVD) para detectar vulnerabilidades en los componentes. Utilice herramientas de an\u00e1lisis de composici\u00f3n de software para automatizar el proceso. Suscr\u00edbase para recibir alertas por correo electr\u00f3nico sobre vulnerabilidades de seguridad relacionadas con los componentes que utiliza.</p> </li> <li> <p>Solo obtenga componentes de fuentes oficiales a trav\u00e9s de enlaces seguros.     Prefiera los paquetes firmados para reducir la posibilidad de incluir un componente malicioso modificado (consulte A08:2021 \u2013 Fallas en el Software y en la Integridad de los Datos).</p> </li> <li> <p>Supervise las bibliotecas y los componentes que no sea mantenidos o no generen parches de seguridad para versiones anteriores. Si la aplicaci\u00f3n de parches no es posible, considere implementar un parche virtual para monitorear, detectar o protegerse contra el problema descubierto.</p> </li> </ul> <p>Toda organizaci\u00f3n debe garantizar un plan continuo para monitorear, clasificar y aplicar actualizaciones o cambios de configuraci\u00f3n durante la vida \u00fatil de la aplicaci\u00f3n o portafolio de aplicaciones.</p>"},{"location":"es/A06_2021-Vulnerable_and_Outdated_Components/#ejemplos-de-escenarios-de-ataque","title":"Ejemplos de escenarios de ataque","text":"<p>Escenario #1: Los componentes normalmente se ejecutan con los mismos privilegios que la propia aplicaci\u00f3n, por lo que las fallas en cualquier componente pueden tener un impacto grave. Tales fallas pueden ser accidentales (por ejemplo, error de codificaci\u00f3n) o intencionales (por ejemplo, una puerta trasera en un componente). Algunos ejemplos de vulnerabilidades de componentes explotables descubiertos son:</p> <ul> <li> <p>CVE-2017-5638, una vulnerabilidad de ejecuci\u00f3n remota de c\u00f3digo de Struts 2 que permite la ejecuci\u00f3n arbitraria de c\u00f3digo en el servidor, ha sido culpada de brechas importantes.</p> </li> <li> <p>Si bien el Internet de las Cosas (IoT) es con frecuencia dif\u00edcil o imposible de parchear, la importancia de parchearlo puede ser grande (por ejemplo, dispositivos biom\u00e9dicos).</p> </li> </ul> <p>Existen herramientas automatizadas para ayudar a los atacantes a encontrar sistemas sin parches o mal configurados. Por ejemplo, el motor de b\u00fasqueda Shodan IoT puede ayudarlo a encontrar dispositivos que a\u00fan sufren la vulnerabilidad Heartbleed parchada en abril de 2014.</p>"},{"location":"es/A06_2021-Vulnerable_and_Outdated_Components/#referencias","title":"Referencias","text":"<ul> <li> <p>OWASP Application Security Verification Standard: V1 Architecture,     design and threat modelling</p> </li> <li> <p>OWASP Dependency Check (for Java and .NET libraries)</p> </li> <li> <p>OWASP Testing Guide - Map Application Architecture (OTG-INFO-010)</p> </li> <li> <p>OWASP Virtual Patching Best Practices</p> </li> <li> <p>The Unfortunate Reality of Insecure Libraries</p> </li> <li> <p>MITRE Common Vulnerabilities and Exposures (CVE) search</p> </li> <li> <p>National Vulnerability Database (NVD)</p> </li> <li> <p>Retire.js for detecting known vulnerable JavaScript libraries</p> </li> <li> <p>Node Libraries Security Advisories</p> </li> <li> <p>Ruby Libraries Security Advisory Database and Tools</p> </li> <li> <p>https://safecode.org/publication/SAFECode_Software_Integrity_Controls0610.pdf</p> </li> </ul>"},{"location":"es/A06_2021-Vulnerable_and_Outdated_Components/#lista-de-cwes-mapeadas","title":"Lista de CWEs mapeadas","text":"<p>CWE-937 OWASP Top 10 2013: Using Components with Known Vulnerabilities</p> <p>CWE-1035 2017 Top 10 A9: Using Components with Known Vulnerabilities</p> <p>CWE-1104 Use of Unmaintained Third Party Components</p>"},{"location":"es/A07_2021-Identification_and_Authentication_Failures/","title":"A07:2021 \u2013 Fallas de Identificaci\u00f3n y Autenticaci\u00f3n","text":""},{"location":"es/A07_2021-Identification_and_Authentication_Failures/#factores","title":"Factores","text":"CWEs mapeadas Tasa de incidencia m\u00e1x Tasa de incidencia prom Explotabilidad ponderada prom Impacto ponderado prom Cobertura m\u00e1x Cobertura prom Incidencias totales Total CVEs 22 14.84% 2.55% 7.40 6.50 79.51% 45.72% 132,195 3,897"},{"location":"es/A07_2021-Identification_and_Authentication_Failures/#resumen","title":"Resumen","text":"<p>Previamente denominada como P\u00e9rdida de Autenticaci\u00f3n, descendi\u00f3 desde la segunda posici\u00f3n, y ahora incluye CWEs que est\u00e1n m\u00e1s relacionados con fallas de identificaci\u00f3n. Las CWE notables incluidas son CWE-297: Validaci\u00f3n incorrecta de Certificado con discrepancia de host, CWE-287: Autenticaci\u00f3n incorrecta y CWE-384: Fijaci\u00f3n de sesiones.</p>"},{"location":"es/A07_2021-Identification_and_Authentication_Failures/#descripcion","title":"Descripci\u00f3n","text":"<p>La confirmaci\u00f3n de la identidad, la autenticaci\u00f3n y la gesti\u00f3n de sesiones del usuario son fundamentales para protegerse contra ataques relacionados con la autenticaci\u00f3n. Puede haber debilidades de autenticaci\u00f3n si la aplicaci\u00f3n:</p> <ul> <li> <p>Permite ataques automatizados como la reutilizaci\u00f3n de credenciales conocidas, donde el atacante posee una lista de pares de usuario y contrase\u00f1a v\u00e1lidos.</p> </li> <li> <p>Permite ataques de fuerza bruta u otros ataques automatizados.</p> </li> <li> <p>Permite contrase\u00f1as por defecto, d\u00e9biles o bien conocidas, como \"Password1\" o \"admin/admin\".</p> </li> <li> <p>Posee procesos d\u00e9biles o no efectivos para las funcionalidades de olvido de contrase\u00f1a o recuperaci\u00f3n de credenciales, como \"respuestas basadas en el conocimiento\", las cuales no se pueden implementar de forma segura.</p> </li> <li> <p>Almacena las contrase\u00f1as en texto claro, cifradas o utilizando funciones de hash d\u00e9biles (consulte A02: 2021-Fallas Criptogr\u00e1ficas).</p> </li> <li> <p>No posee una autenticaci\u00f3n multi-factor o la implementada es ineficaz.</p> </li> <li> <p>Expone el identificador de sesi\u00f3n en la URL.</p> </li> <li> <p>Reutiliza el identificador de sesi\u00f3n despu\u00e9s de iniciar sesi\u00f3n.</p> </li> <li> <p>No inv\u00e1lida correctamente los identificadores de sesi\u00f3n. Las sesiones de usuario o los tokens de autenticaci\u00f3n (principalmente tokens de inicio de sesi\u00f3n \u00fanico (SSO)) no son correctamente invalidados durante el cierre de sesi\u00f3n o luego de un per\u00edodo de inactividad.</p> </li> </ul>"},{"location":"es/A07_2021-Identification_and_Authentication_Failures/#como-se-previene","title":"C\u00f3mo se previene","text":"<ul> <li> <p>Cuando sea posible, implemente la autenticaci\u00f3n multi-factor para evitar ataques automatizados de reutilizaci\u00f3n de credenciales conocidas, fuerza bruta y re\u00faso de credenciales robadas.</p> </li> <li> <p>No incluya o implemente en su software credenciales por defecto, particularmente para usuarios administradores.</p> </li> <li> <p>Implemente un control contra contrase\u00f1as d\u00e9biles, tal como verificar que una nueva contrase\u00f1a o la utilizada en el cambio de contrase\u00f1a no est\u00e9 incluida en la lista de las 10,000 peores contrase\u00f1as.</p> </li> <li> <p>Alinear las pol\u00edticas de largo, complejidad y rotaci\u00f3n de las contrase\u00f1as con las pautas de la secci\u00f3n 5.1.1 para Secretos Memorizados de la gu\u00eda del NIST 800-63b u otras pol\u00edticas de contrase\u00f1as modernas, basadas en evidencias.</p> </li> <li> <p>Aseg\u00farese que el registro, la recuperaci\u00f3n de las credenciales y el uso de APIs, no permiten los ataques de enumeraci\u00f3n de usuarios, mediante la utilizaci\u00f3n de los mismos mensajes gen\u00e9ricos en todas las salidas.</p> </li> <li> <p>Limite o incremente el tiempo de espera entre intentos fallidos de inicio de sesi\u00f3n, pero tenga cuidado de no crear un escenario de denegaci\u00f3n de servicio. Registre todos los fallos y avise a los administradores cuando se detecten ataques de rellenos automatizados de credenciales, fuerza bruta u otros.</p> </li> <li> <p>Utilice un gestor de sesi\u00f3n en el servidor, integrado, seguro y que genere un nuevo ID de sesi\u00f3n aleatorio con alta entrop\u00eda despu\u00e9s de iniciar sesi\u00f3n. Los identificadores de sesi\u00f3n no deben incluirse en la URL, deben almacenarse de forma segura y deben ser invalidados despu\u00e9s del cierre de sesi\u00f3n, luego de un tiempo de inactividad o por un tiempo de espera absoluto.</p> </li> </ul>"},{"location":"es/A07_2021-Identification_and_Authentication_Failures/#ejemplos-de-escenarios-de-ataque","title":"Ejemplos de escenarios de ataque","text":"<p>Escenario #1: Relleno de credenciales, el uso de listas de contrase\u00f1as conocidas, es un ataque com\u00fan. Supongamos que una aplicaci\u00f3n no se implementa protecci\u00f3n automatizada de relleno de credenciales. En ese caso, la aplicaci\u00f3n puede usarse como or\u00e1culo de contrase\u00f1as para determinar si las credenciales son v\u00e1lidas.</p> <p>Escenario #2: La mayor\u00eda de los ataques de autenticaci\u00f3n ocurren debido al uso de contrase\u00f1as como \u00fanico factor. Las consideradas mejores pr\u00e1cticas de requerir de una rotaci\u00f3n y complejidad de las contrase\u00f1as, son vistos como alentadoras del uso y re\u00faso de contrase\u00f1as d\u00e9biles por parte de los usuarios. Se le recomienda a las organizaciones que detengan dichas pr\u00e1cticas y utilicen las pr\u00e1cticas recomendadas en la gu\u00eda NIST 800-63 y utilicen autenticaci\u00f3n multi-factor.</p> <p>Escenario #3: Los tiempos de espera (timeouts) de las sesiones de aplicaci\u00f3n no est\u00e1n configurados correctamente. Un usuario utiliza una computadora p\u00fablica para acceder a una aplicaci\u00f3n. En lugar de seleccionar \"cerrar sesi\u00f3n\", el usuario simplemente cierra la pesta\u00f1a del navegador y se aleja. Un atacante usa el mismo navegador una hora m\u00e1s tarde, y el usuario contin\u00faa autenticado.</p>"},{"location":"es/A07_2021-Identification_and_Authentication_Failures/#referencias","title":"Referencias","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Digital Identity</p> </li> <li> <p>OWASP Application Security Verification Standard: V2 authentication</p> </li> <li> <p>OWASP Application Security Verification Standard: V3 Session Management</p> </li> <li> <p>OWASP Testing Guide: Identity,\u00a0Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Credential Stuffing</p> </li> <li> <p>OWASP Cheat Sheet: Forgot Password</p> </li> <li> <p>OWASP Cheat Sheet: Session Management</p> </li> <li> <p>OWASP Automated Threats Handbook</p> </li> <li> <p>NIST 800-63b: 5.1.1 Memorized Secrets</p> </li> </ul>"},{"location":"es/A07_2021-Identification_and_Authentication_Failures/#lista-de-cwes-mapeadas","title":"Lista de CWEs mapeadas","text":"<p>CWE-255 Credentials Management Errors</p> <p>CWE-259 Use of Hard-coded Password</p> <p>CWE-287 Improper Authentication</p> <p>CWE-288 Authentication Bypass Using an Alternate Path or Channel</p> <p>CWE-290 Authentication Bypass by Spoofing</p> <p>CWE-294 Authentication Bypass by Capture-replay</p> <p>CWE-295 Improper Certificate Validation</p> <p>CWE-297 Improper Validation of Certificate with Host Mismatch</p> <p>CWE-300 Channel Accessible by Non-Endpoint</p> <p>CWE-302 Authentication Bypass by Assumed-Immutable Data</p> <p>CWE-304 Missing Critical Step in Authentication</p> <p>CWE-306 Missing Authentication for Critical Function</p> <p>CWE-307 Improper Restriction of Excessive Authentication Attempts</p> <p>CWE-346 Origin Validation Error</p> <p>CWE-384 Session Fixation</p> <p>CWE-521 Weak Password Requirements</p> <p>CWE-613 Insufficient Session Expiration</p> <p>CWE-620 Unverified Password Change</p> <p>CWE-640 Weak Password Recovery Mechanism for Forgotten Password</p> <p>CWE-798 Use of Hard-coded Credentials</p> <p>CWE-940 Improper Verification of Source of a Communication Channel</p> <p>CWE-1216 Lockout Mechanism Errors</p>"},{"location":"es/A08_2021-Software_and_Data_Integrity_Failures/","title":"A08:2021 \u2013 Fallas en el Software y en la Integridad de los Datos","text":""},{"location":"es/A08_2021-Software_and_Data_Integrity_Failures/#factores","title":"Factores","text":"CWEs mapeadas Tasa de incidencia m\u00e1x Tasa de incidencia prom Explotabilidad ponderada prom Impacto ponderado prom Cobertura m\u00e1x Cobertura prom Incidencias totales Total CVEs 10 16.67% 2.05% 6.94 7.94 75.04% 45.35% 47,972 1,152"},{"location":"es/A08_2021-Software_and_Data_Integrity_Failures/#resumen","title":"Resumen","text":"<p>Una nueva categor\u00eda en la versi\u00f3n 2021 que se centra en hacer suposiciones relacionadas con las actualizaciones de software, los datos cr\u00edticos y los pipelines de CI/CD sin verificaci\u00f3n de integridad. Corresponde a uno de los mayores impactos seg\u00fan los sistemas de ponderaci\u00f3n de vulnerabilidades (CVE/CVSS, siglas en ingl\u00e9s para Common Vulnerability and Exposures/Common Vulnerability Scoring System). Entre estos, se destacan las siguientes CWEs: CWE-829: Inclusi\u00f3n de funcionalidades provenientes de fuera de la zona de confianza, CWE-494: Ausencia de verificaci\u00f3n de integridad en el c\u00f3digo descargado, y  CWE-502: Deserializaci\u00f3n de datos no confiables.</p>"},{"location":"es/A08_2021-Software_and_Data_Integrity_Failures/#descripcion","title":"Descripci\u00f3n","text":"<p>Los fallos de integridad del software y de los datos est\u00e1n relacionados con c\u00f3digo e infraestructura no protegidos contra alteraciones (integridad). Ejemplos de esto son cuando una aplicaci\u00f3n depende de plugins, bibliotecas o m\u00f3dulos de fuentes, repositorios o redes de entrega de contenidos (CDN) no confiables. Un pipeline CI/CD inseguro puede conducir a accesos no autorizados, la inclusi\u00f3n de c\u00f3digo malicioso o el compromiso del sistema en general. Adem\u00e1s, es com\u00fan en la actualidad que las aplicaciones implementen funcionalidades de actualizaci\u00f3n, a trav\u00e9s de las cuales se descargan nuevas versiones de la misma sin las debidas verificaciones integridad que fueron realizadas previamente al instalar la aplicaci\u00f3n. Los atacantes potencialmente pueden cargar sus propias actualizaciones para que sean distribuidas y ejecutadas en todas las instalaciones. Otro ejemplo es cuando objetos o datos son codificados o serializados en estructuras que un atacante puede ver y modificar, produci\u00e9ndose una deserializaci\u00f3n insegura.</p>"},{"location":"es/A08_2021-Software_and_Data_Integrity_Failures/#como-se-previene","title":"C\u00f3mo se previene","text":"<ul> <li> <p>Utilice firmas digitales o mecanismos similares para verificar que el software o datos provienen efectivamente de la fuente esperada y no fueron alterados.</p> </li> <li> <p>Aseg\u00farese que las bibliotecas y dependencias, tales como npm o maven son utilizadas desde repositorios confiables. Si su perfil de riesgo es alto, considere alojarlas en un repositorio interno cuyo contenido ha sido previamente analizado.</p> </li> <li> <p>Aseg\u00farese que se utilice una herramienta de an\u00e1lisis de componentes de terceros, c\u00f3mo OWASP Dependency Check u OWASP CycloneDX, con el fin de verificar la ausencia de vulnerabilidades conocidas.</p> </li> <li> <p>Aseg\u00farese que se utilice un proceso de revisi\u00f3n de cambios de c\u00f3digo y configuraciones para minimizar las posibilidades de que c\u00f3digo o configuraciones maliciosas sean introducidos en su pipeline.</p> </li> <li> <p>Aseg\u00farese que su pipeline CI/CD posee adecuados controles de acceso, segregaci\u00f3n y configuraciones que permitan asegurar la integridad del c\u00f3digo a trav\u00e9s del proceso de build y despliegue.</p> </li> <li> <p>Aseg\u00farese que datos sin cifrar o firmar no son enviados a clientes no confiables sin alguna forma de verificaci\u00f3n de integridad o firma electr\u00f3nica con el fin de detectar modificaciones o la reutilizaci\u00f3n de datos previamente serializados. </p> </li> </ul>"},{"location":"es/A08_2021-Software_and_Data_Integrity_Failures/#ejemplos-de-escenarios-de-ataque","title":"Ejemplos de escenarios de ataque","text":"<p>Escenario #1 Actualizaciones no firmadas: Muchos routers dom\u00e9sticos, decodificadores de televisi\u00f3n, firmware de dispositivos, entre otros, no verifican las firmas de sus actualizaciones de firmware. El firmware sin firmar es un objetivo creciente para los atacantes y se espera que empeore. Esto es una gran preocupaci\u00f3n, ya que muchas veces no existe otro mecanismo para remediarlo que corregirlo en una versi\u00f3n futura y esperar a que las versiones anteriores caduquen.</p> <p>Escenario #2 Actualizaci\u00f3n maliciosa de SolarWinds: Se sabe que los Estados-Naciones utilizan como vector de ataque los mecanismos de actualizaci\u00f3n, siendo un caso reciente de p\u00fablica notoriedad el sufrido por SolarWinds Orion. La compa\u00f1\u00eda que desarrolla el software pose\u00eda procesos seguros de construcci\u00f3n y mecanismos de integridad en sus actualizaciones. Sin embargo, estos fueron comprometidos y, durante varios meses, la firma distribuy\u00f3 una actualizaci\u00f3n maliciosa a m\u00e1s de 18.000 organizaciones, de las cuales alrededor de un centenar se vieron afectadas. Se trata de una de las brechas de este tipo de mayor alcance y m\u00e1s importantes de la historia.</p> <p>Escenario #3 Deserializaci\u00f3n insegura: Una aplicaci\u00f3n React utiliza un conjunto de microservicios implementados en Spring Boot. Trat\u00e1ndose de programadores funcionales, intentaron asegurarse de que su c\u00f3digo fuera inmutable. La soluci\u00f3n implementada consisti\u00f3 en serializar el estado de la sesi\u00f3n para el usuario y enviarlo entre los componentes con cada solicitud. Un atacante advierte el uso de un objeto Java serializado y codificado en base64 (identifica un string que comienza con \"rO0\") y utiliza la herramienta Java Serial Killer para obtener una ejecuci\u00f3n remota de c\u00f3digo en el servidor de aplicaci\u00f3n.</p>"},{"location":"es/A08_2021-Software_and_Data_Integrity_Failures/#referencias","title":"Referencias","text":"<ul> <li> <p>[OWASP Cheat Sheet: Software Supply Chain Security](Coming Soon)</p> </li> <li> <p>[OWASP Cheat Sheet: Secure build and deployment](Coming Soon)</p> </li> <li> <p>OWASP Cheat Sheet: Infrastructure as Code</p> </li> <li> <p>OWASP Cheat Sheet: Deserialization</p> </li> <li> <p>SAFECode Software Integrity Controls</p> </li> <li> <p>A 'Worst Nightmare' Cyberattack: The Untold Story Of The     SolarWinds     Hack</p> </li> <li> <p>CodeCov Bash Uploader Compromise</p> </li> <li> <p>Securing DevOps by Julien Vehent</p> </li> </ul>"},{"location":"es/A08_2021-Software_and_Data_Integrity_Failures/#lista-de-cwes-mapeadas","title":"Lista de CWEs mapeadas","text":"<p>CWE-345 Insufficient Verification of Data Authenticity</p> <p>CWE-353 Missing Support for Integrity Check</p> <p>CWE-426 Untrusted Search Path</p> <p>CWE-494 Download of Code Without Integrity Check</p> <p>CWE-502 Deserialization of Untrusted Data</p> <p>CWE-565 Reliance on Cookies without Validation and Integrity Checking</p> <p>CWE-784 Reliance on Cookies without Validation and Integrity Checking in a Security Decision</p> <p>CWE-829 Inclusion of Functionality from Untrusted Control Sphere</p> <p>CWE-830 Inclusion of Web Functionality from an Untrusted Source</p> <p>CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes</p>"},{"location":"es/A09_2021-Security_Logging_and_Monitoring_Failures/","title":"A09:2021 \u2013 Fallas en el Registro y Monitoreo","text":""},{"location":"es/A09_2021-Security_Logging_and_Monitoring_Failures/#factores","title":"Factores","text":"CWEs mapeadas Tasa de incidencia m\u00e1x Tasa de incidencia prom Explotabilidad ponderada prom Impacto ponderado prom Cobertura m\u00e1x Cobertura prom Incidencias totales Total CVEs 4 19.23% 6.51% 6.87 4.99 53.67% 39.97% 53,615 242"},{"location":"es/A09_2021-Security_Logging_and_Monitoring_Failures/#resumen","title":"Resumen","text":"<p>Monitoreo y registro de seguridad provienen de la encuesta de la comunidad (tercer lugar), subi\u00f3 levemente desde la d\u00e9cima posici\u00f3n en el Top 10 2017. El registro y monitoreo pueden ser desafiantes para ser testeados, implicando entrevistas o preguntar si los ataques fueron detectados durante las pruebas de penetraci\u00f3n. No hay muchos datos de CVE/CVSS para esta categor\u00eda, pero detectar y responder a las brechas es cr\u00edtico. A\u00fan as\u00ed, puede tener un gran impacto para la auditabilidad, visibilidad, alertas de incidentes y an\u00e1lisis forense. Esta categor\u00eda se expande m\u00e1s all\u00e1 de CWE-117 Neutralizaci\u00f3n de salida incorrecta para registros, CWE-223 Omisi\u00f3n de informaci\u00f3n relevante para la seguridad, y CWE-532 Inserci\u00f3n de informaci\u00f3n sensible en archivo de registro.</p>"},{"location":"es/A09_2021-Security_Logging_and_Monitoring_Failures/#descripcion","title":"Descripci\u00f3n","text":"<p>Volviendo al OWASP Top 10 2021, la intenci\u00f3n es apoyar la detecci\u00f3n, escalamiento y respuesta ante brechas activas. Sin registros y monitoreo, las brechas no pueden ser detectadas. Registros, detecciones, monitoreo y respuesta activas insuficientes pueden ocurrir en cualquier momento:</p> <ul> <li> <p>Eventos auditables, tales como los inicios de sesi\u00f3n, fallas en el inicio de sesi\u00f3n y transacciones de alto valor no son registradas.</p> </li> <li> <p>Advertencias y errores generan registros poco claros, inadecuados y en algunos casos ni se generan.</p> </li> <li> <p>Registros en aplicaciones y API no son monitoreados para detectar actividades sospechosas.</p> </li> <li> <p>Los registros son \u00fanicamente almacenados en forma local.</p> </li> <li> <p>Los umbrales de alerta y procesos de escalamiento no est\u00e1n correctamente implementados o no son efectivos.</p> </li> <li> <p>Las pruebas de penetraci\u00f3n y los escaneos utilizando herramientas de pruebas din\u00e1micas de seguridad en aplicaciones (como ser OWASP ZAP) no generan alertas.</p> </li> <li> <p>Las aplicaciones no logran detectar, escalar, o alertar sobre ataques activos en tiempo real ni cercanos al tiempo real.</p> </li> </ul> <p>Se es vulnerable a la fuga de informaci\u00f3n haciendo registros y eventos de alertas que sean visibles para un usuario o un atacante (consulte A01: 2021-P\u00e9rdida de Control de Acceso).</p>"},{"location":"es/A09_2021-Security_Logging_and_Monitoring_Failures/#como-se-previene","title":"C\u00f3mo se previene","text":"<p>Los desarrolladores deber\u00edan implementar algunos o todos los siguientes controles, dependiendo del riesgo de la aplicaci\u00f3n:</p> <ul> <li> <p>Aseg\u00farese de que todos los errores de inicio de sesi\u00f3n, de control de acceso y de validaci\u00f3n de entradas de datos del lado del servidor se pueden registrar con suficiente contexto como para identificar cuentas sospechosas o maliciosas y mantenerlo durante el tiempo suficiente para permitir un posterior an\u00e1lisis forense.</p> </li> <li> <p>Aseg\u00farese de que los registros se generen en un formato f\u00e1cil de procesar por las herramientas de gesti\u00f3n de registros.</p> </li> <li> <p>Aseg\u00farese de que los datos de registros son correctamente codificados para prevenir inyecciones o ataques en el sistema de monitoreo o registros.</p> </li> <li> <p>Aseg\u00farese de que las transacciones de alto valor poseen una traza de auditoria con controles de integridad para evitar la modificaci\u00f3n o el borrado, tales como permitir \u00fanicamente la inserci\u00f3n en las tablas de base de datos o similares.</p> </li> <li> <p>Los equipos de DevSecOps debe establecer alertas y monitoreo efectivo tal que se detecte actividades sospechosas y responderlas r\u00e1pidamente.</p> </li> <li> <p>Establezca o adopte un plan de respuesta y recuperaci\u00f3n, tal como NIST 800-61r2 o posterior.</p> </li> </ul> <p>Existen frameworks de protecci\u00f3n de aplicaciones comerciales y de c\u00f3digo abierto, tales como el conjunto de reglas de ModSecurity de OWASP y el conjunto de programas de correlaci\u00f3n de registros de c\u00f3digo abierto como ser ELK (Elasticsearch, Logstash, Kibana) con paneles personalizados y alertas.</p>"},{"location":"es/A09_2021-Security_Logging_and_Monitoring_Failures/#ejemplos-de-escenarios-de-ataque","title":"Ejemplos de escenarios de ataque","text":"<p>Escenario #1: El sitio web de un prestador de salud que provee un plan para ni\u00f1os no pudo detectar una brecha debido a la falta de monitoreo y registro. Alguien externo inform\u00f3 al prestador que un atacante hab\u00eda accedido y modificados registros m\u00e9dicos sensibles de m\u00e1s de 3,5 millones de ni\u00f1os. Una revisi\u00f3n post incidente detect\u00f3 que los desarrolladores del sitio web no hab\u00edan encontrado vulnerabilidades significativas. Como no hubo ni registro ni monitores del sistema, la brecha de datos pudo haber estado en proceso desde el 2013, por un per\u00edodo de m\u00e1s de 7 a\u00f1os.</p> <p>Escenario #2: Una gran aerol\u00ednea India tuvo una brecha de seguridad que involucr\u00f3 a la p\u00e9rdida de datos personales de millones de pasajeros por m\u00e1s de 10 a\u00f1os, incluyendo pasaportes y tarjetas de cr\u00e9dito. La brecha se produjo por un proveedor de servicios de almacenamiento en la nube, quien notific\u00f3 a la aerol\u00ednea despu\u00e9s de un tiempo.</p> <p>Escenario #3: Una gran aerol\u00ednea Europea sufri\u00f3 un incumplimiento de la GRPD que debe reportar. La causa de la brecha se debi\u00f3 a que un atacante explot\u00f3 una vulnerabilidad en una aplicaci\u00f3n de pago, obteniendo m\u00e1s de 400,000 registros de pagos de usuarios. La aerol\u00ednea fue multada con 20 millones de libras como resultado del regulador de privacidad.</p>"},{"location":"es/A09_2021-Security_Logging_and_Monitoring_Failures/#referencias","title":"Referencias","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Logging and Monitoring</p> </li> <li> <p>OWASP Application Security Verification Standard: V8 Logging and Monitoring</p> </li> <li> <p>OWASP Testing Guide: Testing for Detailed Error Code</p> </li> <li> <p>OWASP Cheat Sheet: Application Logging Vocabulary</p> </li> <li> <p>OWASP Cheat Sheet: Logging</p> </li> <li> <p>Data Integrity: Recovering from Ransomware and Other Destructive Events</p> </li> <li> <p>Data Integrity: Identifying and Protecting Assets Against Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Detecting and Responding to Ransomware and Other Destructive Events</p> </li> </ul>"},{"location":"es/A09_2021-Security_Logging_and_Monitoring_Failures/#lista-de-cwes-mapeadas","title":"Lista de CWEs mapeadas","text":"<p>CWE-117 Improper Output Neutralization for Logs</p> <p>CWE-223 Omission of Security-relevant Information</p> <p>CWE-532 Insertion of Sensitive Information into Log File</p> <p>CWE-778 Insufficient Logging</p>"},{"location":"es/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/","title":"A10:2021 \u2013 Falsificaci\u00f3n de Solicitudes del Lado del Servidor (SSRF)","text":""},{"location":"es/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#factores","title":"Factores","text":"CWEs mapeadas Tasa de incidencia m\u00e1x Tasa de incidencia prom Explotabilidad ponderada prom Impacto ponderado prom Cobertura m\u00e1x Cobertura prom Incidencias totales Total CVEs 1 2.72% 2.72% 8.28 6.72 67.72% 67.72% 9,503 385"},{"location":"es/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#resumen","title":"Resumen","text":"<p>Esta categor\u00eda se agrega debido a la encuesta de la comunidad Top 10 (primer lugar). Los datos muestran una tasa de incidencia relativamente baja con una cobertura de pruebas por encima del promedio, junto con calificaciones por encima del promedio para la capacidad de explotaci\u00f3n e impacto. Como es probable que estas nuevas entradas sean una \u00fanica o un peque\u00f1o grupo de Enumeraciones de debilidades comunes (CWE) para tomar en cuenta y concientizar sobre ellas, la esperanza es que se enfoque la atenci\u00f3n en ellas y puedan integrarse en una categor\u00eda m\u00e1s amplia en una edici\u00f3n futura.</p>"},{"location":"es/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#descripcion","title":"Descripci\u00f3n","text":"<p>Las fallas de SSRF ocurren cuando una aplicaci\u00f3n web est\u00e1 obteniendo un recurso remoto sin validar la URL proporcionada por el usuario. Permite que un atacante coaccione a la aplicaci\u00f3n para que env\u00ede una solicitud falsificada a un destino inesperado, incluso cuando est\u00e1 protegido por un firewall, VPN u otro tipo de lista de control de acceso a la red (ACL).</p> <p>Dado que las aplicaciones web modernas brindan a los usuarios finales funciones convenientes, la b\u00fasqueda de una URL se convierte en un escenario com\u00fan. Como resultado, la incidencia de SSRF est\u00e1 aumentando. Adem\u00e1s, la gravedad de SSRF es cada vez mayor debido a los servicios en la nube y la complejidad de las arquitecturas.</p>"},{"location":"es/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#como-se-previene","title":"C\u00f3mo se previene","text":"<p>Los desarrolladores pueden prevenir SSRF implementando algunos o todos los siguientes controles de defensa en profundidad:</p>"},{"location":"es/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#desde-la-capa-de-red","title":"Desde la capa de red","text":"<ul> <li> <p>Segmente la funcionalidad de acceso a recursos remotos en redes separadas para reducir el impacto de SSRF</p> </li> <li> <p>Haga cumplir las pol\u00edticas de firewall \"denegar por defecto\" o las reglas de control de acceso a la red para bloquear todo el tr\u00e1fico de la intranet excepto el esencial. Consejos:      ~ Establezca la propiedad y un ciclo de vida para las reglas de firewall basadas en aplicaciones.     ~ Registre en logs todos los flujos de red aceptados y bloqueados en firewalls (consulte A09: 2021-Fallas en el Registro y Monitoreo).</p> </li> </ul>"},{"location":"es/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#desde-la-capa-de-aplicacion","title":"Desde la capa de aplicaci\u00f3n:","text":"<ul> <li> <p>Sanitice y valide todos los datos de entrada proporcionados por el cliente</p> </li> <li> <p>Haga cumplir el esquema de URL, el puerto y destino a trav\u00e9s de una lista positiva de items permitidos </p> </li> <li> <p>No env\u00ede respuestas en formato \"crudo\" a los clientes</p> </li> <li> <p>Deshabilite las redirecciones HTTP</p> </li> <li> <p>Tenga en cuenta la coherencia de la URL para evitar ataques como el enlace de DNS y las condiciones de carrera de \"tiempo de verificaci\u00f3n, tiempo de uso\" (TOCTOU por sus siglas en ingl\u00e9s)</p> </li> </ul> <p>No mitigue SSRF mediante el uso de una lista de denegaci\u00f3n o una expresi\u00f3n regular. Los atacantes poseen listas de payloads, herramientas y habilidades para eludir las listas de denegaci\u00f3n.</p>"},{"location":"es/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#medidas-adicionales-a-considerar","title":"Medidas adicionales a considerar:","text":"<ul> <li> <p>No implemente otros servicios relevantes para la seguridad en los sistemas frontales (por ejemplo, OpenID). Controle el tr\u00e1fico local en estos sistemas (por ejemplo, localhost)</p> </li> <li> <p>Para frontends con grupos de usuarios dedicados y manejables, use el cifrado de red (por ejemplo, VPN) en sistemas independientes para considerar necesidades de protecci\u00f3n muy altas  </p> </li> </ul>"},{"location":"es/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#ejemplos-de-escenarios-de-ataque","title":"Ejemplos de escenarios de ataque","text":"<p>Los atacantes pueden usar SSRF para atacar sistemas protegidos detr\u00e1s de firewalls de aplicaciones web, firewalls o ACLs de red, utilizando escenarios tales como:</p> <p>Escenario #1: Escaneo de puertos de servidores internos \u2013 Si la arquitectura de red no se encuentra segmentada, los atacantes pueden trazar un mapa de las redes internas y determinar si los puertos est\u00e1n abiertos o cerrados en los servidores internos a partir de los resultados de la conexi\u00f3n o del tiempo transcurrido para conectar o rechazar las conexiones de payload SSRF.</p> <p>Escenario #2: Exposici\u00f3n de datos sensibles: los atacantes pueden acceder a archivos locales como servicios internos para obtener informaci\u00f3n confidencial como <code>file:///etc/passwd&lt;/span&gt;</code> y <code>http://localhost:28017/</code>.</p> <p>Escenario #3: Acceso al almacenamiento de metadatos de los servicios en la nube: la mayor\u00eda de los proveedores de la nube tienen almacenamiento de metadatos como <code>http://169.254.169.254/</code>. Un atacante puede leer los metadatos para obtener informaci\u00f3n confidencial.</p> <p>Escenario #4: Exposici\u00f3n de los servicios internos: el atacante puede abusar de los servicios internos para realizar m\u00e1s ataques, como la ejecuci\u00f3n remota de c\u00f3digo (RCE) o la denegaci\u00f3n de servicio (DoS).</p>"},{"location":"es/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#referencias","title":"Referencias","text":"<ul> <li> <p>OWASP - Server-Side Request Forgery Prevention Cheat Sheet</p> </li> <li> <p>PortSwigger - Server-side request forgery (SSRF)</p> </li> <li> <p>Acunetix - What is Server-Side Request Forgery (SSRF)?</p> </li> <li> <p>SSRF bible</p> </li> <li> <p>A New Era of SSRF - Exploiting URL Parser in Trending Programming Languages!</p> </li> </ul>"},{"location":"es/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#lista-de-cwes-mapeadas","title":"Lista de CWEs mapeadas","text":"<p>CWE-918 Server-Side Request Forgery (SSRF)</p>"},{"location":"es/A11_2021-Next_Steps/","title":"A11:2021 \u2013 Siguientes pasos","text":"<p>Por dise\u00f1o, el Top 10 de OWASP se limita a los diez riesgos m\u00e1s importantes. Cada Top 10 de OWASP tuvo riesgos \"en el umbral\" considerados detenidamente para su inclusi\u00f3n, pero al final, no lo fueron. No importando cu\u00e1nto intent\u00e1ramos interpretar o tergiversar los datos, los otros riesgos fueron m\u00e1s prevalentes e impactantes.</p> <p>Para aquellas organizaciones que trabajan en pos de un programa de AppSec maduro, consultores de seguridad o proveedores de herramientas que deseen ampliar la cobertura de sus ofertas, vale la pena el esfuerzo de identificar y solucionar los siguientes tres problemas.</p>"},{"location":"es/A11_2021-Next_Steps/#problemas-de-calidad-de-codigo","title":"Problemas de calidad de c\u00f3digo","text":"CWEs mapeadas\u00a0 Tasa de incidencia m\u00e1x Tasa de incidencia prom\u00a0 Explotabilidad ponderada prom\u00a0 Impacto ponderado prom Cobertura m\u00e1x\u00a0 Cobertura prom Total de Incidencias \u00a0 Total de CVEs\u00a0 38 49.46% 2.22% 7.1 6.7 60.85% 23.42% 101736 7564 <ul> <li> <p>Descripci\u00f3n. Los problemas de calidad del c\u00f3digo incluyen patrones o defectos de seguridad conocidos, reutilizaci\u00f3n de variables para m\u00faltiples prop\u00f3sitos, exposici\u00f3n de informaci\u00f3n sensible en la salida de depuraci\u00f3n, errores por uno (off-by-one), condiciones de carrera de tiempo de verificaci\u00f3n/tiempo de uso (TOC/TOU), errores de conversi\u00f3n firmados o no firmados, uso de memoria ya liberada y m\u00e1s. El sello distintivo de esta secci\u00f3n es que generalmente se pueden identificar con estrictas marcas de compilaci\u00f3n, herramientas de an\u00e1lisis de c\u00f3digo est\u00e1tico y complementos de IDE para an\u00e1lisis de tipo lint. Los lenguajes modernos por dise\u00f1o eliminaron muchos de estos problemas, como la propiedad de la memoria de Rust y el concepto de pr\u00e9stamo, el dise\u00f1o de hilos de subproceso de Rust y la tipificaci\u00f3n estricta y la verificaci\u00f3n de l\u00edmites de Go.</p> </li> <li> <p>C\u00f3mo se previene. Habilite y use las opciones de an\u00e1lisis de c\u00f3digo est\u00e1tico de su editor espec\u00edfico para cada lenguaje. Considere el uso de una herramienta de an\u00e1lisis de c\u00f3digo est\u00e1tico. Considere si fuera posible usar o migrar a un lenguaje o marco que elimine este tipo de errores, como Rust o Go.</p> </li> <li> <p>Ejemplos de escenarios de ataque. Un atacante puede obtener o actualizar informaci\u00f3n confidencial aprovechando una condici\u00f3n de carrera utilizando una variable compartida est\u00e1ticamente en varios subprocesos.       </p> </li> <li> <p>Referencias</p> </li> <li> <p>OWASP Code Review Guide</p> </li> <li> <p>Google Code Review Guide</p> </li> </ul>"},{"location":"es/A11_2021-Next_Steps/#denegacion-de-servicio","title":"Denegaci\u00f3n de servicio","text":"CWEs mapeadas\u00a0 Tasa de incidencia m\u00e1x\u00a0 Tasa de incidencia prom\u00a0 Explotabilidad ponderada prom\u00a0 Impacto ponderado prom\u00a0 Cobertura m\u00e1x\u00a0 Cobertura prom\u00a0 Incidencias totales\u00a0 Total CVEs \u00a0 8 17.54% 4.89% 8.3 5.9 79.58% 33.26% 66985 973 <ul> <li> <p>Descripci\u00f3n. La denegaci\u00f3n de servicio siempre es posible con suficientes recursos. Sin embargo, las pr\u00e1cticas de dise\u00f1o y codificaci\u00f3n tienen una influencia significativa en la magnitud de la denegaci\u00f3n de servicio. Supongamos que cualquier persona con el enlace puede acceder a un archivo grande, o que se produce una transacci\u00f3n computacionalmente costosa en cada p\u00e1gina. En ese caso, la denegaci\u00f3n de servicio requiere menos esfuerzo para llevarse a cabo.</p> </li> <li> <p>C\u00f3mo se previene. Realizar pruebas de rendimiento para el uso de CPU, E/S y memoria, redise\u00f1ar, optimizar o almacenar en cach\u00e9 las operaciones pesadas. Considere los controles de acceso para objetos m\u00e1s grandes para asegurarse de que solo las personas autorizadas puedan acceder a archivos u objetos grandes o servirlos a trav\u00e9s de una red de almacenamiento en cach\u00e9 perimetral.</p> </li> <li> <p>Ejemplos de escenarios de ataque. Un atacante podr\u00eda determinar que una operaci\u00f3n tarda entre 5 y 10 segundos en completarse. Cuando se ejecutan cuatro subprocesos simult\u00e1neos, el servidor parece dejar de responder. El atacante entonces usa 1000 subprocesos y saca de servicio todo el sistema.</p> </li> <li> <p>Referencias</p> </li> <li> <p>OWASP Cheat Sheet: Denial of Service</p> </li> <li> <p>OWASP Attacks: Denial of Service</p> </li> </ul>"},{"location":"es/A11_2021-Next_Steps/#errores-de-administracion-de-memoria","title":"Errores de administraci\u00f3n de memoria","text":"CWEs mapeadas\u00a0 Tasa de incidencia m\u00e1x\u00a0 Tasa de incidencia prom\u00a0 Explotabilidad ponderada prom\u00a0 Impacto ponderado prom\u00a0 Cobertura m\u00e1x\u00a0 Cobertura prom\u00a0 Incidencias totales\u00a0 Total CVEs\u00a0 14 7.03% 1.16% 6.7 8.1 56.06% 31.74% 26576 16184 <ul> <li> <p>Descripci\u00f3n. Las aplicaciones web usualmente se escriben en lenguajes de memoria administrada, como Java, .NET o Node.js (JavaScript o TypeScript). Sin embargo, estos lenguajes est\u00e1n escritos en lenguajes de sistema que tienen problemas de administraci\u00f3n de memoria, como desbordamientos de b\u00fafer o de pila, uso de memoria luego de liberada, desbordamiento de n\u00fameros enteros y m\u00e1s. A lo largo de los a\u00f1os, han habido muchos escapes de espacio aislado (sandbox escapes) que demuestran que aunque el lenguaje de la aplicaci\u00f3n web es nominalmente \"seguro\" para la memoria, la estructura de base no siempre lo es.               </p> </li> <li> <p>C\u00f3mo se previene. Muchas API modernas ahora est\u00e1n escritas en lenguajes seguros para la memoria como Rust o Go. En el caso de Rust, la seguridad de la memoria es una caracter\u00edstica crucial del lenguaje. Para el c\u00f3digo existente, el uso de banderas de compilador estrictas, fuerte tipado, an\u00e1lisis de c\u00f3digo est\u00e1tico y pruebas de fuzzing puede ser beneficioso para identificar p\u00e9rdidas de memoria, desbordamientos de matrices y memoria, y m\u00e1s.</p> </li> <li> <p>Ejemplos de escenarios de ataque. Los desbordamientos de b\u00fafer y pila han sido un pilar de los atacantes a lo largo de los a\u00f1os. El atacante env\u00eda datos a un programa, que almacena en un b\u00fafer de pila de tama\u00f1o insuficiente. El resultado es que se sobrescribe la informaci\u00f3n de la pila de llamadas, incluido el puntero de retorno de la funci\u00f3n. Los datos establecen el valor del puntero de retorno para que cuando la funci\u00f3n regrese, transfiera el control al c\u00f3digo malicioso contenido en los datos del atacante.</p> </li> <li> <p>Referencias</p> </li> <li> <p>OWASP Vulnerabilities: Buffer Overflow</p> </li> <li> <p>OWASP Attacks: Buffer Overflow</p> </li> <li> <p>Science Direct: Integer Overflow</p> </li> </ul>"},{"location":"es/assets/0x00-notice.es/","title":"Publicaci\u00f3n","text":"<p>Publicado el 24 de septiembre de 2021</p>"},{"location":"es/assets/0x00-notice.es/#autores-principales","title":"Autores principales","text":"<ul> <li>Andrew van der Stock (twitter: @vanderaj)</li> <li>Brian Glas (twitter: @infosecdad)</li> <li>Neil Smithline (twitter: @appsecneil)</li> <li>Torsten Gigler (twitter: @torsten_tweet)</li> </ul>"},{"location":"es/assets/0x00-notice.es/#colaboradores","title":"Colaboradores","text":"<ul> <li>Orange Tsai @orange_8361, autor de A10:2021 \u2013 Falsificaci\u00f3n de Solicitudes del Lado del Servidor (SSRF)</li> <li>Jim Manico @manicode y Jakub Ma\u0107kowski @kubamackowski - Coordinaci\u00f3n de Cheat Sheets de OWASP</li> </ul>"},{"location":"es/assets/0x00-notice.es/#como-puedes-ayudar","title":"\u00bfC\u00f3mo puedes ayudar?","text":"<p>En esta fase, solicitamos:</p> <ul> <li>Cient\u00edficos de datos: por favor, revisen nuestro an\u00e1lisis</li> <li>Dise\u00f1adores de p\u00e1ginas web: tenemos que hacer una versi\u00f3n adaptada para m\u00f3viles</li> <li>Traductores: por favor, revisen que el texto en ingl\u00e9s sea traducible</li> <li>L\u00edderes del ASVS, de la Gu\u00eda de Pruebas y de la Gu\u00eda de Revisi\u00f3n del C\u00f3digo: por favor, utilicen nuestros datos y ay\u00fadenos a enlazar nuestros documentos y est\u00e1ndares</li> </ul>"},{"location":"es/assets/0x00-notice.es/#reportar-issues-y-pull-requests","title":"Reportar issues y pull requests","text":"<p>Por favor, reporte cualquier correcci\u00f3n o problema a:</p> <ul> <li>https://github.com/OWASP/Top10/issues</li> </ul>"},{"location":"fr/#bienvenue-a-lowasp-top-10-2021","title":"Bienvenue \u00e0 l'OWASP Top 10 - 2021","text":"<p>Bienvenue \u00e0 cette nouvelle \u00e9dition de l'OWASP Top 10 ! L'OWASP Top 10 2021 apporte de nombreux changements, avec notamment une nouvelle interface et une nouvelle infographie, disponible sur un format d'une page qu'il est possible de se procurer depuis notre page d'accueil.</p> <p>Un tr\u00e8s grand merci \u00e0 l'ensemble des personnes qui ont contribu\u00e9 de leur temps et leurs donn\u00e9es pour cette it\u00e9ration. Sans vous, cette mouture n'aurait pas vu le jour. MERCI.</p>"},{"location":"fr/#les-changements-du-top-10-pour-2021","title":"Les changements du Top 10 pour 2021","text":"<p>Il y a trois nouvelles cat\u00e9gories, quatre cat\u00e9gories avec un changement de nom et de p\u00e9rim\u00e8tre, ainsi que des consolidations dans ce Top 10 2021. Nous avons chang\u00e9 les noms si n\u00e9cessaire pour se concentrer sur la cause plut\u00f4t que le sympt\u00f4me.</p> <p></p> <ul> <li>A01:2021-Contr\u00f4les d'acc\u00e8s d\u00e9faillants passe de la cinqui\u00e8me position \u00e0 celle de cat\u00e9gorie pr\u00e9sentant le risque de s\u00e9curit\u00e9 le plus s\u00e9rieux pour une application web ; les donn\u00e9es partag\u00e9es indiquent, qu'en moyenne, 3,81% des applications test\u00e9es avaient une ou plusieurs Common Weakness Enumeration (CWEs) avec plus de 318k occurrences de CWEs de cette cat\u00e9gorie. Les 34 CWEs associ\u00e9es ont eu plus d'occurrences dans les applications audit\u00e9es que n'importe quelle autre cat\u00e9gorie.</li> <li>A02:2021-D\u00e9faillances cryptographiques gagne une position et prend la deuxi\u00e8me place, pr\u00e9c\u00e9demment connue sous le nom de A3:2017-Exposition de donn\u00e9es sensibles, qui \u00e9tait un sympt\u00f4me large plut\u00f4t qu'une cause principale. L'accent est mis sur des d\u00e9faillances li\u00e9es \u00e0 la cryptographie, ce qui \u00e9tait le cas implicitement auparavant. Cette cat\u00e9gorie entra\u00eene souvent une exposition de donn\u00e9es sensibles ou une compromission de syst\u00e8me.</li> <li>A03:2021-Injection glisse \u00e0 la troisi\u00e8me position. 94% des applications ont \u00e9t\u00e9 test\u00e9es sur des vuln\u00e9rabilit\u00e9s de ce type, avec une incidence maximale de 19% et une incidence moyenne de 3,37%. Les 33 CWEs associ\u00e9es \u00e0 cette cat\u00e9gorie ont eu le deuxi\u00e8me plus grand nombre d'occurrences. Cross-Site Scripting fait d\u00e9sormais partie de cette cat\u00e9gorie dans cette \u00e9dition.</li> <li>A04:2021-Conception non s\u00e9curis\u00e9e est une nouvelle cat\u00e9gorie, avec un accent sur les d\u00e9fauts de conception. Si nous voulons ajouter des contr\u00f4les en amont, nous avons besoin de mod\u00e8les de menaces, de mod\u00e8les et principes de conception s\u00e9curis\u00e9s, et d'architectures de r\u00e9f\u00e9rence. Une conception non s\u00e9curis\u00e9e ne peut pas \u00eatre corrig\u00e9 par une impl\u00e9mentation parfaite car, par d\u00e9finition, les contr\u00f4les de s\u00e9curit\u00e9 n\u00e9cessaires pour se d\u00e9fendre contre certaines attaques n'ont jamais \u00e9t\u00e9 cr\u00e9\u00e9s.</li> <li>A05:2021-Mauvaise configuration de s\u00e9curit\u00e9 gagne une place ; 90% des applications ont \u00e9t\u00e9 test\u00e9es sur des vuln\u00e9rabilit\u00e9s de ce type, avec une incidence moyenne de 4,5% et plus de 208k occurrences des CWEs associ\u00e9es. Avec des logiciels de plus en plus param\u00e9trables, il n'est pas surprenant de voir cette cat\u00e9gorie prendre de l'ampleur. L'ancienne cat\u00e9gorie A4:2017-XML Entit\u00e9s externes (XXE) est incluse dans celle-ci.</li> <li>A06:2021-Composants vuln\u00e9rables et obsol\u00e8tes \u00e9tait pr\u00e9c\u00e9demment nomm\u00e9e Utilisation de Composants avec des Vuln\u00e9rabilit\u00e9s Connues. Elle se place deuxi\u00e8me de l'enqu\u00eate aupr\u00e8s de la communaut\u00e9 du Top 10, mais pouvait \u00e9galement entrer dans le Top 10 via l'analyse de donn\u00e9es. Cette cat\u00e9gorie progresse depuis sa neuvi\u00e8me place en 2017, elle est un probl\u00e8me connu dont nous avons du mal \u00e0 tester et \u00e0 mesurer les risques. Il s'agit de la seule cat\u00e9gorie \u00e0 n'avoir aucunes Common Vulnerability and Exposures (CVEs) associ\u00e9es aux CWEs concern\u00e9es, en cons\u00e9quence les coefficients d'impact et de poids ont \u00e9t\u00e9 renseign\u00e9s \u00e0 5.0 par d\u00e9faut.</li> <li>A07:2021-Identification et authentification de mauvaise qualit\u00e9 \u00e9tait pr\u00e9c\u00e9demment Authentification de mauvaise qualit\u00e9, elle perd la deuxi\u00e8me place. Elle inclut d\u00e9sormais des CWEs \u00e9galement li\u00e9es aux \u00e9checs d'identification. Cette cat\u00e9gorie est toujours pr\u00e9sente dans le Top 10, mais la mise \u00e0 disposition croissante de frameworks standardis\u00e9s semble aider.</li> <li>A08:2021-Manque d'int\u00e9grit\u00e9 des donn\u00e9es et du logiciel est une nouvelle cat\u00e9gorie, se concentrant sur la formulation d'hypoth\u00e8ses sur les mises \u00e0 jour logicielles, les donn\u00e9es critiques et les pipelines CI/CD sans v\u00e9rifier leur int\u00e9grit\u00e9. L'un des impacts les plus \u00e9lev\u00e9s \u00e0 partir des donn\u00e9es de Common Vulnerability and Exposures/Common Vulnerability Scoring System (CVE/CVSS) associ\u00e9es aux 10 CWEs de cette cat\u00e9gorie. A8:2017-D\u00e9s\u00e9rialisation non s\u00e9curis\u00e9e, list\u00e9e en 2017, est d\u00e9sormais partie int\u00e9grante de cette cat\u00e9gorie.</li> <li>A09:2021-Carence des syst\u00e8mes de contr\u00f4le et de journalisation, pr\u00e9c\u00e9demment A10:2017-Supervision et Journalisation Insuffisantes, est ajout\u00e9e de l'enqu\u00eate aupr\u00e8s de l'industrie (3\u00e8me), pr\u00e9c\u00e9demment \u00e0 la dixi\u00e8me place. Cette cat\u00e9gorie a \u00e9t\u00e9 \u00e9tendue pour inclure plus de types de d\u00e9faillances, est difficile \u00e0 tester et est d\u00e8s lors mal repr\u00e9sent\u00e9e dans les donn\u00e9es CVE/CVSS. Toutefois, des incidents dans cette cat\u00e9gorie peuvent impacter directement la visibilit\u00e9, la lev\u00e9e d'alertes et l'analyse forensique.</li> <li>A10:2021-Falsification de requ\u00eate c\u00f4t\u00e9 serveur provient de l'enqu\u00eate aupr\u00e8s de la communaut\u00e9 Top 10 (1\u00e8re). Les donn\u00e9es montrent une incidence faible, avec un taux de couverture des tests sup\u00e9rieur \u00e0 la moyenne, accompagn\u00e9 de notes de potentiel d'exploitabilit\u00e9 et d'impact sup\u00e9rieur \u00e0 la moyenne. Cette cat\u00e9gorie est un exemple o\u00f9 les membres de la communaut\u00e9 s\u00e9curit\u00e9 nous indiquent que cette cat\u00e9gorie est importante, m\u00eame si cela ne transpara\u00eet pas encore dans les donn\u00e9es.</li> </ul>"},{"location":"fr/#methodologie","title":"M\u00e9thodologie","text":"<p>Cette version du Top 10 est bien plus bas\u00e9e sur des donn\u00e9es que les pr\u00e9c\u00e9dentes, mais elle n'est pas pour autant aveugl\u00e9e par celles-ci. Parmi les dix cat\u00e9gories, huit proviennent des donn\u00e9es fournies et les deux derni\u00e8res proviennent d'une enqu\u00eate \u00e0 haut niveau aupr\u00e8s de la communaut\u00e9. Nous faisons ceci pour une raison fondamentale, observer les donn\u00e9es consiste \u00e0 observer le pass\u00e9. Les chercheurs en s\u00e9curit\u00e9 s'investissent pour trouver de nouvelles vuln\u00e9rabilit\u00e9s et de nouveaux moyens pour les d\u00e9tecter. Un temps certain est n\u00e9cessaire pour int\u00e9grer ces tests au sein des outils et des processus. Au moment o\u00f9 nous pouvons tester ces vuln\u00e9rabilit\u00e9s \u00e0 l'\u00e9chelle, des ann\u00e9es se sont bien souvent \u00e9coul\u00e9es. Pour \u00e9quilibrer cette approche, nous avons utilis\u00e9 une enqu\u00eate communautaire pour demander aux experts en s\u00e9curit\u00e9 applicative et en d\u00e9veloppement, en premi\u00e8re ligne, ce qu'ils constatent comme failles essentielles, que les donn\u00e9es pourraient ne pas encore montrer.</p> <p>Nous avons adopt\u00e9 quelques changements importants pour continuer \u00e0 faire m\u00fbrir le Top 10.</p>"},{"location":"fr/#comment-les-categories-sont-structurees","title":"Comment les cat\u00e9gories sont structur\u00e9es","text":"<p>Quelques cat\u00e9gories ont chang\u00e9 depuis la pr\u00e9c\u00e9dente \u00e9dition de l'OWASP Top Ten. Voici ici un bref r\u00e9sum\u00e9 des changements.</p> <p>Les pr\u00e9c\u00e9dentes collectes de donn\u00e9es \u00e9taient concentr\u00e9es sur un sous ensemble d'approximativement 30 CWEs accompagn\u00e9es d'un champ demandant des d\u00e9couvertes compl\u00e9mentaires. Nous avons appris que les organisations se concentraient sur les seules 30 CWEs et n'ajoutaient que rarement d'autres CWEs qu'elles rencontraient. Dans cette \u00e9dition, nous nous sommes content\u00e9s de demander des donn\u00e9es, sans aucune restriction sur les CWEs. Nous avons demand\u00e9 le nombre d'applications test\u00e9es pour une ann\u00e9e donn\u00e9e (\u00e0 partir de 2017), et le nombre d'applications avec au moins une instance d'une CWE trouv\u00e9e lors des tests. Ce format nous permet de d\u00e9terminer la pr\u00e9valence de chaque CWE au sein des applications. Nous ignorons la fr\u00e9quence pour nos besoins ; bien que cela pourrait \u00eatre n\u00e9cessaire dans d'autres situations, cela cache la pr\u00e9valence au sein du panel. Qu'une application ait quatre instances d'une CWE ou 4 000 ne fait pas partie du calcul du Top 10. Nous sommes pass\u00e9s d'approximativement 30 CWEs \u00e0 pr\u00e8s de 400 CWEs \u00e0 analyser dans le jeu de donn\u00e9es. Nous pr\u00e9voyons d'ajouter des analyses compl\u00e9mentaires dans le futur. Cette augmentation significative dans le nombre de CWEs n\u00e9cessite des changements dans la fa\u00e7on dont les cat\u00e9gories sont structur\u00e9es.</p> <p>Nous avons pass\u00e9 plusieurs mois \u00e0 regrouper et cat\u00e9goriser les CWEs. Nous aurions pu continuer encore pendant des mois. Nous avons d\u00fb nous arr\u00eater \u00e0 un moment donn\u00e9. Il existe \u00e0 la fois des CWEs de type cause racine et sympt\u00f4me, o\u00f9 les types cause racine sont de la forme \"D\u00e9faillances cryptographiques\" et \"Mauvaise configuration\", en contraste avec les types sympt\u00f4me tels que \"Exposition de donn\u00e9es sensibles\" et \"D\u00e9ni de service\". Nous avons d\u00e9cid\u00e9 de nous concentrer sur les types cause racine autant que possible car ils sont plus logiques pour fournir des conseils d'identification et de rem\u00e9diation. Se concentrer sur la cause racine plut\u00f4t que le sympt\u00f4me n'est pas un concept nouveau ; le Top 10 a \u00e9t\u00e9 un m\u00e9lange de sympt\u00f4mes et de causes racines. Les CWEs le sont \u00e9galement ; nous faisons ce choix d\u00e9lib\u00e9r\u00e9ment et lan\u00e7ons un appel \u00e0 ce sujet. Il y a une moyenne de 19,6 CWEs par cat\u00e9gorie dans cette \u00e9dition, avec un minimum d'1 CWE pour A10:2021-Falsification de requ\u00eate c\u00f4t\u00e9 serveur et un maximum de 40 CWEs pour A04:2021-Conception non s\u00e9curis\u00e9e. Cette nouvelle organisation de cat\u00e9gories apporte des avantages pour les formations, les soci\u00e9t\u00e9s peuvent se concentrer sur les CWEs les plus pertinentes pour un langage ou un framework.</p>"},{"location":"fr/#comment-les-donnees-ont-ete-utilisees-pour-selectionner-les-categories","title":"Comment les donn\u00e9es ont \u00e9t\u00e9 utilis\u00e9es pour s\u00e9lectionner les cat\u00e9gories","text":"<p>En 2017, nous avons s\u00e9lectionn\u00e9 les cat\u00e9gories \u00e0 partir du taux d'incidence pour d\u00e9terminer la probabilit\u00e9, puis les avons class\u00e9es via des discussions en \u00e9quipe bas\u00e9es sur des d\u00e9cennies d'exp\u00e9rience sur des crit\u00e8res d'Exploitabilit\u00e9, D\u00e9tectabilit\u00e9 (\u00e9galement probabilit\u00e9) et Impact technique. Pour 2021, nous souhaitons, si possible, utiliser des donn\u00e9es pour Exploitabilit\u00e9 et Impact (technique).</p> <p>Nous avons t\u00e9l\u00e9charg\u00e9 OWASP Dependency Check et extrait les scores CVSS d'exploitabilit\u00e9 et d'impact agr\u00e9g\u00e9s par CWE connexes. Cela a n\u00e9cessit\u00e9 un temps de recherche significatif, car toutes les CVEs ont un score CVSSv2, mais celui-ci poss\u00e8de des d\u00e9fauts que CVSSv3 devrait corriger. Apr\u00e8s un certain temps, toutes les CVEs re\u00e7oivent \u00e9galement un score CVSSv3. De plus, les plages de notation et les formules ont \u00e9t\u00e9 mises-\u00e0-jour entre CVSSv2 et CVSSv3.</p> <p>En CVSSv2, Exploitabilit\u00e9 et Impact (technique) peuvent atteindre 10, mais la formule les ram\u00e8ne \u00e0 60\u00a0% pour Exploitabilit\u00e9 et 40\u00a0% pour Impact. En CVSSv3, le maximum th\u00e9orique est limit\u00e9 \u00e0 6,0 pour Exploitabilit\u00e9 et 4,0 pour Impact. Avec la pond\u00e9ration prise en compte, le score d'impact a augment\u00e9, de pr\u00e8s d'un point et demi en moyenne dans CVSSv3, et l'exploitabilit\u00e9 a baiss\u00e9 de pr\u00e8s d'un demi-point en moyenne.</p> <p>Il y a 125\u00a0000 enregistrements d'une CVE associ\u00e9e \u00e0 une CWE dans les donn\u00e9es de la National Vulnerability Database (NVD) extraites d'OWASP Dependency Check, et il y a 241 CWE uniques associ\u00e9es \u00e0 une CVE. 62\u00a0000 enregistrements ont un score CVSSv3, ce qui repr\u00e9sente environ la moiti\u00e9 des donn\u00e9es.</p> <p>Pour le Top Ten 2021, nous avons calcul\u00e9 les scores moyens d'exploitabilit\u00e9 et d'impact de la mani\u00e8re suivante. Nous avons regroup\u00e9 toutes les CVEs avec des scores CVSS par CWE et pond\u00e9r\u00e9 \u00e0 la fois exploitabilit\u00e9 et impact not\u00e9s par le pourcentage de la population qui disposait d'un score CVSSv3, plus la population restante de scores CVSSv2 pour obtenir une moyenne globale. Nous avons associ\u00e9 ces moyennes aux CWEs de l'ensemble de donn\u00e9es \u00e0 utiliser comme notes d'Exploitabilit\u00e9 et d'Impact (technique) pour l'autre moiti\u00e9 de l'\u00e9quation de risque.</p>"},{"location":"fr/#pourquoi-ne-pas-se-reposer-uniquement-sur-des-donnees-statistiques","title":"Pourquoi ne pas se reposer uniquement sur des donn\u00e9es statistiques ?","text":"<p>Les r\u00e9sultats obtenus \u00e0 partir des donn\u00e9es sont principalement limit\u00e9s \u00e0 ce que nous pouvons tester de mani\u00e8re automatis\u00e9e. Parlez \u00e0 un professionnel chevronn\u00e9 de la s\u00e9curit\u00e9, il vous parlera de ce qu'il trouve et des tendances qu'il observe qui ne sont pas encore dans les donn\u00e9es. Il faut du temps aux gens pour d\u00e9velopper des m\u00e9thodologies de test pour certains types de vuln\u00e9rabilit\u00e9s, puis plus de temps pour que ces tests soient automatis\u00e9s et ex\u00e9cut\u00e9s sur un grand nombre d'applications. Tout ce que nous trouvons sont des vestiges du pass\u00e9 qui pourraient manquer les tendances de l'ann\u00e9e \u00e9coul\u00e9e, qui ne sont pas pr\u00e9sentes dans les donn\u00e9es.</p> <p>Par cons\u00e9quent, nous ne s\u00e9lectionnons que huit cat\u00e9gories sur dix \u00e0 partir des donn\u00e9es, car elles sont incompl\u00e8tes. Les deux autres cat\u00e9gories proviennent de l'enqu\u00eate communautaire Top 10. Cela permet aux praticiens en premi\u00e8re ligne de voter pour ce qu'ils consid\u00e8rent comme les risques les plus \u00e9lev\u00e9s qui pourraient ne pas \u00eatre repr\u00e9sent\u00e9s par les donn\u00e9es (et qui pourraient ne jamais \u00eatre exprim\u00e9s par les donn\u00e9es).</p>"},{"location":"fr/#pourquoi-le-taux-dincidence-au-lieu-de-la-frequence","title":"Pourquoi le taux d'incidence au lieu de la fr\u00e9quence ?","text":"<p>Il y a trois sources principales de donn\u00e9es. Nous les identifions comme \u00e9tant l'outillage assist\u00e9 par l'homme (OaH), l'homme assist\u00e9 par l'outil (HaO) et l'outillage brut.</p> <p>L'outillage et l'OaH sont des g\u00e9n\u00e9rateurs de recherche \u00e0 haute fr\u00e9quence. Les outils cherchent des vuln\u00e9rabilit\u00e9s sp\u00e9cifiques, tentent inlassablement de trouver chaque instance de cette vuln\u00e9rabilit\u00e9 et g\u00e9n\u00e8rent un nombre \u00e9lev\u00e9 de d\u00e9couvertes pour certains types de vuln\u00e9rabilit\u00e9. Prenez Cross-Site Scripting, qui est g\u00e9n\u00e9ralement l'une de ces deux variantes : il s'agit soit d'une erreur mineure et isol\u00e9e, soit d'un probl\u00e8me syst\u00e9mique. Lorsqu'il s'agit d'un probl\u00e8me syst\u00e9mique, le nombre de constatations peut se chiffrer par milliers pour une seule application. Cette fr\u00e9quence \u00e9lev\u00e9e noie la plupart des autres vuln\u00e9rabilit\u00e9s trouv\u00e9es dans les rapports ou les donn\u00e9es.</p> <p>L'HaO, d'autre part, trouvera une gamme plus large de types de vuln\u00e9rabilit\u00e9s mais \u00e0 une fr\u00e9quence beaucoup plus faible en raison de contraintes de temps. Lorsque les humains testent une application et d\u00e9tectent une vuln\u00e9rabilit\u00e9 comme Cross-Site Scripting, ils trouveront g\u00e9n\u00e9ralement trois ou quatre instances et s'arr\u00eateront. Ils peuvent d\u00e9terminer une d\u00e9couverte syst\u00e9mique et la r\u00e9diger avec une recommandation \u00e0 corriger \u00e0 l'\u00e9chelle de l'application. Il n'y a pas de besoin (ou de temps) de trouver chaque instance.</p> <p>Supposons que nous prenions ces deux ensembles de donn\u00e9es distincts et essayions de les fusionner en se basant sur la fr\u00e9quence. Dans ce cas, les donn\u00e9es d'outillage et d'OaH noieront les donn\u00e9es HaO plus pr\u00e9cises (mais plus larges) et expliquent en grande partie pourquoi une cat\u00e9gorie comme Cross-Site Scripting a \u00e9t\u00e9 si bien class\u00e9e dans de nombreuses listes alors que l'impact est g\u00e9n\u00e9ralement faible \u00e0 mod\u00e9r\u00e9. C'est \u00e0 cause du volume consid\u00e9rable de r\u00e9sultats. Le Cross-Site Scripting est \u00e9galement assez facile \u00e0 tester, il y a donc beaucoup plus de tests pour cela.</p> <p>En 2017, nous avons introduit le taux d'incidence pour jeter un nouveau regard sur les donn\u00e9es et fusionner proprement les donn\u00e9es d'outillage et d'OaH avec les donn\u00e9es d'HaO. Le taux d'incidence demande quel pourcentage de la population d'applications avait au moins une instance d'un type de vuln\u00e9rabilit\u00e9. Peu nous importe si c'\u00e9tait ponctuel ou syst\u00e9mique. Ce n'est pas pertinent pour nos fins ; nous avons seulement besoin de savoir combien d'applications ont eu au moins une instance, ce qui permet de fournir une vue plus claire des r\u00e9sultats des tests sur plusieurs types de tests sans noyer les donn\u00e9es dans des r\u00e9sultats \u00e0 haute fr\u00e9quence. Cela correspond \u00e0 une vue li\u00e9e au risque, car un attaquant n'a besoin que d'une seule instance pour attaquer une application avec succ\u00e8s via la cat\u00e9gorie.</p>"},{"location":"fr/#quel-est-votre-processus-de-collecte-et-danalyse-des-donnees","title":"Quel est votre processus de collecte et d'analyse des donn\u00e9es ?","text":"<p>Nous avons formalis\u00e9 le processus de collecte de donn\u00e9es de l'OWASP Top 10 lors de l'Open Security Summit en 2017. Les dirigeants de l'OWASP Top 10 et la communaut\u00e9 ont pass\u00e9 deux jours \u00e0 formaliser un processus de collecte de donn\u00e9es transparent. Cette m\u00e9thodologie est utilis\u00e9e pour la seconde fois lors de l'\u00e9dition 2021.</p> <p>Nous publions un appel \u00e0 donn\u00e9es via les canaux de r\u00e9seaux sociaux \u00e0 notre disposition, \u00e0 la fois au niveau du projet et de l'OWASP. Sur la page du projet sur le site de l'OWASP, nous listons les \u00e9l\u00e9ments de donn\u00e9es et la structure que nous recherchons et comment les soumettre. Dans le projet GitHub, nous avons des exemples de fichiers qui servent de mod\u00e8les. Nous travaillons avec des organisations au besoin pour aider \u00e0 comprendre la structure et la correspondance avec les CWEs.</p> <p>Nous obtenons des donn\u00e9es d'organisations sp\u00e9cialis\u00e9es dans l'audit de s\u00e9curit\u00e9, de plateformes de bug bounty et d'organisations qui fournissent des donn\u00e9es de tests internes. Une fois que nous avons les donn\u00e9es, nous les chargeons ensemble et effectuons une analyse fondamentale de quelles CWEs sont associ\u00e9es aux cat\u00e9gories de risque. Il existe un chevauchement entre certaines CWEs et d'autres sont tr\u00e8s \u00e9troitement li\u00e9es (par exemple, les vuln\u00e9rabilit\u00e9s cryptographiques). Toutes les d\u00e9cisions li\u00e9es aux donn\u00e9es brutes soumises sont document\u00e9es et publi\u00e9es pour \u00eatre ouvertes et transparentes avec la fa\u00e7on dont nous avons normalis\u00e9 les donn\u00e9es.</p> <p>Nous examinons les huit cat\u00e9gories avec les taux d'incidence les plus \u00e9lev\u00e9s pour l'inclusion dans le Top 10. Nous examinons \u00e9galement les r\u00e9sultats de l'enqu\u00eate communautaire Top 10 pour voir lesquels peuvent d\u00e9j\u00e0 \u00eatre pr\u00e9sents dans les donn\u00e9es. Les deux premiers votes qui ne sont pas d\u00e9j\u00e0 pr\u00e9sents dans les donn\u00e9es seront s\u00e9lectionn\u00e9s pour les deux autres places du Top 10. Une fois les dix s\u00e9lectionn\u00e9es, nous avons appliqu\u00e9 des facteurs g\u00e9n\u00e9ralis\u00e9s pour l'exploitabilit\u00e9 et l'impact ; pour aider \u00e0 classer le Top 10 2021 dans un ordre bas\u00e9 sur les risques.</p>"},{"location":"fr/#facteurs-des-donnees","title":"Facteurs des donn\u00e9es","text":"<p>Des facteurs sont r\u00e9pertori\u00e9s pour chacune des 10 principales cat\u00e9gories, voici ce qu'ils signifient :</p> <ul> <li>CWEs associ\u00e9es : le nombre de CWEs associ\u00e9es \u00e0 une cat\u00e9gorie par l'\u00e9quipe du Top 10.</li> <li>Taux d'incidence : le taux d'incidence est le pourcentage d'applications vuln\u00e9rables \u00e0 cette CWE parmi la population test\u00e9e par cette organisation pour cette ann\u00e9e.</li> <li>Couverture (Test) : Le pourcentage d'applications test\u00e9es par toutes les organisations pour une CWE donn\u00e9e.</li> <li>Exploitation pond\u00e9r\u00e9e : le sous-score Exploitation des scores CVSSv2 et CVSSv3 attribu\u00e9s aux CVEs associ\u00e9es aux CWEs, normalis\u00e9s et plac\u00e9s sur une \u00e9chelle de 10 points.</li> <li>Impact pond\u00e9r\u00e9 : le sous-score d'impact des scores CVSSv2 et CVSSv3 attribu\u00e9s aux CVEs associ\u00e9es aux CWEs, normalis\u00e9s et plac\u00e9s sur une \u00e9chelle de 10 points.</li> <li>Nombre total d'occurrences : nombre total d'applications trouv\u00e9es pour lesquelles les CWEs sont associ\u00e9es \u00e0 une cat\u00e9gorie.</li> <li>Nombre total de CVEs : nombre total de CVEs dans la base de donn\u00e9es NVD qui ont \u00e9t\u00e9 associ\u00e9es aux CWEs associ\u00e9es \u00e0 une cat\u00e9gorie.</li> </ul>"},{"location":"fr/#merci-a-nos-contributeurs-de-donnees","title":"Merci \u00e0 nos contributeurs de donn\u00e9es","text":"<p>Les organisations suivantes (ainsi que certains donateurs anonymes) ont aimablement fait don des donn\u00e9es de plus de 500 000 applications pour en faire l'ensemble de donn\u00e9es de s\u00e9curit\u00e9 des applications le plus vaste et le plus complet. Sans vous, cela ne serait pas possible.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"fr/#merci-a-notre-sponsor","title":"Merci \u00e0 notre sponsor","text":"<p>L'\u00e9quipe de l'OWASP Top 10 2021 remercie le soutien financier de Secure Code Warrior et Just Eat.</p> <p> </p> <p></p>"},{"location":"fr/0x00_2021-notice/","title":"Publication","text":"<p>Publi\u00e9 le 24 septembre 2021</p>"},{"location":"fr/0x00_2021-notice/#auteurs-principaux","title":"Auteurs principaux","text":"<ul> <li>Andrew van der Stock (twitter: @vanderaj)</li> <li>Brian Glas (twitter: @infosecdad)</li> <li>Neil Smithline (twitter: @appsecneil)</li> <li>Torsten Gigler (twitter: @torsten_tweet)</li> </ul>"},{"location":"fr/0x00_2021-notice/#contributeurs","title":"Contributeurs","text":"<ul> <li>Orange Tsai @orange_8361, Auteur de A10-2021: Falsification de requ\u00eate c\u00f4t\u00e9 serveur</li> <li>Jim Manico @manicode et Jakub Ma\u0107kowski @kubamackowski - Coordination avec le projet OWASP CheatSheets</li> </ul>"},{"location":"fr/0x00_2021-notice/#comment-pouvez-vous-aider","title":"Comment pouvez-vous aider","text":"<p>\u00c0 ce stade nous recherchons :</p> <ul> <li>Data scientists - veuillez examiner notre analyse</li> <li>Concepteurs Web - nous avons besoin d'une version mobile</li> <li>Traducteurs - veuillez revoir le texte anglais pour vous assurer qu'il est traduisible</li> <li>Leadership ASVS, Testing Guide et Code Review Guide - veuillez utiliser nos donn\u00e9es et nous aider \u00e0 lier nos documents et nos normes ensemble</li> </ul>"},{"location":"fr/0x00_2021-notice/#journalisation-des-erreurs-et-contributions","title":"Journalisation des erreurs et contributions","text":"<p>Veuillez signaler toute correction ou probl\u00e8me :</p> <ul> <li>https://github.com/OWASP/Top10/issues</li> </ul>"},{"location":"fr/0x01_2021-about-owasp/","title":"\u00c0 propos de l'OWASP","text":"<p>L'Open Worldwide Application Security Project (OWASP) est une communaut\u00e9 ouverte d\u00e9di\u00e9e \u00e0 permettre aux organisations de d\u00e9velopper, acheter et maintenir des applications et des API fiables.</p> <p>\u00c0 l'OWASP, vous trouverez gratuitement et en libre acc\u00e8s :</p> <ul> <li>Des outils et normes de s\u00e9curit\u00e9 des applications</li> <li>Des articles de recherche de pointe</li> <li>Des contr\u00f4les de s\u00e9curit\u00e9 standard et des composants</li> <li>Des livres complets sur les tests de s\u00e9curit\u00e9 des applications, le d\u00e9veloppement de code s\u00e9curis\u00e9 et la r\u00e9vision de code s\u00e9curis\u00e9</li> <li>Des pr\u00e9sentations et vid\u00e9os</li> <li>Des Cheat Sheets sur de nombreux sujets courants</li> <li>Des R\u00e9unions de chapitres</li> <li>Des \u00c9v\u00e9nements, formations et conf\u00e9rences.</li> <li>Des Google Groupes</li> </ul> <p>En savoir plus sur : https://www.owasp.org.</p> <p>Tous les outils, documents, vid\u00e9os, pr\u00e9sentations et chapitres OWASP sont gratuits et ouverts \u00e0 toute personne int\u00e9ress\u00e9e \u00e0 am\u00e9liorer la s\u00e9curit\u00e9 des applications.</p> <p>Nous pr\u00e9conisons d'aborder la s\u00e9curit\u00e9 des applications comme un probl\u00e8me de personnes, de processus et de technologie, car les approches les plus efficaces de la s\u00e9curit\u00e9 des applications n\u00e9cessitent des am\u00e9liorations dans ces domaines.</p> <p>L'OWASP est un nouveau type d'organisation. Notre ind\u00e9pendance vis-\u00e0-vis des pressions commerciales nous permet de fournir des informations impartiales, pratiques et rentables sur la s\u00e9curit\u00e9 des applications.</p> <p>OWASP n'est affili\u00e9 \u00e0 aucune entreprise technologique, bien que nous soutenions l'utilisation \u00e9clair\u00e9e de la d'outils commerciaux de s\u00e9curit\u00e9. L'OWASP produit de nombreux types de mat\u00e9riaux de mani\u00e8re collaborative, transparente et ouverte.</p> <p>La Fondation OWASP est l'entit\u00e9 \u00e0 but non lucratif qui assure la r\u00e9ussite \u00e0 long terme du projet. Presque toutes les personnes associ\u00e9es \u00e0 l'OWASP sont des b\u00e9n\u00e9voles, y compris le conseil d'administration de l'OWASP, les chefs de section, les chefs de projet et les membres du projet. Nous soutenons la recherche innovante en mati\u00e8re de s\u00e9curit\u00e9 avec des subventions et des infrastructures.</p> <p>Rejoignez-nous !</p>"},{"location":"fr/0x01_2021-about-owasp/#droit-dauteur-et-licence","title":"Droit d'auteur et licence","text":"<p>Copyright \u00a9 2003-2025 La Fondation OWASP\u00ae. Ce document est publi\u00e9 sous la licence Creative Commons Attribution Share-Alike 4.0. Pour toute r\u00e9utilisation ou distribution, vous devez indiquer clairement aux autres les termes de la licence de cette \u0153uvre.</p>"},{"location":"fr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/","title":"Comment d\u00e9marrer un programme de s\u00e9curit\u00e9 des applications (SecApp) avec l'OWASP Top 10","text":"<p>Auparavant, l'OWASP Top 10 n'avait jamais \u00e9t\u00e9 con\u00e7u pour servir de base \u00e0 un programme SecApp. Cependant, il est essentiel de commencer quelque part pour de nombreuses organisations qui commencent tout juste leur parcours en mati\u00e8re de s\u00e9curit\u00e9 des applications. Le Top 10 OWASP 2021 est un bon d\u00e9but en tant que r\u00e9f\u00e9rence pour les listes de contr\u00f4le, etc., mais il n'est pas suffisant en soi.</p>"},{"location":"fr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etape-1-identifiez-les-lacunes-et-les-objectifs-de-votre-programme-de-securite-des-applications","title":"\u00c9tape 1. Identifiez les lacunes et les objectifs de votre programme de s\u00e9curit\u00e9 des applications","text":"<p>De nombreux programmes de s\u00e9curit\u00e9 des applications (SecApp) essaient de courir avant de savoir marcher. Ces efforts sont vou\u00e9s \u00e0 l'\u00e9chec. Nous encourageons fortement les RSSI et les dirigeants SecApp \u00e0 utiliser l'OWASP Software Assurance Maturity Model (SAMM) pour identifier les faiblesses et les domaines \u00e0 am\u00e9liorer sur une p\u00e9riode de 1 \u00e0 3 ans. La premi\u00e8re \u00e9tape consiste \u00e0 \u00e9valuer o\u00f9 vous en \u00eates maintenant, \u00e0 identifier les lacunes en mati\u00e8re de gouvernance, de conception, de mise en \u0153uvre, de v\u00e9rification et d'op\u00e9rations que vous devez r\u00e9soudre imm\u00e9diatement par rapport \u00e0 celles qui peuvent attendre, et de prioriser la mise en \u0153uvre ou l'am\u00e9lioration des quinze pratiques de s\u00e9curit\u00e9 OWASP SAMM. OWASP SAMM peut vous aider \u00e0 cr\u00e9er et \u00e0 mesurer des am\u00e9liorations dans vos efforts d'assurance logicielle.</p>"},{"location":"fr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etape-2-planifier-un-cycle-de-vie-de-developpement-securise-pour-une-voie-pavee","title":"\u00c9tape 2. Planifier un cycle de vie de d\u00e9veloppement s\u00e9curis\u00e9 pour une voie pav\u00e9e","text":"<p>Traditionnellement l'apanage des soi-disant \"licornes\", le concept de voie pav\u00e9e est le moyen le plus simple d'avoir le plus d'impact et de faire \u00e9voluer les ressources SecApp avec la v\u00e9locit\u00e9 de l'\u00e9quipe de d\u00e9veloppement, qui n'augmente que chaque ann\u00e9e.</p> <p>Le concept de voie pav\u00e9e est \"le moyen le plus simple est aussi le moyen le plus s\u00fbr\" et devrait impliquer une culture de partenariats profonds entre l'\u00e9quipe de d\u00e9veloppement et l'\u00e9quipe de s\u00e9curit\u00e9, de pr\u00e9f\u00e9rence de telle sorte qu'ils forment une seule et m\u00eame \u00e9quipe. La voie pav\u00e9e vise \u00e0 am\u00e9liorer, mesurer, d\u00e9tecter et remplacer en permanence les alternatives non s\u00e9curis\u00e9es en disposant d'une biblioth\u00e8que de remplacements s\u00e9curis\u00e9s \u00e0 l'\u00e9chelle de l'entreprise, avec des outils pour aider \u00e0 voir o\u00f9 des am\u00e9liorations peuvent \u00eatre apport\u00e9es en adoptant la voie pav\u00e9e. Cela permet aux outils de d\u00e9veloppement existants de signaler les versions non s\u00e9curis\u00e9es et d'aider les \u00e9quipes de d\u00e9veloppement \u00e0 se corriger elles-m\u00eames des alternatives non s\u00e9curis\u00e9es.</p> <p>La voie pav\u00e9e peut sembler beaucoup de choses \u00e0 dig\u00e9rer, mais elle devrait \u00eatre construite progressivement au fil du temps. Il existe d'autres formes de programmes SecApp, notamment le cycle de vie du d\u00e9veloppement de la s\u00e9curit\u00e9 de Microsoft. Toutes les m\u00e9thodologies de programme SecApp ne conviennent pas \u00e0 toutes les entreprises.</p>"},{"location":"fr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etape-3-mettez-en-place-la-voie-pavee-avec-vos-equipes-de-developpement","title":"\u00c9tape 3. Mettez en place la voie pav\u00e9e avec vos \u00e9quipes de d\u00e9veloppement","text":"<p>Les voies pav\u00e9es sont construites avec le consentement et la participation directe des \u00e9quipes de d\u00e9veloppement et d'exploitation concern\u00e9es. La voie pav\u00e9e doit \u00eatre align\u00e9e sur la strat\u00e9gie de l'entreprise et aider \u00e0 fournir plus rapidement des applications plus s\u00e9curis\u00e9es. D\u00e9velopper la voie pav\u00e9e devrait \u00eatre un exercice holistique couvrant l'ensemble de l'entreprise ou de l'\u00e9cosyst\u00e8me d'applications, et non un pansement par application, comme autrefois.</p>"},{"location":"fr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etape-4-migrer-toutes-les-applications-a-venir-et-existantes-vers-la-voie-pavee","title":"\u00c9tape 4. Migrer toutes les applications \u00e0 venir et existantes vers la voie pav\u00e9e","text":"<p>Ajoutez des outils de d\u00e9tection \u00e0 la voie pav\u00e9e au fur et \u00e0 mesure que vous les d\u00e9veloppez et fournissez des informations aux \u00e9quipes de d\u00e9veloppement pour am\u00e9liorer la s\u00e9curit\u00e9 de leurs applications en leur expliquant comment elles peuvent adopter directement des \u00e9l\u00e9ments de la voie pav\u00e9e. Une fois qu'un aspect de la voie pav\u00e9e a \u00e9t\u00e9 adopt\u00e9, les organisations doivent mettre en \u0153uvre des contr\u00f4les d'int\u00e9gration continue qui inspectent le code existant et les nouvelles contributions qui utilisent des alternatives interdites et avertissent ou rejettent la version ou la contribution. Cela emp\u00eache les options non s\u00e9curis\u00e9es de s'infiltrer dans le code au fil du temps, \u00e9vitant ainsi une dette technique et une application non s\u00e9curis\u00e9e d\u00e9fectueuse. De tels avertissements doivent \u00eatre li\u00e9s \u00e0 l'alternative s\u00e9curis\u00e9e, afin que l'\u00e9quipe de d\u00e9veloppement re\u00e7oive imm\u00e9diatement la bonne r\u00e9ponse. Ils peuvent remanier et adopter rapidement le composant de la voie pav\u00e9e.</p>"},{"location":"fr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etape-5-tester-que-la-voie-pavee-a-attenue-les-problemes-signales-dans-le-top-10-de-lowasp","title":"\u00c9tape 5. Tester que la voie pav\u00e9e a att\u00e9nu\u00e9 les probl\u00e8mes signal\u00e9s dans le Top 10 de l'OWASP","text":"<p>Les composants de la voie pav\u00e9e devraient r\u00e9soudre un probl\u00e8me important signal\u00e9 dans l'OWASP Top 10, par exemple, comment d\u00e9tecter ou r\u00e9parer automatiquement les composants vuln\u00e9rables, ou un plugin IDE d'analyse de code statique pour d\u00e9tecter les injections, ou encore mieux, commencer \u00e0 utiliser une d\u00e9pendance connue pour \u00eatre s\u00e9curis\u00e9e contre les injections. Plus ces remplacements s\u00e9curis\u00e9s sont fournis aux \u00e9quipes, mieux c'est. Une t\u00e2che vitale de l'\u00e9quipe SecApp est de s'assurer que la s\u00e9curit\u00e9 de ces composants est continuellement \u00e9valu\u00e9e et am\u00e9lior\u00e9e. Une fois qu'ils sont am\u00e9lior\u00e9s, une forme de voie de communication avec les consommateurs du composant doit indiquer qu'une mise \u00e0 niveau doit se produire, de pr\u00e9f\u00e9rence automatiquement, mais sinon, au moins mise en \u00e9vidence sur un tableau de bord ou similaire.</p>"},{"location":"fr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etape-6-transformez-votre-programme-en-un-programme-secapp-mature","title":"\u00c9tape 6. Transformez votre programme en un programme SecApp mature","text":"<p>Il ne faut pas s'arr\u00eater au Top 10 de l'OWASP. Il ne couvre que 10 cat\u00e9gories de risques. Nous encourageons fortement les organisations \u00e0 adopter l'OWASP Application Security Verification Standard (ASVS) et \u00e0 ajouter progressivement des composants et des tests de voies pav\u00e9es pour les niveaux 1, 2 et 3, en fonction du niveau de risque des applications d\u00e9velopp\u00e9es.</p>"},{"location":"fr/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#aller-plus-loin","title":"Aller plus loin","text":"<p>Les meilleurs programmes SecApp vont au-del\u00e0 du strict minimum. Tout le monde doit continuer les efforts si nous voulons un jour ma\u00eetriser les vuln\u00e9rabilit\u00e9s.</p> <ul> <li>Int\u00e9grit\u00e9 conceptuelle. Les programmes SecApp matures doivent contenir un certain concept d'architecture de s\u00e9curit\u00e9, qu'il s'agisse d'une architecture formelle de s\u00e9curit\u00e9 cloud ou d'entreprise ou d'une mod\u00e9lisation des menaces ;</li> <li>Automatisation et \u00e9chelle. Les programmes SecApp matures essaient d'automatiser autant que possible leurs livrables, en utilisant des scripts pour \u00e9muler des tests d'intrusion complexes, des outils d'analyse de code statique directement disponibles pour les \u00e9quipes de d\u00e9veloppement, en aidant les \u00e9quipes de d\u00e9veloppement \u00e0 cr\u00e9er des tests unitaires et d'int\u00e9gration de s\u00e9curit\u00e9, et plus encore.</li> <li>Culture. Les programmes SecApp matures essaient de supprimer les conceptions non s\u00e9curis\u00e9es et d'\u00e9liminer la dette technique du code existant en faisant partie de l'\u00e9quipe de d\u00e9veloppement et non \u00e0 c\u00f4t\u00e9. Les \u00e9quipes SecApp qui voient les \u00e9quipes de d\u00e9veloppement comme \"nous\" et \"eux\" sont vou\u00e9es \u00e0 l'\u00e9chec.</li> <li>Am\u00e9lioration continue. Les programmes SecApp matures cherchent \u00e0 s'am\u00e9liorer constamment. Si quelque chose ne fonctionne pas, arr\u00eatez de le faire. Si quelque chose est poussif ou non \u00e9volutif, travaillez pour l'am\u00e9liorer. Si quelque chose n'est pas utilis\u00e9 par les \u00e9quipes de d\u00e9veloppement et n'a pas ou peu d'impact, faites quelque chose de diff\u00e9rent. Ce n'est pas parce que nous avons fait des tests comme des contr\u00f4les administratifs depuis les ann\u00e9es 1970 que c'est une bonne id\u00e9e. Mesurez, \u00e9valuez, puis construisez ou am\u00e9liorez.</li> </ul>"},{"location":"fr/A00_2021_How_to_use_the_OWASP_Top_10_as_a_standard/","title":"Comment utiliser le Top 10 OWASP en tant que standard","text":"<p>Le Top 10 OWASP est avant tout un document informatif. Cependant, cela n'a pas emp\u00each\u00e9 un bon nombre d'organisations de l'utiliser en tant que standard de facto dans l'industrie de la s\u00e9curit\u00e9 des applications depuis son lancement en 2003. Si vous souhaitez utiliser le TOP 10 OWASP en tant que standard de d\u00e9veloppement ou de r\u00e9alisation de tests, sachez qu'il doit \u00eatre consid\u00e9r\u00e9 comme point de d\u00e9part et qu'il ne couvre que le strict minimum.</p> <p>Une des difficult\u00e9s \u00e0 utiliser le TOP 10 OWASP en tant que standard est que nous ne documentons que les risques de s\u00e9curit\u00e9 des applications et que certains probl\u00e8mes ne sont pas n\u00e9cessairement simples \u00e0 tester. Par exemple, le [A04:2021-Conception non s\u00e9curis\u00e9e] va au-del\u00e0 de la plupart des m\u00e9thodes de tests. Un autre exemple est le test de l'efficacit\u00e9 des pratiques de journalisation et de surveillance en place, qui ne peut \u00eatre fait que par le biais d'interviews et d'une demande d'exemples concrets de r\u00e9ponses \u00e0 incident. Un outil d'analyse de code statique peut v\u00e9rifier l'absence de journalisation, mais il lui sera sans doute incapable de d\u00e9terminer si les parties de logique m\u00e9tier ou de contr\u00f4le d'acc\u00e8s journalisent les atteintes critiques \u00e0  la s\u00e9curit\u00e9. De m\u00eame des pentesters ne pourraient qu'\u00eatre capables de d\u00e9terminer s'ils ont provoqu\u00e9 une r\u00e9ponse \u00e0 incident dans un environnement de test, qui est rarement surveill\u00e9 de la m\u00eame mani\u00e8re qu'un environnement de production.</p> <p>Voici nos recommendations sur les utilisations appropri\u00e9es du Top 10 OWASP :</p> Cas d'utilisation OWASP Top 10 2021 Standard OWASP de v\u00e9rification de la s\u00e9curit\u00e9 applicative Sensibilisation Oui Entra\u00eenement Niveau d\u00e9butant Global Conception et architecture Parfois Oui Normes de codage Strict minimum Oui Revue de code Strict minimum Oui Examen par des pairs (checklist) Strict minimum Oui Tests unitaires Parfois Oui Tests d'integration Parfois Oui Tests d'intrusion Strict minimum Oui Outil de support Strict minimum Oui Cha\u00eene logistique s\u00e9curis\u00e9e Parfois Oui <p>Nous encourageons quiconque voulant adopter un standard de s\u00e9curit\u00e9 des applications \u00e0 utiliser le Standard de v\u00e9rification de s\u00e9curit\u00e9 des applications OWASP (SVSA), celui-ci est con\u00e7u pour la v\u00e9rification et les tests et peut \u00eatre utilis\u00e9 au cours de chaque \u00e9tape d'un cycle de d\u00e9veloppement s\u00e9curis\u00e9.</p> <p>Le SVSA est le seul choix acceptable pour les fournisseurs de solutions. Les outils ne peuvent pas tester, d\u00e9tecter ou prot\u00e9ger de tous les risques du Top 10 OWASP en raison de la nature de plusieurs de ceux-ci  (ex. A04:2021-Conception non s\u00e9curis\u00e9e). L'OWASP d\u00e9courage toute affirmation qu'un outil offre une couverture compl\u00e8te du Top 10 OWASP, car c'est simplement faux.</p>"},{"location":"fr/A00_2021_Introduction/#bienvenue-a-lowasp-top-10-2021","title":"Bienvenue \u00e0 l'OWASP Top 10 - 2021","text":"<p>Bienvenue pour cette nouvelle \u00e9dition de l'OWASP Top 10 ! L'OWASP Top 10 2021 apporte de nombreux changements, avec notamment une nouvelle interface et une nouvelle infographie, disponible sur un format d'une page qu'il est possible de se procurer depuis notre page d'accueil.</p> <p>Un tr\u00e8s grand merci \u00e0 l'ensemble des personnes qui ont contribu\u00e9 de leur temps et leurs donn\u00e9es pour cette it\u00e9ration. Sans vous, cette mouture n'aurait pas vu le jour. MERCI.</p>"},{"location":"fr/A00_2021_Introduction/#les-changements-du-top-10-pour-2021","title":"Les changements du Top 10 pour 2021","text":"<p>Il y a trois nouvelles cat\u00e9gories, quatre cat\u00e9gories avec un changement de nom et de p\u00e9rim\u00e8tre, ainsi que des consolidations dans ce Top 10 2021. Nous avons chang\u00e9 les noms si n\u00e9cessaire pour se concentrer sur la cause plut\u00f4t que le sympt\u00f4me.</p> <p></p> <ul> <li>A01:2021-Contr\u00f4les d'acc\u00e8s d\u00e9faillants passe de la cinqui\u00e8me position \u00e0 celle de cat\u00e9gorie pr\u00e9sentant le risque de s\u00e9curit\u00e9 le plus s\u00e9rieux pour une application web ; les donn\u00e9es partag\u00e9es indiquent, qu'en moyenne, 3,81% des applications test\u00e9es avaient une ou plusieurs Common Weakness Enumeration (CWEs) avec plus de 318k occurrences de CWEs de cette cat\u00e9gorie. Les 34 CWEs associ\u00e9es ont eu plus d'occurrences dans les applications audit\u00e9es que n'importe quelle autre cat\u00e9gorie.</li> <li>A02:2021-D\u00e9faillances cryptographiques gagne une position et prend la deuxi\u00e8me place, pr\u00e9c\u00e9demment connue sous le nom de A3:2017-Exposition de donn\u00e9es sensibles, qui \u00e9tait un sympt\u00f4me large plut\u00f4t qu'une cause principale. L'accent est mis sur des d\u00e9faillances li\u00e9es \u00e0 la cryptographie, ce qui \u00e9tait le cas implicitement auparavant. Cette cat\u00e9gorie entra\u00eene souvent une exposition de donn\u00e9es sensibles ou une compromission de syst\u00e8me.</li> <li>A03:2021-Injection glisse \u00e0 la troisi\u00e8me position. 94% des applications ont \u00e9t\u00e9 test\u00e9es sur des vuln\u00e9rabilit\u00e9s de ce type, avec une incidence maximale de 19% et une incidence moyenne de 3,37%. Les 33 CWEs associ\u00e9es \u00e0 cette cat\u00e9gorie ont eu le deuxi\u00e8me plus grand nombre d'occurrences. Cross-Site Scripting fait d\u00e9sormais partie de cette cat\u00e9gorie dans cette \u00e9dition.</li> <li>A04:2021-Conception non s\u00e9curis\u00e9e est une nouvelle cat\u00e9gorie, avec un accent sur les d\u00e9fauts de conception. Si nous voulons ajouter des contr\u00f4les en amont, nous avons besoin de mod\u00e8les de menaces, de mod\u00e8les et principes de conception s\u00e9curis\u00e9s, et d'architectures de r\u00e9f\u00e9rence. Une conception non s\u00e9curis\u00e9e ne peut pas \u00eatre corrig\u00e9 par une impl\u00e9mentation parfaite car, par d\u00e9finition, les contr\u00f4les de s\u00e9curit\u00e9 n\u00e9cessaires pour se d\u00e9fendre contre certaines attaques n'ont jamais \u00e9t\u00e9 cr\u00e9\u00e9s.</li> <li>A05:2021-Mauvaise configuration de s\u00e9curit\u00e9 gagne une place ; 90% des applications ont \u00e9t\u00e9 test\u00e9es sur des vuln\u00e9rabilit\u00e9s de ce type, avec une incidence moyenne de 4,5% et plus de 208k occurrences des CWEs associ\u00e9es. Avec des logiciels de plus en plus param\u00e9trables, il n'est pas surprenant de voir cette cat\u00e9gorie prendre de l'ampleur. L'ancienne cat\u00e9gorie A4:2017-XML Entit\u00e9s externes (XXE) est incluse dans celle-ci.</li> <li>A06:2021-Composants vuln\u00e9rables et obsol\u00e8tes \u00e9tait pr\u00e9c\u00e9demment nomm\u00e9e Utilisation de Composants avec des Vuln\u00e9rabilit\u00e9s Connues. Elle se place deuxi\u00e8me de l'enqu\u00eate aupr\u00e8s de la communaut\u00e9 du Top 10, mais pouvait \u00e9galement entrer dans le Top 10 via l'analyse de donn\u00e9es. Cette cat\u00e9gorie progresse depuis sa neuvi\u00e8me place en 2017, elle est un probl\u00e8me connu dont nous avons du mal \u00e0 tester et \u00e0 mesurer les risques. Il s'agit de la seule cat\u00e9gorie \u00e0 n'avoir aucunes Common Vulnerability and Exposures (CVEs) associ\u00e9es aux CWEs concern\u00e9es, en cons\u00e9quence les coefficients d'impact et de poids ont \u00e9t\u00e9 renseign\u00e9s \u00e0 5.0 par d\u00e9faut.</li> <li>A07:2021-Identification et authentification de mauvaise qualit\u00e9 \u00e9tait pr\u00e9c\u00e9demment Authentification de mauvaise qualit\u00e9, elle perd la deuxi\u00e8me place. Elle inclut d\u00e9sormais des CWEs \u00e9galement li\u00e9es aux \u00e9checs d'identification. Cette cat\u00e9gorie est toujours pr\u00e9sente dans le Top 10, mais la mise \u00e0 disposition croissante de frameworks standardis\u00e9s semble aider.</li> <li>A08:2021-Manque d'int\u00e9grit\u00e9 des donn\u00e9es et du logiciel est une nouvelle cat\u00e9gorie, se concentrant sur la formulation d'hypoth\u00e8ses sur les mises \u00e0 jour logicielles, les donn\u00e9es critiques et les pipelines CI/CD sans v\u00e9rifier leur int\u00e9grit\u00e9. L'un des impacts les plus \u00e9lev\u00e9s \u00e0 partir des donn\u00e9es de Common Vulnerability and Exposures/Common Vulnerability Scoring System (CVE/CVSS) associ\u00e9es aux 10 CWEs de cette cat\u00e9gorie. A8:2017-D\u00e9s\u00e9rialisation non s\u00e9curis\u00e9e, list\u00e9e en 2017, est d\u00e9sormais partie int\u00e9grante de cette cat\u00e9gorie.</li> <li>A09:2021-Carence des syst\u00e8mes de contr\u00f4le et de journalisation, pr\u00e9c\u00e9demment A10:2017-Supervision et Journalisation Insuffisantes, est ajout\u00e9e de l'enqu\u00eate aupr\u00e8s de l'industrie (3\u00e8me), pr\u00e9c\u00e9demment \u00e0 la dixi\u00e8me place. Cette cat\u00e9gorie a \u00e9t\u00e9 \u00e9tendue pour inclure plus de types de d\u00e9faillances, est difficile \u00e0 tester et est d\u00e8s lors mal repr\u00e9sent\u00e9e dans les donn\u00e9es CVE/CVSS. Toutefois, des incidents dans cette cat\u00e9gorie peuvent impacter directement la visibilit\u00e9, la lev\u00e9e d'alertes et l'analyse forensique.</li> <li>A10:2021-Falsification de requ\u00eate c\u00f4t\u00e9 serveur provient de l'enqu\u00eate aupr\u00e8s de la communaut\u00e9 Top 10 (1\u00e8re). Les donn\u00e9es montrent une incidence faible, avec un taux de couverture des tests sup\u00e9rieur \u00e0 la moyenne, accompagn\u00e9 de notes de potentiel d'exploitabilit\u00e9 et d'impact sup\u00e9rieur \u00e0 la moyenne. Cette cat\u00e9gorie est un exemple o\u00f9 les membres de la communaut\u00e9 s\u00e9curit\u00e9 nous indiquent que cette cat\u00e9gorie est importante, m\u00eame si cela ne transpara\u00eet pas encore dans les donn\u00e9es.</li> </ul>"},{"location":"fr/A00_2021_Introduction/#methodologie","title":"M\u00e9thodologie","text":"<p>Cette version du Top 10 est bien plus bas\u00e9e sur des donn\u00e9es que les pr\u00e9c\u00e9dentes, mais elle n'est pas pour autant aveugl\u00e9e par celles-ci. Parmi les dix cat\u00e9gories, huit proviennent des donn\u00e9es fournies et les deux derni\u00e8res proviennent d'une enqu\u00eate \u00e0 haut niveau aupr\u00e8s de la communaut\u00e9. Nous faisons ceci pour une raison fondamentale, observer les donn\u00e9es consiste \u00e0 observer le pass\u00e9. Les chercheurs en s\u00e9curit\u00e9 s'investissent pour trouver de nouvelles vuln\u00e9rabilit\u00e9s et de nouveaux moyens pour les d\u00e9tecter. Un temps certain est n\u00e9cessaire pour int\u00e9grer ces tests au sein des outils et des processus. Au moment o\u00f9 nous pouvons tester ces vuln\u00e9rabilit\u00e9s \u00e0 l'\u00e9chelle, des ann\u00e9es se sont bien souvent \u00e9coul\u00e9es. Pour \u00e9quilibrer cette approche, nous avons utilis\u00e9 une enqu\u00eate communautaire pour demander aux experts en s\u00e9curit\u00e9 applicative et en d\u00e9veloppement, en premi\u00e8re ligne, ce qu'ils constatent comme failles essentielles, que les donn\u00e9es pourraient ne pas encore montrer.</p> <p>Nous avons adopt\u00e9 quelques changements importants pour continuer \u00e0 faire m\u00fbrir le Top 10.</p>"},{"location":"fr/A00_2021_Introduction/#comment-les-categories-sont-structurees","title":"Comment les cat\u00e9gories sont structur\u00e9es","text":"<p>Quelques cat\u00e9gories ont chang\u00e9 depuis la pr\u00e9c\u00e9dente \u00e9dition de l'OWASP Top Ten. Voici ici un bref r\u00e9sum\u00e9 des changements.</p> <p>Les pr\u00e9c\u00e9dentes collectes de donn\u00e9es \u00e9taient concentr\u00e9es sur un sous ensemble d'approximativement 30 CWEs accompagn\u00e9es d'un champ demandant des d\u00e9couvertes compl\u00e9mentaires. Nous avons appris que les organisations se concentraient sur les seules 30 CWEs et n'ajoutaient que rarement d'autres CWEs qu'elles rencontraient. Dans cette \u00e9dition, nous nous sommes content\u00e9s de demander des donn\u00e9es, sans aucune restriction sur les CWEs. Nous avons demand\u00e9 le nombre d'applications test\u00e9es pour une ann\u00e9e donn\u00e9e (\u00e0 partir de 2017), et le nombre d'applications avec au moins une instance d'une CWE trouv\u00e9e lors des tests. Ce format nous permet de d\u00e9terminer la pr\u00e9valence de chaque CWE au sein des applications. Nous ignorons la fr\u00e9quence pour nos besoins ; bien que cela pourrait \u00eatre n\u00e9cessaire dans d'autres situations, cela cache la pr\u00e9valence au sein du panel. Qu'une application ait quatre instances d'une CWE ou 4 000 ne fait pas partie du calcul du Top 10. Nous sommes pass\u00e9s d'approximativement 30 CWEs \u00e0 pr\u00e8s de 400 CWEs \u00e0 analyser dans le jeu de donn\u00e9es. Nous pr\u00e9voyons d'ajouter des analyses compl\u00e9mentaires dans le futur. Cette augmentation significative dans le nombre de CWEs n\u00e9cessite des changements dans la fa\u00e7on dont les cat\u00e9gories sont structur\u00e9es.</p> <p>Nous avons pass\u00e9 plusieurs mois \u00e0 regrouper et cat\u00e9goriser les CWEs. Nous aurions pu continuer encore pendant des mois. Nous avons d\u00fb nous arr\u00eater \u00e0 un moment donn\u00e9. Il existe \u00e0 la fois des CWEs de type cause racine et sympt\u00f4me, o\u00f9 les types cause racine sont de la forme \"D\u00e9faillances cryptographiques\" et \"Mauvaise configuration\", en contraste avec les types sympt\u00f4me tels que \"Exposition de donn\u00e9es sensibles\" et \"D\u00e9ni de service\". Nous avons d\u00e9cid\u00e9 de nous concentrer sur les types cause racine autant que possible car ils sont plus logiques pour fournir des conseils d'identification et de rem\u00e9diation. Se concentrer sur la cause racine plut\u00f4t que le sympt\u00f4me n'est pas un nouveau concept ; le Top 10 a \u00e9t\u00e9 un m\u00e9lange de sympt\u00f4mes et de causes racines. Les CWEs le sont \u00e9galement ; nous faisons ce choix d\u00e9lib\u00e9r\u00e9ment et lan\u00e7ons un appel \u00e0 ce sujet. Il y a une moyenne de 19,6 CWEs par cat\u00e9gorie dans cette \u00e9dition, avec un minimum d'1 CWE pour A10:2021-Falsification de requ\u00eate c\u00f4t\u00e9 serveur et un maximum de 40 CWEs pour A04:2021-Conception non s\u00e9curis\u00e9e. Cette nouvelle organisation de cat\u00e9gories apporte des avantages pour les formations, les soci\u00e9t\u00e9s peuvent se concentrer sur les CWEs les plus pertinentes pour un langage ou un framework.</p>"},{"location":"fr/A00_2021_Introduction/#comment-les-donnees-ont-ete-utilisees-pour-selectionner-les-categories","title":"Comment les donn\u00e9es ont \u00e9t\u00e9 utilis\u00e9es pour s\u00e9lectionner les cat\u00e9gories","text":"<p>En 2017, nous avons s\u00e9lectionn\u00e9 les cat\u00e9gories \u00e0 partir du taux d'incidence pour d\u00e9terminer la probabilit\u00e9, puis les avons class\u00e9es via des discussions en \u00e9quipe bas\u00e9es sur des d\u00e9cennies d'exp\u00e9rience sur des crit\u00e8res d'Exploitabilit\u00e9, D\u00e9tectabilit\u00e9 (\u00e9galement probabilit\u00e9) et Impact technique. Pour 2021, nous souhaitons, si possible, utiliser des donn\u00e9es pour Exploitabilit\u00e9 et Impact (technique).</p> <p>Nous avons t\u00e9l\u00e9charg\u00e9 OWASP Dependency Check et extrait les scores CVSS d'exploitabilit\u00e9 et d'impact agr\u00e9g\u00e9s par CWE connexes. Cela a n\u00e9cessit\u00e9 un temps de recherche significatif, car toutes les CVEs ont un score CVSSv2, mais celui-ci poss\u00e8de des d\u00e9fauts que CVSSv3 devrait corriger. Apr\u00e8s un certain temps, toutes les CVEs re\u00e7oivent \u00e9galement un score CVSSv3. De plus, les plages de notation et les formules ont \u00e9t\u00e9 mises-\u00e0-jour entre CVSSv2 et CVSSv3.</p> <p>En CVSSv2, Exploitabilit\u00e9 et Impact (technique) peuvent atteindre 10, mais la formule les ram\u00e8ne \u00e0 60\u00a0% pour Exploitabilit\u00e9 et 40\u00a0% pour Impact. En CVSSv3, le maximum th\u00e9orique est limit\u00e9 \u00e0 6,0 pour Exploitabilit\u00e9 et 4,0 pour Impact. Avec la pond\u00e9ration prise en compte, le score d'impact a augment\u00e9, de pr\u00e8s d'un point et demi en moyenne dans CVSSv3, et l'exploitabilit\u00e9 a baiss\u00e9 de pr\u00e8s d'un demi-point en moyenne.</p> <p>Il y a 125\u00a0000 enregistrements d'une CVE associ\u00e9e \u00e0 une CWE dans les donn\u00e9es de la National Vunerability Database (NVD) extraites d'OWASP Dependency Check, et il y a 241 CWE uniques associ\u00e9es \u00e0 une CVE. 62\u00a0000 enregistrements ont un score CVSSv3, ce qui repr\u00e9sente environ la moiti\u00e9 des donn\u00e9es.</p> <p>Pour le Top Ten 2021, nous avons calcul\u00e9 les scores moyens d'exploitabilit\u00e9 et d'impact de la mani\u00e8re suivante. Nous avons regroup\u00e9 toutes les CVEs avec des scores CVSS par CWE et pond\u00e9r\u00e9 \u00e0 la fois exploitabilit\u00e9 et impact not\u00e9s par le pourcentage de la population qui disposait d'un score CVSSv3, plus la population restante de scores CVSSv2 pour obtenir une moyenne globale. Nous avons associ\u00e9 ces moyennes aux CWEs de l'ensemble de donn\u00e9es \u00e0 utiliser comme notes d'Exploitabilit\u00e9 et d'Impact (technique) pour l'autre moiti\u00e9 de l'\u00e9quation de risque.</p>"},{"location":"fr/A00_2021_Introduction/#pourquoi-ne-pas-se-reposer-uniquement-sur-des-donnees-statistiques","title":"Pourquoi ne pas se reposer uniquement sur des donn\u00e9es statistiques ?","text":"<p>Les r\u00e9sultats obtenus \u00e0 partir des donn\u00e9es sont principalement limit\u00e9s \u00e0 ce que nous pouvons tester de mani\u00e8re automatis\u00e9e. Parlez \u00e0 un professionnel chevronn\u00e9 de la s\u00e9curit\u00e9, il vous parlera de ce qu'il trouve et des tendances qu'il observe qui ne sont pas encore dans les donn\u00e9es. Il faut du temps aux gens pour d\u00e9velopper des m\u00e9thodologies de test pour certains types de vuln\u00e9rabilit\u00e9s, puis plus de temps pour que ces tests soient automatis\u00e9s et ex\u00e9cut\u00e9s sur un grand nombre d'applications. Tout ce que nous trouvons sont des vestiges du pass\u00e9 qui pourraient manquer les tendances de l'ann\u00e9e \u00e9coul\u00e9e, qui ne sont pas pr\u00e9sentes dans les donn\u00e9es.</p> <p>Par cons\u00e9quent, nous ne s\u00e9lectionnons que huit cat\u00e9gories sur dix \u00e0 partir des donn\u00e9es, car elles sont incompl\u00e8tes. Les deux autres cat\u00e9gories proviennent de l'enqu\u00eate communautaire Top 10. Cela permet aux praticiens en premi\u00e8re ligne de voter pour ce qu'ils consid\u00e8rent comme les risques les plus \u00e9lev\u00e9s qui pourraient ne pas \u00eatre repr\u00e9sent\u00e9s par les donn\u00e9es (et qui pourraient ne jamais \u00eatre exprim\u00e9s par les donn\u00e9es).</p>"},{"location":"fr/A00_2021_Introduction/#pourquoi-le-taux-dincidence-au-lieu-de-la-frequence","title":"Pourquoi le taux d'incidence au lieu de la fr\u00e9quence ?","text":"<p>Il y a trois sources principales de donn\u00e9es. Nous les identifions comme \u00e9tant l'outillage assist\u00e9 par l'homme (OaH), l'homme assist\u00e9 par l'outil (HaO) et l'outillage brut.</p> <p>L'outillage et l'OaH sont des g\u00e9n\u00e9rateurs de recherche \u00e0 haute fr\u00e9quence. Les outils cherchent des vuln\u00e9rabilit\u00e9s sp\u00e9cifiques, tentent inlassablement de trouver chaque instance de cette vuln\u00e9rabilit\u00e9 et g\u00e9n\u00e8rent un nombre \u00e9lev\u00e9 de d\u00e9couvertes pour certains types de vuln\u00e9rabilit\u00e9. Prenez Cross-Site Scripting, qui est g\u00e9n\u00e9ralement l'une de ces deux variantes : il s'agit soit d'une erreur mineure et isol\u00e9e, soit d'un probl\u00e8me syst\u00e9mique. Lorsqu'il s'agit d'un probl\u00e8me syst\u00e9mique, le nombre de constatations peut se chiffrer par milliers pour une seule application. Cette fr\u00e9quence \u00e9lev\u00e9e noie la plupart des autres vuln\u00e9rabilit\u00e9s trouv\u00e9es dans les rapports ou les donn\u00e9es.</p> <p>L'HaO, d'autre part, trouvera une gamme plus large de types de vuln\u00e9rabilit\u00e9s mais \u00e0 une fr\u00e9quence beaucoup plus faible en raison de contraintes de temps. Lorsque les humains testent une application et d\u00e9tectent une vuln\u00e9rabilit\u00e9 comme Cross-Site Scripting, ils trouveront g\u00e9n\u00e9ralement trois ou quatre instances et s'arr\u00eateront. Ils peuvent d\u00e9terminer une d\u00e9couverte syst\u00e9mique et la r\u00e9diger avec une recommandation \u00e0 corriger \u00e0 l'\u00e9chelle de l'application. Il n'y a pas de besoin (ou de temps) de trouver chaque instance.</p> <p>Supposons que nous prenions ces deux ensembles de donn\u00e9es distincts et essayions de les fusionner en se basant sur la fr\u00e9quence. Dans ce cas, les donn\u00e9es d'outillage et d'OaH noieront les donn\u00e9es HaO plus pr\u00e9cises (mais plus larges) et expliquent en grande partie pourquoi une cat\u00e9gorie comme Cross-Site Scripting a \u00e9t\u00e9 si bien class\u00e9e dans de nombreuses listes alors que l'impact est g\u00e9n\u00e9ralement faible \u00e0 mod\u00e9r\u00e9. C'est \u00e0 cause du volume consid\u00e9rable de r\u00e9sultats. Le Cross-Site Scripting est \u00e9galement assez facile \u00e0 tester, il y a donc beaucoup plus de tests pour cela.</p> <p>En 2017, nous avons introduit le taux d'incidence pour jeter un nouveau regard sur les donn\u00e9es et fusionner proprement les donn\u00e9es d'outillage et d'OaH avec les donn\u00e9es d'HaO. Le taux d'incidence demande quel pourcentage de la population d'applications avait au moins une instance d'un type de vuln\u00e9rabilit\u00e9. Peu nous importe si c'\u00e9tait ponctuel ou syst\u00e9mique. Ce n'est pas pertinent pour nos fins ; nous avons seulement besoin de savoir combien d'applications ont eu au moins une instance, ce qui permet de fournir une vue plus claire des r\u00e9sultats des tests sur plusieurs types de tests sans noyer les donn\u00e9es dans des r\u00e9sultats \u00e0 haute fr\u00e9quence. Cela correspond \u00e0 une vue li\u00e9e au risque, car un attaquant n'a besoin que d'une seule instance pour attaquer une application avec succ\u00e8s via la cat\u00e9gorie.</p>"},{"location":"fr/A00_2021_Introduction/#quel-est-votre-processus-de-collecte-et-danalyse-des-donnees","title":"Quel est votre processus de collecte et d'analyse des donn\u00e9es ?","text":"<p>Nous avons formalis\u00e9 le processus de collecte de donn\u00e9es de l'OWASP Top 10 lors de l'Open Security Summit en 2017. Les dirigeants de l'OWASP Top 10 et la communaut\u00e9 ont pass\u00e9 deux jours \u00e0 formaliser un processus de collecte de donn\u00e9es transparent. Cette m\u00e9thodologie est utilis\u00e9e pour la seconde fois lors de l'\u00e9dition 2021.</p> <p>Nous publions un appel \u00e0 donn\u00e9es via les canaux de r\u00e9seaux sociaux \u00e0 notre disposition, \u00e0 la fois au niveau du projet et de l'OWASP. Sur la page du projet sur le site de l'OWASP, nous listons les \u00e9l\u00e9ments de donn\u00e9es et la structure que nous recherchons et comment les soumettre. Dans le projet GitHub, nous avons des exemples de fichiers qui servent de mod\u00e8les. Nous travaillons avec des organisations au besoin pour aider \u00e0 comprendre la structure et la correspondance avec les CWEs.</p> <p>Nous obtenons des donn\u00e9es d'organisations sp\u00e9cialis\u00e9es dans l'audit de s\u00e9curit\u00e9, de plateformes de bug bounty et d'organisations qui fournissent des donn\u00e9es de tests internes. Une fois que nous avons les donn\u00e9es, nous les chargeons ensemble et effectuons une analyse fondamentale de quelles CWEs sont associ\u00e9es aux cat\u00e9gories de risque. Il existe un chevauchement entre certaines CWEs et d'autres sont tr\u00e8s \u00e9troitement li\u00e9es (par exemple, les vuln\u00e9rabilit\u00e9s cryptographiques). Toutes les d\u00e9cisions li\u00e9es aux donn\u00e9es brutes soumises sont document\u00e9es et publi\u00e9es pour \u00eatre ouvertes et transparentes avec la fa\u00e7on dont nous avons normalis\u00e9 les donn\u00e9es.</p> <p>Nous examinons les huit cat\u00e9gories avec les taux d'incidence les plus \u00e9lev\u00e9s pour l'inclusion dans le Top 10. Nous examinons \u00e9galement les r\u00e9sultats de l'enqu\u00eate communautaire Top 10 pour voir lesquels peuvent d\u00e9j\u00e0 \u00eatre pr\u00e9sents dans les donn\u00e9es. Les deux premiers votes qui ne sont pas d\u00e9j\u00e0 pr\u00e9sents dans les donn\u00e9es seront s\u00e9lectionn\u00e9s pour les deux autres places du Top 10. Une fois les dix s\u00e9lectionn\u00e9es, nous avons appliqu\u00e9 des facteurs g\u00e9n\u00e9ralis\u00e9s pour l'exploitabilit\u00e9 et l'impact ; pour aider \u00e0 classer le Top 10 2021 dans un ordre bas\u00e9 sur les risques.</p>"},{"location":"fr/A00_2021_Introduction/#facteurs-des-donnees","title":"Facteurs des donn\u00e9es","text":"<p>Des facteurs sont r\u00e9pertori\u00e9s pour chacune des 10 principales cat\u00e9gories, voici ce qu'ils signifient :</p> <ul> <li>CWEs associ\u00e9es : le nombre de CWEs associ\u00e9es \u00e0 une cat\u00e9gorie par l'\u00e9quipe du Top 10.</li> <li>Taux d'incidence : le taux d'incidence est le pourcentage d'applications vuln\u00e9rables \u00e0 cette CWE parmi la population test\u00e9e par cette organisation pour cette ann\u00e9e.</li> <li>Exploitation pond\u00e9r\u00e9e : le sous-score Exploitation des scores CVSSv2 et CVSSv3 attribu\u00e9s aux CVEs associ\u00e9es aux CWEs, normalis\u00e9s et plac\u00e9s sur une \u00e9chelle de 10 points.</li> <li>Impact pond\u00e9r\u00e9 : le sous-score d'impact des scores CVSSv2 et CVSSv3 attribu\u00e9s aux CVEs associ\u00e9es aux CWEs, normalis\u00e9s et plac\u00e9s sur une \u00e9chelle de 10 points.</li> <li>Couverture (Test) : Le pourcentage d'applications test\u00e9es par toutes les organisations pour une CWE donn\u00e9e.</li> <li>Nombre total d'occurrences : nombre total d'applications trouv\u00e9es pour lesquelles les CWEs sont associ\u00e9es \u00e0 une cat\u00e9gorie.</li> <li>Nombre total de CVEs : nombre total de CVEs dans la base de donn\u00e9es NVD qui ont \u00e9t\u00e9 associ\u00e9es aux CWEs associ\u00e9es \u00e0 une cat\u00e9gorie.</li> </ul>"},{"location":"fr/A00_2021_Introduction/#merci-a-nos-contributeurs-de-donnees","title":"Merci \u00e0 nos contributeurs de donn\u00e9es","text":"<p>Les organisations suivantes (ainsi que certains donateurs anonymes) ont aimablement fait don des donn\u00e9es de plus de 500 000 applications pour en faire l'ensemble de donn\u00e9es de s\u00e9curit\u00e9 des applications le plus vaste et le plus complet. Sans vous, cela ne serait pas possible.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"fr/A00_2021_Introduction/#merci-a-notre-sponsor","title":"Merci \u00e0 notre sponsor","text":"<p>L'\u00e9quipe de l'OWASP Top 10 2021 remercie le soutien financier de Secure Code Warrior et Just Eat.</p> <p></p> <p></p>"},{"location":"fr/A01_2021-Broken_Access_Control/","title":"A01:2021 \u2013 Contr\u00f4les d'acc\u00e8s d\u00e9faillants","text":""},{"location":"fr/A01_2021-Broken_Access_Control/#facteurs","title":"Facteurs","text":"CWEs associ\u00e9es Taux d'incidence max Taux d'incidence moyen Exploitation pond\u00e9r\u00e9e moyenne Impact pond\u00e9r\u00e9 moyen Couverture max Couverture moyenne Nombre total d'occurrences Nombre total de CVEs 34 55,97 % 3,81 % 6,92 5,93 94,55 % 47,72 % 318 487 19 013"},{"location":"fr/A01_2021-Broken_Access_Control/#apercu","title":"Aper\u00e7u","text":"<p>Pr\u00e9c\u00e9demment \u00e0 la cinqui\u00e8me place, 94 % des applications ont \u00e9t\u00e9 test\u00e9es pour une forme de contr\u00f4le d'acc\u00e8s d\u00e9faillant avec un taux d'incidence moyen de 3,81 %. Cette cat\u00e9gorie a le plus d'occurrences dans l'ensemble de donn\u00e9es contribu\u00e9 avec plus de 318\u00a0000. Les Common Weakness Enumerations (CWE) notables incluses sont CWE-200: Exposure of Sensitive Information to an Unauthorized Actor, CWE-201: Insertion of Sensitive Information Into Sent Data et CWE-352: Cross-Site Request Forgery .</p>"},{"location":"fr/A01_2021-Broken_Access_Control/#description","title":"Description","text":"<p>Le contr\u00f4le d'acc\u00e8s applique une strat\u00e9gie telle que les utilisateurs ne peuvent pas agir en dehors de leurs autorisations pr\u00e9vues. Les d\u00e9faillances entra\u00eenent g\u00e9n\u00e9ralement la divulgation, la modification ou la destruction d'informations non autoris\u00e9es de toutes les donn\u00e9es ou l'ex\u00e9cution d'une fonctionnalit\u00e9 m\u00e9tier en dehors des limites de l'utilisateur. Les vuln\u00e9rabilit\u00e9s courantes du contr\u00f4le d'acc\u00e8s incluent :</p> <ul> <li>Violation du principe du moindre privil\u00e8ge ou de refus par d\u00e9faut, o\u00f9 l'acc\u00e8s ne doit \u00eatre accord\u00e9 que pour des capacit\u00e9s, des r\u00f4les ou des utilisateurs particuliers, mais est accessible \u00e0 tous.</li> <li>Contourner les contr\u00f4les d'acc\u00e8s en modifiant l'URL (falsification de param\u00e8tres ou navigation forc\u00e9e), l'\u00e9tat interne de l'application ou la page HTML, ou en utilisant un outil d'attaque modifiant les requ\u00eates API.</li> <li>Autoriser l'affichage ou la modification du compte de quelqu'un d'autre, en fournissant son identifiant unique (r\u00e9f\u00e9rences directes d'objet non s\u00e9curis\u00e9es).</li> <li>Acc\u00e8s \u00e0 l'API avec des contr\u00f4les d'acc\u00e8s manquants pour POST, PUT et DELETE.</li> <li>\u00c9l\u00e9vation de privil\u00e8ge. Agir en tant qu'utilisateur sans \u00eatre connect\u00e9 ou agir en tant qu'administrateur lorsqu'il est connect\u00e9 en tant qu'utilisateur.</li> <li>Manipulation de m\u00e9tadonn\u00e9es, comme le rejeu ou la falsification de JSON Web Token (JWT), de cookies ou de champs cach\u00e9s, afin d'\u00e9lever les privil\u00e8ges ou abuser de l'invalidation JWT.</li> <li>La mauvaise configuration de CORS permettant l'acc\u00e8s \u00e0 l'API \u00e0 partir d'origines non autoris\u00e9es/non approuv\u00e9es.</li> <li>Forcer la navigation vers des pages authentifi\u00e9es en tant qu'utilisateur non authentifi\u00e9 ou vers des pages privil\u00e9gi\u00e9es en tant qu'utilisateur standard.</li> </ul>"},{"location":"fr/A01_2021-Broken_Access_Control/#comment-sen-premunir","title":"Comment s'en pr\u00e9munir","text":"<p>Le contr\u00f4le d'acc\u00e8s n'est efficace que dans le code de confiance c\u00f4t\u00e9 serveur ou des API serverless, o\u00f9 l'attaquant ne peut pas modifier la v\u00e9rification du contr\u00f4le d'acc\u00e8s ou les m\u00e9tadonn\u00e9es.</p> <ul> <li>\u00c0 l'exception des ressources publiques, tout doit \u00eatre bloqu\u00e9 par d\u00e9faut.</li> <li>Centraliser l'impl\u00e9mentation des m\u00e9canismes de contr\u00f4le d'acc\u00e8s et les r\u00e9utiliser dans l'ensemble de l'application. Cela comprend de minimiser l'utilisation de CORS.</li> <li>Le mod\u00e8le de contr\u00f4le d'acc\u00e8s doit imposer l'appartenance des enregistrements, plut\u00f4t que de permettre \u00e0 l'utilisateur de cr\u00e9er, lire, modifier ou supprimer n'importe quel enregistrement.</li> <li>Les exigences m\u00e9tier sp\u00e9cifiques de l'application doivent \u00eatre appliqu\u00e9es par domaines.</li> <li>D\u00e9sactiver le listing de dossier sur le serveur web, et v\u00e9rifier que les fichiers de m\u00e9tadonn\u00e9es (ex : .git) et de sauvegardes ne se trouvent pas dans l'arborescence web.</li> <li>Tracer les \u00e9checs de contr\u00f4les d'acc\u00e8s, alerter les administrateurs quand c'est appropri\u00e9 (ex : \u00e9checs r\u00e9p\u00e9t\u00e9s).</li> <li>Limiter la fr\u00e9quence d'acc\u00e8s aux API et aux contr\u00f4leurs d'acc\u00e8s, afin de minimiser les d\u00e9g\u00e2ts que causeraient des outils d'attaques automatis\u00e9s.</li> <li>Les identifiants de session avec \u00e9tat doivent \u00eatre invalid\u00e9s c\u00f4t\u00e9 serveur apr\u00e8s une d\u00e9connexion. Les JWT, sans \u00e9tat, doivent \u00eatre \u00e0 dur\u00e9e de vie relativement courte pour que la fen\u00eatre d'opportunit\u00e9 d'un attaquant soit minimis\u00e9e. Pour les JWT avec une dur\u00e9e de vie plus longue, il est fortement recommand\u00e9 de suivre le standard OAuth de r\u00e9vocation d'acc\u00e8s.</li> </ul> <p>Les d\u00e9veloppeurs et les testeurs qualit\u00e9 doivent proc\u00e9der \u00e0 des tests unitaires et d'int\u00e9gration sur les fonctionnalit\u00e9s de contr\u00f4le d'acc\u00e8s.</p>"},{"location":"fr/A01_2021-Broken_Access_Control/#exemple-de-scenarios-dattaque","title":"Exemple de sc\u00e9narios d'attaque","text":"<p>Scenario 1 : L'application utilise des donn\u00e9es non v\u00e9rifi\u00e9es dans une requ\u00eate SQL qui acc\u00e8de \u00e0 des informations d'un compte :</p> <pre><code> pstmt.setString(1, request.getParameter(\"acct\"));\n ResultSet results = pstmt.executeQuery( );\n</code></pre> <p>En modifiant simplement le param\u00e8tre 'acct' dans le navigateur, un attaquant peut envoyer le num\u00e9ro de compte qu'il veut. Si ce num\u00e9ro n'est pas v\u00e9rifi\u00e9, l'attaquant peut acc\u00e9der \u00e0 n'importe quel compte utilisateur.</p> <pre><code> https://example.com/app/accountInfo?acct=notmyacct\n</code></pre> <p>Scenario 2 : Un attaquant force le navigateur \u00e0 visiter des URL arbitraires. Il faut imposer des droits pour acc\u00e9der \u00e0 une page d'administration.</p> <pre><code> https://example.com/app/getappInfo\n https://example.com/app/admin_getappInfo\n</code></pre> <p>Si un utilisateur non-authentifi\u00e9 peut acc\u00e9der \u00e0 l'une des pages, c'est une faille. Si un non-administrateur peut acc\u00e9der \u00e0 une page d'administration, c'est une faille.</p>"},{"location":"fr/A01_2021-Broken_Access_Control/#references","title":"R\u00e9f\u00e9rences","text":"<ul> <li> <p>OWASP Proactive Controls: Enforce Access     Controls</p> </li> <li> <p>OWASP Application Security Verification Standard: V4 Access     Control</p> </li> <li> <p>OWASP Testing Guide: Authorization     Testing</p> </li> <li> <p>OWASP Cheat Sheet: Authorization</p> </li> <li> <p>PortSwigger: Exploiting CORS     misconfiguration</p> </li> <li> <p>OAuth: Revoking Access</p> </li> </ul>"},{"location":"fr/A01_2021-Broken_Access_Control/#liste-des-cwes-associees","title":"Liste des CWEs associ\u00e9es","text":"<p>CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</p> <p>CWE-23 Relative Path Traversal</p> <p>CWE-35 Path Traversal: '.../...//'</p> <p>CWE-59 Improper Link Resolution Before File Access ('Link Following')</p> <p>CWE-200 Exposure of Sensitive Information to an Unauthorized Actor</p> <p>CWE-201 Exposure of Sensitive Information Through Sent Data</p> <p>CWE-219 Storage of File with Sensitive Data Under Web Root</p> <p>CWE-264 Permissions, Privileges, and Access Controls (should no longer be used)</p> <p>CWE-275 Permission Issues</p> <p>CWE-276 Incorrect Default Permissions</p> <p>CWE-284 Improper Access Control</p> <p>CWE-285 Improper Authorization</p> <p>CWE-352 Cross-Site Request Forgery (CSRF)</p> <p>CWE-359 Exposure of Private Personal Information to an Unauthorized Actor</p> <p>CWE-377 Insecure Temporary File</p> <p>CWE-402 Transmission of Private Resources into a New Sphere ('Resource Leak')</p> <p>CWE-425 Direct Request ('Forced Browsing')</p> <p>CWE-441 Unintended Proxy or Intermediary ('Confused Deputy')</p> <p>CWE-497 Exposure of Sensitive System Information to an Unauthorized Control Sphere</p> <p>CWE-538 Insertion of Sensitive Information into Externally-Accessible File or Directory</p> <p>CWE-540 Inclusion of Sensitive Information in Source Code</p> <p>CWE-548 Exposure of Information Through Directory Listing</p> <p>CWE-552 Files or Directories Accessible to External Parties</p> <p>CWE-566 Authorization Bypass Through User-Controlled SQL Primary Key</p> <p>CWE-601 URL Redirection to Untrusted Site ('Open Redirect')</p> <p>CWE-639 Authorization Bypass Through User-Controlled Key</p> <p>CWE-651 Exposure of WSDL File Containing Sensitive Information</p> <p>CWE-668 Exposure of Resource to Wrong Sphere</p> <p>CWE-706 Use of Incorrectly-Resolved Name or Reference</p> <p>CWE-862 Missing Authorization</p> <p>CWE-863 Incorrect Authorization</p> <p>CWE-913 Improper Control of Dynamically-Managed Code Resources</p> <p>CWE-922 Insecure Storage of Sensitive Information</p> <p>CWE-1275 Sensitive Cookie with Improper SameSite Attribute</p>"},{"location":"fr/A02_2021-Cryptographic_Failures/","title":"A02:2021 \u2013 D\u00e9faillances cryptographiques","text":""},{"location":"fr/A02_2021-Cryptographic_Failures/#facteurs","title":"Facteurs","text":"CWEs associ\u00e9es Taux d'incidence max Taux d'incidence moyen Exploitation pond\u00e9r\u00e9e moyenne Impact pond\u00e9r\u00e9 moyen Couverture max Couverture moyenne Nombre total d'occurrences Nombre total de CVEs 29 46,44 % 4,49 % 7,29 6,81 79,33 % 34,85 % 233 788 3 075"},{"location":"fr/A02_2021-Cryptographic_Failures/#apercu","title":"Aper\u00e7u","text":"<p>En deuxi\u00e8me position, en progression d'une place. Auparavant connu sous le nom d'Exposition de donn\u00e9es sensibles, qui est plus un sympt\u00f4me g\u00e9n\u00e9rique qu'une cause racine. L'accent est mis sur les d\u00e9faillances li\u00e9es \u00e0 la cryptographie (ou son absence). Cela entra\u00eene souvent l'exposition de donn\u00e9es sensibles. Les Common Weakness Enumerations (CWE) notables incluses sont CWE-259: Use of Hard-coded Password, CWE-327: Broken or Risky Crypto Algorithm, et CWE-331 Insufficient Entropy.</p>"},{"location":"fr/A02_2021-Cryptographic_Failures/#description","title":"Description","text":"<p>D\u00e9terminer d\u2019abord quelles donn\u00e9es doivent b\u00e9n\u00e9ficier d\u2019une protection chiffr\u00e9e (mots de passe, donn\u00e9es patients, num\u00e9ros de cartes, donn\u00e9es personnelles, etc.), lors de leur transfert ou leur stockage. Pour chacune de ces donn\u00e9es :</p> <ul> <li>Les donn\u00e9es circulent-elles en clair ? Ceci concerne les protocoles tels que HTTP, SMTP et FTP. Le trafic externe sur internet est particuli\u00e8rement dangereux. V\u00e9rifiez tout le r\u00e9seau interne, par exemple entre les \u00e9quilibreurs de charge, les serveurs Web ou les syst\u00e8mes backend.</li> <li>Des algorithmes faibles ou d\u00e9suets sont-ils utilis\u00e9s, soit par d\u00e9faut, soit dans le code source existant ?</li> <li>Est-ce que des clefs de chiffrement par d\u00e9faut sont utilis\u00e9es ? Des clefs de chiffrement faibles sont-elles g\u00e9n\u00e9r\u00e9es ou r\u00e9utilis\u00e9es ? Leur gestion et rotation sont-elles prises en charge ? Est-ce que des cl\u00e9s sont pr\u00e9sentes dans l'outil de versionnement de code source ?</li> <li>Les r\u00e9ponses transmises au navigateur incluent-elles les directives/en-t\u00eates de s\u00e9curit\u00e9 ad\u00e9quats ?</li> <li>Est-ce que le certificat serveur re\u00e7u et la cha\u00eene de confiance sont correctement valid\u00e9s ?</li> <li>Est-ce que les vecteurs d'initialisation sont ignor\u00e9s, r\u00e9utilis\u00e9s ou g\u00e9n\u00e9r\u00e9s avec une s\u00e9curit\u00e9 insuffisante pour le mode d'op\u00e9ration cryptographique ?</li> <li>Est-ce que les mots de passe sont utilis\u00e9s sans fonction de d\u00e9rivation de cl\u00e9 ?</li> <li>Est-ce que la fonction de g\u00e9n\u00e9ration al\u00e9atoire utilis\u00e9e a \u00e9t\u00e9 con\u00e7ue pour r\u00e9pondre aux exigences cryptographiques ? M\u00eame si la bonne fonction est utilis\u00e9e, est-ce que la graine al\u00e9atoire doit \u00eatre fournie par le d\u00e9veloppeur, et sinon, le d\u00e9veloppeur a-t-il r\u00e9\u00e9crit la fonction robuste embarqu\u00e9e de g\u00e9n\u00e9ration de graine par une graine al\u00e9atoire qui manque d'entropie ou d'impr\u00e9visibilit\u00e9 ?</li> <li>Est-ce que des fonctions de hachage d\u00e9pr\u00e9ci\u00e9es telles que MD5 ou SHA1 sont utilis\u00e9es ou est-ce que des fonctions de hachage non cryptographiques sont utilis\u00e9es l\u00e0 o\u00f9 des fonctions de hachage cryptographiques sont n\u00e9cessaires ?</li> <li>Est-ce que des m\u00e9thodes cryptographiques de remplissage d\u00e9pr\u00e9ci\u00e9es, comme PKCS 1 v1.5 sont utilis\u00e9es ?</li> <li>Est-ce que des messages d'erreurs cryptographiques ou des informations par canal auxiliaire sont exploitables, par exemple sous la forme d'attaque par oracle de remplissage ?</li> </ul> <p>Se r\u00e9f\u00e9rer \u00e0 l'ASVS Crypto (V7), Data Protection (V9), et SSL/TLS (V10).</p>"},{"location":"fr/A02_2021-Cryptographic_Failures/#comment-sen-premunir","title":"Comment s'en pr\u00e9munir","text":"<p>On veillera au minimum \u00e0 suivre les recommandations suivantes, mais il reste n\u00e9cessaire de consulter les r\u00e9f\u00e9rences.</p> <ul> <li>Classifier les donn\u00e9es trait\u00e9es, stock\u00e9es ou transmises par l'application. Identifier quelles donn\u00e9es sont sensibles selon les lois concernant la protection de la vie priv\u00e9e, les exigences r\u00e9glementaires ou les besoins m\u00e9tier.</li> <li>Ne pas stocker de donn\u00e9es sensibles sans que cela ne soit n\u00e9cessaire. Les rejeter ou utiliser une tokenisation conforme \u00e0 la norme de s\u00e9curit\u00e9 de l\u2019industrie des cartes de paiement (PCI DSS) ou m\u00eame une troncature. Les donn\u00e9es que l\u2019on ne poss\u00e8de pas ne peuvent \u00eatre vol\u00e9es.</li> <li>S'assurer de chiffrer toutes les donn\u00e9es sensibles au repos.</li> <li>Choisir des algorithmes \u00e9prouv\u00e9s et g\u00e9n\u00e9rer des cl\u00e9s robustes. S'assurer qu'une gestion des cl\u00e9s est en place.</li> <li>Chiffrer toutes les donn\u00e9es transmises avec des protocoles s\u00e9curis\u00e9s tels que TLS avec des chiffres \u00e0 confidentialit\u00e9 persistante (forward secrecy - FS). Chiffrer en priorit\u00e9 sur le serveur. Utiliser des param\u00e8tres s\u00e9curis\u00e9s. Forcer le chiffrement en utilisant des directives comme HTTP Strict Transport Security (HSTS).</li> <li>D\u00e9sactiver le cache pour les r\u00e9ponses contenant des donn\u00e9es sensibles.</li> <li>Appliquer les contr\u00f4les de s\u00e9curit\u00e9 requis selon la classification de la donn\u00e9e.</li> <li>Ne pas utiliser de vieux protocoles tels que FTP et SMTP pour \u00e9changer des donn\u00e9es sensibles.</li> <li>Stocker les mots de passe en utilisant des fonctions de hachage avec salage et facteur de travail (facteur de d\u00e9lai), telles que Argon2, scrypt, bcrypt ou PBKDF2.</li> <li>Les vecteurs d'initialisation doivent \u00eatre choisis de fa\u00e7on appropri\u00e9e au mode d'op\u00e9ration. Pour la plupart des modes, cela signifie utiliser un g\u00e9n\u00e9rateur de nombres pseudo-al\u00e9atoires cryptographiquement s\u00e9curis\u00e9 (CSPRNG en anglais). Pour les modes requ\u00e9rant un nonce, alors le vecteur d'initialisation (VI) ne n\u00e9cessite pas un CSPRNG. Dans tous les cas, un vecteur d'initialisation ne devrait pas \u00eatre utilis\u00e9 deux fois pour une cl\u00e9 fixe.</li> <li>Utiliser toujours un chiffrement authentifi\u00e9 plut\u00f4t qu'un chiffrement simple</li> <li>Les cl\u00e9s devraient toujours \u00eatre g\u00e9n\u00e9r\u00e9es de fa\u00e7on cryptographiquement al\u00e9atoire et stock\u00e9es en m\u00e9moire sous la forme de tableau d'octets. Si un mot de passe est utilis\u00e9e, alors il faut obligatoirement le transformer en cl\u00e9 via une fonction de d\u00e9rivation de cl\u00e9 appropri\u00e9e.</li> <li>S'assurer qu'une g\u00e9n\u00e9ration cryptographiquement al\u00e9atoire est utilis\u00e9e l\u00e0 o\u00f9 c'est appropri\u00e9, et qu'elle n'a pas une graine al\u00e9atoire pr\u00e9visible ou avec une faible entropie. La plupart des APIs modernes ne demandent pas au d\u00e9veloppeur de fournir une graine au CSPRNG pour \u00eatre s\u00e9curis\u00e9.</li> <li>Ne pas utiliser de fonctions cryptographiques et de m\u00e9thodes de remplissage d\u00e9pr\u00e9ci\u00e9es telles que MD5, SHA1, PKCS 1 v1.5.</li> <li>V\u00e9rifier ind\u00e9pendamment l'efficacit\u00e9 de la configuration et des param\u00e8tres.</li> </ul>"},{"location":"fr/A02_2021-Cryptographic_Failures/#exemple-de-scenarios-dattaque","title":"Exemple de sc\u00e9narios d'attaque","text":"<p>Sc\u00e9nario 1 : Une application chiffre des num\u00e9ros de cartes de cr\u00e9dit dans une base de donn\u00e9es utilisant un chiffrement en base automatique. Cependant, ces donn\u00e9es sont automatiquement d\u00e9chiffr\u00e9es lorsqu'elles sont r\u00e9cup\u00e9r\u00e9es, permettant, \u00e0 une injection SQL de r\u00e9cup\u00e9rer des num\u00e9ros de carte de cr\u00e9dit en clair.</p> <p>Sc\u00e9nario 2 : Un site n'utilise pas ou ne force pas l'utilisation de TLS sur toutes les pages ou supporte des protocoles de chiffrement faibles. Un attaquant surveille le trafic r\u00e9seau (par exemple sur un r\u00e9seau sans fil non s\u00e9curis\u00e9), d\u00e9grade les connexions de HTTPS \u00e0 HTTP, intercepte les requ\u00eates et vole le cookie de session d'un utilisateur. L'attaquant r\u00e9utilise alors ce cookie et d\u00e9tourne la session de l'utilisateur (authentifi\u00e9), pouvant ainsi acc\u00e9der aux donn\u00e9es priv\u00e9es de l'utilisateur ou les modifier. Un attaquant pourrait \u00e9galement modifier toutes les donn\u00e9es en transit, par exemple le destinataire d'un virement d'argent.</p> <p>Sc\u00e9nario 3 : La base de donn\u00e9es contenant les mots de passe n'utilise pas de sel, ou alors de simples hach\u00e9s pour stocker les mots de passe de chacun. Une faille d'upload de fichier permet \u00e0 un attaquant de r\u00e9cup\u00e9rer la base de donn\u00e9es de mots de passe. Tous les hach\u00e9s non sal\u00e9s peuvent alors \u00eatre r\u00e9v\u00e9l\u00e9s avec une rainbow table de hach\u00e9s pr\u00e9-calcul\u00e9s. Des hach\u00e9s g\u00e9n\u00e9r\u00e9s par des fonctions de hachage simples ou rapides peuvent \u00eatre d\u00e9chiffr\u00e9s par des GPUs, m\u00eame sal\u00e9s.</p>"},{"location":"fr/A02_2021-Cryptographic_Failures/#references","title":"R\u00e9f\u00e9rences","text":"<ul> <li> <p>OWASP Proactive Controls: Protect Data     Everywhere</p> </li> <li> <p>OWASP Application Security Verification Standard (V7,     9, 10)</p> </li> <li> <p>OWASP Cheat Sheet: Transport Layer     Protection</p> </li> <li> <p>OWASP Cheat Sheet: User Privacy     Protection</p> </li> <li> <p>OWASP Cheat Sheet: Password and Cryptographic Storage</p> </li> <li> <p>OWASP Cheat Sheet:     HSTS</p> </li> <li> <p>OWASP Testing Guide: Testing for weak cryptography</p> </li> </ul>"},{"location":"fr/A02_2021-Cryptographic_Failures/#liste-des-cwes-associees","title":"Liste des CWEs associ\u00e9es","text":"<p>CWE-261 Weak Encoding for Password</p> <p>CWE-296 Improper Following of a Certificate's Chain of Trust</p> <p>CWE-310 Cryptographic Issues</p> <p>CWE-319 Cleartext Transmission of Sensitive Information</p> <p>CWE-321 Use of Hard-coded Cryptographic Key</p> <p>CWE-322 Key Exchange without Entity Authentication</p> <p>CWE-323 Reusing a Nonce, Key Pair in Encryption</p> <p>CWE-324 Use of a Key Past its Expiration Date</p> <p>CWE-325 Missing Required Cryptographic Step</p> <p>CWE-326 Inadequate Encryption Strength</p> <p>CWE-327 Use of a Broken or Risky Cryptographic Algorithm</p> <p>CWE-328 Reversible One-Way Hash</p> <p>CWE-329 Not Using a Random IV with CBC Mode</p> <p>CWE-330 Use of Insufficiently Random Values</p> <p>CWE-331 Insufficient Entropy</p> <p>CWE-335 Incorrect Usage of Seeds in Pseudo-Random Number Generator(PRNG)</p> <p>CWE-336 Same Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-337 Predictable Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-338 Use of Cryptographically Weak Pseudo-Random Number Generator(PRNG)</p> <p>CWE-340 Generation of Predictable Numbers or Identifiers</p> <p>CWE-347 Improper Verification of Cryptographic Signature</p> <p>CWE-523 Unprotected Transport of Credentials</p> <p>CWE-720 OWASP Top Ten 2007 Category A9 - Insecure Communications</p> <p>CWE-757 Selection of Less-Secure Algorithm During Negotiation('Algorithm Downgrade')</p> <p>CWE-759 Use of a One-Way Hash without a Salt</p> <p>CWE-760 Use of a One-Way Hash with a Predictable Salt</p> <p>CWE-780 Use of RSA Algorithm without OAEP</p> <p>CWE-818 Insufficient Transport Layer Protection</p> <p>CWE-916 Use of Password Hash With Insufficient Computational Effort</p>"},{"location":"fr/A03_2021-Injection/#facteurs","title":"Facteurs","text":"CWEs associ\u00e9es Taux d'incidence max Taux d'incidence moyen Exploitation pond\u00e9r\u00e9e moyenne Impact pond\u00e9r\u00e9 moyen Couverture max Couverture moyenne Nombre total d'occurrences Nombre total de CVEs 33 19,09 % 3,37 % 7,25 7,15 94,04 % 47,90 % 274 228 32 078"},{"location":"fr/A03_2021-Injection/#apercu","title":"Aper\u00e7u","text":"<p>Injection glisse \u00e0 la troisi\u00e8me place. 94\u00a0% des applications ont \u00e9t\u00e9 test\u00e9es pour une forme d'injection avec un taux d'incidence maximal de 19\u00a0%, un taux d'incidence moyen de 3\u00a0% et 274\u00a0000 occurrences. Les Common Weakness Enumerations (CWEs) notables incluses sont CWE-79: Cross-site Scripting, CWE-89: SQL Injection, and CWE-73: External Control of File Name or Path.</p>"},{"location":"fr/A03_2021-Injection/#description","title":"Description","text":"<p>Une application est vuln\u00e9rable quand :</p> <ul> <li>les donn\u00e9es venant de l'utilisateur ne sont pas valid\u00e9es, filtr\u00e9es ou nettoy\u00e9es par l'application\u00a0;</li> <li>des requ\u00eates dynamiques ou des appels non param\u00e9tr\u00e9s sans \u00e9chappement par rapport au contexte sont envoy\u00e9s \u00e0 l'interpr\u00e9teur\u00a0;</li> <li>des donn\u00e9es hostiles sont utilis\u00e9es au sein de param\u00e8tres de recherche de mapping objet - relationnel (ORM) pour extraire des donn\u00e9es suppl\u00e9mentaires sensibles\u00a0;</li> <li>des donn\u00e9es hostiles sont utilis\u00e9es directement ou concat\u00e9n\u00e9es, par exemple lors de la construction de requ\u00eates dynamiques, de commandes ou de proc\u00e9dures stock\u00e9es pour des requ\u00eates SQL ou des commandes OS.</li> </ul> <p>Les injections les plus courantes se font dans le SQL, le NoSQL, les commandes OS, le mapping objet - relationnel, le LDAP, l'Expression Language et le Object Graph Navigation Library (OGNL). La fa\u00e7on de faire est la m\u00eame pour tous les interpr\u00e9teurs. La revue de code source est la meilleure mani\u00e8re de d\u00e9tecter si une application est vuln\u00e9rable \u00e0 l'injection. Le test automatique de toutes les donn\u00e9es d'entr\u00e9e via les param\u00e8tres, en-t\u00eates, URL, cookies, JSON, SOAP et XML est fortement encourag\u00e9. Les organisations peuvent tirer profit de la puissance des outils d'analyse statique de code (SAST) ou d'analyse dynamique de l'application (DAST) en les int\u00e9grant dans leur chaine d'int\u00e9gration continue (CI / CD) pour identifier avant d\u00e9ploiement en production les vuln\u00e9rabilit\u00e9s li\u00e9es aux injections.</p>"},{"location":"fr/A03_2021-Injection/#comment-sen-premunir","title":"Comment s'en pr\u00e9munir","text":"<p>Pr\u00e9venir l\u2019injection exige de s\u00e9parer les donn\u00e9es non fiables des commandes et requ\u00eates :</p> <ul> <li>la meilleure option est d\u2019utiliser une API saine qui \u00e9vite compl\u00e8tement l\u2019utilisation de l\u2019interpr\u00e9teur ou fournit une interface param\u00e9trable, ou bien de migrer pour utiliser les outils d'Object Relational Mapping Tools (ORMs).Note : Attention aux API, telles les proc\u00e9dures stock\u00e9es, qui sont param\u00e9trables, mais qui pourraient introduire une Injection SQL si PL/SQL ou T-SQL concat\u00e8ne requ\u00eates et donn\u00e9es ou ex\u00e9cute des donn\u00e9es non saines avec EXECUTE IMMEDIATE ou exec() ;</li> <li>pour les donn\u00e9es en entr\u00e9e, une liste autoris\u00e9e avec normalisation est recommand\u00e9e, mais n\u2019est pas une d\u00e9fense compl\u00e8te dans la mesure o\u00f9 de nombreuses applications requi\u00e8rent des caract\u00e8res sp\u00e9ciaux, par exemple les zones de texte ou les API pour les applications mobiles ;</li> <li>pour les requ\u00eates dynamiques restantes, vous devriez soigneusement \u00e9chapper les caract\u00e8res sp\u00e9ciaux en utilisant la syntaxe d\u2019\u00e9chappement sp\u00e9cifique \u00e0 l\u2019interpr\u00e9teur.Note : Les structures SQL telles que les noms de table, les noms de colonne, et d'autres ne peuvent pas \u00eatre \u00e9chapp\u00e9es et les noms de structures venant de l'utilisateur doivent donc \u00eatre consid\u00e9r\u00e9s comme dangereuses. Ceci est un probl\u00e8me courant dans les logiciels d'aide \u00e0 l'\u00e9criture de rapports ;</li> <li>il est conseill\u00e9 d'utiliser LIMIT et autres contr\u00f4les SQL \u00e0 l'int\u00e9rieur des requ\u00eates pour emp\u00eacher les divulgations massives de donn\u00e9es dans le cas d'injection SQL.</li> </ul>"},{"location":"fr/A03_2021-Injection/#exemple-de-scenarios-dattaque","title":"Exemple de sc\u00e9narios d'attaque","text":"<p>Scenario #1 : L\u2019application utilise des donn\u00e9es non fiables dans la construction de l\u2019appel SQL vuln\u00e9rable suivant :</p> <pre><code>String query = \"SELECT \\* FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\";\n</code></pre> <p>Scenario #2 : De m\u00eame, la confiance aveugle d'une application dans les frameworks qu'elle utilise peut faire que ses requ\u00eates sont toujours vuln\u00e9rables (par exemple Hibernate Query Language (HQL)) :</p> <pre><code> Query HQLQuery = session.createQuery(\"FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\");\n</code></pre> <p>Dans les deux cas, l'attaquant modifie le param\u00e8tre \u2018id\u2019 dans son navigateur en : ' UNION SELECT SLEEP(10);--. Par exemple :</p> <pre><code> http://example.com/app/accountView?id=' UNION SELECT SLEEP(10);--\n</code></pre> <p>Ceci change le sens de chacune des requ\u00eates pour r\u00e9cup\u00e9rer tous les enregistrements de la table des comptes. Dans le pire des cas, l\u2019attaquant exploite cette faiblesse pour modifier ou d\u00e9truire des donn\u00e9es, ou appeler des proc\u00e9dures stock\u00e9es de la base de donn\u00e9es.</p>"},{"location":"fr/A03_2021-Injection/#references","title":"R\u00e9f\u00e9rences","text":"<ul> <li> <p>OWASP Proactive Controls: Secure Database Access</p> </li> <li> <p>OWASP ASVS: V5 Input Validation and Encoding</p> </li> <li> <p>OWASP Testing Guide: SQL Injection, Command Injection,     and\u00a0ORM Injection</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: SQL Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention in Java</p> </li> <li> <p>OWASP Cheat Sheet: Query Parameterization</p> </li> <li> <p>OWASP Automated Threats to Web Applications \u2013 OAT-014</p> </li> <li> <p>PortSwigger: Server-side template injection</p> </li> </ul>"},{"location":"fr/A03_2021-Injection/#liste-des-cwes-associees","title":"Liste des CWEs associ\u00e9es","text":"<p>CWE-20 Improper Input Validation</p> <p>CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')</p> <p>CWE-75 Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)</p> <p>CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection')</p> <p>CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</p> <p>CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</p> <p>CWE-80 Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</p> <p>CWE-83 Improper Neutralization of Script in Attributes in a Web Page</p> <p>CWE-87 Improper Neutralization of Alternate XSS Syntax</p> <p>CWE-88 Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')</p> <p>CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</p> <p>CWE-90 Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</p> <p>CWE-91 XML Injection (aka Blind XPath Injection)</p> <p>CWE-93 Improper Neutralization of CRLF Sequences ('CRLF Injection')</p> <p>CWE-94 Improper Control of Generation of Code ('Code Injection')</p> <p>CWE-95 Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</p> <p>CWE-96 Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')</p> <p>CWE-97 Improper Neutralization of Server-Side Includes (SSI) Within a Web Page</p> <p>CWE-98 Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')</p> <p>CWE-99 Improper Control of Resource Identifiers ('Resource Injection')</p> <p>CWE-100 Deprecated: Was catch-all for input validation issues</p> <p>CWE-113 Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')</p> <p>CWE-116 Improper Encoding or Escaping of Output</p> <p>CWE-138 Improper Neutralization of Special Elements</p> <p>CWE-184 Incomplete List of Disallowed Inputs</p> <p>CWE-470 Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')</p> <p>CWE-471 Modification of Assumed-Immutable Data (MAID)</p> <p>CWE-564 SQL Injection: Hibernate</p> <p>CWE-610 Externally Controlled Reference to a Resource in Another Sphere</p> <p>CWE-643 Improper Neutralization of Data within XPath Expressions ('XPath Injection')</p> <p>CWE-644 Improper Neutralization of HTTP Headers for Scripting Syntax</p> <p>CWE-652 Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')</p> <p>CWE-917 Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')</p>"},{"location":"fr/A04_2021-Insecure_Design/","title":"A04:2021 \u2013 Conception non s\u00e9curis\u00e9e","text":""},{"location":"fr/A04_2021-Insecure_Design/#facteurs","title":"Facteurs","text":"CWEs associ\u00e9es Taux d'incidence max Taux d'incidence moyen Exploitation pond\u00e9r\u00e9e moyenne Impact pond\u00e9r\u00e9 moyen Couverture max Couverture moyenne Nombre total d'occurrences Nombre total de CVEs 40 24,19 % 3,00 % 6,46 6,78 77,25 % 42,51 % 262 407 2 691"},{"location":"fr/A04_2021-Insecure_Design/#apercu","title":"Aper\u00e7u","text":"<p>Une nouvelle cat\u00e9gorie pour 2021, l'accent est mis sur les risques li\u00e9s aux failles de conception et d'architecture, avec un appel \u00e0 l'augmentation du recours aux mod\u00e8les de menaces, aux mod\u00e8les et principes de conceptions s\u00e9curis\u00e9s et aux architectures de r\u00e9f\u00e9rence. En tant que communaut\u00e9, nous devons ajouter des contr\u00f4les en amont du d\u00e9veloppement, ces phases sont vitales pour une conception s\u00e9curis\u00e9e. Les Common Weakness Enumerations (CWE) notables incluses sont CWE-209: Generation of Error Message Containing Sensitive Information, CWE-256: Unprotected Storage of Credentials, CWE-501: Trust Boundary Violation et CWE-522: Insufficiently Protected Credentials.</p>"},{"location":"fr/A04_2021-Insecure_Design/#description","title":"Description","text":"<p>Conception non s\u00e9curis\u00e9e est une vaste cat\u00e9gorie repr\u00e9sentant diff\u00e9rentes insuffisances, exprim\u00e9es par \u00ab contr\u00f4les de conception manquants ou inefficaces \u00bb. La conception non s\u00e9curis\u00e9e n'est pas la source de toutes les autres cat\u00e9gories de risques du Top 10. Il existe une diff\u00e9rence entre une conception non s\u00e9curis\u00e9e et une impl\u00e9mentation non s\u00e9curis\u00e9e. Nous diff\u00e9rencions les d\u00e9fauts de conception et les d\u00e9fauts d'impl\u00e9mentation pour une raison, ils ont des causes racines et des mesures correctives diff\u00e9rentes. Une conception s\u00e9curis\u00e9e peut toujours pr\u00e9senter des d\u00e9fauts d'impl\u00e9mentations conduisant \u00e0 des vuln\u00e9rabilit\u00e9s pouvant \u00eatre exploit\u00e9es. Une conception non s\u00e9curis\u00e9e ne peut pas \u00eatre corrig\u00e9e par une impl\u00e9mentation parfaite car, par d\u00e9finition, les contr\u00f4les de s\u00e9curit\u00e9 n\u00e9cessaires n'ont jamais \u00e9t\u00e9 cr\u00e9\u00e9s pour se d\u00e9fendre contre des attaques sp\u00e9cifiques. L'un des facteurs qui contribuent \u00e0 la conception non s\u00e9curis\u00e9e est le manque de profilage des risques commerciaux inh\u00e9rent au logiciel ou au syst\u00e8me en cours de d\u00e9veloppement, et donc l'incapacit\u00e9 \u00e0 d\u00e9terminer le niveau de s\u00e9curit\u00e9 requis.</p>"},{"location":"fr/A04_2021-Insecure_Design/#gestion-des-exigences-et-des-ressources","title":"Gestion des exigences et des ressources","text":"<p>Recueillez et n\u00e9gociez les exigences m\u00e9tier pour une application avec les \u00e9quipes fonctionnelles, y compris les exigences de s\u00e9curit\u00e9 concernant la confidentialit\u00e9, l'int\u00e9grit\u00e9, la disponibilit\u00e9 et l'authenticit\u00e9 de l'ensemble des donn\u00e9es et de la logique m\u00e9tier attendue. Prenez compte du degr\u00e9 d'exposition de votre application et si vous avez besoin de s\u00e9parer les tenants (en plus du contr\u00f4le d'acc\u00e8s). Rassemblez les exigences techniques, y compris les exigences de s\u00e9curit\u00e9 fonctionnelles et non fonctionnelles. Planifiez et n\u00e9gociez le budget couvrant l'ensemble de la conception, de la construction, des tests et de l'exploitation, y compris les activit\u00e9s de s\u00e9curit\u00e9.</p>"},{"location":"fr/A04_2021-Insecure_Design/#conception-securisee","title":"Conception s\u00e9curis\u00e9e","text":"<p>La conception s\u00e9curis\u00e9e est une culture et une m\u00e9thodologie qui \u00e9value en permanence les menaces et garanti que le code est con\u00e7u et test\u00e9 de mani\u00e8re robuste pour emp\u00eacher les m\u00e9thodes d'attaques connues. La mod\u00e9lisation des menaces doit \u00eatre int\u00e9gr\u00e9e aux sessions de refinement (ou activit\u00e9s similaires) et rechercher des changements dans les flux de donn\u00e9es et le contr\u00f4le d'acc\u00e8s. Dans les user stories, d\u00e9terminez le cas passant et les \u00e9tats d'\u00e9checs, assurez-vous qu'ils sont bien compris et accept\u00e9s par les parties responsables et impact\u00e9es. Analysez les hypoth\u00e8ses et les conditions pour les cas passants et en \u00e9checs, assurez-vous qu'ils sont toujours exacts et souhait\u00e9s. D\u00e9terminez comment valider les hypoth\u00e8ses et mettez en place les conditions n\u00e9cessaires pour un comportement appropri\u00e9. Assurez-vous que les r\u00e9sultats sont document\u00e9s dans la user story. Apprenez de vos erreurs, incitez et faites la promotion des am\u00e9liorations. La conception s\u00e9curis\u00e9e n'est ni un module compl\u00e9mentaire, ni un outil que vous pouvez ajouter au logiciel.</p>"},{"location":"fr/A04_2021-Insecure_Design/#cycle-de-developpement-securise","title":"Cycle de d\u00e9veloppement s\u00e9curis\u00e9","text":"<p>Un logiciel s\u00e9curis\u00e9 n\u00e9cessite un cycle de vie de d\u00e9veloppement s\u00e9curis\u00e9, une m\u00e9thode de conception s\u00e9curis\u00e9e, une voie pav\u00e9e, une biblioth\u00e8que de composants s\u00e9curis\u00e9s, des outils et une mod\u00e9lisation des menaces. Faites appel \u00e0 vos sp\u00e9cialistes de la s\u00e9curit\u00e9 tout au long du projet et de la maintenance de votre logiciel. Essayez de tirer parti de l'OWASP Software Assurance Maturity Model (SAMM) pour vous aider \u00e0 structurer vos efforts de d\u00e9veloppement s\u00e9curis\u00e9.</p>"},{"location":"fr/A04_2021-Insecure_Design/#comment-sen-premunir","title":"Comment s'en pr\u00e9munir","text":"<ul> <li>mettez en place et utilisez un cycle de vie de d\u00e9veloppement s\u00e9curis\u00e9 avec des professionnels de la s\u00e9curit\u00e9 applicative pour aider \u00e0 \u00e9valuer et \u00e0 concevoir des contr\u00f4les li\u00e9s \u00e0 la s\u00e9curit\u00e9 et \u00e0 la confidentialit\u00e9 ;</li> <li>mettez en place et utilisez une biblioth\u00e8que de mod\u00e8les de conception s\u00e9curis\u00e9s ou de composants pr\u00eats \u00e0 l'emploi pour une voie pav\u00e9e ;</li> <li>utilisez la mod\u00e9lisation des menaces pour l'authentification critique, le contr\u00f4le d'acc\u00e8s, la logique m\u00e9tier et la gestion de cl\u00e9s ;</li> <li>int\u00e9grez les contr\u00f4les de s\u00e9curit\u00e9 dans les user stories ;</li> <li>int\u00e9grez des contr\u00f4les de vraisemblance \u00e0 chaque niveau de votre application (du frontend au backend) ;</li> <li>\u00e9crivez des tests unitaires et d'int\u00e9gration pour valider que tous les flux critiques sont r\u00e9sistants aux mod\u00e8les de menaces. Assemblez des cas d'usage et des cas de d\u00e9tournement pour chaque niveau de votre application ;</li> <li>s\u00e9parez les couches syst\u00e8mes et r\u00e9seaux en fonction de l'exposition et des besoins de protection ;</li> <li>s\u00e9parez les tenants via une conception robuste sur l'ensemble des niveaux ;</li> <li>restreignez les ressources par utilisateur ou service.</li> </ul>"},{"location":"fr/A04_2021-Insecure_Design/#exemple-de-scenarios-dattaque","title":"Exemple de sc\u00e9narios d'attaque","text":"<p>Sc\u00e9nario 1 : Un processus de r\u00e9cup\u00e9ration d'informations d'identification peut inclure des \u00ab\u00a0questions secr\u00e8tes\u00a0\u00bb, ce qui est interdit par le NIST 800-63b, l'OWASP ASVS et le Top 10 de l'OWASP. Les questions et les r\u00e9ponses ne peuvent pas \u00eatre consid\u00e9r\u00e9es comme une preuve d'identit\u00e9, car plus d'une personne peut conna\u00eetre les r\u00e9ponses, c'est pourquoi elles sont interdites. Un tel code doit \u00eatre supprim\u00e9 et remplac\u00e9 par une conception plus s\u00e9curis\u00e9e.</p> <p>Sc\u00e9nario 2 : Une cha\u00eene de cin\u00e9ma permet des r\u00e9ductions sur les r\u00e9servations de groupe et compte un maximum de quinze participants avant d'exiger un acompte. Les attaquants pourraient mod\u00e9liser ce cas d'usage et tester s'ils peuvent r\u00e9server six cents places et tous les cin\u00e9mas \u00e0 la fois en quelques demandes, provoquant une perte massive de revenus.</p> <p>Sc\u00e9nario 3 : Le site e-commerce d'une cha\u00eene de vente au d\u00e9tail n'est pas prot\u00e9g\u00e9 contre les robots qui ach\u00e8tent des cartes vid\u00e9o haut de gamme pour les revendre sur le march\u00e9 noir. Cela cr\u00e9e une mauvaise publicit\u00e9 pour les fabricants de cartes vid\u00e9o et les propri\u00e9taires de cha\u00eenes de vente au d\u00e9tail, provoque du ressentiment de la part des acheteurs qui ne peuvent pas se procurer ces cartes quel qu'en soit le prix. Des r\u00e8gles prudentes de conception anti-bot, telles que les achats effectu\u00e9s dans les quelques secondes suivant la disponibilit\u00e9, peuvent identifier des achats non authentiques et rejeter de telles transactions.</p>"},{"location":"fr/A04_2021-Insecure_Design/#references","title":"R\u00e9f\u00e9rences","text":"<ul> <li> <p>OWASP Cheat Sheet: Secure Design Principles</p> </li> <li> <p>OWASP SAMM: Design:Security Architecture</p> </li> <li> <p>OWASP SAMM: Design:Threat Assessment </p> </li> <li> <p>NIST \u2013 Guidelines on Minimum Standards for Developer Verification of Software</p> </li> <li> <p>The Threat Modeling Manifesto</p> </li> <li> <p>Awesome Threat Modeling</p> </li> </ul>"},{"location":"fr/A04_2021-Insecure_Design/#liste-des-cwes-associees","title":"Liste des CWEs associ\u00e9es","text":"<p>CWE-73 External Control of File Name or Path</p> <p>CWE-183 Permissive List of Allowed Inputs</p> <p>CWE-209 Generation of Error Message Containing Sensitive Information</p> <p>CWE-213 Exposure of Sensitive Information Due to Incompatible Policies</p> <p>CWE-235 Improper Handling of Extra Parameters</p> <p>CWE-256 Unprotected Storage of Credentials</p> <p>CWE-257 Storing Passwords in a Recoverable Format</p> <p>CWE-266 Incorrect Privilege Assignment</p> <p>CWE-269 Improper Privilege Management</p> <p>CWE-280 Improper Handling of Insufficient Permissions or Privileges</p> <p>CWE-311 Missing Encryption of Sensitive Data</p> <p>CWE-312 Cleartext Storage of Sensitive Information</p> <p>CWE-313 Cleartext Storage in a File or on Disk</p> <p>CWE-316 Cleartext Storage of Sensitive Information in Memory</p> <p>CWE-419 Unprotected Primary Channel</p> <p>CWE-430 Deployment of Wrong Handler</p> <p>CWE-434 Unrestricted Upload of File with Dangerous Type</p> <p>CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')</p> <p>CWE-451 User Interface (UI) Misrepresentation of Critical Information</p> <p>CWE-472 External Control of Assumed-Immutable Web Parameter</p> <p>CWE-501 Trust Boundary Violation</p> <p>CWE-522 Insufficiently Protected Credentials</p> <p>CWE-525 Use of Web Browser Cache Containing Sensitive Information</p> <p>CWE-539 Use of Persistent Cookies Containing Sensitive Information</p> <p>CWE-579 J2EE Bad Practices: Non-serializable Object Stored in Session</p> <p>CWE-598 Use of GET Request Method With Sensitive Query Strings</p> <p>CWE-602 Client-Side Enforcement of Server-Side Security</p> <p>CWE-642 External Control of Critical State Data</p> <p>CWE-646 Reliance on File Name or Extension of Externally-Supplied File</p> <p>CWE-650 Trusting HTTP Permission Methods on the Server Side</p> <p>CWE-653 Insufficient Compartmentalization</p> <p>CWE-656 Reliance on Security Through Obscurity</p> <p>CWE-657 Violation of Secure Design Principles</p> <p>CWE-799 Improper Control of Interaction Frequency</p> <p>CWE-807 Reliance on Untrusted Inputs in a Security Decision</p> <p>CWE-840 Business Logic Errors</p> <p>CWE-841 Improper Enforcement of Behavioral Workflow</p> <p>CWE-927 Use of Implicit Intent for Sensitive Communication</p> <p>CWE-1021 Improper Restriction of Rendered UI Layers or Frames</p> <p>CWE-1173 Improper Use of Validation Framework</p>"},{"location":"fr/A05_2021-Security_Misconfiguration/","title":"A05:2021 \u2013 Mauvaise configuration de s\u00e9curit\u00e9","text":""},{"location":"fr/A05_2021-Security_Misconfiguration/#facteurs","title":"Facteurs","text":"CWEs associ\u00e9es Taux d'incidence max Taux d'incidence moyen Exploitation pond\u00e9r\u00e9e moyenne Impact pond\u00e9r\u00e9 moyen Couverture max Couverture moyenne Nombre total d'occurrences Nombre total de CVEs 20 19,84 % 4,51 % 8,12 6,56 89,58 % 44,84 % 208 387 789"},{"location":"fr/A05_2021-Security_Misconfiguration/#apercu","title":"Aper\u00e7u","text":"<p>En progression depuis la sixi\u00e8me place, 90\u00a0% des applications ont \u00e9t\u00e9 test\u00e9es pour une forme de mauvaise configuration, avec un taux d'incidence moyen de 4,51\u00a0% et plus de 208\u00a0000 occurrences de Common Weakness Enumeration (CWE) dans cette cat\u00e9gorie. Avec une plus grande part de logiciels offrant une configuration riche, il n'est pas surprenant de voir cette cat\u00e9gorie gagner une place. Les CWEs notables incluses sont CWE-16 Configuration et CWE-611 Improper Restriction of XML External Entity Reference.</p>"},{"location":"fr/A05_2021-Security_Misconfiguration/#description","title":"Description","text":"<p>L'application peut \u00eatre vuln\u00e9rable si :</p> <ul> <li>elle n'a pas fait l'objet d'un durcissement de la s\u00e9curit\u00e9 appropri\u00e9 sur l'ensemble des couches protocolaires applicatives, ou si les permissions sont mal configur\u00e9es sur les services cloud ;</li> <li>des fonctionnalit\u00e9s inutiles sont activ\u00e9es ou install\u00e9es (ex : des ports, des services, des pages, des comptes ou des privil\u00e8ges inutiles) ;</li> <li>les comptes par d\u00e9faut et leurs mots de passe sont toujours activ\u00e9s et inchang\u00e9s ;</li> <li>le traitement des erreurs r\u00e9v\u00e8le aux utilisateurs des traces des piles protocolaires ou d'autres messages d'erreur laissant transpirer trop d'informations ;</li> <li>pour les syst\u00e8mes \u00e0 jour ou mis \u00e0 niveau, les derni\u00e8res fonctionnalit\u00e9s de s\u00e9curit\u00e9 sont d\u00e9sactiv\u00e9es ou ne sont pas configur\u00e9es de mani\u00e8re s\u00e9curis\u00e9e ;</li> <li>les param\u00e8tres de s\u00e9curit\u00e9 dans les serveurs d'application, les frameworks applicatifs (ex : Struts, Spring, ASP.NET), les biblioth\u00e8ques, les bases de donn\u00e9es, etc. ne sont pas param\u00e9tr\u00e9s avec des valeurs correctes du point de vue de la s\u00e9curit\u00e9 ;</li> <li>le serveur n'envoie pas d'en-t\u00eates ou de directives de s\u00e9curit\u00e9, ou s'ils ne sont pas param\u00e9tr\u00e9s avec des valeurs correctes du point de vue de la s\u00e9curit\u00e9 ;</li> <li>La version du logiciel est obsol\u00e8te ou vuln\u00e9rable (voir A06:2021-Composants vuln\u00e9rables et obsol\u00e8tes).</li> </ul> <p>Sans un processus concert\u00e9 et r\u00e9p\u00e9table de configuration de la s\u00e9curit\u00e9 des applications, les syst\u00e8mes courent un risque plus \u00e9lev\u00e9.</p>"},{"location":"fr/A05_2021-Security_Misconfiguration/#comment-sen-premunir","title":"Comment s'en pr\u00e9munir","text":"<p>Des processus d'installation s\u00e9curis\u00e9s doivent \u00eatre mis en \u0153uvre, avec notamment :</p> <ul> <li>un processus de durcissement r\u00e9p\u00e9table qui permette de d\u00e9ployer rapidement et facilement un autre environnement correctement s\u00e9curis\u00e9 avec une configuration verrouill\u00e9e. Les environnements de d\u00e9veloppement, d'assurance qualit\u00e9 et de production doivent tous \u00eatre configur\u00e9s de mani\u00e8re identique, avec des droits diff\u00e9rents pour chaque environnement. Ce processus devrait \u00eatre automatis\u00e9 afin de r\u00e9duire au minimum les efforts requis pour mettre en place un nouvel environnement s\u00e9curis\u00e9 ;</li> <li>une plate-forme minimale sans fonctionnalit\u00e9, composant, documentation et \u00e9chantillon inutile. Supprimer ou ne pas installer des fonctionnalit\u00e9s et frameworks inutilis\u00e9s ;</li> <li>une t\u00e2che pour revoir et mettre \u00e0 jour les configurations appropri\u00e9es \u00e0 tous les avis de s\u00e9curit\u00e9, toutes les mises \u00e0 jour et tous les correctifs dans le cadre du processus de gestion des correctifs (voir A06:2021-Composants vuln\u00e9rables et obsol\u00e8tes). En particulier, examiner les permissions de stockage dans le Cloud (ex. les permissions des buckets AWS S3) ;</li> <li>une architecture d'application segment\u00e9e qui fournit une s\u00e9paration efficace et s\u00e9curis\u00e9e entre les composants ou les environnements h\u00e9berg\u00e9s, avec de la segmentation, de la mise en conteneurs ou l'utilisation de groupes de s\u00e9curit\u00e9 dans le Cloud (ACL) ;</li> <li>l'envoi de directives de s\u00e9curit\u00e9 aux clients, par exemple En-t\u00eates de s\u00e9curit\u00e9 ;</li> <li>un processus automatis\u00e9 pour v\u00e9rifier l'efficacit\u00e9 des configurations et des r\u00e9glages dans tous les environnements.</li> </ul>"},{"location":"fr/A05_2021-Security_Misconfiguration/#exemple-de-scenarios-dattaque","title":"Exemple de sc\u00e9narios d'attaque","text":"<p>Sc\u00e9nario 1 : Le serveur d'application est livr\u00e9 avec des applications classiques qui ne sont pas supprim\u00e9es du serveur mis en production. Ces m\u00eames applications ont des failles de s\u00e9curit\u00e9 connues que les attaquants utilisent afin de compromettre le serveur. Si l'une de ces applications est la console d'administration, et que les comptes par d\u00e9faut n'ont pas \u00e9t\u00e9 modifi\u00e9s, l'attaquant se connecte avec les mots de passe par d\u00e9faut et prend la main sur la cible.</p> <p>Sc\u00e9nario 2 : La fonctionnalit\u00e9 de listage des r\u00e9pertoires n'est pas d\u00e9sactiv\u00e9e sur le serveur. Un attaquant d\u00e9couvre qu'il peut simplement lister les r\u00e9pertoires. L'attaquant trouve et t\u00e9l\u00e9charge les classes Java compil\u00e9es, qu'il d\u00e9compose et fait de l'ing\u00e9nierie invers\u00e9e pour visualiser le code. L'attaquant trouve alors un grave d\u00e9faut dans le contr\u00f4le d'acc\u00e8s de l'application.</p> <p>Sc\u00e9nario 3 : La configuration du serveur d'application permet de renvoyer aux utilisateurs des messages d'erreur d\u00e9taill\u00e9s, par exemple avec des traces des couches protocolaires applicatives. Cela peut ainsi exposer des informations sensibles ou des vuln\u00e9rabilit\u00e9s sous-jacentes telles que les versions de composants dont on sait qu'elles sont vuln\u00e9rables.</p> <p>Sc\u00e9nario 4 : Un fournisseur de services Cloud (CSP) a positionn\u00e9 des droits de partage par d\u00e9faut qui sont ouverts sur Internet par d'autres utilisateurs du CSP. Cela permet d'acc\u00e9der \u00e0 des donn\u00e9es sensibles stock\u00e9es dans le stockage Cloud.</p>"},{"location":"fr/A05_2021-Security_Misconfiguration/#references","title":"R\u00e9f\u00e9rences","text":"<ul> <li> <p>OWASP Testing Guide: Configuration     Management</p> </li> <li> <p>OWASP Testing Guide: Testing for Error Codes</p> </li> <li> <p>Application Security Verification Standard V14 Configuration</p> </li> <li> <p>NIST Guide to General Server     Hardening</p> </li> <li> <p>CIS Security Configuration     Guides/Benchmarks</p> </li> <li> <p>Amazon S3 Bucket Discovery and     Enumeration</p> </li> </ul>"},{"location":"fr/A05_2021-Security_Misconfiguration/#liste-des-cwes-associees","title":"Liste des CWEs associ\u00e9es","text":"<p>CWE-2 7PK - Environment</p> <p>CWE-11 ASP.NET Misconfiguration: Creating Debug Binary</p> <p>CWE-13 ASP.NET Misconfiguration: Password in Configuration File</p> <p>CWE-15 External Control of System or Configuration Setting</p> <p>CWE-16 Configuration</p> <p>CWE-260 Password in Configuration File</p> <p>CWE-315 Cleartext Storage of Sensitive Information in a Cookie</p> <p>CWE-520 .NET Misconfiguration: Use of Impersonation</p> <p>CWE-526 Exposure of Sensitive Information Through Environmental Variables</p> <p>CWE-537 Java Runtime Error Message Containing Sensitive Information</p> <p>CWE-541 Inclusion of Sensitive Information in an Include File</p> <p>CWE-547 Use of Hard-coded, Security-relevant Constants</p> <p>CWE-611 Improper Restriction of XML External Entity Reference</p> <p>CWE-614 Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</p> <p>CWE-756 Missing Custom Error Page</p> <p>CWE-776 Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')</p> <p>CWE-942 Permissive Cross-domain Policy with Untrusted Domains</p> <p>CWE-1004 Sensitive Cookie Without 'HttpOnly' Flag</p> <p>CWE-1032 OWASP Top Ten 2017 Category A6 - Security Misconfiguration</p> <p>CWE-1174 ASP.NET Misconfiguration: Improper Model Validation</p>"},{"location":"fr/A06_2021-Vulnerable_and_Outdated_Components/","title":"A06:2021 \u2013 Composants vuln\u00e9rables et obsol\u00e8tes","text":""},{"location":"fr/A06_2021-Vulnerable_and_Outdated_Components/#facteurs","title":"Facteurs","text":"CWEs associ\u00e9es Taux d'incidence max Taux d'incidence moyen Couverture max Couverture moyenne Exploitation pond\u00e9r\u00e9e moyenne Impact pond\u00e9r\u00e9 moyen Nombre total d'occurrences Nombre total de CVEs 3 27,96 % 8,77 % 51,78 % 22,47 % 5,00 5,00 30 457 0"},{"location":"fr/A06_2021-Vulnerable_and_Outdated_Components/#apercu","title":"Aper\u00e7u","text":"<p>Il figurait au deuxi\u00e8me rang lors du sondage communautaire du Top 10, mais il contenait \u00e9galement suffisamment de donn\u00e9es pour l'int\u00e9grer par ce biais. Les composants vuln\u00e9rables sont un probl\u00e8me connu pour lequel nous avons du mal \u00e0 tester et \u00e0 \u00e9valuer les risques. Elle est la seule cat\u00e9gorie \u00e0 ne pas avoir de Common Vulnerability and Exposures (CVEs) associ\u00e9es aux CWEs concern\u00e9es, en cons\u00e9quence les coefficients d'impact et de poids ont \u00e9t\u00e9 renseign\u00e9s \u00e0 5.0 par d\u00e9faut. Les CWEs notables incluses sont CWE-1104: Use of Unmaintained Third-Party Components et les deux CWE des Top 10 de 2013 et 2017.</p>"},{"location":"fr/A06_2021-Vulnerable_and_Outdated_Components/#description","title":"Description","text":"<p>Vous \u00eates probablement vuln\u00e9rable :</p> <ul> <li>si vous ne savez pas quels sont tous les composants que vous utilisez (\u00e0 la fois c\u00f4t\u00e9 client et c\u00f4t\u00e9 serveur). Cela comprend les composants que vous utilisez directement ou par l'interm\u00e9diaire des d\u00e9pendances imbriqu\u00e9es ;</li> <li>si le logiciel est vuln\u00e9rable, sans support ou obsol\u00e8te. Cela concerne le syst\u00e8me d'exploitation, le serveur web/application, le syst\u00e8me de gestion de base de donn\u00e9es (SGBD), les applications, API et autres composants, les environnements d'ex\u00e9cution et les biblioth\u00e8ques ;</li> <li>si vous ne faites pas de recherche r\u00e9guli\u00e8re de vuln\u00e9rabilit\u00e9s et de souscription aux bulletins de s\u00e9curit\u00e9 des composants que vous utilisez ;</li> <li>si vous ne corrigez pas ni mettez \u00e0 jour vos plateformes sous-jacentes, vos frameworks et leurs d\u00e9pendances sur la base d'une analyse de risque, dans un d\u00e9lai convenable. Cela appara\u00eet fr\u00e9quemment dans les environnements o\u00f9 les mises \u00e0 jour sont faites sur une base mensuelle ou trimestrielle au rythme des \u00e9volutions logicielles, ce qui laisse les organisations expos\u00e9es inutilement, des jours et des mois, \u00e0 des failles avant de corriger les vuln\u00e9rabilit\u00e9s ;</li> <li>si les d\u00e9veloppeurs de logiciels ne testent pas la compatibilit\u00e9 des \u00e9volutions, des mises \u00e0 jour et des correctifs des biblioth\u00e8ques ;</li> <li>si vous ne s\u00e9curisez pas les configurations des composants (voir A05:2021-Mauvaise configuration de s\u00e9curit\u00e9).</li> </ul>"},{"location":"fr/A06_2021-Vulnerable_and_Outdated_Components/#comment-sen-premunir","title":"Comment s'en pr\u00e9munir","text":"<p>Vous devez mettre en place une gestion des mises \u00e0 jour pour :</p> <ul> <li>supprimer les d\u00e9pendances inutiles et les fonctionnalit\u00e9s, composants, fichiers et documentation non n\u00e9cessaires ;</li> <li>faire un inventaire en continu des versions de composants \u00e0 la fois client et serveur (ex : frameworks, biblioth\u00e8ques) et de leurs d\u00e9pendances avec des outils tels que versions, OWASP Dependency Check, retire.js, etc. Surveiller en permanence les sources comme Common Vulnerability and Exposures (CVE) et National Vulnerability Database (NVD) pour suivre les vuln\u00e9rabilit\u00e9s des composants. Utiliser des outils d'analyse de composants logiciels pour automatiser le processus. Souscrire aux alertes par courriel concernant les vuln\u00e9rabilit\u00e9s sur les composants que vous utilisez ;</li> <li>ne r\u00e9cup\u00e9rer des composants qu'aupr\u00e8s de sources officielles via des liens s\u00e9curis\u00e9s. Pr\u00e9f\u00e9rer des paquets sign\u00e9s pour minimiser les risques d'insertion de composants modifi\u00e9s malveillants (voir A08:2021-Manque d'int\u00e9grit\u00e9 des donn\u00e9es et du logiciel) ;</li> <li>surveiller les biblioth\u00e8ques et les composants qui ne sont plus maintenus ou pour lesquels il n'y a plus de correctifs de s\u00e9curit\u00e9. Si les mises \u00e0 jour ne sont pas possibles, penser \u00e0 d\u00e9ployer des mises \u00e0 jour virtuelles pour surveiller, d\u00e9tecter et se prot\u00e9ger d'\u00e9ventuelles d\u00e9couvertes de failles.</li> </ul> <p>Chaque organisation doit s'assurer d'avoir un projet continu de surveillance, de tri, d'application des mises \u00e0 jour et de modification de configuration pour la dur\u00e9e de vie d'une application ou de sa gamme.</p>"},{"location":"fr/A06_2021-Vulnerable_and_Outdated_Components/#exemple-de-scenarios-dattaque","title":"Exemple de sc\u00e9narios d'attaque","text":"<p>Sc\u00e9nario 1 : Les composants s'ex\u00e9cutent g\u00e9n\u00e9ralement avec le m\u00eame niveau de privil\u00e8ges que l'application, et donc les failles d'un quelconque composant peuvent aboutir \u00e0 un impact s\u00e9v\u00e8re. Les failles peuvent \u00eatre accidentelles (ex : erreur de d\u00e9veloppement) ou intentionnelles (ex : porte d\u00e9rob\u00e9e dans un composant). Voici quelques exemples de d\u00e9couvertes de vuln\u00e9rabilit\u00e9s de composants exploitables :</p> <ul> <li>CVE-2017-5638, une vuln\u00e9rabilit\u00e9 d'ex\u00e9cution \u00e0 distance de Struts 2, qui permet l'ex\u00e9cution de code arbitraire sur le serveur, a \u00e9t\u00e9 responsable d'importantes violations ;</li> <li>bien que l'internet des objets (IoT) soit souvent difficile, voire impossible \u00e0 mettre \u00e0 jour, l'importance de ces mises \u00e0 jour peut \u00eatre \u00e9norme (ex : objets biom\u00e9dicaux).</li> </ul> <p>Il existe des outils automatiques qui aident les attaquants \u00e0 trouver des syst\u00e8mes mal configur\u00e9s ou non mis \u00e0 jour. Par exemple, le moteur de recherche IoT de Shodan peut vous aider \u00e0 trouver des objets qui sont encore vuln\u00e9rables \u00e0 la faille Heartbleed corrig\u00e9e en avril 2014.</p>"},{"location":"fr/A06_2021-Vulnerable_and_Outdated_Components/#references","title":"R\u00e9f\u00e9rences","text":"<ul> <li> <p>OWASP Application Security Verification Standard: V1 Architecture,     design and threat modelling</p> </li> <li> <p>OWASP Dependency Check (for Java and .NET libraries)</p> </li> <li> <p>OWASP Testing Guide - Map Application Architecture (OTG-INFO-010)</p> </li> <li> <p>OWASP Virtual Patching Best Practices</p> </li> <li> <p>The Unfortunate Reality of Insecure Libraries</p> </li> <li> <p>MITRE Common Vulnerabilities and Exposures (CVE) search</p> </li> <li> <p>National Vulnerability Database (NVD)</p> </li> <li> <p>Retire.js for detecting known vulnerable JavaScript libraries</p> </li> <li> <p>Node Libraries Security Advisories</p> </li> <li> <p>Ruby Libraries Security Advisory Database and Tools</p> </li> <li> <p>https://safecode.org/publication/SAFECode_Software_Integrity_Controls0610.pdf</p> </li> </ul>"},{"location":"fr/A06_2021-Vulnerable_and_Outdated_Components/#liste-des-cwes-associees","title":"Liste des CWEs associ\u00e9es","text":"<p>CWE-937 OWASP Top 10 2013: Using Components with Known Vulnerabilities</p> <p>CWE-1035 2017 Top 10 A9: Using Components with Known Vulnerabilities</p> <p>CWE-1104 Use of Unmaintained Third Party Components</p>"},{"location":"fr/A07_2021-Identification_and_Authentication_Failures/","title":"A07:2021 \u2013 Identification et authentification de mauvaise qualit\u00e9","text":""},{"location":"fr/A07_2021-Identification_and_Authentication_Failures/#facteurs","title":"Facteurs","text":"CWEs associ\u00e9es Taux d'incidence max Taux d'incidence moyen Exploitation pond\u00e9r\u00e9e moyenne Impact pond\u00e9r\u00e9 moyen Couverture max Couverture moyenne Nombre total d'occurrences Nombre total de CVEs 22 14,84 % 2,55 % 7,40 6,50 79,51 % 45,72 % 132,195 3 897"},{"location":"fr/A07_2021-Identification_and_Authentication_Failures/#apercu","title":"Aper\u00e7u","text":"<p>Pr\u00e9c\u00e9demment connue sous le nom de Authentification de mauvaise qualit\u00e9, cette cat\u00e9gorie a gliss\u00e9 de la deuxi\u00e8me position et comprend maintenant les Common Weakness Enumerations (CWEs) li\u00e9es aux \u00e9checs d'identification. Les CWEs les plus importantes sont CWE-297 : Improper Validation of Certificate with Host Mismatch, CWE-287 : Improper Authentication, et CWE-384 : Session Fixation.</p>"},{"location":"fr/A07_2021-Identification_and_Authentication_Failures/#description","title":"Description","text":"<p>La confirmation de l'identit\u00e9, de l'authentification et de la session de l'utilisateur sont essentielles pour se prot\u00e9ger des attaques li\u00e9es \u00e0 l'authentification. Il peut y avoir des faiblesses d'authentification si l'application :</p> <ul> <li>autorise les attaques automatis\u00e9es telles que le bourrage des informations d'identification, o\u00f9 l'attaquant dispose d'une liste de noms d'utilisateurs valides et mots de passe ;</li> <li>permet la force brute ou d'autres attaques automatis\u00e9es ;</li> <li>autorise les mots de passe par d\u00e9faut, faibles ou bien connus, tels que \"Password1\" ou \"admin / admin\" ;</li> <li>utilise des processus de r\u00e9cup\u00e9ration des informations d'identification faibles ou inefficaces et des processus de mot de passe oubli\u00e9, tels que \u00ab\u00a0Questions secr\u00e8tes\u00a0\u00bb, qui ne peuvent \u00eatre s\u00e9curis\u00e9es ;</li> <li>utilise des mots de passe en texte brut, chiffr\u00e9s ou faiblement hach\u00e9s (voir A02:2021 \u2013 D\u00e9faillances cryptographiques) ;</li> <li>absence ou utilisation inefficace de l\u2019authentification multifacteur ;</li> <li>exposition des identifiants de session dans l'URL ;</li> <li>r\u00e9utilisation de l'identifiant de session apr\u00e8s une connexion r\u00e9ussie ;</li> <li>n'invalide pas correctement les identifiants de session. Les sessions utilisateurs ou les jetons d'authentification (en particulier les jetons SSO) ne sont pas correctement invalid\u00e9s lors de la d\u00e9connexion ou apr\u00e8s une p\u00e9riode d'inactivit\u00e9.</li> </ul>"},{"location":"fr/A07_2021-Identification_and_Authentication_Failures/#comment-sen-premunir","title":"Comment s'en pr\u00e9munir","text":"<ul> <li>lorsque cela est possible, impl\u00e9mentez l'authentification multifacteur pour \u00e9viter les attaques automatis\u00e9es, le bourrage des informations d'identification, la force brute et la r\u00e9utilisation des informations d'identification vol\u00e9es ;</li> <li>ne pas livrer ou d\u00e9ployer avec des informations d'identification par d\u00e9faut, en particulier pour les utilisateurs avec privil\u00e8ges ;</li> <li>int\u00e9grer des tests de mots de passes faibles, \u00e0 la cr\u00e9ation ou au changement. Comparer ce mot de passe avec la liste des 10000 mots de passe les plus faibles ;</li> <li>respecter la longueur, la complexit\u00e9 et la rotation des mots de passe par rapport aux directives du National Institute of Standards and Technology (NIST) 800-63 B \u00e0 la section 5.1.1 ou autres directives modernes ;</li> <li>assurez-vous que l'inscription, la r\u00e9cup\u00e9ration des informations d'identification et les chemins d'acc\u00e8s aux API sont durcis contre les attaques d'\u00e9num\u00e9ration de compte en utilisant le m\u00eame message pour tous les r\u00e9sultats ;</li> <li>limitez ou retardez de plus en plus les tentatives de connexion \u00e9chou\u00e9es, mais veillez \u00e0 ne pas cr\u00e9er un sc\u00e9nario de d\u00e9ni de service. Enregistrer tous les \u00e9checs et alerter les administrateurs lors du bourrage des informations d'identification, de brute force ou d'autres attaques d\u00e9tect\u00e9es ;</li> <li>utilisez un gestionnaire de session int\u00e9gr\u00e9 et s\u00e9curis\u00e9 c\u00f4t\u00e9 serveur qui g\u00e9n\u00e8re un nouvel identifiant de session al\u00e9atoire avec une entropie \u00e9lev\u00e9e apr\u00e8s la connexion. Les identifiants de session ne doivent pas se trouver dans l'URL, ils doivent \u00eatre stock\u00e9s de mani\u00e8re s\u00e9curis\u00e9e et \u00eatre invalid\u00e9s apr\u00e8s la d\u00e9connexion, une inactivit\u00e9 et une certaine dur\u00e9e.</li> </ul>"},{"location":"fr/A07_2021-Identification_and_Authentication_Failures/#exemple-de-scenarios-dattaque","title":"Exemple de sc\u00e9narios d'attaque","text":"<p>Sc\u00e9nario 1 : La r\u00e9utilisation de mots de passe, l\u2019utilisation de mots de passe connus, est une attaque classique. Supposons une application qui n\u2019impl\u00e9mente pas une protection automatis\u00e9e contre le bourrage d'informations ou l'utilisation des mots de passe connus. Dans ce cas, l'application peut \u00eatre utilis\u00e9e comme un oracle pour d\u00e9terminer si les mots de passe sont valides.</p> <p>Sc\u00e9nario 2 : La plupart des attaques d\u2019authentification se produisent en raison de l\u2019utilisation de mots de passe comme facteur unique. Un temps consid\u00e9r\u00e9es comme de bonnes pratiques, les exigences de rotation et de complexit\u00e9 des mots de passe sont consid\u00e9r\u00e9es comme encourageant les utilisateurs \u00e0 utiliser et r\u00e9utiliser des mots de passe faibles. Il est maintenant recommand\u00e9 d\u2019arr\u00eater ces pratiques selon les directives NIST 800-63 et d\u2019utiliser du multifacteur.</p> <p>Sc\u00e9nario 3 : Les timeouts de session d\u2019application ne sont pas param\u00e9tr\u00e9s correctement. Un utilisateur utilise un ordinateur public pour acc\u00e9der \u00e0 une application. \u00c0 la place de se d\u00e9connecter correctement, l\u2019utilisateur ferme le navigateur et quitte l\u2019ordinateur. Un attaquant utilise ensuite le m\u00eame navigateur quelque temps apr\u00e8s et l\u2019utilisateur est toujours authentifi\u00e9.</p>"},{"location":"fr/A07_2021-Identification_and_Authentication_Failures/#references","title":"R\u00e9f\u00e9rences","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Digital     Identity</p> </li> <li> <p>OWASP Application Security Verification Standard: V2     authentication</p> </li> <li> <p>OWASP Application Security Verification Standard: V3 Session     Management</p> </li> <li> <p>OWASP Testing Guide: Identity,\u00a0Authentication</p> </li> <li> <p>OWASP Cheat Sheet:     Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Credential Stuffing</p> </li> <li> <p>OWASP Cheat Sheet: Forgot     Password</p> </li> <li> <p>OWASP Cheat Sheet: Session Management</p> </li> <li> <p>OWASP Automated Threats     Handbook</p> </li> <li> <p>NIST 800-63b: 5.1.1 Memorized Secrets</p> </li> </ul>"},{"location":"fr/A07_2021-Identification_and_Authentication_Failures/#liste-des-cwes-associees","title":"Liste des CWEs associ\u00e9es","text":"<p>CWE-255 Credentials Management Errors</p> <p>CWE-259 Use of Hard-coded Password</p> <p>CWE-287 Improper Authentication</p> <p>CWE-288 Authentication Bypass Using an Alternate Path or Channel</p> <p>CWE-290 Authentication Bypass by Spoofing</p> <p>CWE-294 Authentication Bypass by Capture-replay</p> <p>CWE-295 Improper Certificate Validation</p> <p>CWE-297 Improper Validation of Certificate with Host Mismatch</p> <p>CWE-300 Channel Accessible by Non-Endpoint</p> <p>CWE-302 Authentication Bypass by Assumed-Immutable Data</p> <p>CWE-304 Missing Critical Step in Authentication</p> <p>CWE-306 Missing Authentication for Critical Function</p> <p>CWE-307 Improper Restriction of Excessive Authentication Attempts</p> <p>CWE-346 Origin Validation Error</p> <p>CWE-384 Session Fixation</p> <p>CWE-521 Weak Password Requirements</p> <p>CWE-613 Insufficient Session Expiration</p> <p>CWE-620 Unverified Password Change</p> <p>CWE-640 Weak Password Recovery Mechanism for Forgotten Password</p> <p>CWE-798 Use of Hard-coded Credentials</p> <p>CWE-940 Improper Verification of Source of a Communication Channel</p> <p>CWE-1216 Lockout Mechanism Errors</p>"},{"location":"fr/A08_2021-Software_and_Data_Integrity_Failures/","title":"A08:2021 \u2013 Manque d'int\u00e9grit\u00e9 des donn\u00e9es et du logiciel","text":""},{"location":"fr/A08_2021-Software_and_Data_Integrity_Failures/#facteurs","title":"Facteurs","text":"CWEs associ\u00e9es Taux d'incidence max Taux d'incidence moyen Exploitation pond\u00e9r\u00e9e moyenne Impact pond\u00e9r\u00e9 moyen Couverture max Couverture moyenne Nombre total d'occurrences Nombre total de CVEs 10 16,67 % 2,05 % 6,94 7,94 75,04 % 45,35 % 47 972 1 152"},{"location":"fr/A08_2021-Software_and_Data_Integrity_Failures/#apercu","title":"Aper\u00e7u","text":"<p>Une nouvelle cat\u00e9gorie pour 2021 qui se concentre sur la formulation d'hypoth\u00e8ses relatives aux mises \u00e0 jour logicielles, aux donn\u00e9es critiques et aux pipelines CI/CD sans v\u00e9rification de l'int\u00e9grit\u00e9. Il s'agit de l'un des impacts pond\u00e9r\u00e9s les plus \u00e9lev\u00e9s des donn\u00e9es CVE/CVSS (Common Vulnerability and Exposures/Common Vulnerability Scoring System). Les Common Weakness Enumerations (CWE) notables comprennent CWE-829 : Inclusion of Functionality from Untrusted Control Sphere, CWE-494 : Download of Code Without Integrity Check, et CWE-502 : Deserialization of Untrusted Data.</p>"},{"location":"fr/A08_2021-Software_and_Data_Integrity_Failures/#description","title":"Description","text":"<p>Les d\u00e9faillances de l'int\u00e9grit\u00e9 des logiciels et des donn\u00e9es sont li\u00e9es au code et \u00e0 l'infrastructure qui ne sont pas prot\u00e9g\u00e9s contre les violations de l'int\u00e9grit\u00e9. C'est le cas, par exemple, lorsqu'une application s'appuie sur des plugins, des biblioth\u00e8ques ou des modules provenant de sources, de d\u00e9p\u00f4ts et de r\u00e9seaux de diffusion de contenu (CDN) non fiables. Un pipeline CI/CD non s\u00e9curis\u00e9 peut introduire un risque d'acc\u00e8s non autoris\u00e9, de code malveillant ou de compromission du syst\u00e8me. Enfin, de nombreuses applications int\u00e8grent d\u00e9sormais une fonctionnalit\u00e9 de mise \u00e0 jour automatique, o\u00f9 les mises \u00e0 jour sont t\u00e9l\u00e9charg\u00e9es sans v\u00e9rification d'int\u00e9grit\u00e9 suffisante et appliqu\u00e9es \u00e0 l'application pr\u00e9c\u00e9demment fiable. Les attaquants pourraient potentiellement t\u00e9l\u00e9charger leurs propres mises \u00e0 jour pour les distribuer et les ex\u00e9cuter sur toutes les installations. Un autre exemple est celui des objets ou des donn\u00e9es qui sont cod\u00e9s ou s\u00e9rialis\u00e9s dans une structure qu'un attaquant peut voir et modifier et qui sont vuln\u00e9rables \u00e0 une d\u00e9s\u00e9rialisation non s\u00e9curis\u00e9e.</p>"},{"location":"fr/A08_2021-Software_and_Data_Integrity_Failures/#comment-sen-premunir","title":"Comment s'en pr\u00e9munir","text":"<ul> <li>utilisez des signatures num\u00e9riques ou des m\u00e9canismes similaires pour v\u00e9rifier que le logiciel ou les donn\u00e9es proviennent de la source pr\u00e9vue et n'ont pas \u00e9t\u00e9 modifi\u00e9s ;</li> <li>assurez-vous que les biblioth\u00e8ques et les d\u00e9pendances, telles que npm ou Maven, consomment des d\u00e9p\u00f4ts de confiance. Si vous avez un profil de risque plus \u00e9lev\u00e9, envisagez d'h\u00e9berger un d\u00e9p\u00f4t interne connu et approuv\u00e9 ;</li> <li>assurez-vous qu'un outil de s\u00e9curit\u00e9 de la cha\u00eene logistique logicielle, tel que OWASP Dependency Check ou OWASP CycloneDX, est utilis\u00e9 pour v\u00e9rifier que les composants ne contiennent pas de vuln\u00e9rabilit\u00e9s connues ;</li> <li>veillez \u00e0 ce qu'il existe un processus de r\u00e9vision des changements de code et de configuration afin de minimiser les risques d'introduction de code ou de configuration malveillants dans votre pipeline logiciel ;</li> <li>assurez-vous que votre pipeline CI/CD dispose d'une s\u00e9gr\u00e9gation, d'une configuration et d'un contr\u00f4le d'acc\u00e8s appropri\u00e9s pour garantir l'int\u00e9grit\u00e9 du code passant par les processus de construction et de d\u00e9ploiement ;</li> <li>veillez \u00e0 ce que les donn\u00e9es s\u00e9rialis\u00e9es non sign\u00e9es ou non chiffr\u00e9es ne soient pas envoy\u00e9es \u00e0 des clients non fiables sans une forme de contr\u00f4le d'int\u00e9grit\u00e9 ou de signature num\u00e9rique permettant de d\u00e9tecter la falsification ou le rejeu des donn\u00e9es s\u00e9rialis\u00e9es.</li> </ul>"},{"location":"fr/A08_2021-Software_and_Data_Integrity_Failures/#exemple-de-scenarios-dattaque","title":"Exemple de sc\u00e9narios d'attaque","text":"<p>Sc\u00e9nario n\u00b01 mise \u00e0 jour sans signature : de nombreux routeurs domestiques, d\u00e9codeurs, firmwares de p\u00e9riph\u00e9riques et autres ne v\u00e9rifient pas les mises \u00e0 jour via un firmware sign\u00e9. Les microprogrammes non sign\u00e9s constituent une cible de plus en plus importante pour les attaquants et leur nombre ne devrait cesser d'augmenter. Il s'agit d'une pr\u00e9occupation majeure car, bien souvent, il n'y a pas de m\u00e9canisme pour y rem\u00e9dier, si ce n'est de corriger dans une version future et d'attendre que les versions pr\u00e9c\u00e9dentes soient p\u00e9rim\u00e9es.</p> <p>Sc\u00e9nario n\u00b02 mise \u00e0 jour malveillante de SolarWinds : les \u00c9tats-nations sont connus pour attaquer les m\u00e9canismes de mise \u00e0 jour, avec une attaque r\u00e9cente notable, l'attaque SolarWinds Orion. La soci\u00e9t\u00e9 qui d\u00e9veloppe le logiciel a mis en place des processus s\u00e9curis\u00e9s de construction et d'int\u00e9grit\u00e9 des mises \u00e0 jour. N\u00e9anmoins, ces processus ont pu \u00eatre contourn\u00e9s et, pendant plusieurs mois, la soci\u00e9t\u00e9 a distribu\u00e9 une mise \u00e0 jour malveillante tr\u00e8s cibl\u00e9e \u00e0 plus de 18 000 organisations, dont une centaine ont \u00e9t\u00e9 touch\u00e9es. Il s'agit de l'une des violations de cette nature les plus \u00e9tendues et les plus importantes de l'histoire.</p> <p>Sc\u00e9nario n\u00b03 d\u00e9s\u00e9rialisation non s\u00e9curis\u00e9e : une application React appelle un ensemble de microservices Spring Boot. \u00c9tant des programmeurs fonctionnels, ils ont essay\u00e9 de s'assurer que leur code est immuable. La solution qu'ils ont trouv\u00e9e consiste \u00e0 s\u00e9rialiser l'\u00e9tat de l'utilisateur et \u00e0 le transmettre dans les deux sens \u00e0 chaque requ\u00eate. Un attaquant remarque la signature d'objet Java \"rO0\" (en base64) et utilise l'outil Java Serial Killer pour obtenir l'ex\u00e9cution de code \u00e0 distance sur le serveur d'application.</p>"},{"location":"fr/A08_2021-Software_and_Data_Integrity_Failures/#references","title":"R\u00e9f\u00e9rences","text":"<ul> <li> <p>[OWASP Cheat Sheet: Software Supply Chain Security](Coming Soon)</p> </li> <li> <p>[OWASP Cheat Sheet: Secure build and deployment](Coming Soon)</p> </li> <li> <p>OWASP Cheat Sheet: Infrastructure as Code </p> </li> <li> <p>OWASP Cheat Sheet: Deserialization</p> </li> <li> <p>SAFECode Software Integrity Controls</p> </li> <li> <p>A 'Worst Nightmare' Cyberattack: The Untold Story Of The     SolarWinds     Hack</p> </li> <li> <p>CodeCov Bash Uploader Compromise</p> </li> <li> <p>Securing DevOps by Julien Vehent</p> </li> </ul>"},{"location":"fr/A08_2021-Software_and_Data_Integrity_Failures/#liste-des-cwes-associees","title":"Liste des CWEs associ\u00e9es","text":"<p>CWE-345 Insufficient Verification of Data Authenticity</p> <p>CWE-353 Missing Support for Integrity Check</p> <p>CWE-426 Untrusted Search Path</p> <p>CWE-494 Download of Code Without Integrity Check</p> <p>CWE-502 Deserialization of Untrusted Data</p> <p>CWE-565 Reliance on Cookies without Validation and Integrity Checking</p> <p>CWE-784 Reliance on Cookies without Validation and Integrity Checking in a Security Decision</p> <p>CWE-829 Inclusion of Functionality from Untrusted Control Sphere</p> <p>CWE-830 Inclusion of Web Functionality from an Untrusted Source</p> <p>CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes</p>"},{"location":"fr/A09_2021-Security_Logging_and_Monitoring_Failures/","title":"A09:2021 \u2013 Carence des syst\u00e8mes de contr\u00f4le et de journalisation","text":""},{"location":"fr/A09_2021-Security_Logging_and_Monitoring_Failures/#facteurs","title":"Facteurs","text":"CWEs associ\u00e9es Taux d'incidence max Taux d'incidence moyen Exploitation pond\u00e9r\u00e9e moyenne Impact pond\u00e9r\u00e9 moyen Couverture max Couverture moyenne Nombre total d'occurrences Nombre total de CVEs 4 19,23 % 6,51 % 6,87 4,99 53,67 % 39,97 % 53 615 242"},{"location":"fr/A09_2021-Security_Logging_and_Monitoring_Failures/#apercu","title":"Aper\u00e7u","text":"<p>La journalisation et la surveillance de la s\u00e9curit\u00e9 sont issues de l'enqu\u00eate de la communaut\u00e9 Top 10 (n\u00b03), en l\u00e9g\u00e8re hausse par rapport \u00e0 la dixi\u00e8me position dans le Top 10 2017 de l'OWASP. La journalisation et la surveillance peuvent \u00eatre difficiles \u00e0 tester, impliquant souvent des entretiens ou demandant si des attaques ont \u00e9t\u00e9 d\u00e9tect\u00e9es lors d'un test d'intrusion. Il n'y a pas beaucoup de donn\u00e9es CVE/CVSS pour cette cat\u00e9gorie, mais la d\u00e9tection et la r\u00e9ponse aux br\u00e8ches sont essentielles. Il n'en reste pas moins qu'elle peut avoir un impact consid\u00e9rable sur la responsabilit\u00e9, la visibilit\u00e9, l'alerte en cas d'incident et la forensique. Cette cat\u00e9gorie s'\u00e9tend au-del\u00e0 de CWE-778 Insufficient Logging pour inclure CWE-117 Improper Output Neutralization for Logs, CWE-223 Omission of Security-relevant Information, et CWE-532 Insertion of Sensitive Information into Log File.</p>"},{"location":"fr/A09_2021-Security_Logging_and_Monitoring_Failures/#description","title":"Description","text":"<p>De retour dans le Top 10 2021 de l'OWASP, cette cat\u00e9gorie a pour but d'aider \u00e0 la d\u00e9tection, \u00e0 l'escalade et \u00e0 la r\u00e9ponse aux br\u00e8ches actives. Sans journalisation et surveillance, les br\u00e8ches ne peuvent \u00eatre d\u00e9tect\u00e9es. Une journalisation, une d\u00e9tection, une surveillance et une r\u00e9ponse active insuffisantes peuvent survenir \u00e0 tout moment :</p> <ul> <li>les traces d\u2019audit, telles que les acc\u00e8s r\u00e9ussis ou \u00e9chou\u00e9s et les transactions sensibles, ne sont pas enregistr\u00e9es ;</li> <li>les alertes et les erreurs g\u00e9n\u00e9r\u00e9es ne sont pas enregistr\u00e9es, ou leur journalisation est inad\u00e9quate, ou impr\u00e9cise ;</li> <li>les journaux des applications et des API ne sont pas contr\u00f4l\u00e9s pour d\u00e9tecter les actions suspectes ;</li> <li>les journaux ne sont stock\u00e9s que localement ;</li> <li>aucun processus de seuil d\u2019alerte convenable ni de remont\u00e9es d'information pour y r\u00e9pondre n'ont \u00e9t\u00e9 d\u00e9finis, ou ils sont inad\u00e9quats, ou inefficaces ;</li> <li>les tests d'intrusion et de balayage avec des outils de test dynamique de s\u00e9curit\u00e9 des applications (DAST), tels que OWASP ZAP, ne g\u00e9n\u00e8rent pas d'alertes ;</li> <li>l\u2019application est incapable de d\u00e9tecter, de g\u00e9n\u00e9rer des remont\u00e9es d'information et des alertes en temps r\u00e9el, ou assimil\u00e9, en cas d\u2019attaque active.</li> </ul> <p>Vous \u00eates vuln\u00e9rable \u00e0 une fuite d\u2019information en rendant les enregistrements de journalisation et d\u2019alertes accessibles \u00e0 vos utilisateurs ou attaquants (voir A01:2021-Contr\u00f4les d'acc\u00e8s d\u00e9faillants).</p>"},{"location":"fr/A09_2021-Security_Logging_and_Monitoring_Failures/#comment-sen-premunir","title":"Comment s'en pr\u00e9munir","text":"<p>Les d\u00e9veloppeurs doivent mettre en \u0153uvre tout ou partie des contr\u00f4les suivants, en fonction du risque de l'application :</p> <ul> <li>s'assurer que toutes les authentifications, les erreurs de contr\u00f4le d'acc\u00e8s et de contr\u00f4le des entr\u00e9es c\u00f4t\u00e9 serveur sont enregistr\u00e9es, avec un contexte utilisateur suffisant pour identifier les comptes suspects ou malveillants, et conserv\u00e9es suffisamment longtemps pour permettre une analyse l\u00e9gale diff\u00e9r\u00e9e ;</li> <li>s'assurer que les enregistrements des journaux sont dans un format standard pour permettre de les int\u00e9grer facilement \u00e0 une solution de gestion de logs centralis\u00e9e ;</li> <li>veiller \u00e0 ce que les donn\u00e9es des journaux soient correctement encod\u00e9es afin d'\u00e9viter les injections ou les attaques sur les syst\u00e8mes de journalisation ou de surveillance ;</li> <li>s'assurer que les transactions \u00e0 haute valeur ajout\u00e9e ont une piste d'audit, avec un contr\u00f4le d'int\u00e9grit\u00e9, pour \u00e9viter la modification ou la suppression, comme des tables de bases de donn\u00e9es en ajout seul ou \u00e9quivalent ;</li> <li>les \u00e9quipes DevSecOps devraient mettre en place une supervision et une gestion d'alertes efficaces pour d\u00e9tecter et r\u00e9agir aux actions suspectes en temps opportun ;</li> <li>d\u00e9finir ou adopter un plan de r\u00e9action et de reprise sur incident, comme celui du National Institute of Standards and Technology (NIST) 800-61r2 ou ult\u00e9rieur.</li> </ul> <p>On trouve des logiciels, commerciaux ou open source, de protection d'applications tels que OWASP ModSecurity Core Rule Set, et des logiciels de corr\u00e9lation de journaux, comme la pile Elasticsearch, Logstash, Kibana (ELK), qui propose des tableaux de bord et d'alertes configurables.</p>"},{"location":"fr/A09_2021-Security_Logging_and_Monitoring_Failures/#exemple-de-scenarios-dattaque","title":"Exemple de sc\u00e9narios d'attaque","text":"<p>Sc\u00e9nario n\u00b01 : l'op\u00e9rateur du site Web d'un fournisseur de soins de sant\u00e9 pour enfants n'a pas pu d\u00e9tecter une violation en raison d'un manque de surveillance et de journalisation. Une partie externe a inform\u00e9 le fournisseur du plan de sant\u00e9 qu'un attaquant avait acc\u00e9d\u00e9 et modifi\u00e9 des milliers de dossiers m\u00e9dicaux sensibles de plus de 3,5 millions d'enfants. Un examen post\u00e9rieur \u00e0 l'incident a r\u00e9v\u00e9l\u00e9 que les d\u00e9veloppeurs du site Web n'avaient pas corrig\u00e9 d'importantes vuln\u00e9rabilit\u00e9s. Comme il n'y avait pas de journalisation ou de surveillance du syst\u00e8me, la violation de donn\u00e9es pourrait \u00eatre en cours depuis 2013, soit une p\u00e9riode de plus de sept ans.</p> <p>Sc\u00e9nario n\u00b02 : une grande compagnie a\u00e9rienne indienne a subi une violation de donn\u00e9es portant sur plus de dix ans de donn\u00e9es personnelles de millions de passagers, y compris des donn\u00e9es de passeport et de carte de cr\u00e9dit. La violation des donn\u00e9es s'est produite chez un fournisseur tiers d'h\u00e9bergement en nuage, qui a inform\u00e9 la compagnie a\u00e9rienne de la violation apr\u00e8s un certain temps.</p> <p>Sc\u00e9nario n\u00b03 : une grande compagnie a\u00e9rienne europ\u00e9enne a subi une violation \u00e0 d\u00e9clarer au titre de la RGPD. La violation aurait \u00e9t\u00e9 caus\u00e9e par des vuln\u00e9rabilit\u00e9s de s\u00e9curit\u00e9 des applications de paiement exploit\u00e9es par des attaquants, qui ont r\u00e9colt\u00e9 plus de 400 000 enregistrements de paiement de clients. La compagnie a\u00e9rienne a \u00e9t\u00e9 condamn\u00e9e \u00e0 une amende de 20 millions de livres sterling en cons\u00e9quence par le r\u00e9gulateur de la vie priv\u00e9e.</p>"},{"location":"fr/A09_2021-Security_Logging_and_Monitoring_Failures/#references","title":"R\u00e9f\u00e9rences","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Logging and     Monitoring</p> </li> <li> <p>OWASP Application Security Verification Standard: V7 Logging and     Monitoring</p> </li> <li> <p>OWASP Testing Guide: Testing for Detailed Error     Code</p> </li> <li> <p>OWASP Cheat Sheet:     Application Logging Vocabulary</p> </li> <li> <p>OWASP Cheat Sheet:     Logging</p> </li> <li> <p>Data Integrity: Recovering from Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Identifying and Protecting Assets Against     Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Detecting and Responding to Ransomware and Other     Destructive     Events</p> </li> </ul>"},{"location":"fr/A09_2021-Security_Logging_and_Monitoring_Failures/#liste-des-cwes-associees","title":"Liste des CWEs associ\u00e9es","text":"<p>CWE-117 Improper Output Neutralization for Logs</p> <p>CWE-223 Omission of Security-relevant Information</p> <p>CWE-532 Insertion of Sensitive Information into Log File</p> <p>CWE-778 Insufficient Logging</p>"},{"location":"fr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/","title":"A10:2021 \u2013 A10 Falsification de requ\u00eate c\u00f4t\u00e9 serveur (SSRF)","text":""},{"location":"fr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#facteurs","title":"Facteurs","text":"CWEs associ\u00e9es Taux d'incidence max Taux d'incidence moyen Exploitation pond\u00e9r\u00e9e moyenne Impact pond\u00e9r\u00e9 moyen Couverture max Couverture moyenne Nombre total d'occurrences Nombre total de CVEs 1 2,72 % 2,72 % 8,28 6,72 67,72 % 67,72 % 9 503 385"},{"location":"fr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#apercu","title":"Aper\u00e7u","text":"<p>Cette cat\u00e9gorie est ajout\u00e9e \u00e0 partir de l'enqu\u00eate communautaire Top 10 (n\u00b01). Les donn\u00e9es montrent un taux d'incidence relativement faible avec une couverture de test sup\u00e9rieure \u00e0 la moyenne et des \u00e9valuations du potentiel d'exploitation et d'impact sup\u00e9rieures \u00e0 la moyenne. Comme les nouvelles entr\u00e9es sont susceptibles d'\u00eatre une seule ou un petit groupe de Common Weakness Enumerations (CWE) pour l'attention et la sensibilisation, l'espoir est qu'elles fassent l'objet d'une attention particuli\u00e8re et qu'elles puissent \u00eatre int\u00e9gr\u00e9es dans une cat\u00e9gorie plus importante dans une prochaine \u00e9dition.</p>"},{"location":"fr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#description","title":"Description","text":"<p>Une faille SSRF se produit lorsqu'une application web r\u00e9cup\u00e8re une ressource distante sans valider l'URL fournie par l'utilisateur. Elle permet \u00e0 un attaquant de contraindre l'application \u00e0 envoyer une requ\u00eate \u00e9labor\u00e9e \u00e0 une destination inattendue, m\u00eame si elle est prot\u00e9g\u00e9e par un pare-feu, un VPN ou un autre type de liste de contr\u00f4le d'acc\u00e8s au r\u00e9seau (ACL).</p> <p>Comme les applications Web modernes offrent aux utilisateurs finaux des fonctions pratiques, la r\u00e9cup\u00e9ration d'une URL devient un sc\u00e9nario courant. Par cons\u00e9quent, l'incidence d'une SSRF augmente. De m\u00eame, la gravit\u00e9 de ce ph\u00e9nom\u00e8ne augmente en raison des services en nuage et de la complexit\u00e9 des architectures.</p>"},{"location":"fr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#comment-sen-premunir","title":"Comment s'en pr\u00e9munir","text":"<p>Les d\u00e9veloppeurs peuvent pr\u00e9venir ce type de vuln\u00e9rabilit\u00e9 en mettant en \u0153uvre tout ou partie des contr\u00f4les de d\u00e9fense en profondeur suivants :</p>"},{"location":"fr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#couche-reseau","title":"Couche r\u00e9seau :","text":"<ul> <li>segmenter la fonctionnalit\u00e9 d'acc\u00e8s aux ressources \u00e0 distance dans des r\u00e9seaux distincts pour r\u00e9duire l'impact d'une SSRF ;</li> <li>appliquer des politiques de pare-feu ou des r\u00e8gles de contr\u00f4le d'acc\u00e8s au r\u00e9seau \"refusant par d\u00e9faut\" afin de bloquer tout le trafic intranet sauf celui qui est essentiel. Conseils: <ul> <li>\u00c9tablir une propri\u00e9t\u00e9 et un cycle de vie pour les r\u00e8gles du pare-feu en fonction des applications.</li> <li>Consigner tous les flux r\u00e9seau accept\u00e9s et bloqu\u00e9s sur les pare-feu (voir A09:2021-Carence des syst\u00e8mes de contr\u00f4le et de journalisation).</li> </ul> </li> </ul>"},{"location":"fr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#couche-applicative","title":"Couche applicative :","text":"<ul> <li>assainir et valider toutes les donn\u00e9es d'entr\u00e9e fournies par le client ;</li> <li>imposer le sch\u00e9ma d'URL, le port et la destination avec une liste positive d'autorisation ;</li> <li>ne pas envoyer de r\u00e9ponses brutes aux clients ;</li> <li>d\u00e9sactiver les redirections HTTP ;</li> <li>veiller \u00e0 la coh\u00e9rence des URL pour \u00e9viter les attaques telles que le rebinding DNS et les situations de concurrence de type \"time of check, time of use\" (TOCTOU).</li> </ul> <p>N'att\u00e9nuez pas les SSRF par l'utilisation d'une liste de refus ou d'une expression r\u00e9guli\u00e8re. Les attaquants disposent de dictionnaires, d'outils et de comp\u00e9tences pour contourner les listes de refus.</p>"},{"location":"fr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#mesures-complementaires","title":"Mesures compl\u00e9mentaires :","text":"<ul> <li>ne pas d\u00e9ployer d'autres services li\u00e9s \u00e0 la s\u00e9curit\u00e9 sur les syst\u00e8mes frontaux (par exemple, OpenID). Contr\u00f4lez le trafic local sur ces syst\u00e8mes (par exemple, localhost) ;</li> <li>pour les frontaux avec des groupes d'utilisateurs d\u00e9di\u00e9s et g\u00e9rables, utilisez le chiffrement du r\u00e9seau (par exemple, les VPN) sur des syst\u00e8mes ind\u00e9pendants pour prendre en compte les besoins de protection tr\u00e8s \u00e9lev\u00e9s.</li> </ul>"},{"location":"fr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#exemple-de-scenarios-dattaque","title":"Exemple de sc\u00e9narios d'attaque","text":"<p>Les attaquants peuvent utiliser SSRF pour attaquer des syst\u00e8mes prot\u00e9g\u00e9s derri\u00e8re des pare-feu d'applications web, des pare-feu ou des ACL de r\u00e9seau, en utilisant des sc\u00e9narios tels que :</p> <p>Sc\u00e9nario n\u00b01 : Analyse des ports des serveurs internes - Si l'architecture du r\u00e9seau n'est pas segment\u00e9e, les attaquants peuvent cartographier les r\u00e9seaux internes et d\u00e9terminer si les ports sont ouverts ou ferm\u00e9s sur les serveurs internes \u00e0 partir des r\u00e9sultats de connexion ou du temps \u00e9coul\u00e9 pour connecter ou les connexions rejet\u00e9es avec une charge utile de type SSRF.</p> <p>Sc\u00e9nario n\u00b02 : Exposition de donn\u00e9es sensibles - Les attaquants peuvent acc\u00e9der aux fichiers locaux ou aux services internes pour obtenir des informations sensibles telles que <code>file:///etc/passwd</code> et <code>http://localhost:28017/</code>.</p> <p>Sc\u00e9nario n\u00b03 : Acc\u00e9der au stockage des m\u00e9tadonn\u00e9es des services en nuage - La plupart des fournisseurs d'informatique en nuage ont un stockage de m\u00e9tadonn\u00e9es tel que <code>http://169.254.169.254/</code>. Un attaquant peut lire les m\u00e9tadonn\u00e9es pour obtenir des informations sensibles.</p> <p>Sc\u00e9nario n\u00b04 : Compromettre les services internes - L'attaquant peut abuser des services internes pour mener d'autres attaques telles que l'ex\u00e9cution de code \u00e0 distance (RCE) ou le d\u00e9ni de service (DoS).</p>"},{"location":"fr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#references","title":"R\u00e9f\u00e9rences","text":"<ul> <li> <p>OWASP - Server-Side Request Forgery Prevention Cheat     Sheet</p> </li> <li> <p>PortSwigger - Server-side request forgery     (SSRF)</p> </li> <li> <p>Acunetix - What is Server-Side Request Forgery     (SSRF)?</p> </li> <li> <p>SSRF     bible</p> </li> <li> <p>A New Era of SSRF - Exploiting URL Parser in Trending Programming     Languages!</p> </li> </ul>"},{"location":"fr/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#liste-des-cwes-associees","title":"Liste des CWEs associ\u00e9es","text":"<p>CWE-918 Server-Side Request Forgery (SSRF)</p>"},{"location":"fr/A11_2021-Next_Steps/","title":"A11:2021 \u2013 \u00c9tapes suivantes","text":"<p>De par sa conception, le Top 10 de l'OWASP est limit\u00e9 aux dix risques les plus importants. Dans chaque Top 10 de l'OWASP, des risques \"au seuil\" ont \u00e9t\u00e9 longuement examin\u00e9s en vue de leur inclusion, mais n'ont finalement pas \u00e9t\u00e9 retenus. Quelle que soit la fa\u00e7on dont nous avons essay\u00e9 d'interpr\u00e9ter ou de d\u00e9former les donn\u00e9es, les autres risques \u00e9taient plus r\u00e9pandus et avaient plus d'impact.</p> <p>Qu'il s'agisse d'organisations travaillant \u00e0 la mise en place d'un programme de s\u00e9curit\u00e9 des applications mature, de consultants en s\u00e9curit\u00e9 ou de fournisseurs d'outils souhaitant \u00e9tendre la couverture de leurs offres, les quatre probl\u00e8mes suivants valent la peine d'\u00eatre identifi\u00e9s et corrig\u00e9s.</p>"},{"location":"fr/A11_2021-Next_Steps/#problemes-de-qualite-du-code","title":"Probl\u00e8mes de qualit\u00e9 du code","text":"CWEs associ\u00e9es Taux d'incidence max Taux d'incidence moyen Exploitation pond\u00e9r\u00e9e moyenne Impact pond\u00e9r\u00e9 moyen Couverture max Couverture moyenne Nombre total d'occurrences Nombre total de CVEs 38 49,46 % 2,22 % 7,1 6,7 60,85 % 23,42 % 101\u00a0736 7\u00a0564 <ul> <li>Description. Les probl\u00e8mes de qualit\u00e9 du code comprennent les d\u00e9fauts ou les sch\u00e9mas de s\u00e9curit\u00e9 connus, la r\u00e9utilisation de variables \u00e0 des fins multiples, l'exposition d'informations sensibles dans les r\u00e9sultats de d\u00e9bogage, les erreurs \"off-by-one\", les situations de concurrence \"time of check/time of use\" (TOCTOU), les erreurs de conversion non sign\u00e9es ou sign\u00e9es, l'utilisation apr\u00e8s lib\u00e9ration, etc. La caract\u00e9ristique de cette section est qu'elles peuvent g\u00e9n\u00e9ralement \u00eatre identifi\u00e9es \u00e0 l'aide d'options de compilateur, d'outils d'analyse de code statique et de plugins IDE de linter. Les langages modernes ont, de par leur conception, \u00e9limin\u00e9 bon nombre de ces probl\u00e8mes, comme le concept de propri\u00e9t\u00e9 et d'emprunt de la m\u00e9moire de Rust, la conception du threading de Rust et le typage strict et la v\u00e9rification des limites de Go.</li> <li>Comment s'en pr\u00e9munir. Activez et utilisez les options d'analyse de code statique de votre \u00e9diteur et de votre langage. Envisagez d'utiliser un outil d'analyse statique du code. Envisagez la possibilit\u00e9 d'utiliser ou de migrer vers un langage ou un framework qui \u00e9limine des classes de bogues, comme Rust ou Go.</li> <li>Exemple de sc\u00e9narios d'attaque. Un attaquant peut obtenir ou mettre \u00e0 jour des informations sensibles en exploitant une situation de concurrence utilisant une variable statiquement partag\u00e9e entre plusieurs threads.</li> <li>R\u00e9f\u00e9rences<ul> <li>OWASP Code Review Guide</li> <li>Google Code Review Guide</li> </ul> </li> </ul>"},{"location":"fr/A11_2021-Next_Steps/#deni-de-service","title":"D\u00e9ni de service","text":"CWEs associ\u00e9es Taux d'incidence max Taux d'incidence moyen Exploitation pond\u00e9r\u00e9e moyenne Impact pond\u00e9r\u00e9 moyen Couverture max Couverture moyenne Nombre total d'occurrences Nombre total de CVEs 8 17,54 % 4,89 % 8,3 5,9 79,58 % 33,26 % 66\u00a0985 973 <ul> <li>Description. Le d\u00e9ni de service est toujours possible si les ressources sont suffisantes. Cependant, les pratiques de conception et de d\u00e9veloppement ont une incidence importante sur l'ampleur du d\u00e9ni de service. Supposons que toute personne disposant d'un lien puisse acc\u00e9der \u00e0 un fichier volumineux, ou qu'une transaction co\u00fbteuse en termes de calcul se produise sur chaque page. Dans ce cas, le d\u00e9ni de service n\u00e9cessite moins d'efforts pour \u00eatre men\u00e9.</li> <li>Comment s'en pr\u00e9munir. Testez les performances du code en termes d'utilisation du processeur, des E/S et de la m\u00e9moire, r\u00e9-architecturez, optimisez ou mettez en cache les op\u00e9rations co\u00fbteuses. Envisagez des contr\u00f4les d'acc\u00e8s pour les objets de grande taille afin de vous assurer que seules les personnes autoris\u00e9es peuvent acc\u00e9der aux fichiers ou objets volumineux ou les servir par un r\u00e9seau de mise en cache en p\u00e9riph\u00e9rie.</li> <li>Exemple de sc\u00e9narios d'attaque. Un attaquant peut d\u00e9terminer qu'une op\u00e9ration prend 5 \u00e0 10 secondes pour se terminer. Lorsqu'il ex\u00e9cute quatre threads simultan\u00e9s, le serveur semble ne plus r\u00e9pondre. L'attaquant utilise 1000 threads et met l'ensemble du syst\u00e8me hors ligne.</li> <li>R\u00e9f\u00e9rences<ul> <li>OWASP Cheat Sheet: Denial of Service</li> <li>OWASP Attacks: Denial of Service</li> </ul> </li> </ul>"},{"location":"fr/A11_2021-Next_Steps/#erreurs-de-gestion-de-la-memoire","title":"Erreurs de gestion de la m\u00e9moire","text":"CWEs associ\u00e9es Taux d'incidence max Taux d'incidence moyen Exploitation pond\u00e9r\u00e9e moyenne Impact pond\u00e9r\u00e9 moyen Couverture max Couverture moyenne Nombre total d'occurrences Nombre total de CVEs 14 7,03 % 1,16 % 6,7 8,1 56,06 % 31,74 % 26\u00a0576 16\u00a0184 <ul> <li>Description. Les applications Web ont tendance \u00e0 \u00eatre \u00e9crites dans des langages avec une gestion automatique de la m\u00e9moire, tels que Java, .NET ou node.js (JavaScript ou TypeScript). Cependant, ces langages sont \u00e9crits dans des langages syst\u00e8mes qui pr\u00e9sentent des probl\u00e8mes de gestion de la m\u00e9moire, tels que les d\u00e9bordements de tampon ou de tas, l'utilisation apr\u00e8s lib\u00e9ration, les d\u00e9bordements d'entiers, etc. De nombreuses \u00e9vasions de sandbox ont eu lieu au fil des ann\u00e9es, ce qui prouve que m\u00eame si le langage d'application Web est th\u00e9oriquement \"s\u00fbr\" au niveau de l'allocation m\u00e9moire, les fondations ne le sont pas.</li> <li>Comment s'en pr\u00e9munir. De nombreuses API modernes sont d\u00e9sormais \u00e9crites dans des langages avec une gestion de la m\u00e9moire s\u00e9curis\u00e9e tels que Rust ou Go. Dans le cas de Rust, la s\u00e9curit\u00e9 de la m\u00e9moire est une caract\u00e9ristique cruciale du langage. Pour le code existant, l'utilisation de param\u00e8tres de compilation stricts, le typage fort, l'analyse de code statique et le fuzzing peuvent \u00eatre b\u00e9n\u00e9fiques pour identifier les fuites de m\u00e9moire, les d\u00e9passements de m\u00e9moire et de tableau, etc.</li> <li>Exemples de sc\u00e9narios d'attaque. Les d\u00e9bordements de tampon et de tas ont \u00e9t\u00e9 un pilier des attaquants au fil des ann\u00e9es. L'attaquant envoie des donn\u00e9es \u00e0 un programme, qui les stocke dans un tampon de pile sous-dimensionn\u00e9. Le r\u00e9sultat est que les informations de la pile d'appel sont \u00e9cras\u00e9es, y compris le pointeur de retour de la fonction. Les donn\u00e9es d\u00e9finissent la valeur du pointeur de retour de sorte que, lors du retour de fonction, elle transf\u00e8re le contr\u00f4le au code malveillant contenu dans les donn\u00e9es de l'attaquant.</li> <li>R\u00e9f\u00e9rences<ul> <li>OWASP Vulnerabilities: Buffer Overflow</li> <li>OWASP Attacks: Buffer Overflow</li> <li>Science Direct: Integer Overflow</li> </ul> </li> </ul>"},{"location":"id/","title":"Pengantar","text":""},{"location":"id/#selamat-datang-ke-owasp-top-10-2021","title":"Selamat datang ke OWASP Top 10 - 2021","text":"<p>Selamat datang ke versi terakhir dari OWASP Top 10! OWASP Top 10 2021 semua baru, dengan desain grafis baru dan suatu infografis satu-halaman yang dapat Anda cetak atau dapatkan dari beranda kami.</p> <p>Terima kasih sebesar-besarnya ke semua orang yang menyumbangkan waktu dan data mereka ke iterasi ini. Tanpa Anda, versi ini tidak akan ada. TERIMA KASIH</p>"},{"location":"id/#apa-yang-berubah-di-top-10-untuk-2021","title":"Apa yang berubah di Top 10 untuk 2021","text":"<p>Terdapat tiga kategori baru, empat kategori dengan penamaan dan perbuahan ruang lingkup, dan beberapa konsolidasi baru di Top 10 untuk 2021</p> <p></p> <ul> <li>A01:2021-Broken Access Control naik dari posisi kelima; 94% dari aplikasi yang telah diuji dengan broken access kontrol dalam beberapa bentuk. 34 CWE yang dipetakan ke Broken Access Control memiliki lebih banyak kemunculan dalam aplikasi daripada kategori lainnya.</li> <li>A02:2021-Cryptographic Failures menggeser satu posisi menjadi #2, sebelumnya dikenal sebagai Pengungkapan Data Sensitif, yang merupakan gejala luas dan bukan penyebab utama. Fokus baru di sini adalah pada kegagalan yang terkait dengan Kriptografi yang sering mengarah pada Pengungkapan Data Sensitif atau sistem yang telah terinfeksi oleh hacker.</li> <li>A03:2021-Injection turun ke posisi ketiga. 94% aplikasi diuji untuk beberapa bentuk injeksi, dan 33 CWE yang dipetakan ke dalam kategori ini memiliki kejadian terbanyak kedua dalam aplikasi. Skrip cross-site sekarang menjadi bagian dari kategori ini dalam edisi ini. </li> <li>A04:2021-Insecure Design adalah kategori baru untuk tahun 2021, dengan fokus pada resiko yang terkait dengan kekurangan desain. Jika kita ingin benar-benar bergerak sebagai industri, itu membutuhkan lebih banyak penggunaan pemodelan ancaman, pola dan desain yang aman, dan arsitektur referensi</li> <li>A05:2021-Security Misconfiguration naik dari #6 di edisi sebelumnya; 90% aplikasi diuji untuk beberapa bentuk kesalahan konfigurasi. Dengan lebih banyak perubahan ke software dengan konfigurasi yang banyak, tidak mengherankan melihat kategori ini naik. Kategori sebelumnya untuk XML External Entities (XXE) sekarang menjadi bagian dari kategori ini.</li> <li>A06:2021-Vulnerable and Outdated Components sebelumnya berjudul Using Components with Known Vulnerabilities dan #2 dalam survei industri, tapi juga memiliki cukup data untuk masuk TOP 10 melalui analisis data. Kategori ini naik dari #9 di tahun 2017 dan merupakan masalah umum yang kami perjuangkan untuk menguji dan menilai resiko. Ini adalah satu-satunya kategori yang tidak memiliki CVE yang dipetakan ke CWE yang disertakan, jadi eksploitasi default dan bobot dampak 5.0 diperhitungkan dalam skornya.</li> <li>A07:2021-Identification and Authentication Failures sebelumnya dalah Broken Authentication dan turun dari posisi kedua, dan sekarang termasuk CWE yang lebih terkait dengan kegagalan identifikasi. Kategori ini masih merupakan bagian integral dari Top 10, tetapi peningkatan ketersediaan framework yang telah distandarisasi tampaknya membantu.</li> <li>A08:2021-Software and Data Integrity Failures adalah kategori baru untuk tahun 2021, yang berfokus pada pembuatan asusmsi terkait pembaruan perangkat lunak, data penting, dan pipeline CI/CD tanpa memverifikasi integritas. Salah satu dampak tertinggi dari CVE/CVSS yang dipetakan ke 10 CWE dalam kategori ini. Insecure Deserialization dari tahun 2017 sekarang menjadi bagian dari kategori yang lebih besar ini.</li> <li>A09:2021-Security Logging and Monitoring Failures sebelumnya Logging dan Monitoring tidak memadai dan ditambahkan dari survei industri (#3), naik dari #10 sebelumnya. Kategori ini diperluas untuk mencakup lebih banyak jenis kegagalan, suatu tantangan untuk diiuji, dan tidak terwakili dengan baik dalam data CVE/CVSS. Namun, kegagalan dalam kategori ini dapat secara langsung mempengaruhi visibilitas, alert pada insiden, dan forensik</li> <li>A10:2021-Server-Side Request Forgery ditambahkan dari survei industri (#1). Data menunjukkan tingkat insiden yang relatif rendah dengan cakupan pengujian di atas rata-rata, bersama dengan peringkat di atas rata-rata untuk potensi eksploitasi dan dampak. Kategori ini mewakili skenario di mana para profesional industri memberi tahu kami bahwa ini penting, meskipun tidak diilustrasikan dalam data saat ini.</li> </ul>"},{"location":"id/#metodologi","title":"Metodologi","text":"<p>Penyusunan dari Top 10 ini lebih didorong oleh data daripada sebelumnya tetapi tidak didorong oleh data yang tidak di verifikasi dahulu. Kami memilih delapan dari sepuluh kategori dari kontribusi data dan 2 kategori dari survei industri tingkat tinggi. Kami melakukan ini karena alasan mendasar, melihat data yang telah dikumpulkan sama dengan melihat ke masa lalu. Peneliti AppSec membutuhkan waktu untuk menemukan kerentanan baru dan cara baru untuk mengujinya. Dibutuhkan waktu untuk mengintegrasikan tes ini ke dalam alat dan proses. Pada saat kita dapat dengan andal menguji kelemahan dalam skala, tahun-tahun kemungkinan telah berlalu. Untuk menyeimbangkan pandangan itu, kami menggunakan survei industri untuk bertanya kepada orang-orang di garis depan apa yang mereka lihat sebagai kelemahan penting yang mungkin belum ditunjukkan oleh data.</p> <p>Ada beberapa perubahan penting yang kami adopsi untuk terus mematangkan Top 10.</p>"},{"location":"id/#bagaimana-kategori-disusun","title":"Bagaimana kategori disusun","text":"<p>Beberapa kategori telah berubah dari pemasangan OWASP Top 10 sebelumnya. Berikut adalah ringkasan tingkat tinggi dari perubahan kategori</p> <p>Upaya pengumpulan data sebelumnya difokuskan pada subset yang ditentukan sekitar 30 CWE dengan bidang yang meminta temuan tambahan. Kami mengetahui bahwa organisasi akan fokus hanya pada 30 CWE tersebut dan jarang menambahkan CWE tambahan yang mereka lihat. Dalam iterasi ini, kami membukanya dan hanya meminta data, tanpa batasan pada CWE. Kami meminta jumlah aplikasi yang diuji untuk tahun tertentu (mulai 2017), dan jumlah aplikasi dengan setidaknya satu contoh CWE yang ditemukan dalam pengujian. Format ini memungkinkan kami untuk melacak seberapa lazim setiap CWE dalam populasi aplikasi. Kami mengabaikan frekuensi untuk tujuan kami; sementara mungkin diperlukan untuk situasi lain, itu hanya menyembunyikan prevalensi aktual dalam populasi aplikasi. Apakah sebuah aplikasi memiliki empat instans CWE atau 4.000 instans bukanlah bagian dari perhitungan untuk 10 Besar. Kami beralih dari sekitar 30 CWE menjadi hampir 400 CWE untuk dianalisis dalam kumpulan data. Kami berencana untuk melakukan analisis data tambahan sebagai suplemen di masa depan. Peningkatan jumlah CWE yang signifikan ini memerlukan perubahan pada struktur kategori.</p> <p>Kami menghabiskan beberapa bulan untuk mengelompokkan dan mengkategorikan CWE dan dapat melanjutkannya selama beberapa bulan lagi. Kami harus berhenti di beberapa titik. Ada akar penyebab dan jenis gejala CWE, di mana jenis akar penyebab seperti \"Kegagalan Kriptografis\" dan \"Kesalahan Konfigurasi\" kontras dengan jenis gejala seperti \"Pengungkapan Data Sensitif\" dan \"Penolakan Layanan.\" Kami memutuskan untuk fokus pada akar penyebab bila memungkinkan karena lebih logis untuk memberikan panduan identifikasi dan perbaikan. Berfokus pada akar penyebab di atas gejala bukanlah konsep baru; Sepuluh Besar telah menjadi campuran gejala dan akar penyebab. CWE juga merupakan campuran dari gejala dan akar penyebab; kami hanya menjadi lebih berhati-hati tentang hal itu dan menyebutnya. Ada rata-rata 19,6 CWE per kategori dalam pemasangan ini, dengan batas bawah pada 1 CWE untuk A10:2021-Server-Side Request Forgery (SSRF) hingga 40 CWE dalam A04:2021-Insecure Design. Struktur kategori yang diperbarui ini menawarkan manfaat pelatihan tambahan karena perusahaan dapat fokus pada CWE yang masuk akal untuk bahasa/kerangka kerja.    </p>"},{"location":"id/#bagaimana-data-digunakan-untuk-memilih-kategori","title":"Bagaimana data digunakan untuk memilih kategori","text":"<p>Pada tahun 2017, kami memilih kategori berdasarkan tingkat insiden untuk menentukan kemungkinan, lalu memeringkatnya berdasarkan diskusi tim berdasarkan pengalaman puluhan tahun untuk Exploitability, Detectability (juga kemungkinan), dan Dampak Teknis. Untuk tahun 2021, kami ingin menggunakan data untuk Exploitability and Impact jika memungkinkan.</p> <p>Kami mengunduh Pemeriksaan Ketergantungan OWASP dan mengekstrak Eksploitasi CVSS, dan skor Dampak yang dikelompokkan berdasarkan CWE terkait. Butuh sedikit riset dan usaha karena semua CVE memiliki skor CVSSv2, tetapi ada kekurangan dalam CVSSv2 yang harus diatasi oleh CVSSv3. Setelah titik waktu tertentu, semua CVE juga diberi skor CVSSv3. Selain itu, rentang penilaian dan formula diperbarui antara CVSSv2 dan CVSSv3.</p> <p>Di CVSSv2, Eksploitasi dan Dampak bisa mencapai 10,0, tetapi rumusnya akan menjatuhkannya hingga 60% untuk Eksploitasi dan 40% untuk Dampak. Di CVSSv3, maks secara teori dibatasi hingga 6,0 untuk Eksploitasi dan 4,0 untuk Dampak. Dengan mempertimbangkan pembobotan, skor Dampak bergeser lebih tinggi, rata-rata hampir satu setengah poin di CVSSv3, dan kemampuan eksploitasi turun rata-rata hampir setengah poin.</p> <p>Ada 125 ribu catatan CVE yang dipetakan ke CWE dalam data NVD yang diekstraksi dari OWASP Dependency Check, dan ada 241 CWE unik yang dipetakan ke CVE. Peta CWE 62 ribu memiliki skor CVSSv3, yang kira-kira setengah dari populasi dalam kumpulan data.</p> <p>Untuk Top 10, kami menghitung rata-rata skor eksploitasi dan dampak dengan cara berikut. Kami mengelompokkan semua CVE dengan skor CVSS berdasarkan CWE dan memberi bobot pada skor eksploitasi dan dampak berdasarkan persentase populasi yang memiliki skor CVSSv3 + populasi yang tersisa dari skor CVSSv2 untuk mendapatkan rata-rata keseluruhan. Kami memetakan rata-rata ini ke CWE dalam kumpulan data untuk digunakan sebagai skor Eksploitasi dan Dampak untuk separuh persamaan risiko lainnya.</p>"},{"location":"id/#kenapa-tidak-hanya-bersumber-dari-data-statistik-murni","title":"Kenapa tidak hanya bersumber dari data statistik murni?","text":"<p>Hasil dalam data utamanya terbatas pada apa yang dapat kami uji secara otomatis. Bicaralah dengan seorang Profesional AppSec, dan mereka akan memberi tahu Anda tentang hal-hal yang mereka temukan dan tren yang mereka lihat yang belum ada dalam data. Dibutuhkan waktu bagi orang untuk mengembangkan metodologi pengujian untuk jenis kerentanan tertentu dan kemudian lebih banyak waktu agar pengujian tersebut diotomatisasi dan dijalankan terhadap populasi aplikasi yang besar. Semua yang kami temukan adalah melihat kembali ke masa lalu dan mungkin kehilangan tren dari tahun lalu, yang tidak ada dalam data.</p> <p>Oleh karena itu, kami hanya memilih delapan dari sepuluh kategori dari data karena tidak lengkap. Dua kategori lainnya berasal dari survei industri. Hal ini memungkinkan para praktisi di garis depan untuk memilih apa yang mereka lihat sebagai risiko tertinggi yang mungkin tidak ada dalam data (dan mungkin tidak pernah diungkapkan dalam data).</p>"},{"location":"id/#mengapa-tingkatan-insiden-bukan-bersumber-dari-frekuensi","title":"Mengapa tingkatan insiden bukan bersumber dari frekuensi?","text":"<p>Ada tiga sumber data utama. Kami mengidentifikasi mereka sebagai Human-assisted Tooling (HaT), Tool-assisted Human (TaH), dan raw Tooling.</p> <p>Tooling dan HaT adalah generator pencarian frekuensi tinggi. Alat akan mencari kerentanan tertentu dan tanpa lelah berusaha untuk menemukan setiap contoh kerentanan itu dan akan menghasilkan jumlah temuan yang tinggi untuk beberapa jenis kerentanan. Lihatlah Cross-Site Scripting, yang biasanya merupakan salah satu dari dua rasa: itu kesalahan kecil yang terisolasi atau masalah sistemik. Jika ini merupakan masalah sistemik, jumlah temuan bisa mencapai ribuan untuk sebuah aplikasi. Frekuensi tinggi ini menenggelamkan sebagian besar kerentanan lain yang ditemukan dalam laporan atau data. TaH, di sisi lain, akan menemukan jenis kerentanan yang lebih luas tetapi pada frekuensi yang jauh lebih rendah karena kendala waktu. Ketika manusia menguji aplikasi dan melihat sesuatu seperti Cross-Site Scripting, mereka biasanya akan menemukan tiga atau empat instance dan berhenti. Mereka dapat menentukan temuan sistemik dan menuliskannya dengan rekomendasi untuk diperbaiki pada skala aplikasi yang luas. Tidak perlu (atau waktu) untuk menemukan setiap contoh.</p> <p>Misalkan kita mengambil dua kumpulan data yang berbeda ini dan mencoba menggabungkannya pada frekuensi. Dalam hal ini, data Tooling dan HaT akan menenggelamkan data TaH yang lebih akurat (tetapi luas) dan merupakan bagian yang baik dari mengapa sesuatu seperti Cross-Site Scripting memiliki peringkat yang sangat tinggi di banyak daftar ketika dampaknya umumnya rendah hingga sedang. Itu karena banyaknya temuan. (Cross-Site Scripting juga cukup mudah untuk diuji, jadi ada lebih banyak tes untuk itu juga). Pada tahun 2017, kami memperkenalkan penggunaan tingkat insiden sebagai gantinya untuk melihat data baru dan menggabungkan data Tooling dan HaT dengan data TaH dengan rapi. Tingkat insiden menanyakan berapa persentase populasi aplikasi yang memiliki setidaknya satu contoh jenis kerentanan. Kami tidak peduli apakah itu satu kali atau sistemik. Itu tidak relevan untuk tujuan kita; kita hanya perlu mengetahui berapa banyak aplikasi yang memiliki setidaknya satu instance, yang membantu memberikan pandangan yang lebih jelas tentang pengujian temuan di beberapa jenis pengujian tanpa menenggelamkan data dalam hasil frekuensi tinggi.</p>"},{"location":"id/#apa-proses-pengumpulan-dan-analisis-data-anda","title":"Apa proses pengumpulan dan analisis data Anda?","text":"<p>Kami meresmikan proses pengumpulan data OWASP Top 10 di Open Security Summit pada 2017. Para Leader OWASP Top 10 dan komunitas telah menghabiskan dua hari untuk memformalkan proses pengumpulan data yang transparan. Edisi 2021 adalah kedua kalinya kami menggunakan metodologi ini. Kami mempublikasikan panggilan untuk data melalui saluran media sosial yang tersedia untuk kami, baik projek maupun OWASP. Pada halaman Projek OWASP, kami mencantumkan elemen dan struktur data yang kami cari dan cara mengirimkannya. Dalam proyek GitHub, kami memiliki file contoh yang berfungsi sebagai template. Kami bekerja dengan organisasi yang diperlukan untuk membantu mengetahui struktur dan pemetaan ke CWE. Kami mendapatkan data dari organisasi yang menguji vendor berdasarkan perdagangan, vendor bug bounty, dan organisasi yang menyumbangkan data pengujian internal. Setelah kami memiliki data, kami memuatnya bersama dan menjalankan analisis fundamental tentang apa yang dipetakan CWE ke kategori risiko. Ada tumpang tindih antara beberapa CWE, dan yang lainnya sangat erat kaitannya (mis. Kerentanan kriptografis). Setiap keputusan yang terkait dengan data mentah yang dikirimkan didokumentasikan dan dipublikasikan agar terbuka dan transparan dengan cara kami menormalkan data.</p> <p>Kami melihat delapan kategori dengan tingkat insiden tertinggi untuk dimasukkan dalam Top 10. Kami juga melihat hasil survei industri untuk melihat mana yang mungkin sudah ada dalam data. Dua suara teratas yang belum ada dalam data akan dipilih untuk dua tempat lainnya di Top 10. Setelah kesepuluh dipilih, kami menerapkan faktor umum untuk eksploitabilitas dan dampak; untuk membantu menentukan peringkat 10 Besar secara berurutan.</p>"},{"location":"id/#faktor-faktor-data","title":"Faktor-faktor Data","text":"<p>Ada data faktor yang dicantumkan untuk masing-masing dari 10 Kategori Teratas, berikut artinya:</p> <ul> <li>CWEs Mapped: Jumlah CWE yang dipetakan ke kategori oleh 10 tim teratas.</li> <li>Incidence Rate: Tingkat insiden adalah persentase aplikasi yang rentan terhadap CWE tersebut dari populasi yang diuji oleh organisasi tersebut untuk tahun tersebut.</li> <li>(Pengujian) Cakupan: Persentase aplikasi yang diuji oleh semua organisasi untuk CWE tertentu.</li> <li>Weighted Exploit: Sub-skor Eksploitasi dari skor CVSSv2 dan CVSSv3 yang ditetapkan ke CVE yang dipetakan ke CWE, dinormalisasi, dan ditempatkan pada skala 10pt.</li> <li>Weighted Impact: Sub-skor Dampak dari skor CVSSv2 dan CVSSv3 yang ditetapkan ke CVE dipetakan ke CWE, dinormalisasi, dan ditempatkan pada skala 10pt.</li> <li>Total Kejadian: Jumlah total aplikasi yang ditemukan memiliki CWE yang dipetakan ke suatu kategori.</li> <li>Total CVE: Jumlah total CVE dalam NVD DB yang dipetakan ke CWE yang dipetakan ke suatu kategori.</li> </ul>"},{"location":"id/#hubungan-kategori-dari-2017","title":"Hubungan Kategori dari 2017","text":"<p>Ada banyak pembicaraan tentang tumpang tindih antara risiko Top 10. Menurut definisi masing-masing (daftar CWE yang termasuk), sebenarnya tidak ada tumpang tindih. Namun, secara konseptual, dapat terjadi tumpang tindih atau interaksi berdasarkan penamaan tingkat yang lebih tinggi. Diagram Venn berkali-kali digunakan untuk menunjukkan tumpang tindih seperti ini.</p> <p>Diagram Venn di atas merepresentasikan interaksi antara Sepuluh Kategori Risiko Teratas 2017. Saat melakukannya, beberapa poin penting menjadi jelas:</p> <ol> <li>Orang bisa berargumen bahwa Cross-Site Scripting pada akhirnya termasuk dalam Injeksi karena pada dasarnya adalah Injeksi Konten. Melihat data tahun 2021, semakin jelas bahwa XSS perlu pindah ke Injeksi.</li> <li>Tumpang tindih hanya satu arah. Kita akan sering mengklasifikasikan kerentanan berdasarkan manifestasi akhir atau \"gejala\", bukan akar penyebab (yang berpotensi dalam). Misalnya, \"Pengungkapan Data Sensitif\" mungkin merupakan hasil dari \"Kesalahan Konfigurasi Keamanan\"; namun, Anda tidak akan melihatnya ke arah lain. Akibatnya, panah digambar di zona interaksi untuk menunjukkan arah mana itu terjadi.</li> <li>Terkadang diagram ini digambar dengan semua yang ada di A06:2021 Menggunakan Komponen dengan Kerentanan yang Diketahui. Sementara beberapa kategori risiko ini mungkin menjadi akar penyebab kerentanan pihak ketiga, mereka umumnya dikelola secara berbeda dan dengan tanggung jawab yang berbeda. Jenis lainnya biasanya mewakili risiko pihak pertama.</li> </ol>"},{"location":"id/#terima-kasih-kepada-kontributor-data-kami","title":"Terima kasih kepada kontributor data kami","text":"<p>Organisasi berikut (bersama dengan beberapa donor anonim) dengan baik hati menyumbangkan data untuk lebih dari 500.000 aplikasi untuk menjadikan ini kumpulan data keamanan aplikasi terbesar dan terlengkap. Tanpa Anda, ini tidak akan mungkin.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"id/#thank-you-to-our-sponsor","title":"Thank you to our sponsor","text":"<p>The OWASP Top 10 2021 team gratefully acknowledge the financial support of Secure Code Warrior.</p> <p></p>"},{"location":"id/0x00_2021-notice/","title":"Notice","text":""},{"location":"id/0x00_2021-notice/#rilis","title":"Rilis","text":"<p>Rilis tanggal 24 September 2021</p>"},{"location":"id/0x00_2021-notice/#penulis-utama","title":"Penulis Utama","text":"<ul> <li>Andrew van der Stock (twitter: @vanderaj)</li> <li>Brian Glas (twitter: @infosecdad)</li> <li>Neil Smithline (twitter: @appsecneil)</li> <li>Torsten Gigler (twitter: @torsten_tweet)</li> </ul>"},{"location":"id/0x00_2021-notice/#kontributor","title":"Kontributor","text":"<ul> <li>Orange Tsai, penulis A10-2021: Server Side Request Forgery</li> <li>Jim Manico danJakub Ma\u0107kowski - OWASP CheatSheets Coordination</li> </ul>"},{"location":"id/0x00_2021-notice/#bagaimana-anda-dapat-berkontribusi","title":"Bagaimana Anda dapat berkontribusi","text":"<p>Pada level ini, kami mengharapkan</p> <ul> <li>Pengolah data - mereview analisa kami</li> <li>Desainer web - kami membutuhkan versi yang sesuai untuk perangkat portabel</li> <li>Translators - menolong meninjau teks bahasa Inggris untuk memastikan ini dapat diterjemahkan</li> <li>ASVS, panduan testing, dan pemimpin panduan tinjauan kode - silahkan menggunakan data kami dan membantu kami menghubungkan  dokumen kami dan standarnya secara bersama-sama.</li> </ul>"},{"location":"id/0x00_2021-notice/#masalah-log-dan-permintaan-penarikan","title":"Masalah log dan permintaan penarikan","text":"<p>Berikan koreksi apapun atau jika ada isu pada:</p> <ul> <li>https://github.com/OWASP/Top10/issues</li> </ul>"},{"location":"id/0x01_2021-about-owasp/","title":"About OWASP","text":"<p>Open Worldwide Application Security Project (OWASP) adalah komunitas terbuka yang didedikasikan untuk memungkinkan organisasi mengembangkan, membeli, dan memelihara aplikasi yang dapat dipercaya.</p> <p>Di OWASP, anda akan menemukan kebebasan dan keterbukaan:</p> <ul> <li>Alat dan standar dalam keamanan aplikasi.</li> <li>Penelitian terkini.</li> <li>Kendali keamanan dan pustaka standar.</li> <li>Buku tentang uji keamanan aplikasi, pengembangan kode aman, dan peninjauan kode keamanan.</li> <li>Presentasi dan video.</li> <li>Cheat sheets untuk banyak topik umum.</li> <li>Pertemuan Chapter.</li> <li>Kegiatan, pelatihan, dan konferensi.</li> <li>Google Groups</li> </ul> <p>Pelajari lebih lanjut di: https://owasp.org.</p> <p>seluruh alat OWASP, dokumen, video, presentasi, dan bagian adalah kebebasan dan keterbukaan bagi semua orang yang tertarik dalam meningkatkan keamanan aplikasi</p> <p>Kami menganjurkan mendekati keamanan aplikasi sebagai masalah orang, proses, dan teknologi, karena pendekatan yang paling efektif untuk keamanan aplikasi memerlukan peningkatan pada bidang-bidang ini.</p> <p>OWASP adalah jenis organisasi baru. Kebebasan kami dari tekanan komersial memungkinkan kami memberikan informasi yang tidak bias, praktis, dan hemat biaya tentang keamanan aplikasi.</p> <p>OWASP tidak berafiliasi dengan perusahaan teknologi mana pun, meskipun kami mendukung penggunaan teknologi keamanan komersial yang diinformasikan. OWASP memproduksi berbagai jenis bahan secara kolaboratif, transparan, dan terbuka.</p> <p>Yayasan OWASP adalah entitas nonprofit yang memastikan kesuksesan jangka panjang proyek. Hampir semua orang yang terkait dengan OWASP adalah relawan, termasuk OWASP Board, OWASP Chapter Leader, Project Leader, dan Project Member. Kami mendukung penelitian keamanan yang inovatif dengan hibah dan infrastruktur.</p> <p>Ayo bergabung dengan kami!</p>"},{"location":"id/0x01_2021-about-owasp/#copyright-and-license","title":"Copyright and License","text":"<p>Copyright \u00a9 2003-2025 The OWASP\u00ae Foundation. This document is released under the Creative Commons Attribution Share-Alike 4.0 license. For any reuse or distribution, you must make it clear to others the license terms of this work.</p>"},{"location":"id/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/","title":"Bagaimana cara untuk memulai program AppSec dengan OWASP Top 10","text":"<p>Sebelumnya, OWASP Top 10 tidak pernah dirancang untuk menjadi basis dari sebuah program AppSec. Bagaimanapun, hal ini diperlukan untuk memulai darimanapun bagi berbagai organisasi yang baru saja memulai perjalanan mereka dalam keamanan aplikasi OWASP Top 10 2021 merupakan awal yang baik sebagai landasan untuk daftar periksa dan sebagainya, tapi itu sendiri tidak cukup.</p>"},{"location":"id/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#tahap-1-identifikasi-kesenjangan-dan-tujuan-dari-program-appsec-anda","title":"Tahap 1. Identifikasi kesenjangan dan tujuan dari program appsec anda","text":"<p>Banyak program Keamanan Aplikasi (AppSec) mencoba untuk berlali sebelum mereka dapat merangkak atau berjalan. Usaha seperti ini pasti akan gagal. Kami sangat mendorong pimpinan CISO dan AppSec untuk menggunakan Jaminan Perangkat Lunak OWASP Model Kematangan (SAMM) [https://owaspsamm.org] untuk mengidentifikasi kelemahan dan wilayah untuk perbaikan selama periode 1-3 tahun. Tahap pertama adalah untuk evaluasi dimana anda sekarang, identifikasi kesenjangan pada pemerintahan, perencanaan, implementasi, verifikasi, dan operasi yang anda butuhkan untuk menyelesaikan segera versus yang bisa menunggu, dan memprioritaskan implementasi atau memperbaiki lima belas praktik keamanan OWASP SAMM. OWASP SAMM dapat membantu you build and measure improvements in your software assurance efforts. anda membangun dan menimbang perbaikan dalam jaminan usaha perangkat lunak anda.</p>"},{"location":"id/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#tahap-2-rencana-untuk-siklus-hidup-pengembangan-yang-aman","title":"Tahap 2. Rencana untuk siklus hidup pengembangan yang aman","text":"<p>Secara tradisional melestarikan apa yang disebut dengan \"unicorns,\" konsep jalan beraspal adalah jalan termudah untuk membuat sumber daya Aplikasi Keamanan yang sangat berdampak dan berskala dengan kecepatan pengembangan tim, yang mana meningkat setiap tahun. </p> <p>Konsep pengembangan yang aman adalah \"jalan termudah dan juga jalur teraman\" dan harus melibatkan budaya kemitraan yang mendalam antara team pengembang dan tim keamanan, sebaiknya seperti mereka adalah satu dan dalam tim yang sama. Jalan beraspal bertujuan untuk terus memperbaiki, menimbang, mendeteksi dan mengubah alternatif yang tidak aman dengan memiliki sebuah perpustakaan dengan skala seluruh perusahaan untuk menempatkan perubahan yang aman dengan alat untuk membantu melihat dimana perbaikan dapat dibuat dengan mengadopsi konsep jalan beraspal. Ini memungkinkan alat pengembangan yang ada untuk melaporkan pembuatan dan membantu tim pengembang untuk mengoreksi kembali dari alternatif yang tidak aman.</p> <p>Konsep pengembangan yang aman mungkin tampak banyak yang harus dilalui, tetapi itu harus dibangun secara bertahap dari waktu ke waktu. Ada bentuk lain dari program keamanan aplikasi diluar sana, terutama Microsoft Agile Secure Development Lifecycle. Tidak semua metode program keamanan aplikasi sesuai dengan semua bisnis.</p>"},{"location":"id/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#tahap-3-mengimplementasikan-konsep-jalan-pengembangan-yang-aman-dengan-tim-pengembang-anda","title":"Tahap 3. Mengimplementasikan konsep jalan pengembangan yang aman dengan tim pengembang anda.","text":"<p>Konsep jalan beraspal dibentuk dengan persetujuan dan keterlibatan langsung dari tim pengembang dan operasi yang relevan. Pengembangan yang aman harus disejajarkan secara strategis dengan sisi bisnis dan membantu mengantarkan kembali aplikasi yang aman lebih cepat. Mengembangkan Konsep Pengembangan yang aman harus menjadi panduan penjagaan latihan yang mencakup seluruh perusahaan ataupun ekosistem aplikasi, bukan sebagai tambalan untuk aplikasi yang belum siap, seperti di hari-hari sebelumnya.</p>"},{"location":"id/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#tahap-4-migrasikan-semua-aplikasi-yang-akan-datang-dan-yang-sudah-ada-ke-konsep-pengembangan-yang-aman","title":"Tahap 4. Migrasikan semua aplikasi yang akan datang dan yang sudah ada ke Konsep Pengembangan yang aman.","text":"<p>Tambahkan Alat pendeteksi pada Konsep Pengembangan yang aman saat anda mengembangkannya  dan menyediakan informasi untuk tim pengembang untuk meningkatkan keamanan dari  aplikasi mereka dengan bagaimana mereka bisa langsung mengadopsi elemen dari konsep  jalan beraspal. Ketika sebuah aspekdari konsep jalan beraspal telah diadopsi,  organisasi harus mengimplementasikan pemeriksaan integrasi yang berkelanjutan yang  mana memeriksa kode yang telah ada dan check-in yang menggunakan alternatif terlarang  dan memperingatkan atau menolak build program atau check-in. Hal ini mencegah opsi  yang tidak aman dapat merayap ke dalam kode sepanjang waktu, mencegah hutang teknis  dan aplikasi tidak aman yang rusak. Peringatan semacam itu harus terhubung kepada  alternatif yang aman, sehingga tim pengembang dapat diberikan jawaban yang benar  sesegera mungkin. Mereka dapat melakukan refactoring dan mengadopsi kompnen pada  konsep jalan beraspal dengan cepat.</p>"},{"location":"id/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#tahap-5-uji-apakah-konsep-pengembangan-yang-aman-telah-mengurangi-masalah-yang-ditemukan-di-owasp-top-10","title":"Tahap 5. Uji apakah konsep Pengembangan yang aman telah mengurangi masalah yang ditemukan di OWASP Top 10","text":"<p>Komponen konsep Pengembangan yang aman harus mengatasi masalah  yang signifikan dengan OWASP Top 10, sebagai contohnya, bagaimana untuk mendeteksi secara otomatis atau memperbaiki komponen yang rentan, atau plugin IDE analisis kode statis untuk mendeteksi injeksi atau bahkan lebih seperti perpustakaan yang dikenal aman terhadap injeksi, seperti React atau Vue. Semakin banyak penggantian pengiriman aman yang diberikan kepada tim, semakin baik. sebuah tugas penting pada tim keamanan aplikasi adalah untuk memastikan bahwa keamanan komponen-komponen ini adalah ditingkatkan dan dievaluasi secara berkelanjutan. Setelah mereka diperbaiki, beberapa bentuk jalur komunikasi dengan konsumen dari komponen harus mengindikasikan bahwa peningkatan harus terjadi, sebaiknya secara otomatis, tapi apabila tidak, setidaknya disorot pada sebuah tampilan dasar atau sejenisnya.</p>"},{"location":"id/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#tahap-6-bangun-program-anda-menjadi-program-keamanan-aplikasi-yang-matang","title":"Tahap 6. Bangun program anda menjadi program keamanan aplikasi yang matang","text":"<p>Anda tidak boleh berhenti hanya di OWASP Top 10. Itu hanya mencakup 10 kategori resiko. Kami sangat mendorong organisasi untuk mengadopsi Application Security Verification Standard dan semakin menambah komponen jalan beraspal dan menguji untuk tingkat 1, 2, dan 3, tergantung pada pengembangan tingkat resiko pada aplikasi </p>"},{"location":"id/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#lakukan-yang-terbaik","title":"Lakukan yang terbaik","text":"<p>Semua program aplikasi keamanan yang baik melakukan usaha yang lebih dari batas minimal. Semua orang harus terus melaju jika kita akan berada di atas untuk kerentanan keamanan aplikasi.</p> <ul> <li> <p>Integritas Konseptual. Program aplikasi keamanan yang matang     harus mengandung beberapa konsep dari arsitektur keamanan,     Apakah berupa cloud yang formal atau arsitektur keamanan     perusahaan atau threat modeling.</p> </li> <li> <p>Skala dan otomasi. Program aplikasi keamanan yang matang mencoba     untuk mengotomasi sebanyak pengiriman yang dapat dilakukan,     menggunakan skrip untuk meniru tahapan penetration testing yang     kompleks, alat analisis kode statis tersedia secara langsung ke     tim pengembang, membantu tim pengembang dalam membangun unit aplikasi     keamanan dan pengujian integrasi, dan banyak lagi.</p> </li> <li> <p>Budaya. Program Aplikasi Keamanan yang matang mencoba untuk     membongkar rancangan yang tidak aman dan menghapuskan hutang teknis     dari kode yang telah ada dengan menjadi bagian dari tim pengembang     dan tidak menyampingkannya. tim aplikasi keamanan yang melihat tim     pengembang sebagai \"kami\" atau \"mereka\" ditakdirkan untuk gagal.</p> </li> <li> <p>Peningkatan berkelanjutan. Program Aplikasi Keamanan yang matang     merujuk kepada peningkatan yang konstan. Apabila terjadi hal yang     tidak bekerja atau berhenti melakukan hal tersebut. Apabila sesuatu     kikuk atau tidak terukur, bekerjalah untuk meningkatkan nya. Apabila     sesuatu tidak digunakan oleh tim pengembang dan tidak memiliki atau     memiliki dampak yang terbatas, lakukan sesuatu yang berbeda. Hanya     karena kita telah melakukan pengujian seperti desk checks sejak     tahun 1970-an tidak berarti itu adalah ide bagus. Ukur, evaluasi,      lalu bangun atau tingkatkan.</p> </li> </ul>"},{"location":"id/A00_2021_How_to_use_the_OWASP_Top_10_as_a_standard/","title":"Bagaimana cara menggunakan OWASP Top 10 sebagai sebuah standarisasi","text":"<p>OWASP Top 10 terutama merupakan dokumen kesadaran. Bagaimanapun, hal ini tidak menutup organisasi untuk menggunakannya sebagai sebuah standar de  facto pada industri keamanan aplikasi sejak kelahirannya pada tahun 2003. Apabila anda ingin menggunakan OWASP Top 10 sebagai standar dalam coding  atau pengujian, ketahuilah bahwa ini adalah batas minimal dan hanya sebuah tahap awal.</p> <p>Salah satu kesulitan dalam menggunakan OWASP Top 10 sebagai sebuah standar adalah kita mendokumentasikan resiko keamanan aplikasi, dan belum tentu sebuah masalah yang mudah diuji. Sebagai contohnya, A04:2021-Insecure Design yang mana berada di luar cakupan sebagian besar bentuk dari pengujian. Contoh lainnya adalah pengujian di tempat, digunakan, dan pencatatan dan pemantauan yang efektif hanya dapat dilakukan dengan wawancara dan meminta sebuah sampel dari respon tanggapan insiden yang efektif. Sebuah alat analisa kode statis dapat melihat mengenai ketidakhadiran pada pencatatan, namun hal ini mungkin mustahil untuk ditentukan apabila business logic atau kontrol akses mencatat penjebolan keamanan yang kritis. penguji penetrasi hanya dapat menentukan bahwa mereka telah memanggil respons insiden di lingkungan pengujian,  yang jarang dipantau dengan cara yang sama seperti pada produksi.</p> <p>Berikut adalah rekomendasi kami mengenai kapan waktu yang tepat untuk menggunakan OWASP Top 10:</p> Use Case OWASP Top 10 2021 OWASP Application Security Verification Standard Awareness Yes Training Entry level Comprehensive Design and architecture Occasionally Yes Coding standard Bare minimum Yes Secure Code review Bare minimum Yes Peer review checklist Bare minimum Yes Unit testing Occasionally Yes Integration testing Occasionally Yes Penetration testing Bare minimum Yes Tool support Bare minimum Yes Secure Supply Chain Occasionally Yes <p>Kami akan mendorong siapa pun yang ingin mengadopsi standar keamanan aplikasi untuk menggunakan OWASP Application Security Verification Standar (ASVS), yang mana ini dirancang agar dapat diverifikasi dan diuji, dan dapat digunakan di berbagai bagian dari siklus hidup pengembangan yang aman. </p> <p>ASVS hanyalah sebuah pilihan yang dapat diterima untuk vendor alat. Alat tidak bisa secara menyeluruh mendeteksi, menguji, ataupun melindungi dari OWASP Top 10 dikarenakan sifat dari beberapa resiko OWASP Top 10, dengan mengacu kepada A04:2021-Insecure Design. OWASP tidak menyarankan penangguhan penuh dari OWASP Top 10, dikarenakan hal itu tidak benar.</p>"},{"location":"id/A00_2021_Introduction/","title":"Pengenalan","text":""},{"location":"id/A00_2021_Introduction/#selamat-datang-di-owasp-top-10-2021","title":"Selamat datang di OWASP Top 10 - 2021","text":"<p>Selamat datang ke versi terakhir dari OWASP Top 10! OWASP Top 10 2021 semua baru, dengan desain grafis baru dan suatu infografis satu-halaman yang dapat Anda cetak atau dapatkan dari beranda kami.</p> <p>Terima kasih sebesar-besarnya ke semua orang yang menyumbangkan waktu dan data mereka ke iterasi ini. Tanpa Anda, versi ini tidak akan ada. TERIMA KASIH</p>"},{"location":"id/A00_2021_Introduction/#apa-yang-berubah-di-top-10-untuk-2021","title":"Apa yang berubah di Top 10 untuk 2021","text":"<p>Terdapat tiga kategori baru, empat kategori dengan penamaan dan perbuahan ruang lingkup, dan beberapa konsolidasi baru di Top 10 untuk 2021</p> <p></p> <ul> <li>A01:2021-Broken Access Control naik dari posisi kelima; 94% dari aplikasi yang telah diuji dengan broken access kontrol dalam beberapa bentuk. 34 CWE yang dipetakan ke Broken Access Control memiliki lebih banyak kemunculan dalam aplikasi daripada kategori lainnya.</li> <li>A02:2021-Cryptographic Failures menggeser satu posisi menjadi #2, sebelumnya dikenal sebagai Pengungkapan Data Sensitif, yang merupakan gejala luas dan bukan penyebab utama. Fokus baru di sini adalah pada kegagalan yang terkait dengan Kriptografi yang sering mengarah pada Pengungkapan Data Sensitif atau sistem yang telah terinfeksi oleh hacker.</li> <li>A03:2021-Injection turun ke posisi ketiga. 94% aplikasi diuji untuk beberapa bentuk injeksi, dan 33 CWE yang dipetakan ke dalam kategori ini memiliki kejadian terbanyak kedua dalam aplikasi. Skrip cross-site sekarang menjadi bagian dari kategori ini dalam edisi ini. </li> <li>A04:2021-Insecure Design adalah kategori baru untuk tahun 2021, dengan fokus pada resiko yang terkait dengan kekurangan desain. Jika kita ingin benar-benar bergerak sebagai industri, itu membutuhkan lebih banyak penggunaan pemodelan ancaman, pola dan desain yang aman, dan arsitektur referensi</li> <li>A05:2021-Security Misconfiguration naik dari #6 di edisi sebelumnya; 90% aplikasi diuji untuk beberapa bentuk kesalahan konfigurasi. Dengan lebih banyak perubahan ke software dengan konfigurasi yang banyak, tidak mengherankan melihat kategori ini naik. Kategori sebelumnya untuk XML External Entities (XXE) sekarang menjadi bagian dari kategori ini.</li> <li>A06:2021-Vulnerable and Outdated Components sebelumnya berjudul Using Components with Known Vulnerabilities dan #2 dalam survei industri, tapi juga memiliki cukup data untuk masuk TOP 10 melalui analisis data. Kategori ini naik dari #9 di tahun 2017 dan merupakan masalah umum yang kami perjuangkan untuk menguji dan menilai resiko. Ini adalah satu-satunya kategori yang tidak memiliki CVE yang dipetakan ke CWE yang disertakan, jadi eksploitasi default dan bobot dampak 5.0 diperhitungkan dalam skornya.</li> <li>A07:2021-Identification and Authentication Failures sebelumnya adalah Broken Authentication dan turun dari posisi kedua, dan sekarang termasuk CWE yang lebih terkait dengan kegagalan identifikasi. Kategori ini masih merupakan bagian integral dari Top 10, tetapi peningkatan ketersediaan framework yang telah distandarisasi tampaknya membantu.</li> <li>A08:2021-Software and Data Integrity Failures adalah kategori baru untuk tahun 2021, yang berfokus pada pembuatan asusmsi terkait pembaruan perangkat lunak, data penting, dan pipeline CI/CD tanpa memverifikasi integritas. Salah satu dampak tertinggi dari CVE/CVSS yang dipetakan ke 10 CWE dalam kategori ini. Insecure Deserialization dari tahun 2017 sekarang menjadi bagian dari kategori yang lebih besar ini.</li> <li>A09:2021-Security Logging and Monitoring Failures sebelumnya Logging dan Monitoring tidak memadai dan ditambahkan dari survei industri (#3), naik dari #10 sebelumnya. Kategori ini diperluas untuk mencakup lebih banyak jenis kegagalan, suatu tantangan untuk diiuji, dan tidak terwakili dengan baik dalam data CVE/CVSS. Namun, kegagalan dalam kategori ini dapat secara langsung mempengaruhi visibilitas, alert pada insiden, dan forensik</li> <li>A10:2021-Server-Side Request Forgery ditambahkan dari survei industri (#1). Data menunjukkan tingkat insiden yang relatif rendah dengan cakupan pengujian di atas rata-rata, bersama dengan peringkat di atas rata-rata untuk potensi eksploitasi dan dampak. Kategori ini mewakili skenario di mana para profesional industri memberi tahu kami bahwa ini penting, meskipun tidak diilustrasikan dalam data saat ini.</li> </ul>"},{"location":"id/A00_2021_Introduction/#metodologi","title":"Metodologi","text":"<p>Penyusunan dari Top 10 ini lebih didorong oleh data daripada sebelumnya tetapi tidak didorong oleh data yang tidak di verifikasi dahulu. Kami memilih delapan dari sepuluh kategori dari kontribusi data dan 2 kategori dari survei industri tingkat tinggi. Kami melakukan ini karena alasan mendasar, melihat data yang telah dikumpulkan sama dengan melihat ke masa lalu. Peneliti AppSec membutuhkan waktu untuk menemukan kerentanan baru dan cara baru untuk mengujinya. Dibutuhkan waktu untuk mengintegrasikan tes ini ke dalam alat dan proses. Pada saat kita dapat dengan andal menguji kelemahan dalam skala, tahun-tahun kemungkinan telah berlalu. Untuk menyeimbangkan pandangan itu, kami menggunakan survei industri untuk bertanya kepada orang-orang di garis depan apa yang mereka lihat sebagai kelemahan penting yang mungkin belum ditunjukkan oleh data.</p> <p>Ada beberapa perubahan penting yang kami adopsi untuk terus mematangkan Top 10.</p>"},{"location":"id/A00_2021_Introduction/#bagaimana-kategori-disusun","title":"Bagaimana kategori disusun","text":"<p>Beberapa kategori telah berubah dari pemasangan OWASP Top 10 sebelumnya. Berikut adalah ringkasan tingkat tinggi dari perubahan kategori</p> <p>Upaya pengumpulan data sebelumnya difokuskan pada subset yang ditentukan sekitar 30 CWE dengan bidang yang meminta temuan tambahan. Kami mengetahui bahwa organisasi akan fokus hanya pada 30 CWE tersebut dan jarang menambahkan CWE tambahan yang mereka lihat. Dalam iterasi ini, kami membukanya dan hanya meminta data, tanpa batasan pada CWE. Kami meminta jumlah aplikasi yang diuji untuk tahun tertentu (mulai 2017), dan jumlah aplikasi dengan setidaknya satu contoh CWE yang ditemukan dalam pengujian. Format ini memungkinkan kami untuk melacak seberapa lazim setiap CWE dalam populasi aplikasi. Kami mengabaikan frekuensi untuk tujuan kami; sementara mungkin diperlukan untuk situasi lain, itu hanya menyembunyikan prevalensi aktual dalam populasi aplikasi. Apakah sebuah aplikasi memiliki empat instans CWE atau 4.000 instans bukanlah bagian dari perhitungan untuk 10 Besar. Kami beralih dari sekitar 30 CWE menjadi hampir 400 CWE untuk dianalisis dalam kumpulan data. Kami berencana untuk melakukan analisis data tambahan sebagai suplemen di masa depan. Peningkatan jumlah CWE yang signifikan ini memerlukan perubahan pada struktur kategori.</p> <p>Kami menghabiskan beberapa bulan untuk mengelompokkan dan mengkategorikan CWE dan dapat melanjutkannya selama beberapa bulan lagi. Kami harus berhenti di beberapa titik. Ada akar penyebab dan jenis gejala CWE, di mana jenis akar penyebab seperti \"Kegagalan Kriptografis\" dan \"Kesalahan Konfigurasi\" kontras dengan jenis gejala seperti \"Pengungkapan Data Sensitif\" dan \"Penolakan Layanan.\" Kami memutuskan untuk fokus pada akar penyebab bila memungkinkan karena lebih logis untuk memberikan panduan identifikasi dan perbaikan. Berfokus pada akar penyebab di atas gejala bukanlah konsep baru; Sepuluh Besar telah menjadi campuran gejala dan akar penyebab. CWE juga merupakan campuran dari gejala dan akar penyebab; kami hanya menjadi lebih berhati-hati tentang hal itu dan menyebutnya. Ada rata-rata 19,6 CWE per kategori dalam pemasangan ini, dengan batas bawah pada 1 CWE untuk A10:2021-Server-Side Request Forgery (SSRF) hingga 40 CWE dalam A04:2021-Insecure Design. Struktur kategori yang diperbarui ini menawarkan manfaat pelatihan tambahan karena perusahaan dapat fokus pada CWE yang masuk akal untuk bahasa/kerangka kerja.    </p>"},{"location":"id/A00_2021_Introduction/#bagaimana-data-digunakan-untuk-memilih-kategori","title":"Bagaimana data digunakan untuk memilih kategori","text":"<p>Pada tahun 2017, kami memilih kategori berdasarkan tingkat insiden untuk menentukan kemungkinan, lalu memeringkatnya berdasarkan diskusi tim berdasarkan pengalaman puluhan tahun untuk Exploitability, Detectability (juga kemungkinan), dan Dampak Teknis. Untuk tahun 2021, kami ingin menggunakan data untuk Exploitability and Impact jika memungkinkan.</p> <p>Kami mengunduh Pemeriksaan Ketergantungan OWASP dan mengekstrak Eksploitasi CVSS, dan skor Dampak yang dikelompokkan berdasarkan CWE terkait. Butuh sedikit riset dan usaha karena semua CVE memiliki skor CVSSv2, tetapi ada kekurangan dalam CVSSv2 yang harus diatasi oleh CVSSv3. Setelah titik waktu tertentu, semua CVE juga diberi skor CVSSv3. Selain itu, rentang penilaian dan formula diperbarui antara CVSSv2 dan CVSSv3.</p> <p>Di CVSSv2, Eksploitasi dan Dampak bisa mencapai 10,0, tetapi rumusnya akan menjatuhkannya hingga 60% untuk Eksploitasi dan 40% untuk Dampak. Di CVSSv3, maks secara teori dibatasi hingga 6,0 untuk Eksploitasi dan 4,0 untuk Dampak. Dengan mempertimbangkan pembobotan, skor Dampak bergeser lebih tinggi, rata-rata hampir satu setengah poin di CVSSv3, dan kemampuan eksploitasi turun rata-rata hampir setengah poin.</p> <p>Ada 125 ribu catatan CVE yang dipetakan ke CWE dalam data NVD yang diekstraksi dari OWASP Dependency Check, dan ada 241 CWE unik yang dipetakan ke CVE. Peta CWE 62 ribu memiliki skor CVSSv3, yang kira-kira setengah dari populasi dalam kumpulan data.</p> <p>Untuk Top 10, kami menghitung rata-rata skor eksploitasi dan dampak dengan cara berikut. Kami mengelompokkan semua CVE dengan skor CVSS berdasarkan CWE dan memberi bobot pada skor eksploitasi dan dampak berdasarkan persentase populasi yang memiliki skor CVSSv3 + populasi yang tersisa dari skor CVSSv2 untuk mendapatkan rata-rata keseluruhan. Kami memetakan rata-rata ini ke CWE dalam kumpulan data untuk digunakan sebagai skor Eksploitasi dan Dampak untuk separuh persamaan risiko lainnya.</p>"},{"location":"id/A00_2021_Introduction/#kenapa-tidak-hanya-bersumber-dari-data-statistik-murni","title":"Kenapa tidak hanya bersumber dari data statistik murni?","text":"<p>Hasil dalam data utamanya terbatas pada apa yang dapat kami uji secara otomatis. Bicaralah dengan seorang Profesional AppSec, dan mereka akan memberi tahu Anda tentang hal-hal yang mereka temukan dan tren yang mereka lihat yang belum ada dalam data. Dibutuhkan waktu bagi orang untuk mengembangkan metodologi pengujian untuk jenis kerentanan tertentu dan kemudian lebih banyak waktu agar pengujian tersebut diotomatisasi dan dijalankan terhadap populasi aplikasi yang besar. Semua yang kami temukan adalah melihat kembali ke masa lalu dan mungkin kehilangan tren dari tahun lalu, yang tidak ada dalam data.</p> <p>Oleh karena itu, kami hanya memilih delapan dari sepuluh kategori dari data karena tidak lengkap. Dua kategori lainnya berasal dari survei industri. Hal ini memungkinkan para praktisi di garis depan untuk memilih apa yang mereka lihat sebagai risiko tertinggi yang mungkin tidak ada dalam data (dan mungkin tidak pernah diungkapkan dalam data).</p>"},{"location":"id/A00_2021_Introduction/#mengapa-tingkatan-insiden-bukan-bersumber-dari-frekuensi","title":"Mengapa tingkatan insiden bukan bersumber dari frekuensi?","text":"<p>Ada tiga sumber data utama. Kami mengidentifikasi mereka sebagai Human-assisted Tooling (HaT), Tool-assisted Human (TaH), dan raw Tooling.</p> <p>Tooling dan HaT adalah generator pencarian frekuensi tinggi. Alat akan mencari kerentanan tertentu dan tanpa lelah berusaha untuk menemukan setiap contoh kerentanan itu dan akan menghasilkan jumlah temuan yang tinggi untuk beberapa jenis kerentanan. Lihatlah Cross-Site Scripting, yang biasanya merupakan salah satu dari dua rasa: itu kesalahan kecil yang terisolasi atau masalah sistemik. Jika ini merupakan masalah sistemik, jumlah temuan bisa mencapai ribuan untuk sebuah aplikasi. Frekuensi tinggi ini menenggelamkan sebagian besar kerentanan lain yang ditemukan dalam laporan atau data. TaH, di sisi lain, akan menemukan jenis kerentanan yang lebih luas tetapi pada frekuensi yang jauh lebih rendah karena kendala waktu. Ketika manusia menguji aplikasi dan melihat sesuatu seperti Cross-Site Scripting, mereka biasanya akan menemukan tiga atau empat instance dan berhenti. Mereka dapat menentukan temuan sistemik dan menuliskannya dengan rekomendasi untuk diperbaiki pada skala aplikasi yang luas. Tidak perlu (atau waktu) untuk menemukan setiap contoh.</p> <p>Misalkan kita mengambil dua kumpulan data yang berbeda ini dan mencoba menggabungkannya pada frekuensi. Dalam hal ini, data Tooling dan HaT akan menenggelamkan data TaH yang lebih akurat (tetapi luas) dan merupakan bagian yang baik dari mengapa sesuatu seperti Cross-Site Scripting memiliki peringkat yang sangat tinggi di banyak daftar ketika dampaknya umumnya rendah hingga sedang. Itu karena banyaknya temuan. (Cross-Site Scripting juga cukup mudah untuk diuji, jadi ada lebih banyak tes untuk itu juga). Pada tahun 2017, kami memperkenalkan penggunaan tingkat insiden sebagai gantinya untuk melihat data baru dan menggabungkan data Tooling dan HaT dengan data TaH dengan rapi. Tingkat insiden menanyakan berapa persentase populasi aplikasi yang memiliki setidaknya satu contoh jenis kerentanan. Kami tidak peduli apakah itu satu kali atau sistemik. Itu tidak relevan untuk tujuan kita; kita hanya perlu mengetahui berapa banyak aplikasi yang memiliki setidaknya satu instance, yang membantu memberikan pandangan yang lebih jelas tentang pengujian temuan di beberapa jenis pengujian tanpa menenggelamkan data dalam hasil frekuensi tinggi.</p>"},{"location":"id/A00_2021_Introduction/#apa-proses-pengumpulan-dan-analisis-data-anda","title":"Apa proses pengumpulan dan analisis data Anda?","text":"<p>Kami meresmikan proses pengumpulan data OWASP Top 10 di Open Security Summit pada 2017. Para Leader OWASP Top 10 dan komunitas telah menghabiskan dua hari untuk memformalkan proses pengumpulan data yang transparan. Edisi 2021 adalah kedua kalinya kami menggunakan metodologi ini. Kami mempublikasikan panggilan untuk data melalui saluran media sosial yang tersedia untuk kami, baik projek maupun OWASP. Pada halaman Projek OWASP, kami mencantumkan elemen dan struktur data yang kami cari dan cara mengirimkannya. Dalam proyek GitHub, kami memiliki file contoh yang berfungsi sebagai template. Kami bekerja dengan organisasi yang diperlukan untuk membantu mengetahui struktur dan pemetaan ke CWE. Kami mendapatkan data dari organisasi yang menguji vendor berdasarkan perdagangan, vendor bug bounty, dan organisasi yang menyumbangkan data pengujian internal. Setelah kami memiliki data, kami memuatnya bersama dan menjalankan analisis fundamental tentang apa yang dipetakan CWE ke kategori risiko. Ada tumpang tindih antara beberapa CWE, dan yang lainnya sangat erat kaitannya (mis. Kerentanan kriptografis). Setiap keputusan yang terkait dengan data mentah yang dikirimkan didokumentasikan dan dipublikasikan agar terbuka dan transparan dengan cara kami menormalkan data.</p> <p>Kami melihat delapan kategori dengan tingkat insiden tertinggi untuk dimasukkan dalam Top 10. Kami juga melihat hasil survei industri untuk melihat mana yang mungkin sudah ada dalam data. Dua suara teratas yang belum ada dalam data akan dipilih untuk dua tempat lainnya di Top 10. Setelah kesepuluh dipilih, kami menerapkan faktor umum untuk eksploitabilitas dan dampak; untuk membantu menentukan peringkat 10 Besar secara berurutan.</p>"},{"location":"id/A00_2021_Introduction/#faktor-faktor-data","title":"Faktor-faktor Data","text":"<p>Ada data faktor yang dicantumkan untuk masing-masing dari 10 Kategori Teratas, berikut artinya:</p> <ul> <li>CWEs Mapped: Jumlah CWE yang dipetakan ke kategori oleh 10 tim teratas.</li> <li>Incidence Rate: Tingkat insiden adalah persentase aplikasi yang rentan terhadap CWE tersebut dari populasi yang diuji oleh organisasi tersebut untuk tahun tersebut.</li> <li>(Pengujian) Cakupan: Persentase aplikasi yang diuji oleh semua organisasi untuk CWE tertentu.</li> <li>Weighted Exploit: Sub-skor Eksploitasi dari skor CVSSv2 dan CVSSv3 yang ditetapkan ke CVE yang dipetakan ke CWE, dinormalisasi, dan ditempatkan pada skala 10pt.</li> <li>Weighted Impact: Sub-skor Dampak dari skor CVSSv2 dan CVSSv3 yang ditetapkan ke CVE dipetakan ke CWE, dinormalisasi, dan ditempatkan pada skala 10pt.</li> <li>Total Kejadian: Jumlah total aplikasi yang ditemukan memiliki CWE yang dipetakan ke suatu kategori.</li> <li>Total CVE: Jumlah total CVE dalam NVD DB yang dipetakan ke CWE yang dipetakan ke suatu kategori.</li> </ul>"},{"location":"id/A00_2021_Introduction/#hubungan-kategori-dari-2017","title":"Hubungan Kategori dari 2017","text":"<p>Ada banyak pembicaraan tentang tumpang tindih antara risiko Top 10. Menurut definisi masing-masing (daftar CWE yang termasuk), sebenarnya tidak ada tumpang tindih. Namun, secara konseptual, dapat terjadi tumpang tindih atau interaksi berdasarkan penamaan tingkat yang lebih tinggi. Diagram Venn berkali-kali digunakan untuk menunjukkan tumpang tindih seperti ini.</p> <p>Diagram Venn di atas merepresentasikan interaksi antara Sepuluh Kategori Risiko Teratas 2017. Saat melakukannya, beberapa poin penting menjadi jelas:</p> <ol> <li>Orang bisa berargumen bahwa Cross-Site Scripting pada akhirnya termasuk dalam Injeksi karena pada dasarnya adalah Injeksi Konten. Melihat data tahun 2021, semakin jelas bahwa XSS perlu pindah ke Injeksi.</li> <li>Tumpang tindih hanya satu arah. Kita akan sering mengklasifikasikan kerentanan berdasarkan manifestasi akhir atau \"gejala\", bukan akar penyebab (yang berpotensi dalam). Misalnya, \"Pengungkapan Data Sensitif\" mungkin merupakan hasil dari \"Kesalahan Konfigurasi Keamanan\"; namun, Anda tidak akan melihatnya ke arah lain. Akibatnya, panah digambar di zona interaksi untuk menunjukkan arah mana itu terjadi.</li> <li>Terkadang diagram ini digambar dengan semua yang ada di A06:2021 Menggunakan Komponen dengan Kerentanan yang Diketahui. Sementara beberapa kategori risiko ini mungkin menjadi akar penyebab kerentanan pihak ketiga, mereka umumnya dikelola secara berbeda dan dengan tanggung jawab yang berbeda. Jenis lainnya biasanya mewakili risiko pihak pertama.</li> </ol>"},{"location":"id/A00_2021_Introduction/#terima-kasih-kepada-kontributor-data-kami","title":"Terima kasih kepada kontributor data kami","text":"<p>Organisasi berikut (bersama dengan beberapa donor anonim) dengan baik hati menyumbangkan data untuk lebih dari 500.000 aplikasi untuk menjadikan ini kumpulan data keamanan aplikasi terbesar dan terlengkap. Tanpa Anda, ini tidak akan mungkin.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"id/A01_2021-Broken_Access_Control/","title":"A01:2021 \u2013 Kerusakan Akses Kontrol","text":""},{"location":"id/A01_2021-Broken_Access_Control/#faktor-faktor","title":"Faktor-Faktor","text":"Klasifikasi CWE Tingkat Kejadian Maksimum Rata - Rata Tingkat kejadian Cakupan Maksimum Rata - Rata Cakupan Rata-rata Bobot Eksploitasi Rata - Rata Bobot Dampak Total Kejadian Total CVEs 34 55.97% 3.81% 94.55% 47.72% 6.92 5.93 318,487 19,013"},{"location":"id/A01_2021-Broken_Access_Control/#gambaran","title":"Gambaran","text":"<p>Bergerak ke atas dari posisi ke 5, 94% aplikasi di tes untuk untuk berbagai jenis dari broken access control. CWE (Common Weakness Enumeration) atau kelemahan enumerasi umum yang perlu diperhatikan termasuk dari CWE-200: Exposure of Sensitive Information to an Unauthorized Actor, CWE-201: Exposure of Sensitive Information Through Sent Data, and CWE-352: Cross-Site Request Forgery.</p>"},{"location":"id/A01_2021-Broken_Access_Control/#deskripsi","title":"Deskripsi","text":"<p>Akses Kontrol menetapkan sebuah peraturan yang dimana user tidak dapat melakukan sebuah aksi diluar permission yang diberikan. Kegagalan atas hal ini dapat mengakibatkan pengeluaran informasi yang tidak diizinkan, modifikasi, atau penghancuran dari semua data atau pemberlakuan sebuah fungsi bisnis di luar limit sebuah user. Kelemahan Akses Kontrol termasuk dari :</p> <p>Melewati pengecekan akses kontrol dengan memodifikasi URL, internal application state, atau HTML page, atau menggunakan custom API attack tool.</p> <p>Membolehkan primary key untuk dapat diganti ke record user lain, membolehkan penglihatan atau perubahan akun orang lain.</p> <p>Penaikan sebuah privilege (Elevation Privilege). Yang dimana sebuah orang dapat dianggap sebagai user tanpa melakukan logged in dan yang dimana sebuah user dapat dianggap sebagai admin tanpa melakukan logged in.</p> <p>Manipulasi metadata, seperti memanipulasi dengan JSON Web Token (JWT) akses kontrol token, atau memanipulasi cookie atau hidden field untuk menaikan privilege (elevation privilege) atau menyalahgunakan penggunaan dari JWT invalidation.</p> <p>Konfigurasi yang salah pada CORS sehingga menyebabkan API akses yang tidak diizinkan.</p> <p>Force browsing untuk mengakses authenticated pages sebagai unauthenticated user atau mengakses privileged pages sebagai user standard. Mengakses API yang tidak memiliki akses kontrol untuk POST, PUT, dan DELETE.</p>"},{"location":"id/A01_2021-Broken_Access_Control/#cara-mencegah","title":"Cara Mencegah","text":"<p>Akses Kontrol hanya efektif pada kode server-side yang dapat dipercaya dan server-less API, yang dimana penyerang tidak dapat memodifikasi pengecek akses kontrol atau meta datanya.</p> <ul> <li> <p>Menolak semua akses kecuali ke public resource.</p> </li> <li> <p>Melakukan implementasi mekanisme akses kontrol sekali dan digunakan kembali pada seluruh aplikasi sehingga meminimalisir penggunaan CORS.</p> </li> <li> <p>Agar user tidak dapat melakukan create, read, update, atau mendelete record secara bebas, model akses kontrol seharusnya membatasi hal tersebut dengan menggunakan ownership untuk tiap record.</p> </li> <li> <p>Batas yang diperlukan oleh bisnis yang unik pada aplikasi seharusnya dilakukan oleh domain models.</p> </li> <li> <p>Nonaktifkan direktori listing web server dan pastikan file metadata (contohnya .git) dan file backup tidak ada di dalam web roots.</p> </li> <li> <p>Catat kegagalan akses kontrol dan alert admin jika diperlukan (seperti adanya kegagalan yang terjadi berulang - ulang).</p> </li> <li> <p>Ukur batasan dari API dan akses ke kontroler untuk meminimalisir kerusakan dari automated attack tooling.</p> </li> <li> <p>JWT tokens harus langsung di hilangkan validasinya pada server setelah logout.</p> </li> </ul> <p>Developers and QA staff should include functional access control unit and integration tests.</p>"},{"location":"id/A01_2021-Broken_Access_Control/#contoh-skenario-penyerangan","title":"Contoh Skenario Penyerangan","text":"<p>Skenario #1: Aplikasi menggunakan data yang belum diverifikasi pada sebuah pemanggilan SQL yang mengakses informasi akun</p> <p>pstmt.setString(1, request.getParameter(\"acct\"));</p> <p>ResultSet results = pstmt.executeQuery( );</p> <p>Penyerang hanya perlu untuk memodifikasi parameter \u2018acct\u2019 pada browser untuk mengirim nomer akun mana yang diinginkan. Jika parameter tersebut tidak diverifikasi secara benar, maka penyerang dapat mengakses akun user manapun.</p> <p>https://example.com/app/accountInfo?acct=notmyacct</p> <p>Skenario #2: Penyerang dapat memaksa untuk melakukan penjelajahan ke target URLs. Halaman Admin memerlukan hak admin untuk dapat diakses.</p> <p>https://example.com/app/getappInfo</p> <p>https://example.com/app/admin_getappInfo</p> <p>Jika sebuah user yang belum di autentikasi dapat mengakses kedua page tersebut maka itu merupakan suatu kelemahan. Jika user yang non-admin dapat mengakses halaman admin, maka merupakan suatu kelemahan.</p>"},{"location":"id/A01_2021-Broken_Access_Control/#referensi","title":"Referensi","text":"<ul> <li> <p>OWASP Proactive Controls: Enforce Access   Controls</p> </li> <li> <p>OWASP Application Security Verification Standard: V4 Access   Control</p> </li> <li> <p>OWASP Testing Guide: Authorization   Testing</p> </li> <li> <p>PortSwigger: Exploiting CORS   misconfiguration</p> </li> </ul>"},{"location":"id/A01_2021-Broken_Access_Control/#daftar-klasifikasi-cwe","title":"Daftar Klasifikasi CWE","text":"<p>CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</p> <p>CWE-23 Relative Path Traversal</p> <p>CWE-35 Path Traversal: '.../...//'</p> <p>CWE-59 Improper Link Resolution Before File Access ('Link Following')</p> <p>CWE-200 Exposure of Sensitive Information to an Unauthorized Actor</p> <p>CWE-201 Exposure of Sensitive Information Through Sent Data</p> <p>CWE-219 Storage of File with Sensitive Data Under Web Root</p> <p>CWE-264 Permissions, Privileges, and Access Controls (should no longer be used)</p> <p>CWE-275 Permission Issues</p> <p>CWE-276 Incorrect Default Permissions</p> <p>CWE-284 Improper Access Control</p> <p>CWE-285 Improper Authorization</p> <p>CWE-352 Cross-Site Request Forgery (CSRF)</p> <p>CWE-359 Exposure of Private Personal Information to an Unauthorized Actor</p> <p>CWE-377 Insecure Temporary File</p> <p>CWE-402 Transmission of Private Resources into a New Sphere ('Resource Leak')</p> <p>CWE-425 Direct Request ('Forced Browsing')</p> <p>CWE-441 Unintended Proxy or Intermediary ('Confused Deputy')</p> <p>CWE-497 Exposure of Sensitive System Information to an Unauthorized Control Sphere</p> <p>CWE-538 Insertion of Sensitive Information into Externally-Accessible File or Directory</p> <p>CWE-540 Inclusion of Sensitive Information in Source Code</p> <p>CWE-548 Exposure of Information Through Directory Listing</p> <p>CWE-552 Files or Directories Accessible to External Parties</p> <p>CWE-566 Authorization Bypass Through User-Controlled SQL Primary Key</p> <p>CWE-601 URL Redirection to Untrusted Site ('Open Redirect')</p> <p>CWE-639 Authorization Bypass Through User-Controlled Key</p> <p>CWE-651 Exposure of WSDL File Containing Sensitive Information</p> <p>CWE-668 Exposure of Resource to Wrong Sphere</p> <p>CWE-706 Use of Incorrectly-Resolved Name or Reference</p> <p>CWE-862 Missing Authorization</p> <p>CWE-863 Incorrect Authorization</p> <p>CWE-913 Improper Control of Dynamically-Managed Code Resources</p> <p>CWE-922 Insecure Storage of Sensitive Information</p> <p>CWE-1275 Sensitive Cookie with Improper SameSite Attribute</p>"},{"location":"id/A02_2021-Cryptographic_Failures/","title":"A02:2021 \u2013 Kegagalan Kriptografi","text":""},{"location":"id/A02_2021-Cryptographic_Failures/#faktor-faktor","title":"Faktor-Faktor","text":"Klasifikasi CWE Tingkat Kejadian Maksimum Rata-rata Tingkat kejadian Cakupan Maksimum Rata-rata Cakupan Rata-rata Bobot Eksploitasi Rata-rata Bobot Dampak Total Kejadian Total CVEs 29 46.44% 4.49% 79.33% 34.85% 7.29 6.81 233,788 3,075"},{"location":"id/A02_2021-Cryptographic_Failures/#ikhtisar","title":"Ikhtisar","text":"<p>Bergeser satu posisi ke #2, sebelumnya dikenal sebagai Sensitive Data Exposure, yang lebih merupakan gejala yang luas daripada akar penyebab, fokusnya adalah kegagalan yang terkait dengan kriptografi (atau ketiadaannya), yang sering menyebabkan paparan data sensitif. CWE terkenal yang disertakan adalah CWE-259: Use of Hard-coded Password, CWE-327: Broken or Risky Crypto Algorithm, dan CWE-331 Insufficient Entropy.</p>"},{"location":"id/A02_2021-Cryptographic_Failures/#deskripsi","title":"Deskripsi","text":"<p>Hal pertama adalah menentukan kebutuhan perlindungan data dalam perjalanan dan pada saat istirahat. Misalnya, kata sandi, nomor kartu kredit, catatan  kesehatan, informasi pribadi, dan rahasia bisnis yang memerlukan ekstra perlindungan, terutama jika data tersebut termasuk dalam undang-undang privasi,  misalnya, General Data Protection Regulation (GDPR) Uni Eropa, atau peraturan,  misalnya, perlindungan data keuangan seperti PCI Data Security Standard (PCI DSS). Untuk semua data tersebut:</p> <ul> <li> <p>Apakah ada data yang dikirimkan dalam bentuk teks yang jelas?      ini menyangkut protokol seperti  HTTP, SMTP, and FTP. Lalu lintas internet      luar yang berbahaya. Verifikasi semua lalu lintas yang ada di internal,     misalnya antara penyeimbang beban, server web, atau sistem back-end.</p> </li> <li> <p>Apakah ada algoritma kriptografi lama atau lemah yang digunakan baik secara     default atau dalam kode yang lebih lama?</p> </li> <li> <p>Apakah kunci kripto bawaan sedang digunakan,      kunci kripto yang lemah dihasilkan atau digunakan kembali,      atau apakah kurangnya manajemen atau rotasi kunci yang tepat?</p> </li> <li> <p>Apakah enkripsi tidak diterapkan, misalnya, apakah ada agen pengguna (browser)      yang arahan atau header keamanan hilang?</p> </li> <li> <p>Apakah agen pengguna (misalnya, aplikasi, klien email) tidak memverifikasi jika     sertifikat yang diterima server valid?</p> </li> </ul> <p>Lihat ASVS Crypto (V7), Data Protection (V9), dan SSL/TLS (V10)</p>"},{"location":"id/A02_2021-Cryptographic_Failures/#cara-mengatasi","title":"Cara Mengatasi","text":"<p>Lakukan minimal hal berikut, dan lihat referensi: </p> <ul> <li> <p>Mengklasifikasikan data yang diproses, disimpan, atau dikirim oleh aplikasi.     Identifikasi data mana yang sensitif menurut undang-undang privasi,     persyaratan peraturan, atau kebutuhan bisnis.</p> </li> <li> <p>Tetapkan kontrol sesuai klasifikasi.</p> </li> <li> <p>Jangan menyimpan data sensitif yang tidak perlu. Buang sesegera     mungkin atau gunakan tokenisasi yang sesuai dengan PCI DSS atau bahkan pemotongan.     Data yang tidak disimpan tidak dapat dicuri.</p> </li> <li> <p>Pastikan untuk mengenkripsi semua data sensitif saat istirahat.</p> </li> <li> <p>Pastikan gunakan standar algoritma, protokol yang mutakhir dan kuat, serta      kunci berada pada tempatnya; menggunakan manajemen kunci yang tepat.</p> </li> <li> <p>Enkripsi semua data dalam perjalanan dengan protokol aman seperti TLS dengan     cipher perfect forward secrecy (PFS), prioritas cipher oleh     server, dan parameter yang aman. Terapkan enkripsi menggunakan arahan     seperti HTTP Strict Transport Security (HSTS).</p> </li> <li> <p>Menonaktifkan caching untuk respons yang berisi data sensitif.</p> </li> <li> <p>Simpan kata sandi menggunakan fungsi hashing adaptif dan salted yang kuat     dengan faktor kerja (faktor penundaan), seperti Argon2, scrypt, bcrypt, atau     PBKDF2.</p> </li> <li> <p>Verifikasi secara independen efektivitas konfigurasi dan pengaturan.</p> </li> </ul>"},{"location":"id/A02_2021-Cryptographic_Failures/#contoh-skenario-serangan","title":"Contoh Skenario Serangan","text":"<p>Skenario #1: Aplikasi mengenkripsi nomor kartu kredit dalam database menggunakan enkripsi database otomatis. Namun, data ini secara otomatis didekripsi ketika diambil, memungkinkan cacat injeksi SQL untuk mengambil nomor kartu kredit dalam teks polos.</p> <p>Skenario #2: Situs tidak menggunakan atau menerapkan TLS untuk semua halaman atau mendukung enkripsi yang lemah. Penyerang memantau lalu lintas jaringan (misalnya, di jaringan nirkabel yang tidak aman), menurunkan versi koneksi dari HTTPS ke HTTP, memotong permintaan, dan mencuri cookie sesi pengguna. Penyerang kemudian replay cookie ini dan membajak pengguna sesi (dikonfirmasi), mengakses  atau memodifikasi data pribadi pengguna. Alih-alih di atas,  mereka dapat mengubah semua data yang diangkut, misalnya, penerima mentransfer uang.</p> <p>Skenario #3: Kata sandi pada database menggunakan hash tanpa salt atau sederhana untuk menyimpan kata sandi semua orang. Cacat unggah file memungkinkan penyerang untuk mengambil basis data kata sandi. Semua unsalted hashes dapat diekspos dengan tabel pelangi dari hash yang telah dihitung sebelumnya. Hash yang dihasilkan oleh fungsi hash sederhana atau cepat dapat dipecahkan oleh GPU, meskipun telah di-salt.</p>"},{"location":"id/A02_2021-Cryptographic_Failures/#referensi","title":"Referensi","text":"<ul> <li> <p>OWASP Proactive Controls: Protect Data     Everywhere</p> </li> <li> <p>OWASP Application Security Verification Standard (V7,     9, 10)</p> </li> <li> <p>OWASP Cheat Sheet: Transport Layer     Protection</p> </li> <li> <p>OWASP Cheat Sheet: User Privacy     Protection</p> </li> <li> <p>OWASP Cheat Sheet: Password and Cryptographic Storage</p> </li> <li> <p>OWASP Cheat Sheet:     HSTS</p> </li> <li> <p>OWASP Testing Guide: Testing for weak cryptography</p> </li> </ul>"},{"location":"id/A02_2021-Cryptographic_Failures/#daftar-klasifikasi-cwe","title":"Daftar Klasifikasi CWE","text":"<p>CWE-261 Weak Encoding for Password</p> <p>CWE-296 Improper Following of a Certificate's Chain of Trust</p> <p>CWE-310 Cryptographic Issues</p> <p>CWE-319 Cleartext Transmission of Sensitive Information</p> <p>CWE-321 Use of Hard-coded Cryptographic Key</p> <p>CWE-322 Key Exchange without Entity Authentication</p> <p>CWE-323 Reusing a Nonce, Key Pair in Encryption</p> <p>CWE-324 Use of a Key Past its Expiration Date</p> <p>CWE-325 Missing Required Cryptographic Step</p> <p>CWE-326 Inadequate Encryption Strength</p> <p>CWE-327 Use of a Broken or Risky Cryptographic Algorithm</p> <p>CWE-328 Reversible One-Way Hash</p> <p>CWE-329 Not Using a Random IV with CBC Mode</p> <p>CWE-330 Use of Insufficiently Random Values</p> <p>CWE-331 Insufficient Entropy</p> <p>CWE-335 Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-336 Same Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-337 Predictable Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-338 Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)</p> <p>CWE-340 Generation of Predictable Numbers or Identifiers</p> <p>CWE-347 Improper Verification of Cryptographic Signature</p> <p>CWE-523 Unprotected Transport of Credentials</p> <p>CWE-720 OWASP Top Ten 2007 Category A9 - Insecure Communications</p> <p>CWE-757 Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade')</p> <p>CWE-759 Use of a One-Way Hash without a Salt</p> <p>CWE-760 Use of a One-Way Hash with a Predictable Salt</p> <p>CWE-780 Use of RSA Algorithm without OAEP</p> <p>CWE-818 Insufficient Transport Layer Protection</p> <p>CWE-916 Use of Password Hash With Insufficient Computational Effort</p>"},{"location":"id/A03_2021-Injection/","title":"A03:2021 \u2013 Injeksi","text":""},{"location":"id/A03_2021-Injection/#faktor-faktor","title":"Faktor-Faktor","text":"CWE Dipetakan Tingkat Kejadian Maksimum Rata-rata Tingkat Kejadian Rata-rata Exploitasi Terbobot Rata-rata Dampak Terbobot Cakupan Maksimum Rata-rata Cakupan Total Kejadian Total CVE 33 19,09% 3,37% 7,25 7,15 94,04% 47,90% 274.228 32.078"},{"location":"id/A03_2021-Injection/#ringkasan","title":"Ringkasan","text":"<p>Injeksi meluncur turun ke posisi tiga. 94% dari aplikasi-aplikasi yang  dites oleh beberapa bentuk dari injeksi dengan tingkat kejadian maksimum 19%, rata-rata tingkat kejadian 3%, dan total kejadian 274 ribu. CWE yang menonjol meliputi: CWE-79: Cross-site Scripting, CWE-89: SQL Injection, dan CWE-73: External Control of File Name or Path.</p>"},{"location":"id/A03_2021-Injection/#deskripsi","title":"Deskripsi","text":"<p>Sebuah aplikasi rentan untuk diserang ketika:</p> <ul> <li> <p>Pengguna memasukkan data yang tidak divalidasi, disaring, atau disanitasi     oleh aplikasi.</p> </li> <li> <p>Kueri secara dinamis atau pemanggilan yang tidak diparameterkan tanpa      escape peka konteks dipakai secara langsung pada interpreter.</p> </li> <li> <p>Data jahat digunakan di dalam parameter pencarian object-relational mapping     (ORM) untuk mengekstraksi rekaman sensitif tambahan.</p> </li> <li> <p>Data jahat langsung digunakan atau digabungkan. SQL atau perintah      mengandung struktur dan data jahat dalam kueri dinamis, perintah, atau      stored procedure.</p> </li> </ul> <p>Beberapa injeksi yang biasa terjadi adalah SQL, NoSQL, perintah OS, pemetaan  relasi objek (ORM), LDAP, dan bahasa ekspresi (EL), atau injeksi Object Graph Navigation Library (OGNL). Konsepnya identik di antara semua interpreter.  Peninjauan kode sumber adalah metode terbaik dalam mendeteksi apakah aplikasi  tersebut rentan injeksi. Testing otomatis terhadap semua parameter, header,  URL, cookies, JSON, SOAP, and masukan data XML sangat disarankan.  Organisasi dapat menyertakan alat uji keamanan aplikasi statik (SAST), dinamis  (DAST), dan interaktif (IAST) ke dalam CI/CD pipeline untuk mengidentifikasi cacat injeksi yang ditambahkan sebelum penggelaran produksi.</p>"},{"location":"id/A03_2021-Injection/#bagaimana-cara-mencegah","title":"Bagaimana Cara Mencegah","text":"<p>Pencegahan injeksi membutuhkan pemisahan data dari perintah dan kueri:</p> <ul> <li> <p>Pilihan yang disukai adalah menggunakan API yang aman, yang mencegah      penggunaan interpreter secara keseluruhan, menyediakan sebuah antar muka      terparameterisasi, atau migrasi ke Object Relational Mapping Tools (ORMs). Catatan: Bahkan ketika diparameterkan, stored procedure masih dapat      memperkenalkan injeksi SQL jika PL/SQL atau T-SQL menggabungkan kueri dan      data atau mengeksekusi data jahat dengan EXECUTE IMMEDIATE atau exec().</p> </li> <li> <p>Menggunakan validasi masukan positif di sisi server. Ini bukan pertahanan      komplit karena banyak aplikasi membutuhkan karakter spesial, seperti area      teks atau API untuk aplikasi mobile.</p> </li> <li> <p>Untuk sisa apapun dari kueri dinamis, escape-kan karakter khusus     menggunakan sintaks escape spesifik untuk interpreter tersebut. Catatan: Struktur SQL seperti nama tabel, nama kolom, dan lain      sebagainya tidak bisa di-escape, sehingga nama struktur yang diberikan      pengguna itu berbahaya. Ini adalah masalah umum dalam perangkat lunak     penyusun laporan.</p> </li> <li> <p>Gunakan LIMIT dan kontrol SQL lainnya di dalam kueri untuk mencegah      penyingkapan rekaman data secara masal dalam kasus injeksi SQL.</p> </li> </ul>"},{"location":"id/A03_2021-Injection/#contoh-skenario-serangan","title":"Contoh Skenario Serangan","text":"<p>Skenario #1: Sebuah aplikasi menggunakan data yang tidak terpercaya dalam  konstruksi dari panggilan SQL yang rawan berikut ini:</p> <pre><code>String query = \"SELECT \\* FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\";\n</code></pre> <p>Skenario #2: Serupa itu, sebuah aplikasi dengan kepercayaan buta ke  framework akan menghasilkan kueri yang masih rawan, (contoh, Hibernate Query  Language (HQL)):</p> <pre><code> Query HQLQuery = session.createQuery(\"FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\");\n</code></pre> <p>Pada kedua kasus, penyerang akan memodifikasi nilai parameter \u2018id\u2019 pada  peramban web untuk mengirim: \u2018 or \u20181\u2019=\u20191. Sebagai contoh:</p> <pre><code>http://example.com/app/accountView?id=' or '1'='1\n</code></pre> <p>Ini akan mengubah arti dari kedua kueri untuk mengembalikan semua rekaman  data dari akun tabel. Serangan yang lebih berbahaya dapat mengubah atau  menghapus data atau bahkan memanggil stored procedure.</p>"},{"location":"id/A03_2021-Injection/#referensi","title":"Referensi","text":"<ul> <li> <p>OWASP Proactive Controls: Secure Database     Access</p> </li> <li> <p>OWASP ASVS: V5 Input Validation and     Encoding</p> </li> <li> <p>OWASP Testing Guide: SQL     Injection, Command     Injection,     and\u00a0ORM     Injection</p> </li> <li> <p>OWASP Cheat Sheet: Injection     Prevention</p> </li> <li> <p>OWASP Cheat Sheet: SQL Injection     Prevention</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention in     Java</p> </li> <li> <p>OWASP Cheat Sheet: Query     Parameterization</p> </li> <li> <p>OWASP Automated Threats to Web Applications \u2013     OAT-014</p> </li> <li> <p>PortSwigger: Server-side template     injection</p> </li> </ul>"},{"location":"id/A03_2021-Injection/#daftar-klasifikasi-cwe","title":"Daftar Klasifikasi CWE","text":"<p>CWE-20 Improper Input Validation</p> <p>CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')</p> <p>CWE-75 Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)</p> <p>CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection')</p> <p>CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</p> <p>CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</p> <p>CWE-80 Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</p> <p>CWE-83 Improper Neutralization of Script in Attributes in a Web Page</p> <p>CWE-87 Improper Neutralization of Alternate XSS Syntax</p> <p>CWE-88 Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')</p> <p>CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</p> <p>CWE-90 Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</p> <p>CWE-91 XML Injection (aka Blind XPath Injection)</p> <p>CWE-93 Improper Neutralization of CRLF Sequences ('CRLF Injection')</p> <p>CWE-94 Improper Control of Generation of Code ('Code Injection')</p> <p>CWE-95 Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</p> <p>CWE-96 Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')</p> <p>CWE-97 Improper Neutralization of Server-Side Includes (SSI) Within a Web Page</p> <p>CWE-98 Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')</p> <p>CWE-99 Improper Control of Resource Identifiers ('Resource Injection')</p> <p>CWE-100 Deprecated: Was catch-all for input validation issues</p> <p>CWE-113 Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')</p> <p>CWE-116 Improper Encoding or Escaping of Output</p> <p>CWE-138 Improper Neutralization of Special Elements</p> <p>CWE-184 Incomplete List of Disallowed Inputs</p> <p>CWE-470 Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')</p> <p>CWE-471 Modification of Assumed-Immutable Data (MAID)</p> <p>CWE-564 SQL Injection: Hibernate</p> <p>CWE-610 Externally Controlled Reference to a Resource in Another Sphere</p> <p>CWE-643 Improper Neutralization of Data within XPath Expressions ('XPath Injection')</p> <p>CWE-644 Improper Neutralization of HTTP Headers for Scripting Syntax</p> <p>CWE-652 Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')</p> <p>CWE-917 Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')</p>"},{"location":"id/A04_2021-Insecure_Design/","title":"A04:2021 \u2013 Rancangan Tak Aman","text":""},{"location":"id/A04_2021-Insecure_Design/#faktor-faktor","title":"Faktor-Faktor","text":"CWE Dipetakan Tingkat Kejadian Maksimum Rata - Rata Tingkat kejadian Rata-rata Eksploitasi Terbobot Rata-rata Dampak Terbobot Cakupan Maksimum Rata-rata Cakupan Total Kejadian Total CVE 40 24,19% 3,00% 6,46 6,78 77,25% 42,51% 262.407 2.691"},{"location":"id/A04_2021-Insecure_Design/#ringkasan","title":"Ringkasan","text":"<p>Kategori baru untuk 2021 ini berfokus pada resiko yang berhubungan ke desain dan kekurangan arsitektur, kategori ini mencakup penggunaan permodelan ancaman, design pattern yang jauh lebih aman dan referensi arsitektur. Sebagai sebuah komunitas kami perlu bergerak lebih dari \"shift-left\" dalam ruang pengodean untuk aktivitas-aktivtas pra-kode yang kritis bagi prinsip-prinsip Aman dari Disain. Contoh CWE termasuk CWE-209: Generation of Error Message Containing Sensitive Information, CWE-256: Unprotected Storage of Credentials, CWE-501: Trust Boundary Violation, dan CWE-522: Insufficiently Protected Credentials.</p>"},{"location":"id/A04_2021-Insecure_Design/#deskripsi","title":"Deskripsi","text":"<p>Desain yang tidak aman adalah sebuah representasi kategori yang luas dari banyak kelemahan yang berbeda, yang diekspresikan sebagai \"desain kontrol yang tidak ada atau kurang efisien.\" Desain tidak aman bukan sumber dari semua kategori risiko Top 10 yang lain. Ada perbedaan antara desain tidak aman dan implementasi tidak aman. Kami membedakan antara cacat desain dan kerusakan implementasi karena suatu alasan, mereka memiliki akar masalah dan remediasi yang berbeda. Sebuah desain aman masih bisa memiliki kerusakan implementasi yang mengarah ke kerentanan yang dapat dieksploitasi. Suatu desain tidak aman tidak dapat diperbaiki oleh sebuah implementasi yang sempurna karena menurut definisi, kendali keamanan yang diperlukan tidak pernah dibuat untuk bertahan terhadap serangan tertentu. Satu dari faktor yang berkontribusi terhadap desain tidak aman adalah ketiadaan pembuatan profil risiko bisnis yang inheren dalam perangkat lunak atau sistem yang sedang dikembangkan, maka menjadi kegagagalan untuk menentukan desain keamanan level apa yang diperlukan.</p>"},{"location":"id/A04_2021-Insecure_Design/#persyaratan-dan-manajemen-sumber-daya","title":"Persyaratan dan Manajemen Sumber Daya","text":"<p>Kumpulkan dan negosiasikan persyaratan bisnis bagi suatu aplikasi dengan pemilik bisnis, termasuk persyaratan perlindungan menyangkut kerahasiaan, integritas, ketersediaan, dan otentisitas dari semua aset data dan logika bisnis yang diharapkan. Perhitungkan akan seberapa terpapar aplikasi Anda dan bila Anda perlu segregasi tenant (sebagai tambahan ke kendali akses). Kumpulkan persyaratkan teknis, termasuk persyaratan keamanan fungsional dan non-fungsional. Rencanakan dan negosiasikan budget yang mencakup semua desain, build, uji coba, dan operasi, termasuk aktivitas-aktivitas keamanan.</p>"},{"location":"id/A04_2021-Insecure_Design/#desain-aman","title":"Desain Aman","text":"<p>Desain yang aman adalah sebuah budaya dan metodologi yang secara konstan mengevaluasi ancaman dan memastikan bahwa kode yang telah didesain dan dites sudah kuat (robust) untuk mencegah metode penyerangan yang telah diketahui. Pemodelan ancaman mesti diintegrasikan ke sesi-sesi 'refinement' (atau aktivitas-aktivitas serupa); cari perubahan dalam aliran data dan kendali akses atau kendali keamanan lain. Dalam pengembangan cerita pengguna tentukan aliran yang benar dan keadaan-keadaan gagal, memastikan bahwa mereka dipahami dengan baik dan disetujui oleh pihak-pihak yang bertanggung jawab dan terdampak. Analisis asumsi dan kondisi bagi aliran gagal dan yang diharapkan, pastikan bahwa mereka masih akurat dan dikehendaki. Tentukan bagaimana memvalidasi asumsi dan menegakkan kondisi yang diperlukan untuk perilaku yang layak. Pastikan hasil didokumentasikan dalam cerita pengguna. Belajar dari kesalahan dan tawarkan insentif positif untuk mempromosikan perbaikan. Desain aman bukanlah tambahan atau perkakas yang dapat Anda tambahkan ke perangkat lunak.</p>"},{"location":"id/A04_2021-Insecure_Design/#siklus-hidup-pengembangan-aman","title":"Siklus Hidup Pengembangan Aman","text":"<p>Perangkat lunak aman memerlukan sebuah siklus hidup pengembangan aman, beberapa bentuk pola desain aman, metodologi 'paved road', pustaka komponen yang diamankan, 'tooling', dan pemodelan ancaman. Hubungi spesialis keamanan Anda di awal proyek perangkat lunak untuk keseluruhan proyek dan pemeliharaan perangkat lunak Anda. Pertimbangkan untuk memanfaatkan OWASP Software Assurance Maturity Model (SAMM) untuk membantu menstrukturkan upaya pengembangan perangkat lunak aman Anda.</p>"},{"location":"id/A04_2021-Insecure_Design/#cara-mencegah","title":"Cara Mencegah","text":"<ul> <li> <p>Buat dan gunakan alur pengembangan aman dengan para profesional AppSec     untuk membantu dalam mengevaluasi dan mendesain keamanan serta kontrol      yang terkait privasi</p> </li> <li> <p>Buat dan gunakan sebuah pustaka dari design pattern yang aman atau gunakan      komponen jalan beraspal siap pakai</p> </li> <li> <p>Gunakan pemodelan ancaman untuk autentikasi kritis, kontrol akses, logika      bisnis, dan alur-alur kunci</p> </li> <li> <p>Integrasikan kendali dan bahasa keamanan ke dalam cerita pengguna</p> </li> <li> <p>Integrasikan uji plausabilitas pada setiap tier dari aplikasi Anda (dari      frontend ke backend)</p> </li> <li> <p>Tulis tes unit dan tes integrasi untuk memvalidasi bahwa semua aliran      kritis tahan ke pemodelan ancaman. Kompail use-case dan misuse-case bagi      setiap tier aplikasi Anda</p> </li> <li> <p>Segregasikan lapisan tier pada sistem dan lapisan jaringan bergantung pada      kebutuhan eksposur dan proteksi</p> </li> <li> <p>Segregasikan tenant secara robust dengan desain pada seluruh tier</p> </li> <li> <p>Batasi konsumsi sumber daya oleh pengguna atau layanan</p> </li> </ul>"},{"location":"id/A04_2021-Insecure_Design/#contoh-skenario-penyerang","title":"Contoh Skenario Penyerang","text":"<p>Skenario #1: Sebuah alur kerja untuk pemulihan kredensial mungkin termasuk \"pertanyaan dan jawaban\" yang telah dilarang oleh NIST 800-63b, OWASP ASVS, dan OWASP TOP 10. Pertanyaan dan jawaban tidak dapat dipercayai sebagai bukti dari identitas dimana bisa jadi jawaban diketahui lebih dari satu orang, dimana inilah mengapa mereka dilarang. Kode seperti itu harus dihilangkan dan diganti dengan desain yang lebih aman.</p> <p>Skenario #2: Sebuah bioskop memungkinkan agar mendapatkan diskon bila memesan secara grup dan memiliki maksimal 15 peserta sebelum memerlukan deposit. Penyerang dapat memodelkan sebuah ancaman untuk alur ini dan mereka melakukan pengujian apakah mereka dapat memesan enam ratus kursi dan semua bioskop dalam satu waktu dengan request yang sedikit, hal ini menyebabkan hilangnya pemasukan secara besar-besaran oleh bioskop tersebut.</p> <p>Skenario #3:  Sebuah situs web e-commerce rantai retail tidak memiliki  perlindungan dari bot yang dijalankan oleh \"scalper\" untuk membeli kartu grafis kelas tinggi untuk dijual kembali di website tersebut. Hal ini membuat image  jelek dari pembuat kartu grafis dan pemiliki rantai retail dan membuat  penggemar kecewa dikarenakan tidak bisa mendapat kartu ini pada harga apa pun.  Hati-hati juga desain anti-bot dan aturan logika domain, seperti pembelian yang dilakukan beberapa detik setelah ketersediaan mungkin mengidentifikasikan  pembelian tidak autentik dan menolak beberapa transaksi.</p>"},{"location":"id/A04_2021-Insecure_Design/#referensi","title":"Referensi","text":"<ul> <li> <p>OWASP Cheat Sheet: Secure Design Principles</p> </li> <li> <p>OWASP SAMM: Design:Security Architecture</p> </li> <li> <p>OWASP SAMM: Design:Threat Assessment </p> </li> <li> <p>NIST \u2013 Guidelines on Minimum Standards for Developer Verification of Software</p> </li> <li> <p>The Threat Modeling Manifesto</p> </li> <li> <p>Awesome Threat Modeling</p> </li> </ul>"},{"location":"id/A04_2021-Insecure_Design/#daftar-cwe-yang-dipetakan","title":"Daftar CWE yang Dipetakan","text":"<p>CWE-73 External Control of File Name or Path</p> <p>CWE-183 Permissive List of Allowed Inputs</p> <p>CWE-209 Generation of Error Message Containing Sensitive Information</p> <p>CWE-213 Exposure of Sensitive Information Due to Incompatible Policies</p> <p>CWE-235 Improper Handling of Extra Parameters</p> <p>CWE-256 Unprotected Storage of Credentials</p> <p>CWE-257 Storing Passwords in a Recoverable Format</p> <p>CWE-266 Incorrect Privilege Assignment</p> <p>CWE-269 Improper Privilege Management</p> <p>CWE-280 Improper Handling of Insufficient Permissions or Privileges</p> <p>CWE-311 Missing Encryption of Sensitive Data</p> <p>CWE-312 Cleartext Storage of Sensitive Information</p> <p>CWE-313 Cleartext Storage in a File or on Disk</p> <p>CWE-316 Cleartext Storage of Sensitive Information in Memory</p> <p>CWE-419 Unprotected Primary Channel</p> <p>CWE-430 Deployment of Wrong Handler</p> <p>CWE-434 Unrestricted Upload of File with Dangerous Type</p> <p>CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')</p> <p>CWE-451 User Interface (UI) Misrepresentation of Critical Information</p> <p>CWE-472 External Control of Assumed-Immutable Web Parameter</p> <p>CWE-501 Trust Boundary Violation</p> <p>CWE-522 Insufficiently Protected Credentials</p> <p>CWE-525 Use of Web Browser Cache Containing Sensitive Information</p> <p>CWE-539 Use of Persistent Cookies Containing Sensitive Information</p> <p>CWE-579 J2EE Bad Practices: Non-serializable Object Stored in Session</p> <p>CWE-598 Use of GET Request Method With Sensitive Query Strings</p> <p>CWE-602 Client-Side Enforcement of Server-Side Security</p> <p>CWE-642 External Control of Critical State Data</p> <p>CWE-646 Reliance on File Name or Extension of Externally-Supplied File</p> <p>CWE-650 Trusting HTTP Permission Methods on the Server Side</p> <p>CWE-653 Insufficient Compartmentalization</p> <p>CWE-656 Reliance on Security Through Obscurity</p> <p>CWE-657 Violation of Secure Design Principles</p> <p>CWE-799 Improper Control of Interaction Frequency</p> <p>CWE-807 Reliance on Untrusted Inputs in a Security Decision</p> <p>CWE-840 Business Logic Errors</p> <p>CWE-841 Improper Enforcement of Behavioral Workflow</p> <p>CWE-927 Use of Implicit Intent for Sensitive Communication</p> <p>CWE-1021 Improper Restriction of Rendered UI Layers or Frames</p> <p>CWE-1173 Improper Use of Validation Framework</p>"},{"location":"id/A05_2021-Security_Misconfiguration/","title":"A05:2021 \u2013 Kesalahan Konfigurasi Keamanan","text":""},{"location":"id/A05_2021-Security_Misconfiguration/#faktor-faktor","title":"Faktor - Faktor","text":"Klasifikasi CWE Tingkat Kejadian Maksimum Rata-rata Tingkat Kejadian Cakupan Maksimum Rata-rata Cakupan Rata-rata Bobot Exploitasi Rata-rata Bobot Dampak Total Kejadian Total CVEs 20 19.84% 4.51% 89.58% 44.84% 8.12 6.56 208,387 789"},{"location":"id/A05_2021-Security_Misconfiguration/#gambaran","title":"Gambaran","text":"<p>Bergerak dari posisi ke 6 pada edisi sebelumnya, 90% aplikasi dilakukan pengecekan untuk sebuah bentuk dari miskonfigurasi. Dengan bergeraknya kearah software yang memiliki konfigurasi yang tinggi, maka tidak mengejutkan melihat kategori ini naik untuk posisinya. CWE (Common Weakness Enumeration) atau kelemahan enumerasi umum yang perlu diperhatikan termasuk dari CWE-16 Configuration and CWE-611 Improper Restriction of XML External Entity Reference.</p>"},{"location":"id/A05_2021-Security_Misconfiguration/#deskripsi","title":"Deskripsi","text":"<p>Aplikasi dapat dikatakan rentan apabila aplikasi tersebut :</p> <ul> <li> <p>Tidak memiliki pertahanan yang sesuai atau security hardening yang diperlukan diseluruh bagian dari stack aplikasi atau tidak benar dalam melakukan konfigurasi untuk permission pada cloud services.</p> </li> <li> <p>Fitur - fitur yang tidak digunakan masih di enable atau diinstall (contoh seperti port, services, pages, accounts, atau privileges yang tidak dipakai)</p> </li> <li> <p>Akun default dan passwordnya masih di bolehkan dan tidak pernah diubah.</p> </li> <li> <p>Cara menghandle error memperlihatkan stack traces atau pesan lainnya yang terlalu informatif kepada user</p> </li> <li> <p>Untuk sistem yang telah diupdate, fitur security terbaru tidak digunakan atau belum dikonfigurasi.</p> </li> <li> <p>Pengaturan security pada server aplikasi, framework aplikasi (contoh Struts, Spring, ASP.NET), libraries, databases, dll, tidak diatur dengan secure values.</p> </li> <li> <p>Server tidak mengirim security header atau directives, atau tidak diatur dengan secure values.</p> </li> <li> <p>Software bersifat lama atau rentan (lihat A06:2021-Vulnerable and Outdated Components).</p> </li> </ul> <p>Tanpa proses konfigurasi keamanan aplikasi yang berulang dan terpadu, sistem berada dalam resiko yang tinggi.</p>"},{"location":"id/A05_2021-Security_Misconfiguration/#cara-untuk-mencegah","title":"Cara untuk mencegah","text":"<p>Proses instalasi yang aman harus diimplementasikan, termasuk :</p> <ul> <li> <p>Proses hardening yang dapat diulang akan mempercepat dan memudahkan untuk membuat untuk melakukan deploy ke environment lainnya yang dikunci dengan tepat. Development, QA, dan production environment harus dikonfigurasi secara identik, dengan credentials yang berbeda digunakan pada setiap environment. Proses ini harus di automasi untuk meminimalisir usaha yang diperlukan untuk mengatur environment baru yang aman.</p> </li> <li> <p>Platform minimal tanpa fitur, komponen, dokumentasi, dan sampel yang tidak diperlukan. Hapus atau jangan install fitur dan framework yang tidak digunakan.</p> </li> <li> <p>Sebuah tugas (task) untuk meninjau dan memperbarui konfigurasi yang sesuai untuk ke semua security notes, updates, dan patches sebagai bagian dari proses patch management (lihat A06:2021-Vulnerable and Outdated Components). Review cloud storage permissions (contoh, S3 bucket permissions).</p> </li> <li> <p>Sebuah arsitektur aplikasi yang tersegmentasi yang memberikan efektif dan pemisahan yang aman diantara komponen atau tenant, dengan segmentasi, containerization, atau cloud security groups (ACLs).</p> </li> <li> <p>Mengirim security directives ke clients, contoh Security Headers.</p> </li> <li> <p>Sebuah proses automasi untuk memverifikasi keefektifan dari konfigurasi dan setting di semua environments.</p> </li> </ul>"},{"location":"id/A05_2021-Security_Misconfiguration/#contoh-skenario-penyerangan","title":"Contoh Skenario Penyerangan","text":"<p>Skenario #1: Server Aplikasi datang dengan sampel aplikasi yang tidak dihapus dari server production. Sampel Aplikasi tersebut memiliki kelemahan keamanan yang dapat mengkompromi servernya. Misal salah satu aplikasi merupakan admin console dan default dari akun belum diganti. Maka penyerang dapat login dengan default password dan masuk.</p> <p>Skenario #2: Direktori listing tidak di nonaktifkan di server. Sebuah penyerang menemukan bahwa mereka dapat melihat list direktori. Penyerang menemukan dan mendownload compiled Java classes, yang dimana mereka akan lakukan decompile dan reverse engineer untuk melihat kodenya. Setelah itu penyerang menemukan kelemahan fatal untuk akses kontrol pada aplikasi.</p> <p>Skenario #3: Konfigurasi server aplikasi membolehkan error message yang detail, seperti stack traces, untuk ditampilkan kepada user. Hal tersebut dapat berpotensi untuk memberikan informasi yang bersifat sensitif atau kelemahan mendasar seperti versi komponen yang diketahui kelemahannya.</p> <p>Skenario #4: Sebuah cloud service provider memiliki permission default open untuk sharing ke internet pada pengguna CSP lainnya. Ini memungkinkan untuk data sensitif yang disimpan pada cloud storage untuk diakses</p>"},{"location":"id/A05_2021-Security_Misconfiguration/#referensi","title":"Referensi","text":"<ul> <li> <p>OWASP Testing Guide: Configuration   Management</p> </li> <li> <p>OWASP Testing Guide: Testing for Error Codes</p> </li> <li> <p>Application Security Verification Standard V19 Configuration</p> </li> <li> <p>NIST Guide to General Server   Hardening</p> </li> <li> <p>CIS Security Configuration   Guides/Benchmarks</p> </li> <li> <p>Amazon S3 Bucket Discovery and   Enumeration</p> </li> </ul>"},{"location":"id/A05_2021-Security_Misconfiguration/#daftar-klasifikasi-cwe","title":"Daftar Klasifikasi CWE","text":"<p>CWE-2 Configuration</p> <p>CWE-11 ASP.NET Misconfiguration: Creating Debug Binary</p> <p>CWE-13 ASP.NET Misconfiguration: Password in Configuration File</p> <p>CWE-15 External Control of System or Configuration Setting</p> <p>CWE-16 Configuration</p> <p>CWE-260 Password in Configuration File</p> <p>CWE-315 Cleartext Storage of Sensitive Information in a Cookie</p> <p>CWE-520 .NET Misconfiguration: Use of Impersonation</p> <p>CWE-526 Exposure of Sensitive Information Through Environmental Variables</p> <p>CWE-537 Java Runtime Error Message Containing Sensitive Information</p> <p>CWE-541 Inclusion of Sensitive Information in an Include File</p> <p>CWE-547 Use of Hard-coded, Security-relevant Constants</p> <p>CWE-611 Improper Restriction of XML External Entity Reference</p> <p>CWE-614 Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</p> <p>CWE-756 Missing Custom Error Page</p> <p>CWE-776 Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')</p> <p>CWE-942 Overly Permissive Cross-domain Whitelist</p> <p>CWE-1004 Sensitive Cookie Without 'HttpOnly' Flag</p> <p>CWE-1032 OWASP Top Ten 2017 Category A6 - Security Misconfiguration</p> <p>CWE-1174 ASP.NET Misconfiguration: Improper Model Validation</p>"},{"location":"id/A06_2021-Vulnerable_and_Outdated_Components/","title":"A06:2021 \u2013 Komponen yang Rentan dan Kedaluwarsa","text":""},{"location":"id/A06_2021-Vulnerable_and_Outdated_Components/#faktor-faktor","title":"Faktor-Faktor","text":"Klasifikasi CWE Tingkat Kejadian Maksimum Rata-rata Tingkat kejadian Cakupan Maksimum Rata-rata Cakupan Rata-rata Bobot Eksploitasi Rata-rata Bobot Dampak Total Kejadian Total CVEs 3 27.96% 8.77% 51.78% 22.47% 5.00 5.00 30,457 0"},{"location":"id/A06_2021-Vulnerable_and_Outdated_Components/#ikhtisar","title":"Ikhtisar","text":"<p>Sebelumnya #2 dari survei komunitas Top 10 tetapi juga memiliki data yang cukup untuk membuat Top 10 melalui data. Komponen yang rentan adalah masalah umum yang kami 'struggle' untuk menguji dan menilai risiko dan merupakan satu-satunya kategori yang tidak memiliki CWE yang dipetakan ke CWE yang disertakan, jadi bobot baku eksploitasi/dampak 5.0 digunakan. CWE terkenal yang disertakan adalah CWE-1104: Penggunaan Komponen Pihak Ketiga yang Tidak Dikelola dan dua CWE dari Top 10 2013 dan 2017.</p>"},{"location":"id/A06_2021-Vulnerable_and_Outdated_Components/#deskripsi","title":"Deskripsi","text":"<p>Anda kemungkinan besar rentan:</p> <ul> <li>Jika Anda tidak mengetahui versi semua komponen yang Anda gunakan (sisi klien dan sisi server). Ini termasuk komponen yang secara langsung Anda gunakan serta dependensi bersarang.</li> <li>Jika perangkat lunak rentan, tidak didukung, atau ketinggalan zaman. Ini termasuk OS, server web/aplikasi, sistem manajemen basis data (DBMS), aplikasi, API dan semua komponen, lingkungan runtime, dan pustaka.</li> <li>Jika Anda tidak memindai kerentanan secara teratur dan berlangganan buletin keamanan yang terkait dengan komponen yang Anda gunakan.</li> <li>Jika Anda tidak memperbaiki atau meningkatkan platform, kerangka kerja, dan dependensi yang mendasarinya secara tepat waktu dan berbasis risiko. Ini biasanya terjadi di lingkungan ketika patch adalah tugas bulanan atau triwulanan dibawah kendali perubahan, membiarkan organisasi terbuka selama berhari-hari atau berbulan-bulan terpapar secara tidak perlu atas kerentanan-kerentangan yang telah diperbaiki.</li> <li>Jika pengembang perangkat lunak tidak menguji kompatibilitas pustaka-pustaka yang diperbarui, ditingkatkan, atau di-patch.</li> <li>Jika Anda tidak mengamankan konfigurasi komponen (lihat A05:2021-Security Misconfiguration).</li> </ul>"},{"location":"id/A06_2021-Vulnerable_and_Outdated_Components/#cara-mencegah","title":"Cara Mencegah","text":"<p>Harus ada proses manajemen patch untuk: </p> <ul> <li>Menghapus dependensi, fitur, komponen, file, dan dokumentasi yang tidak digunakan.</li> <li>Inventarisasi versi komponen sisi klien dan sisi server secara terus menerus (mis., kerangka kerja, pustaka) dan dependensinya menggunakan alat seperti versi, OWASP Dependency Check, retire.js, dll. Memantau secara terus menerus sumber-sumber seperti Common Vulnerability and Exposures (CVE) dan National Vulnerability Database (NVD) untuk  kerentanan dalam komponen. Gunakan alat analisis komposisi perangkat lunak untuk mengotomatisasi proses. Berlangganan email peringatan untuk kerentanan keamanan yang terkait dengan komponen yang Anda gunakan.</li> <li>Hanya dapatkan komponen dari sumber resmi melalui tautan yang aman. Pilih paket yang ditandatangani untuk mengurangi kemungkinan menyertakan komponen berbahaya yang dimodifikasi (Lihat A08:2021-Software and Data Integrity Failures).</li> <li>Memantau pustaka dan komponen yang tidak dirawat atau tidak membuat patch keamanan untuk versi yang lebih lama. Jika tambalan tidak memungkinkan, pertimbangkan untuk menggunakan tambalan virtual untuk memantau, mendeteksi, atau melindungi dari masalah yang ditemukan.</li> </ul> <p>Setiap organisasi harus memastikan rencana berkelanjutan untuk memantau, melakukan triase, dan menerapkan pembaruan atau perubahan konfigurasi selama masa pakai aplikasi atau portofolio.</p>"},{"location":"id/A06_2021-Vulnerable_and_Outdated_Components/#contoh-skenario-serangan","title":"Contoh Skenario Serangan","text":"<p>Skenario #1: Komponen biasanya berjalan dengan hak istimewa yang sama seperti aplikasi itu sendiri, sehingga cacat pada komponen apa pun dapat mengakibatkan dampak yang serius. Jadi cacat tersebut dapat terjadi secara tidak sengaja (mis., kesalahan pengkodean) atau disengaja (mis., pintu belakang dalam suatu komponen). Beberapa contoh kerentanan komponen yang dapat dieksploitasi yang ditemukan adalah:</p> <ul> <li>CVE-2017-5638, kerentanan eksekusi kode jarak jauh Struts 2 yang memungkinkan eksekusi kode sembarang di server, telah disalahkan atas pembobolan-pembobolan yang signifikan.</li> <li>Sementara internet of things (IoT) seringkali sangat sulit untuk ditambal, pentingnya menambal bisa sangat besar (mis., perangkat biomedis).</li> </ul> <p>Ada alat otomatis untuk membantu penyerang menemukan sesuatu yang belum ditambal atau sistem yang salah konfigurasi. Misalnya, mesin pencari Shodan IoT dapat membantu Anda menemukan perangkat yang masih mengalami kerentanan Heartbleed yang ditambal pada April 2014.</p>"},{"location":"id/A06_2021-Vulnerable_and_Outdated_Components/#referensi","title":"Referensi","text":"<ul> <li>OWASP Application Security Verification Standard: V1 Architecture, design and threat modelling</li> <li>OWASP Dependency Check (for Java and .NET libraries)</li> <li>OWASP Testing Guide - Map Application Architecture (OTG-INFO-010)</li> <li>OWASP Virtual Patching Best Practices</li> <li>The Unfortunate Reality of Insecure Libraries</li> <li>MITRE Common Vulnerabilities and Exposures (CVE) search</li> <li>National Vulnerability Database (NVD)</li> <li>Retire.js for detecting known vulnerable JavaScript libraries</li> <li>Node Libraries Security Advisories</li> <li>[Ruby Libraries Security Advisory Database and Tools]</li> <li>https://safecode.org/publication/SAFECode_Software_Integrity_Controls0610.pdf</li> </ul>"},{"location":"id/A06_2021-Vulnerable_and_Outdated_Components/#daftar-klasifikasi-cwe","title":"Daftar Klasifikasi CWE","text":"<p>CWE-937 OWASP Top 10 2013: Using Components with Known Vulnerabilities</p> <p>CWE-1035 2017 Top 10 A9: Using Components with Known Vulnerabilities</p> <p>CWE-1104 Use of Unmaintained Third Party Components</p>"},{"location":"id/A07_2021-Identification_and_Authentication_Failures/","title":"A07:2021 \u2013 Kegagalan Identifikasi dan Otentikasi","text":""},{"location":"id/A07_2021-Identification_and_Authentication_Failures/#faktor","title":"Faktor","text":"Klasifikasi CWE Tingkat Kejadian Maksimum Rata - Rata Tingkat kejadian Cakupan Maksimum Rata - Rata Cakupan Rata-rata Bobot Eksploitasi Rata - Rata Bobot Dampak Total Kejadian Total CVEs 22 14.84% 2.55% 79.51% 45.72% 7.40 6.50 132,195 3,897"},{"location":"id/A07_2021-Identification_and_Authentication_Failures/#ikhtisar","title":"Ikhtisar","text":"<p>Sebelumnya dikenal sebagai Broken Authentication, kategori ini turun dari posisi kedua dan sekarang mencakup CWE yang terkait dengan kegagalan identifikasi. CWE terkenal yang disertakan adalah CWE-297: Improper Validation of Certificate with Host Mismatch, CWE-287: Improper Authentication, dan CWE-384: Session Fixation.</p>"},{"location":"id/A07_2021-Identification_and_Authentication_Failures/#deskripsi","title":"Deskripsi","text":"<p>Konfirmasi identitas pengguna, otentikasi, dan sesi manajemen sangat penting untuk melindungi dari serangan terkait otentikasi.  Mungkin ada kelemahan otentikasi jika aplikasi:</p> <ul> <li> <p>Mengizinkan serangan otomatis seperti isian kredensial, di mana     penyerang memiliki daftar nama pengguna dan kata sandi yang valid.</p> </li> <li> <p>Mengizinkan brute force atau serangan otomatis lainnya.</p> </li> <li> <p>Mengizinkan kata sandi bawaan, lemah, atau kata sandi yang terkenal, seperti \"Password1\" atau \"admin/admin.\"</p> </li> <li> <p>Menggunakan pemulihan kredensial yang lemah atau tidak efektif dan proses lupa kata sandi, seperti \"jawaban berbasis pengetahuan\", yang tidak dapat dibuat     aman.</p> </li> <li> <p>Menggunakan kata sandi teks biasa, terenkripsi, atau dengan hash yang lemah (lihat     A3:2017-Sensitive Data Exposure).</p> </li> <li> <p>Memiliki otentikasi multi-faktor yang hilang atau tidak efektif.</p> </li> <li> <p>Mengekspos ID Sesi di URL (misalnya, penulisan ulang URL).</p> </li> <li> <p>Jangan memutar ID Sesi setelah login berhasil.</p> </li> <li> <p>Tidak membatalkan ID Sesi dengan benar. Sesi pengguna atau     token autentikasi (terutama token single sign-on (SSO)) tidak     divalidasi dengan benar selama logout atau periode tidak aktif.</p> </li> </ul>"},{"location":"id/A07_2021-Identification_and_Authentication_Failures/#cara-mencegah","title":"Cara Mencegah","text":"<ul> <li> <p>Jika memungkinkan, terapkan otentikasi multi-faktor untuk mencegah     pengisian kredensial otomatis, brute force, dan dan serangan penggunaan kembali kredensial yang dicuri.</p> </li> <li> <p>Jangan mengirim atau menyebarkan dengan kredensial bawaan apa pun, terutama untuk     pengguna admin.</p> </li> <li> <p>Menerapkan pemeriksaan kata sandi yang lemah, seperti menguji kata sandi baru atau yang diubah terhadap 10.000 daftar kata sandi terburuk</p> </li> <li> <p>Sejajarkan panjang sandi, kompleksitas, dan kebijakan rotasi dengan pedoman NIST     800-63b di bagian 5.1.1 untuk Rahasia yang Dihafal atau kebijakan kata sandi modern berbasis bukti lainnya.</p> </li> <li> <p>Pastikan pendaftaran, pemulihan kredensial, dan jalur API     diperkuat terhadap serangan enumerasi akun dengan menggunakan pesan yang sama     untuk semua hasil.</p> </li> <li> <p>Batasi atau semakin tunda upaya login yang gagal. Catat semua kegagalan     dan peringatkan administrator ketika pengisian kredensial, brute force, atau     serangan lainnya terdeteksi.</p> </li> <li> <p>Gunakan pengelola sesi built-in sisi server, aman, yang menghasilkan     ID sesi acak baru dengan entropi tinggi setelah login. ID sesi     tidak boleh ada di URL, disimpan dengan aman, dan tidak valid setelah     keluar, idle, dan waktu tunggu absolut.</p> </li> </ul>"},{"location":"id/A07_2021-Identification_and_Authentication_Failures/#contoh-skenario-serangan","title":"Contoh Skenario Serangan","text":"<p>Skenario #1: Pengisian Kredensial, penggunaan daftar kata sandi yang diketahui adalah serangan yang umum. Misalkan aplikasi tidak menerapkan perlindungan terhadap ancaman atau pengisian kredensial otomatis. Dalam hal ini, aplikasi dapat digunakan sebagai kata sandi oracle untuk menentukan apakah kredensial itu valid.</p> <p>Skenario #2: Sebagian besar serangan autentikasi terjadi karena terus menggunakan sandi sebagai satu-satunya faktor. Setelah dipertimbangkan, praktik terbaik, rotasi kata sandi, dan persyaratan kompleksitas mendorong pengguna untuk menggunakan kembali kata sandi yang lemah. Organisasi disarankan untuk menghentikan praktik ini per NIST 800-63 dan menggunakan otentikasi multi-faktor.</p> <p>Skenario #3: Waktu tunggu sesi aplikasi tidak disetel dengan benar. Seorang pengguna menggunakan komputer publik untuk mengakses aplikasi. Alih-alih memilih \"logout\", pengguna cukup menutup tab browser dan pergi. Penyerang menggunakan browser yang sama satu jam kemudian, dan pengguna masih diautentikasi.</p>"},{"location":"id/A07_2021-Identification_and_Authentication_Failures/#referensi","title":"Referensi","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Digital     Identity</p> </li> <li> <p>OWASP Application Security Verification Standard: V2     authentication</p> </li> <li> <p>OWASP Application Security Verification Standard: V3 Session     Management</p> </li> <li> <p>OWASP Testing Guide: Identity,\u00a0Authentication</p> </li> <li> <p>OWASP Cheat Sheet:     Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Credential Stuffing</p> </li> <li> <p>OWASP Cheat Sheet: Forgot     Password</p> </li> <li> <p>OWASP Cheat Sheet: Session Management</p> </li> <li> <p>OWASP Automated Threats     Handbook</p> </li> <li> <p>NIST 800-63b: 5.1.1 Memorized Secrets</p> </li> </ul>"},{"location":"id/A07_2021-Identification_and_Authentication_Failures/#daftar-klasifikasi-cwe","title":"Daftar Klasifikasi CWE","text":"<p>CWE-255 Credentials Management Errors</p> <p>CWE-259 Use of Hard-coded Password</p> <p>CWE-287 Improper Authentication</p> <p>CWE-288 Authentication Bypass Using an Alternate Path or Channel</p> <p>CWE-290 Authentication Bypass by Spoofing</p> <p>CWE-294 Authentication Bypass by Capture-replay</p> <p>CWE-295 Improper Certificate Validation</p> <p>CWE-297 Improper Validation of Certificate with Host Mismatch</p> <p>CWE-300 Channel Accessible by Non-Endpoint</p> <p>CWE-302 Authentication Bypass by Assumed-Immutable Data</p> <p>CWE-304 Missing Critical Step in Authentication</p> <p>CWE-306 Missing Authentication for Critical Function</p> <p>CWE-307 Improper Restriction of Excessive Authentication Attempts</p> <p>CWE-346 Origin Validation Error</p> <p>CWE-384 Session Fixation</p> <p>CWE-521 Weak Password Requirements</p> <p>CWE-613 Insufficient Session Expiration</p> <p>CWE-620 Unverified Password Change</p> <p>CWE-640 Weak Password Recovery Mechanism for Forgotten Password</p> <p>CWE-798 Use of Hard-coded Credentials</p> <p>CWE-940 Improper Verification of Source of a Communication Channel</p> <p>CWE-1216 Lockout Mechanism Errors</p>"},{"location":"id/A08_2021-Software_and_Data_Integrity_Failures/","title":"A08:2021 - Kegagalan Integritas Data dan Perangkat Lunak","text":""},{"location":"id/A08_2021-Software_and_Data_Integrity_Failures/#faktor","title":"Faktor","text":"Klasifikasi CWE Tingkat Kejadian Maksimum Rata-rata Tingkat Kejadian Cakupan Maksimum Rata-rata Cakupan Rata-rata Bobot Exploitasi Rata-rata Bobot Dampak Total Kejadian Total CVEs 10 16.67% 2.05% 75.04% 45.35% 6.94 7.94 47,972 1,152"},{"location":"id/A08_2021-Software_and_Data_Integrity_Failures/#penjelasan-singkat","title":"Penjelasan Singkat","text":"<p>Kategori baru pada tahun 2021 yang berfokus pada membuat asumsi terkait pembaruan perangkat lunak, data kritis, dan pipeline CI/CD tanpa memverifikasi integritas. Satu dari dampak dibobot tertinggi dari data Common Vulnerability and Exposures/Common Vulnerability Scoring System (CVE/CVSS). CWE yang patut diperhatikan CWE-829: Inclusion of Functionality from Untrusted Control Sphere, CWE-494: Download of Code Without Integrity Check, dan CWE-502: Deserialization of Untrusted Data.</p>"},{"location":"id/A08_2021-Software_and_Data_Integrity_Failures/#deskripsi","title":"Deskripsi","text":"<p>Software and data integrity failures relate to code and infrastructure that does not protect against integrity violations. An example of this is where an application relies upon plugins, libraries, or modules from untrusted sources, repositories, and content delivery networks (CDNs). An insecure CI/CD pipeline can introduce the potential for unauthorized access, malicious code, or system compromise. Lastly, many applications now include auto-update functionality, where updates are downloaded without sufficient integrity verification and applied to the previously trusted application. Attackers could potentially upload their own updates to be distributed and run on all installations. Another example is where objects or data are encoded or serialized into a structure that an attacker can see and modify is vulnerable to insecure deserialization.</p> <p>Gagalnya Menjaga Integritas Data dan Perangkat Lunak disebabkan oleh kode dan infrastruktur yang tidak mencegah terjadinya pelanggaran integritas. Contohnya sebuah objek/data yang telah di enkoding/diserialisasi di dalam struktur yang dapat dilihat dan dimodifikasi oleh penyerang rentan terhadap deserialisasi yang tidak aman.</p> <p>Contoh lainnya adalah aplikasi yang bergantung pada plugins, libraries, atau modules yang asalnya dari sumber yang tidak dipercaya, repositori - repositori, Content Delivery Network (CDNs). CI/CD Pipeline yang tidak aman dapat menyebabkan munculnya akses illegal/tidak sah, kode yang berbahaya, atau kerusakan sistem.</p> <p>Terakhir, aplikasi sekarang banyak yang memiliki fitur pembaharuan otomatis, yang dimana pembaharuan - pembaharuan yang ada diunduh tanpa adanya verifikasi integritas dan diterapkan/digunakan terhadap aplikasi yang sebelumnya terpercaya. Penyerang memiliki kemungkinan besar untuk mengunggah pembaharuan milik mereka sendiri untuk di distribusikan dan dijalankan/diterapkan pada semua instalasi/pembaharuan.</p>"},{"location":"id/A08_2021-Software_and_Data_Integrity_Failures/#bagaimana-cara-mencegahnya","title":"Bagaimana Cara Mencegahnya","text":"<ul> <li> <p>Gunakan tanda tangan digital atau mekanisme yang sama untuk memverifikasi bahwa perangkat lunak atau data berasal dari sumber yang diharapkan dan tidak di manipulasi.</p> </li> <li> <p>Pastikan libaries dan dependensi seperti npm atau Maven menggunakan repositori yang terpercaya. Apabila anda merupakan target berisiko tinggi, pertimbangkan untuk hos repositori yang dikenal baik dan sudah di periksa kepercayaannya.</p> </li> <li> <p>Pastikan alat keamanan rantai pasokan perangkat lunak, seperti OWASP Dependency Check atau OWASP CycloneDX digunakan untuk memverifikasi bahwa komponen komponen tersebut tidak memiliki kerentanan yang sudah diketahui.</p> </li> <li> <p>Pastikan adanya proses review ketika mengubah kode dan konfigurasi untuk meminimalisir kemungkinan kode atau konfigurasi berbahaya masuk ke dalam pipeline perangkat lunak anda.</p> </li> <li> <p>Pastikan CI/CD pipeline anda memiliki metode pemisahan, konfigurasi dan akses kontrol yang tepat untuk memastikan integritas kode yang masuk mulai dari proses build / pembangunan hinga proses deployment / penyebaran perangkat lunak.</p> </li> <li> <p>Pastikan data yang belum di tanda tangani atau tidak terenkripsi ini tidak terkirim ke klien yang tidak dipercaya tanpa adanya pengecekan integritas atau tanda tangan digital untuk mendeteksi apakah data telah di manipulasi atau pemutaran ulang data yang telah di serialisasi.</p> </li> </ul>"},{"location":"id/A08_2021-Software_and_Data_Integrity_Failures/#contoh-skenario-penyerangan","title":"Contoh Skenario Penyerangan","text":"<p>Skenario #1 Pembaharuan tanpa tanda tangan: Mayoritas dari router rumahan, decoder, firmware perangkat, dan perangkat lainnya tidak memverifikasi pembaharuan lewat firmware yang telah di tandatangani/sudah valid. Firmware yang tidak ditandatangani / tidak valid merupakan target yang menarik bagi penyerang dan diperkirakan daya tariknya semakin lama akan semakin tinggi Hal ini merupakan persoalan/ancaman yang cukup besar karena seringkali tidak ada mekanisme untuk memulihkan/memperbaiki selain memperbaikinya menggunakan versi firmware yang baru dan menunggu versi firmware sebelumnya kadaluarsa.</p> <p>Skenario #2 Pembaharuan berbahaya SolarWinds: Serangan siber bertingkat nasional atau serangan yang melibatkan suatu negara / bangsa terkenal dengan serangannya terhadap mekanisme pembaharuan, SolarWinds Orion attack merupakan salah satu serangan bertingkat nasional yang patut diperhatikan. Perlu diketahui perusahaan yang mengembangkan SolarWinds memiliki proses pembaharuan yang berintegritas atau aman dan proses pembuatan perangkat lunak yang aman. Meskipun demikian proses yang aman ini masih dapat di tumbangkan atau diganggu, dan selama beberapa bulan perusahaan ini mendistribusikan pembaharuan berbahaya yang ditargetkan ke lebih dari 18.000 organisasi, sekitar 100 atau lebih organisasi terkena dampak dari pembaharuan ini. Insiden ini termasuk salah satu insiden yang konsekuensi nya dapat berpengaruh besar, mempengaruhi banyak hal dan salah satu insiden yang paling signifikan dalam sejarah Gagalnya Menjaga Integritas Data dan Perangkat Lunak.</p> <p>Skenario #3 Deserialisasi Yang Tidak Aman: Aplikasi React memanggil satu set layanan mikro Spring Boot. Sebagai programmer fungsional, mereka mencoba memastikan bahwa kode mereka tidak dapat diubah. Solusi yang mereka hasilkan adalah membuat serial status pengguna dan meneruskannya bolak-balik dengan setiap permintaan. Seorang penyerang memperhatikan tanda tangan objek Java \"R00\", dan menggunakan alat Pembunuh Serial Java untuk mendapatkan eksekusi kode jarak jauh pada server aplikasi.</p>"},{"location":"id/A08_2021-Software_and_Data_Integrity_Failures/#referensi","title":"Referensi","text":"<ul> <li>[OWASP Cheat Sheet: Software Supply Chain Security] (Akan Segera Datang)</li> <li>[OWASP Cheat Sheet: Secure build and deployment] (Akan Segera Datang)</li> <li>OWASP Cheat Sheet: Infrastructure as Code</li> <li>OWASP Cheat Sheet: Deserialization</li> <li>SAFECode Software Integrity Controls</li> <li>A 'Worst Nightmare' Cyberattack: The Untold Story Of The SolarWinds Hack</li> <li>CodeCov Bash Uploader Compromise</li> <li>Securing DevOps by Julien Vehent</li> </ul>"},{"location":"id/A08_2021-Software_and_Data_Integrity_Failures/#daftar-klasifikasi-cwe","title":"Daftar Klasifikasi CWE","text":"<p>CWE-345 Insufficient Verification of Data Authenticity</p> <p>CWE-353 Missing Support for Integrity Check</p> <p>CWE-426 Untrusted Search Path</p> <p>CWE-494 Download of Code Without Integrity Check</p> <p>CWE-502 Deserialization of Untrusted Data</p> <p>CWE-565 Reliance on Cookies without Validation and Integrity Checking</p> <p>CWE-784 Reliance on Cookies without Validation and Integrity Checking in a Security Decision</p> <p>CWE-829 Inclusion of Functionality from Untrusted Control Sphere</p> <p>CWE-830 Inclusion of Web Functionality from an Untrusted Source</p> <p>CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes</p>"},{"location":"id/A09_2021-Security_Logging_and_Monitoring_Failures/","title":"A09:2021 \u2013 Kegagalan dalam Keamanan Logging dan Monitoring","text":""},{"location":"id/A09_2021-Security_Logging_and_Monitoring_Failures/#faktor-faktor","title":"Faktor-Faktor","text":"Klasifikasi CWE Tingkat Kejadian Maksimum Rata - Rata Tingkat kejadian Cakupan Maksimum Rata - Rata Cakupan Rata-rata Bobot Eksploitasi Rata - Rata Bobot Dampak Total Kejadian Total CVEs 4 19.23% 6.51% 53.67% 39.97% 6.87 4.99 53,615 242"},{"location":"id/A09_2021-Security_Logging_and_Monitoring_Failures/#tinjauan","title":"Tinjauan","text":"<p>Kegagalan dalam Keamanan Logging dan Monitoring datang dari survey industri (#3), naik  sedikit dari posisi ke-10 di dalam OWASP top 10 2017. Mencatat dan memonitor dapat menjadi sebuah kesulitan untuk melakukan testing, seringkali harus menggunakan tindakan seperti  wawancara atau bertanya bila serangan telah terdeksi selama tes penetrasi.  Dalam kategori ini juga tidak terlalu banyak data CVE/CVSS yang ada,  tetapi dalam mendeteksi kemudian merespon dalam penjebolan sangatlah krusial. visibilitas, peringatan insiden, dan forensik sangatlah berdampak pada hal tersebut.  kategori ini memperluas CWE-778 Insufficient Logging dengan memasukan CWE-117 Improper Output Neutralization for Logs, CWE-223 Omission of Security-relevant Information, dan CWE-532 Insertion of Sensitive Information into Log File.</p>"},{"location":"id/A09_2021-Security_Logging_and_Monitoring_Failures/#deskripsi","title":"Deskripsi","text":"<p>Kembali ke OWASP Top 2021, Kategori ini membantu untuk mendeteksi, meningkatkan dan respon terhadap penjebolan yang sedang aktif. Tanpa mencatat dan memonitor, penjebolan tidak dapat dideteksi. Ketidakcukup melakukan log, deteksi, memonitor dan respon aktif terjadi setiap waktu:</p> <ul> <li> <p>Kejadian yang dapat di Audit, seperti login,     kegagalan login dan transaksi dengan nilai yang tinggi tidak di catat.</p> </li> <li> <p>Peringatan dan Error tidak menghasilkan pencatatan yang      memadai atau catatan pesan yang tidak jelas.</p> </li> <li> <p>Log dari aplikasi dan API tidak di monitor untuk aktifitas mencurigakan.</p> </li> <li> <p>Log hanya disimpan secara lokal.</p> </li> <li> <p>Threshold peringatan yang sesuai dan proses dari respon eskalasi tidak efektif.</p> </li> <li> <p>Tool Penetration testing dan Scan dari dynamic application security testing (DAST) (seperti OWASP ZAP) tidak memicu peringatan.</p> </li> <li> <p>Aplikasi tidak dapat mendeteksi, mengeskalasi atau memperingati untuk serangan aktif     di waktu sebenarnya(real-time) atau bahkan mendekati waktu sebenarnya.</p> </li> </ul> <p>Anda sangatlah rentan terhadap kebocoran data saat pencatatan dan peringatan kejadian terlihat kepada user atau bahkan penyerang (lihat A01:2021 - Broken Access Control)</p>"},{"location":"id/A09_2021-Security_Logging_and_Monitoring_Failures/#cara-mencegah","title":"Cara Mencegah","text":"<p>Pengembang harus mengimplementasikan beberapa atau semua kontrol dibawah ini yang tergantung pada risiko dari aplikasi:</p> <ul> <li> <p>Pastikan semua kesalahan login, kontrol akses dan validasi input dari server-side     dapat di catat dengan konteks pengguna yang cukup untuk mengidentifikasikan     akun yang mencurigakan atau jahat serta catatan tersebut di simpan     dengan waktu yang cukup untuk analisa forensik yang terlambat.</p> </li> <li> <p>Pastikan semua catatan dihasilkan dalam format dimana      solusi pengelola catatan dapat dengan mudah digunakan.</p> </li> <li> <p>Pastikan data catatan telah di encode dengan benar untuk      mencegah injeksi atau serangan pada pencatatan atau sistem monitor.  </p> </li> <li> <p>Pastikan transaksi dengan nilai yang tinggi      memiliki jejak audit dengan kontrol integritas     untuk mencegah gangguan dan penghapusan,      seperti hanya dapat ditambahkan ke database atau yang mirip seperti itu.</p> </li> <li> <p>Tim DevSecOps harus membuat monitoring secara efektif dalam memonitor dan memperingati     aktifitas mencurigakan yang terdeteksi dan merespon secara cepat.</p> </li> <li> <p>Membuat atau adopsi sebuah respon insiden dan rencana pemulihan,      seperti NIST 800-61r2 atau versi atas nya.</p> </li> </ul> <p>There are commercial and open-source application protection frameworks such as the OWASP ModSecurity Core Rule Set, and open-source log correlation software, such as the ELK stack, that feature custom dashboards and alerting.</p>"},{"location":"id/A09_2021-Security_Logging_and_Monitoring_Failures/#contoh-skenario-penyerangan","title":"Contoh Skenario Penyerangan","text":"<p>Skenario #1: oeprator website Provider Rencana Kesehatan anak-anak  tidak dapat mendeteksi penerobosan dikarenakan kurang nya dalam memonitor dan mencatat. pihak luar menginformasikan kepada provider bahwa penyerang memiliki akses dan telah memodifikasi ribuan rekam medis yang sensitif dari 3.5 juta anak. tinjauan pasca insiden telah menemukan bahwa pengembang website tidak menindak kerentanan yang signifikan.  seperti disana tidak ada pencatatan atau pemonitoran dari sistem, penjebolan data telah berperkembang dari tahun 2013, penjebolan telah aktif lebih dari periode tujuh tahun.</p> <p>Skenario #2: Sebuah perusahaan penerbangan india besar telah terbobol yang  lebih dari 10 tahun melibatkan jutaan data penumpang. termasuk passport dan data kartu kredit. Pembobolan data terjadi saat third party cloud dari hosting provider, tidak menotifikasi bahwa sistem penerbangan tersebut telah di bobol untuk beberapa waktu.</p> <p>Skenario #3: Sebuah perusahaan penerbangan eropa besar menderita sebuah kebobolan laporan GDPR yang dapat dilaporkan. Kebobolan tersebut telah dikabrkan dikarenakan oleh kerentanan aplikasi keamanan pembayaran di eksploitasi penyerang yang telah memanen lebih dari 400.000 rekam pembayaran pelanggan. perushaan penerbangan tersebut telah di denda sebesar 20 juta pound  sehingga menghasilkan pengatur privacy.</p>"},{"location":"id/A09_2021-Security_Logging_and_Monitoring_Failures/#referensi","title":"Referensi","text":"<ul> <li> <p>OWASP kontrol proaktif OWASP Proactive Controls: Mengimplementasi      Pencatatan dan Pemonitoran</p> </li> <li> <p>OWASP standart verifikasi keamanan: Pencatatan V8 dan      Pemonitoran</p> </li> <li> <p>OWASP Panduan melakukan Tes: Tes untuk code Error yang      mendetil </p> </li> <li> <p>OWASP Cheat Sheet:     Logging</p> </li> <li> <p>Integritas Data: Pemulihan dari ransomware dan peristiwa      destruktif</p> </li> <li> <p>Integritas Data: Identifikasi dan melindungi asset dari      ransomware dan hal peristiwa destruktif     lainnya</p> </li> <li> <p>Integritas Data: Mendeteksi dan Merespon untuk ransomware dan peristiwa      destruktif lainnya</p> </li> </ul>"},{"location":"id/A09_2021-Security_Logging_and_Monitoring_Failures/#daftar-klasifikasi-cwe","title":"Daftar Klasifikasi CWE","text":"<p>CWE-117 Improper Output Neutralization for Logs</p> <p>CWE-223 Omission of Security-relevant Information</p> <p>CWE-532 Insertion of Sensitive Information into Log File</p> <p>CWE-778 Insufficient Logging</p>"},{"location":"id/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#faktor-faktor","title":"Faktor-Faktor","text":"Klasifikasi CWE Tingkat Kejadian Maksimum Rata - Rata Tingkat Kejadian Cakupan Maximum Rata - Rata Cakupan Rata - Rata Bobot Exploitasi Rata - Rata Bobot Dampak Total Kejadian Total CVEs 1 2.72% 2.72% 67.72% 67.72% 8.28 6.72 9,503 385"},{"location":"id/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#penjelasan-singkat","title":"Penjelasan Singkat","text":"<p>Kategori ini ditambahkan dari survei 10 komunitas teratas (#1). Data ini menunjukan tingkat insiden yang relatif rendah dengan cakupan pengujian di atas rata-rata serta nilai dampak dan potensial eksploitasi di atas rata-rata. Entri-entri baru kemungkinan besar menjadi cluster kecil atau tunggal dari CWE - CWE karena tingkat atensi dan tingkat kesadarannya, harapannnya entri-entri baru ini dapat menjadi fokusan riset keamanan dan dapat digolongkan/dimasukkan kedalam kategori/cluster yang lebih besar di edisi mendatang.</p>"},{"location":"id/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#deskripsi","title":"Deskripsi","text":"<p>Kecacatan SSRF muncul saat sebuah aplikasi web meminta remote resource tanpa melakukan validasi URL yang di berikan oleh pengguna. Ini memperbolehkan penyerang untuk memaksa aplikasi untuk mengirim crafted request ke destinasi yang tidak diharapkan, meskipun sudah dilindungi oleh firewall, VPN, atau tipe lain dari daftar aturan akses jaringan - Access Control List (ACL).</p> <p>Aplikasi web saat ini menyediakan fitur yang nyaman bagi pengguna akhir, sehingga proses meminta URL menjadi hal yang lumrah. Oleh karena itu, insiden SSRF semakin meningkat. Selain itu, tingkat keparahan SSRF semakin meningkat karena layanan-layanan cloud dan tingkat komplexitas arsitektur cloud.</p>"},{"location":"id/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#bagaimana-cara-mencegahnya","title":"Bagaimana Cara Mencegahnya","text":"<p>Pengembang dapat mencegah terjadinya SSRF dengan mengimplementasikan beberapa atau semua tindakan kontrol pertahanan berikut:</p>"},{"location":"id/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#dari-network-layer","title":"Dari Network Layer","text":"<ul> <li>Segmentasi fitur/fungsi remote resource access di jaringan yang berbeda untuk mengurangi dampak dari SSRF.</li> <li>Terapkan kebijakan firewall deny by default atau aturan kontrol akses jaringan untuk memblokir semua lalu lintas eksternal kecuali lalu lintas intranet yang penting. Petunjuk:   ~ Buat / Bangunlah siklus hidup dan hak kepemilikan untuk peraturan firewall berdasarkan aplikasinya.   ~ Catat semua akses jaringan yang melewati firewall baik akses jaringan yang diterima ataupun yang diblokir/tolak (lihat A09:2021-Security Logging and Monitoring Failures).</li> </ul>"},{"location":"id/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#dari-application-layer","title":"Dari Application Layer","text":"<ul> <li> <p>Bersihkan dan validasi semua data inputan yang dimasukkan oleh klien</p> </li> <li> <p>Terapkan skema URL, port, dan destinasi dengan daftar izin positif</p> </li> <li> <p>Jangan mengirim respon mentah ke klien</p> </li> <li> <p>Nonaktifkan pengalihan HTTP</p> </li> <li> <p>Perhatikan konsistensi URL untuk menghindari serangan DNS rebinding dan serangan (TOCTOU) time of check, time of use</p> </li> </ul> <p>Jangan gunakan daftar penolakan atau ekspresi reguler untuk mitigasi SSRF. Penyerang mempunyai daftar muatan, alat, dan kemampuan untuk membobol/melewati daftar penolakan.</p>"},{"location":"id/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#tindakan-lainnya-yang-dapat-dipertimbangkan","title":"Tindakan Lainnya Yang Dapat Dipertimbangkan","text":"<ul> <li> <p>Jangan deploy layanan yang berhubungan dengan keamanan pada sistem yang berada di barisan depan, contohnya OpenId. Kontrol lalu lintas lokal pada sistem ini (Localhost).</p> </li> <li> <p>Khusus untuk frontends dengan pengguna/grup pengguna yang loyal atau berdedikasi serta dapat dikelola gunakanlah enkripsi jaringan (VPN) pada sistem independen mengingat adanya kebutuhan proteksi yang sangat tinggi.</p> </li> </ul>"},{"location":"id/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#contoh-skenario-penyerangan","title":"Contoh Skenario Penyerangan","text":"<p>Penyerang dapat menggunakan SSRF untuk menyerang sitem yang telah dilindungi dibalik firewall aplikasi web, firewall,atau jaringan ACL dengan skenario-skenario penyerangan sebagai berikut:</p> <p>Skenario #1: Memindai port server internal. Apabila arsitektur jaringan tidak tersegmentasi, penyerang dapat mendapatkan gambaran bagaimana jaringan internal terbentuk dan dapat menentukan port-port mana yang terbuka atau tertutup pada server internal berdasarkan hasil koneksi, waktu yang dibutuhkan untuk melakukan koneksi atau waktu yang dibutuhkan untuk menolak koneksi yang bermuatan SSRF.</p> <p>Skenario #2: Kebocoran data sensitif. Penyerang dapat mengakses file lokal seperti <code>file:///etc/passwd&lt;/span&gt;</code> dan <code>http://localhost:28017/</code>.</p> <p>Skenario #3: Akses penyimpanan metadata dari layanan cloud - Mayoritas penyedia layanan cloud memiliki penyimpanan metadata seperti <code>http://169/254.169.254/</code>. Seorang penyerang dapat membaca metada tersebut untuk mendapatkan informasi sensitif.</p> <p>Skenario #4: Penyusupan layanan internal - Penyerang dapat menyalahgunakan layanan internal untuk melakukan serangan lebih lanjut seperti Remote Code Execution (RCE) atau Denial Of Service (DOS).</p>"},{"location":"id/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#referensi","title":"Referensi","text":"<ul> <li> <p>OWASP - Server-Side Request Forgery Prevention Cheat     Sheet</p> </li> <li> <p>PortSwigger - Server-side request forgery     (SSRF)</p> </li> <li> <p>Acunetix - What is Server-Side Request Forgery     (SSRF)?</p> </li> <li> <p>SSRF     bible</p> </li> <li> <p>A New Era of SSRF - Exploiting URL Parser in Trending Programming     Languages!</p> </li> </ul>"},{"location":"id/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#daftar-klasifikasi-cwe","title":"Daftar Klasifikasi CWE","text":"<p>CWE-918 Server-Side Request Forgery (SSRF)</p>"},{"location":"id/A11_2021-Next_Steps/","title":"A11:2021 \u2013 Langkah Selanjutnya","text":"<p>Secara desaiin, OWASP Top 10 secara bawaan terbatas ke 10 risiko yang paling signifikan. Setiap OWASP Top 10 memiliki risiko-risiko yang lama dipertimbangkan untuk disertakan dan nyaris lolos, tapi pada akhirnya, mereka tidak berhasil. Tak peduli bagaimana kami mencoba menginterpretasi atau memelintir data, risiko-risiko lain lebih unggul dan berdampak.</p> <p>Bagi organisasi yang sedang menuju ke program appsec yang matang atau konsultasi keamanan atau vendor peralatan yang berharap mengembangkan cakupan bagi tawaran mereka, empat masalah berikut layak ditempuh untuk diidentifikasi dan diperbaiki.</p>"},{"location":"id/A11_2021-Next_Steps/#masalah-masalah-kualitas-kode","title":"Masalah-masalah Kualitas Kode","text":"Klasifikasi CWE Tingkat Kejadian Maks Rerata Tingkat kejadian Rerate Eksploatasi Terbobot Rerata Dampak Terbobot Cakupan Maks Rerata Cakupan Total Kejadian Total CVE 38 49.46% 2.22% 7.1 6.7 60.85% 23.42% 101736 7564 <ul> <li> <p>Deskripsi. Masalah kualitas kode termasuk pola atau cacat keamanan, memakai ulang variabel untuk berbagai kegunaan, eksposur informasi sensitif dalam luaran pengawakutuan, kesalahan off-by-one, kondisi race saat pemeriksaan/saat penggunaan (time of check/time of use, TOCTOU), kesalahan konversi unsigned atau signed, use after free, dan lebih banyak lagi. Ciri khas bagian ini adalah mereka biasanya bisa diidentifikasi dengan flag kompiler yang ketat, alat analisis kode statik, dan plugin IDE linter. Bahasa-bahasa modern dari desain mengeliminasi banyak masalah ini, seperti konsep peminjaman dan kepemilikan memori Rust, desain thread Rust, dan penentuan tipe ketat dan pemeriksaan batas Go.</p> </li> <li> <p>Bagaimana mencegahnya. Fungsikan dan gunakan opsi analisis kode statik bahasa dan penyunting Anda. Pertimbangkan memakai alat analisis kode statik. Pertimbangkan apakah mungkin memakai atau bermigrasi ke suatu bahasa atau framework yang mengeliminasi kelas-kelas bug, seperti Rust atau Go.</p> </li> <li> <p>Contoh skenario serangan. Seorang penyerang mungkin mendapatkan atau memutakhirkan informasi sensitif dengan mengeksploitasi suatu 'race condition' memakai sebuah variable yang dipakai bersama secara statik melintas beberapa thread.</p> </li> <li> <p>Referensi</p> <ul> <li> <p>OWASP Code Review Guide</p> </li> <li> <p>Google Code Review Guide</p> </li> </ul> </li> </ul>"},{"location":"id/A11_2021-Next_Steps/#denial-of-service","title":"Denial of Service","text":"Klasifikasi CWE Tingkat Kejadian Maks Rerata Tingkat kejadian Rerate Eksploatasi Terbobot Rerata Dampak Terbobot Cakupan Maks Rerata Cakupan Total Kejadian Total CVE 8 17.54% 4.89% 8.3 5.9 79.58% 33.26% 66985 973 <ul> <li> <p>Deskripsi. Denial of service selalu mungkin dengan sumber daya yang cukup. Namun, desain dan praktek pengodan memiliki hubungan yang signifikan pada magnituda dari penyangkalan layanan. Misalkan seseorang dengan tautan dapat mengakses sebuah berkas besar, atau transaksi yang mahal secara komputasi terjadi pada setiap halaman. Dalam kasus itu, penyangkalan layanan memerlukan upaya lebih sedikit untuk dijalankan.</p> </li> <li> <p>Bagaimana mencegahnya. Uji kinerja kode untuk penggunaan CPU, I/O, dan memori; rancang ulang, optimasikan, atau singgahkan (cache) operasi-operasi yang mahal. Pertimbangkan kendali akses untuk obyek-obyek yang lebih besar untuk memastikan bahwa hanya individu yang terotorisasi yang dapat mengakses obyek atau berkas sangat besar atau menyajikan mereka memakai jaringan singgahan tepi.</p> </li> <li> <p>Contoh skenario serangan. Penyerang mungkin mendapatkan bahwa suatu operasi makan waktu 5-10 detik sampai selesai ketika menjalankan empat thread konkuren, server tampaknya berhenti merespon. Penyerang memakai 1000 thread dan membuat seluruh sistem luring.</p> </li> <li> <p>Referensi</p> <ul> <li> <p>OWASP Cheat Sheet: Denial of Service</p> </li> <li> <p>OWASP Attacks: Denial of Service</p> </li> </ul> </li> </ul>"},{"location":"id/A11_2021-Next_Steps/#kesalahan-manajemen-memori","title":"Kesalahan Manajemen Memori","text":"Klasifikasi CWE Tingkat Kejadian Maks Rerata Tingkat kejadian Rerate Eksploatasi Terbobot Rerata Dampak Terbobot Cakupan Maks Rerata Cakupan Total Kejadian Total CVE 14 7.03% 1.16% 6.7 8.1 56.06% 31.74% 26576 16184 <ul> <li> <p>Deskripsi. Aplikasi web cenderung ditulis dalam bahasa-bahasa yang memorinya dikelola, seperti Java, .NET, atau node.js (JavaScript atau TypeScript). Namun, bahasa-bahasa ini ditulis dalam bahasa sistem yang memiliki masalah-masalah manajemen memori, seperti buffer overflow atau heap overflow, use after free, integer overflow, dan lebih banyak lagi. Ada banyak 'sandbox escape' selama bertahun-tahun yang membuktikan bahwa karena bahasa aplikasi web secara nominal \"aman\" memori, landasannya tidak.</p> </li> <li> <p>Bagaimana mencegahnya. Banyak API modern yang kini ditulis dalam bahasa-bahasa yang aman-memori seperti Rust atau Go. Dalam kasus Rust, keamanan memori adalah fitur sangat penting dari bahasa. Untuk kode yang telah ada, penggunaan flag compiler yang ketat, penentuan tipe yang kuat, analisis kode statik, dan uji fuzz bisa menguntungkan dalam mengidentifikasi kebocoran memori, memori, dan array overrun, dan lebih banyak lagi.</p> </li> <li> <p>Contoh skenario serangan. Buffer overflow dan heap overflow masih menjadi andalah para penyerang selama bertahun-tahun. Penyerang mengirim data ke suatu program, yang disimpannya dalam buffer stack yang berukuran terlalu kecil. Hasilnya adalah informasi pada call stack ditimpa, termasuk pointer balik fungsi. Data menata nilai pointer balik sehingga ketika fungsi kembali, itu memindah kendali ke kode jahat yang dimuat dalam data penyerang.</p> </li> <li> <p>Referensi</p> <ul> <li> <p>OWASP Vulnerabilities: Buffer Overflow</p> </li> <li> <p>OWASP Attacks: Buffer Overflow</p> </li> <li> <p>Science Direct: Integer Overflow</p> </li> </ul> </li> </ul>"},{"location":"it/","title":"Introduzione alla OWASP Top 10 2021","text":""},{"location":"it/#vi-presentiamo-la-owasp-top-10-2021","title":"Vi presentiamo la OWASP Top 10 - 2021","text":"<p>Ecco a voi l'ultima versione della OWASP Top 10! La OWASP Top 10 2021 \u00e8 tutta nuova, con un nuovo design grafico e un'infografica di una pagina che potete stampare o scaricare dalla nostra home page.</p> <p>Un enorme grazie a tutti coloro che hanno contribuito con il loro tempo e i loro dati per questa versione. Senza di voi, tutto questo non sarebbe stato possibile. GRAZIE!</p>"},{"location":"it/#cosa-e-cambiato-nella-top-10-2021","title":"Cosa \u00e8 cambiato nella Top 10 2021","text":"<p>Ci sono tre nuove categorie, quattro categorie con cambiamenti nella denominazione e nello scopo, e alcuni consolidamenti nella Top 10 per il 2021. Quando necessario abbiamo cambiato i nomi per concentrarci pi\u00f9 sulla causa principale anzich\u00e8 sui sintomi.</p> <p></p> <ul> <li>A01:2021-Broken Access Control sale dalla quinta posizione alla categoria con il pi\u00f9 grave rischio per la sicurezza delle applicazioni web; i dati analizzati indicano che in media, il 3,81% delle applicazioni testate aveva una o pi\u00f9 Common Weakness Enumerations (CWEs) con pi\u00f9 di 318k occorrenze di CWEs in questa categoria di rischio. Le 34 CWE che corrispondevano a Broken Access Control avevano pi\u00f9 occorrenze di qualsiasi altra categoria.</li> <li>A02:2021-Cryptographic Failures si sposta di una posizione alla #2, precedentemente nota come A3:2017-Sensitive Data Exposure, che era un sintomo generico piuttosto che la causa principale. Il nome rinnovato si concentra sulle problematiche relative alla crittografia come \u00e8 stato prima, ma implicitamente. Questa categoria porta spesso all'esposizione di dati sensibili o alla compromissione del sistema.</li> <li>A03:2021-Injection scivola in terza posizione. Il 94% delle applicazioni \u00e8 stato testato per qualche forma di injection con un tasso di incidenza massimo del 19%, un tasso di incidenza medio del 3,37%, e le 33 CWE che corrispondevano a questa categoria hanno il secondo maggior numero di occorrenze nelle applicazioni, con 274k. In questa edizione il Cross-site Scripting fa parte di questa categoria.</li> <li>A04:2021-Insecure Design \u00e8 una nuova categoria per il 2021, con un focus sui rischi relativi ai difetti di progettazione. Se vogliamo veramente \"spostarci a sinistra\" come industria, abbiamo bisogno di pi\u00f9 threat modeling, secure design patterns e architetture di riferimento. Un design insicuro non pu\u00f2 essere corretto con un'implementazione perfetta, poich\u00e9 per definizione i controlli di sicurezza necessari non sono mai stati creati per difendersi da attacchi specifici.</li> <li>A05:2021-Security Misconfiguration sale dal numero 6 dell'edizione precedente; il 90% delle applicazioni \u00e8 stato testato per qualche forma di misconfigurazione, con un tasso di incidenza medio del 4,5% e oltre 208k casi di CWE corrispondenti a questa categoria di rischio. Con una tendenza al software altamente configurabile, non \u00e8 sorprendente vedere questa categoria salire. La precedente categoria per A4:2017-XML External Entities (XXE) \u00e8 ora parte di questa categoria di rischio.</li> <li>A06:2021-Vulnerable and Outdated Components era precedentemente intitolata \"Using Components with Known Vulnerabilities\" ed \u00e8 #2 nel sondaggio della comunit\u00e0 Top 10, ma aveva anche abbastanza numeri per far parte della Top 10 grazie ai dati raccolti e analizzati. Questa categoria sale dalla #9 del 2017 ed \u00e8 un problema noto per cui facciamo fatica a testare e a valutarne il rischio. \u00c8 l'unica categoria a non avere alcun Common Vulnerability and Exposures (CVE) corrispondente alle CWE incluse, quindi nel punteggio \u00e8 stato inserito un peso predefinito per sfruttabilit\u00e0 e impatto di 5.0.</li> <li>A07:2021-Identification and Authentication Failures era precedentemente nota come \"Broken Authentication\" e sta scivolando gi\u00f9 dalla seconda posizione, e ora include CWEs che sono pi\u00f9 legate a problematiche di identificazione. Questa categoria \u00e8 ancora parte integrante della Top 10, ma la maggiore diffusione di framework standard sembra aiutare.</li> <li>A08:2021-Software and Data Integrity Failures \u00e8 una nuova categoria per il 2021, che si concentra sul fare ipotesi relative agli aggiornamenti del software, ai dati critici e alle pipeline CI/CD senza verificare l'integrit\u00e0. Uno dei pi\u00f9 alti impatti ponderati dai dati di Common Vulnerability and Exposures/Common Vulnerability Scoring System (CVE/CVSS) \u00e8 stato messo in corrispondenza alle 10 CWE di questa categoria. A8:2017-Insecure Deserialization fa ora parte di questa categoria pi\u00f9 ampia.</li> <li>A09:2021-Security Logging and Monitoring Failures era precedentemente A10:2017-Insufficient Logging &amp; Monitoring e viene aggiunto dal sondaggio della comunit\u00e0 Top 10 (#3), passando dalla precedente #10. Questa categoria \u00e8 stata ampliata per includere pi\u00f9 tipi di problematiche, \u00e8 difficile da testare e non \u00e8 ben rappresentata nei dati CVE/CVSS. Tuttavia, le problematiche in questa categoria possono avere un impatto diretto sulla visibilit\u00e0, sull'alerting degli incidenti e sulle attivit\u00e0 forensi.</li> <li>A10:2021-Server-Side Request Forgery viene aggiunto dal sondaggio della comunit\u00e0 Top 10 (#1). I dati mostrano un tasso di incidenza relativamente basso con una copertura di test superiore alla media, insieme a valutazioni superiori alla media per il potenziale di sfruttabilit\u00e0 e di impatto. Questa categoria rappresenta lo scenario in cui i membri della nostra comunit\u00e0 ci stanno comunicando che \u00e8 importante, anche se in questo momento non \u00e8 evidente dai dati.</li> </ul>"},{"location":"it/#metodologia","title":"Metodologia","text":"<p>Questa versione della Top 10 \u00e8 pi\u00f9 data-driven che mai, ma non ciecamente data-driven. Abbiamo selezionato otto delle dieci categorie dai dati forniti e due categorie dal sondaggio della comunit\u00e0 Top 10. Questo lo facciamo per una ragione fondamentale, guardare i dati forniti \u00e8 guardare nel passato. I ricercatori nel campo dell'AppSec impiegano tempo per trovare nuove vulnerabilit\u00e0 e nuovi modi per testarle. Ci vuole tempo per integrare questi test negli strumenti e nei processi. Nel momento in cui possiamo testare in modo affidabile una debolezza su larga scala, probabilmente sono passati anni. Per bilanciare questo punto di vista, usiamo un sondaggio comunitario per chiedere agli esperti di sicurezza e sviluppatori di applicazioni in prima linea quali sono le debolezze essenziali che i dati potrebbero non mostrare ancora.</p> <p>Ci sono alcuni cambiamenti importanti che abbiamo adottato per continuare a migliorare la Top 10.</p>"},{"location":"it/#come-sono-strutturate-le-categorie","title":"Come sono strutturate le categorie","text":"<p>Alcune categorie sono cambiate dalla precedente versione della Top Ten di OWASP. Ecco un riassunto ad alto livello dei cambiamenti relativi alle categorie.</p> <p>I precedenti sforzi di raccolta dati erano focalizzati su un sottoinsieme prescritto di circa 30 CWE con un campo aperto che ne richiedeva altri. Abbiamo imparato che le organizzazioni si concentravano principalmente solo su quelle 30 CWE e raramente aggiungevano ulteriori CWE che avevano incontrato. In questa iterazione abbiamo chiesto solo dati, senza restrizioni sulle CWE. Abbiamo chiesto il numero di applicazioni testate per un dato anno (a partire dal 2017), e il numero di applicazioni con almeno un'istanza di una CWE trovata nei test. Questo formato ci permette di tracciare quanto sia prevalente ogni CWE all'interno della popolazione delle applicazioni. Per i nostri scopi ignoriamo la frequenza; mentre pu\u00f2 essere necessaria per altre situazioni, nasconde solo la reale prevalenza nella popolazione delle applicazioni. Che un'applicazione abbia quattro istanze di una CWE o 4.000 istanze, questo valore non influisce nel calcolo per la Top 10. Siamo passati da circa 30 CWE a quasi 400 CWE da analizzare. In futuro abbiamo in programma di fare ulteriori analisi dei dati come integrazione. Questo aumento significativo del numero di CWE richiede cambiamenti nel modo in cui le categorie sono strutturate.</p> <p>Abbiamo trascorso diversi mesi a raggruppare e categorizzare le CWE e avremmo potuto continuare per mesi. Ad un certo punto ci siamo dovuti fermare. Ci sono entrambi i tipi di CWE causa principale e sintomo, dove i tipi causa principale sono come \"Cryptographic Failures\" e \"Misconfiguration\" in contrasto con i tipi sintomo come \"Sensitive Data Exposure\" e \"Denial of Service\". Abbiamo deciso di concentrarci sulla causa principale ogni volta che \u00e8 possibile, in quanto \u00e8 pi\u00f9 logico per fornire una guida all'identificazione e al rimedio. Concentrarsi sulla causa principale piuttosto che sul sintomo non \u00e8 un concetto nuovo; la Top Ten \u00e8 stata un mix di sintomo e causa principale. Anche le CWE sono un mix di sintomo e causa principale; siamo semplicemente pi\u00f9 consapevoli di questo e lo diciamo ad alta voce. C'\u00e8 una media di 19.6 CWE per categoria in questa versione, con i limiti inferiori a 1 CWE per A10:2021-Server-Side Request Forgery (SSRF) a 40 CWE in A04:2021-Insecure Design. Questa struttura aggiornata delle categorie offre ulteriori benefici per la formazione in quanto le aziende possono concentrarsi sulle CWE che hanno senso per un linguaggio/framework.</p>"},{"location":"it/#come-vengono-usati-i-dati-per-selezionare-le-categorie","title":"Come vengono usati i dati per selezionare le categorie","text":"<p>Nel 2017, abbiamo selezionato le categorie in base al tasso di incidenza per determinare la probabilit\u00e0, poi le abbiamo classificate in base alla discussione con il team sulla base di decenni di esperienza per Exploitability, Detectability (anche likelihood), e Technical Impact. Per il 2021, vogliamo usare i dati per Exploitability e (Technical) Impact se possibile.</p> <p>Abbiamo scaricato OWASP Dependency Check ed estratto i punteggi CVSS relativi a Exploit e Impact raggruppati per CWE correlati. Ci sono voluti un bel po' di ricerche e sforzi, poich\u00e9 tutti i CVE hanno punteggi CVSSv2, ma ci sono problematiche in CVSSv2 che CVSSv3 dovrebbe risolvere. Dopo un certo periodo di tempo, a tutti i CVE viene assegnato anche un punteggio CVSSv3. Inoltre, gli intervalli di punteggio e le formule sono stati aggiornati tra CVSSv2 e CVSSv3.</p> <p>Nel CVSSv2, sia Exploit che (Technical) Impact potevano essere fino a 10.0, ma la formula li riduceva al 60% per Exploit e al 40% per Impact. Nel CVSSv3, il massimo teorico era limitato a 6.0 per Exploit e 4.0 per Impact. Con la ponderazione considerata, il punteggio di Impact si \u00e8 spostato pi\u00f9 in alto, quasi un punto e mezzo in media in CVSSv3, e l'exploitability si \u00e8 spostato quasi mezzo punto pi\u00f9 in basso in media.</p> <p>Ci sono 125k record di una CVE corrispondente a una CWE nei dati del National Vulnerability Database (NVD) estratti da OWASP Dependency Check, e ci sono 241 CWE uniche corrispondenti a un CVE. 62k corrispondenze di CWE hanno un punteggio CVSSv3, che \u00e8 circa la met\u00e0 della popolazione nel set di dati.</p> <p>Per la Top Ten 2021, abbiamo calcolato i punteggi medi di Exploit e Impact nel modo seguente. Abbiamo raggruppato tutte le CVE con punteggi CVSS per CWE e ponderato entrambi i punteggi di Exploit e Impact per la percentuale della popolazione che aveva CVSSv3 pi\u00f9 la restante popolazione di punteggi CVSSv2 per ottenere una media complessiva. Abbiamo messo in corrispondenza queste medie alle CWE nel dataset da usare come punteggio di Exploit e (Technical) Impact per l'altra met\u00e0 dell'equazione del rischio.</p>"},{"location":"it/#perche-non-utilizzare-dati-puramente-statistici","title":"Perch\u00e8 non utilizzare dati puramente statistici?","text":"<p>I risultati nei dati sono principalmente limitati a ci\u00f2 che possiamo testare in modo automatico. Parlate con un professionista esperto di AppSec e vi racconter\u00e0 delle vulnerabilit\u00e0 che trova e delle tendenze che vede che non sono ancora visibili nei dati. Ci vuole tempo perch\u00e9 le persone sviluppino metodologie di test per certi tipi di vulnerabilit\u00e0 e poi ancora pi\u00f9 tempo perch\u00e9 quei test siano automatizzati ed eseguiti su una vasta popolazione di applicazioni. Tutto ci\u00f2 che troviamo sta guardando indietro nel passato e potrebbe mancare delle tendenze dell'ultimo anno, che non sono presenti nei dati.</p> <p>Pertanto, prendiamo solo otto delle dieci categorie dai dati perch\u00e9 sono incompleti. Le altre due categorie provengono dal sondaggio della comunit\u00e0 Top 10. Questo permette ai professionisti in prima linea di votare per ci\u00f2 che identificano come i rischi pi\u00f9 alti che potrebbero non essere ancora visibili nei dati (e potrebbero non essere mai espressi nei dati).</p>"},{"location":"it/#perche-tasso-di-incidenza-anziche-frequenza","title":"Perch\u00e8 tasso di incidenza anzich\u00e8 frequenza?","text":"<p>Ci sono tre fonti primarie di dati. Le identifichiamo come Human-assisted Tooling (HaT), Tool-assisted Human (TaH), e Tooling grezzo.</p> <p>Tooling e HaT generano una grande quantit\u00e0 di dati. Gli strumenti cercheranno vulnerabilit\u00e0 specifiche e tenteranno instancabilmente di trovare ogni istanza di quella vulnerabilit\u00e0 e genereranno un numero elevato di risultati per alcuni tipi di vulnerabilit\u00e0. Guardate il Cross-Site Scripting, che \u00e8 tipicamente di due tipi: o \u00e8 un errore piccolo e isolato o un problema sistemico. Quando si tratta di un problema sistemico, il conteggio pu\u00f2 essere di migliaia per una singola applicazione. Questa alta frequenza copre la maggior parte delle altre vulnerabilit\u00e0 trovate nei report o nei dati.</p> <p>TaH, d'altra parte, trover\u00e0 una gamma pi\u00f9 ampia di tipi di vulnerabilit\u00e0, ma con una frequenza molto pi\u00f9 bassa a causa dei vincoli temporali. Quando gli esseri umani testano un'applicazione e identificano problematiche come il Cross-Site Scripting, in genere trovano tre o quattro istanze e si fermano. Possono determinare una scoperta sistemica e scrivere nel report consigli per la correzione della problematica sull'intera applicazione. Non c'\u00e8 bisogno (o tempo) di trovare ogni istanza.</p> <p>Supponiamo di prendere questi due insiemi di dati distinti e cercare di unirli ina base alla frequenza. In questo caso, i dati di Tooling e HaT sommergeranno i pi\u00f9 accurati (ma ampi) dati TaH ed \u00e8 una buona parte del motivo per cui qualcosa come Cross-Site Scripting \u00e8 stato cos\u00ec altamente classificato in molte liste quando l'impatto \u00e8 generalmente basso o moderato. \u00c8 a causa dell'enorme volume di risultati. (Il Cross-Site Scripting \u00e8 anche ragionevolmente facile da testare, quindi ci sono molti pi\u00f9 test anche per questo).</p> <p>Nel 2017, abbiamo introdotto l'uso del tasso di incidenza per dare un nuovo sguardo ai dati e fondere in modo pulito i dati di Tooling e HaT con i dati TaH. Il tasso di incidenza chiede quale percentuale della popolazione di applicazioni ha avuto almeno un'istanza di un tipo di vulnerabilit\u00e0. Non ci interessa se era una tantum o sistemica. Questo \u00e8 irrilevante per i nostri scopi; abbiamo solo bisogno di sapere quante applicazioni ne avevano almeno un'istanza, il che aiuta a fornire una visione pi\u00f9 chiara dei risultati senza rischiare di inquinare i dati con risultati relativi a problematiche ad alta frequenza. Questo corrisponde a una visione legata al rischio, poich\u00e9 un attaccante ha bisogno di una sola istanza di una determinata vulnerabilit\u00e0 per attaccare con successo un'applicazione.</p>"},{"location":"it/#quale-e-il-processo-di-raccolta-e-analisi-dei-dati","title":"Quale \u00e8 il processo di raccolta e analisi dei dati?","text":"<p>Abbiamo formalizzato il processo di raccolta dati OWASP Top 10 all'Open Security Summit del 2017. I leader di OWASP Top 10 e la comunit\u00e0 hanno trascorso due giorni a formalizzare un processo di raccolta dati trasparente. Per l'edizione 2021 \u00e8 la seconda volta che abbiamo usato questa metodologia.</p> <p>Richiediamo i dati attraverso i canali dei social media a nostra disposizione, sia del progetto che di OWASP. Sulla pagina del progetto OWASP, elenchiamo quali variabili e quale struttura stiamo cercando nei dati e come inviarli. Nela pagina GitHub, abbiamo file di esempio che servono come modelli. Lavoriamo con le organizzazioni, se necessario, per aiutarle a capire la struttura e la correlazione delle relative CWE.</p> <p>Otteniamo dati da organizzazioni che sono aziende che svolgono test di sicurezza, piattaforme di bug bounty e organizzazioni che contribuiscono con dati di test interni. Una volta che abbiamo i dati, li carichiamo insieme ed eseguiamo un'analisi fondamentale, ovvero la corrispondenza delle CWE alle categorie di rischio. C'\u00e8 una sovrapposizione tra alcune CWE, e altre sono strettamente correlati (es. vulnerabilit\u00e0 crittografiche). Qualsiasi decisione relativa ai dati grezzi presentati \u00e8 documentata e pubblicata per essere aperti e trasparenti sul processo di normalizzazione dei dati.</p> <p>Guardiamo le otto categorie con i pi\u00f9 alti tassi di incidenza per l'inclusione nella Top 10. Guardiamo anche i risultati del sondaggio della comunit\u00e0 Top 10 per vedere quali possono essere gi\u00e0 presenti nei dati. I primi due voti che non sono gi\u00e0 presenti nei dati saranno selezionati per gli altri due posti nella Top 10. Una volta che tutti e dieci sono stati selezionati, abbiamo applicato fattori generici per la sfruttabilit\u00e0 e l'impatto; per produrre una Top 10 2021 in un ordine basato sul rischio.</p>"},{"location":"it/#etichette-dei-dati","title":"Etichette dei dati","text":"<p>Ci sono alcune etichette che sono elencati per ciascuna delle 10 categorie principali, ecco cosa significano:</p> <ul> <li>CWEs corrispondenti: Il numero di CWE corrispondenti a una categoria dal team Top 10.</li> <li>Tasso di incidenza:  Il tasso di incidenza \u00e8 la percentuale di applicazioni vulnerabili a quel CWE dalla popolazione testata da quella org per quell'anno.</li> <li>Copertura (di test): La percentuale di applicazioni testate da tutte le organizzazioni per un dato CWE.</li> <li>Sfruttabilit\u00e0 pesata: Il sub-score Exploit dai punteggi CVSSv2 e CVSSv3 assegnati ai CVE corrispondenti ai CWE, normalizzati e posizionati su una scala di 10 punti.</li> <li>Impatto pesato: Il sub-score di impatto dai punteggi CVSSv2 e CVSSv3 assegnati ai CVE corrispondenti ai CWE, normalizzato e posizionato su una scala di 10 punti.</li> <li>Occorrenze totali: Numero totale di applicazioni trovate che hanno i CWE corrispondenti ad una categoria.</li> <li>CVE totali: Numero totale di CVE nel DB NVD che sono stati messi in corrispondenza ai CWE relativi a una categoria.</li> </ul>"},{"location":"it/#ringraziamo-chi-ha-contribuito-con-i-dati","title":"Ringraziamo chi ha contribuito con i dati","text":"<p>Le seguenti organizzazioni (insieme ad alcuni donatori anonimi) hanno gentilmente donato i dati per oltre 500.000 applicazioni per rendere questo il pi\u00f9 grande e completo set di dati sulla sicurezza delle applicazioni. Senza di voi, questo non sarebbe possibile.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"it/#grazie-ai-nostri-sponsor","title":"Grazie ai nostri sponsor","text":"<p>Il team OWASP Top 10 2021 ringrazia il supporto finanziario di Secure Code Warrior e Just Eat.</p> <p> </p> <p></p>"},{"location":"it/0x00_2021-notice/","title":"Rilascio","text":"<p>Rilasciata il 24 Settembre 2021</p>"},{"location":"it/0x00_2021-notice/#autori-principali","title":"Autori principali","text":"<ul> <li>Andrew van der Stock (twitter: @vanderaj)</li> <li>Brian Glas (twitter: @infosecdad)</li> <li>Neil Smithline (twitter: @appsecneil)</li> <li>Torsten Gigler (twitter: @torsten_tweet)</li> </ul>"},{"location":"it/0x00_2021-notice/#collaboratori","title":"Collaboratori","text":"<ul> <li>Orange Tsai @orange_8361, Author of A10-2021: Server Side Request Forgery</li> <li>Jim Manico @manicode and Jakub Ma\u0107kowski @kubamackowski - OWASP CheatSheets Coordination</li> </ul>"},{"location":"it/0x00_2021-notice/#come-puoi-aiutarci","title":"Come puoi aiutarci","text":"<p>In questa fase, chiediamo</p> <ul> <li>Data scientists - per favore, fate una peer review delle nostra analisi</li> <li>Web designers - abbiamo bisogno di fare una versione mobile friendly del sito</li> <li>Traduttori - per favore rivedete il testo inglese per assicurarvi che sia traducibile</li> <li>Responsabili di ASVS, Testing Guide, and Code Review Guide - per favore usate i nostri dati e aiutateci a collegare tra loro i nostri documenti e standard</li> </ul>"},{"location":"it/0x00_2021-notice/#log-issues-and-pull-requests","title":"Log issues and pull requests","text":"<p>Si prega di segnalare qualsiasi correzione o problema:</p> <ul> <li>https://github.com/OWASP/Top10/issues</li> </ul>"},{"location":"it/0x01_2021-about-owasp/","title":"A proposito di OWASP","text":"<p>L'Open Worldwide Application Security Project (OWASP) \u00e8 una comunit\u00e0 aperta dedicata per permettere alle organizzazioni di sviluppare, acquistare e mantenere applicazioni e API affidabili.</p> <p>All'OWASP, troverete in modo libero e aperto:</p> <ul> <li>Strumenti e standard di sicurezza delle applicazioni</li> <li>Ricerca all'avanguardia</li> <li>Controlli di sicurezza standard e librerie</li> <li>Libri completi su test di sicurezza delle applicazioni, sviluppo di codice sicuro e revisione del codice sicuro</li> <li>Presentazioni e video</li> <li>Cheat sheets su molti argomenti di interesse comune</li> <li>Chapter meetings</li> <li>Eventi, corsi, e conferenze.</li> <li>Google Groups</li> </ul> <p>Scopri di pi\u00f9 su: https://owasp.org.</p> <p>Tutti gli strumenti, i documenti, i video, le presentazioni e i chapter di OWASP sono gratuiti e aperti a chiunque sia interessato a migliorare la sicurezza delle applicazioni.</p> <p>Sosteniamo l'approccio alla sicurezza delle applicazioni come un problema di persone, processi e tecnologia, perch\u00e9 gli approcci pi\u00f9 efficaci alla sicurezza delle applicazioni richiedono miglioramenti in tutte queste aree.</p> <p>OWASP \u00e8 un nuovo tipo di organizzazione. La nostra libert\u00e0 dalle pressioni commerciali ci permette di fornire informazioni imparziali, pratiche e convenienti sulla sicurezza delle applicazioni.</p> <p>OWASP non \u00e8 affiliata ad alcuna azienda tecnologica, anche se sosteniamo l'uso informato della tecnologia di sicurezza commerciale. OWASP produce molti tipi di materiali in modo collaborativo, trasparente e aperto.</p> <p>La Fondazione OWASP \u00e8 l'entit\u00e0 non-profit che assicura il successo a lungo termine del progetto. Quasi tutti coloro che sono associati a OWASP sono volontari, compreso il consiglio di OWASP, i leader dei chapter, i leader dei progetti e i membri degli stessi. Sosteniamo la ricerca innovativa sulla sicurezza con sovvenzioni e infrastrutture.</p> <p>Unisciti a noi!</p>"},{"location":"it/0x01_2021-about-owasp/#copyright-and-license","title":"Copyright and License","text":"<p>Copyright \u00a9 2003-2025 The OWASP\u00ae Foundation. This document is released under the Creative Commons Attribution Share-Alike 4.0 license. For any reuse or distribution, you must make it clear to others the license terms of this work.</p>"},{"location":"it/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/","title":"Come avviare un programma di AppSec con la OWASP Top 10","text":"<p>In precedenza, la OWASP Top 10 non \u00e8 mai stata progettata per essere la base di un programma AppSec. Tuttavia, per molte aziende che hanno appena iniziato il loro viaggio nella sicurezza delle applicazioni \u00e8 essenziale avere una base di partenza. La OWASP Top 10 2021 \u00e8 un buon inizio come riferimento per le checklist e cos\u00ec via, ma non \u00e8 di per s\u00e9 sufficiente.</p>"},{"location":"it/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#passo-1-identificare-le-lacune-e-gli-obiettivi-del-vostro-programma-appsec","title":"Passo 1. Identificare le lacune e gli obiettivi del vostro programma AppSec","text":"<p>Molti programmi di sicurezza delle applicazioni (AppSec) cercano di mettere il carro davanti ai buoi. I programmi eseguiti in questo modo sono destinati a fallire. Noi incoraggiamo fortemente i CISO e i responsabili della AppSec ad usare OWASP Software Assurance Maturity Model (SAMM) per identificare i punti deboli e le aree di miglioramento su un periodo di 1-3 anni. Il primo passo \u00e8 quello di valutare dove siete ora, identificare le lacune nella governance, nel design, nell'implementazione, nella verifica e nella parte operativa che dovete risolvere immediatamente rispetto a quelle che possono aspettare, e dare la priorit\u00e0 all'implementazione o al migliorare le quindici pratiche di sicurezza OWASP SAMM. OWASP SAMM pu\u00f2 aiutarvi a costruire e misurare i miglioramenti nei vostri sforzi per migliorare la sicurezza del software.</p>"},{"location":"it/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#passo-2-pianificare-per-un-ciclo-di-vita-del-software-sicuro-su-una-paved-road","title":"Passo 2. Pianificare per un ciclo di vita del software sicuro su una paved road","text":"<p>Tradizionalmente appannaggio dei cosiddetti \"unicorni\", il concetto di paved road \u00e8 il modo pi\u00f9 semplice per ottenere il massimo impatto e scalare le risorse AppSec con la velocit\u00e0 del team di sviluppo, che aumenta ogni anno.</p> <p>Il concetto di paved road \u00e8 \"il modo pi\u00f9 semplice \u00e8 anche il modo pi\u00f9 sicuro\" e dovrebbe comportare una cultura di partnership profonda tra il team di sviluppo e il team di sicurezza, preferibilmente in modo che siano nello stesso team.  La paved road mira a migliorare continuamente, misurare, rilevare e sostituire le alternative insicure  avendo una lista a livello aziendale di alternative sicure pronte ad essere utilizzate, con strumenti per aiutare a vedere dove si possono fare miglioramenti grazie alla paved road. Questo permette agli strumenti di sviluppo esistenti di segnalare le build insicure e aiutare i team di sviluppo a stare lontano dalle alternative non sicure.</p> <p>La paved road potrebbe sembrare molto laboriosa da realizzare, ma dovrebbe essere costruita incrementalmente nel tempo. Esistono anche altre forme di programmi AppSec, in particolare il Microsoft Agile Secure Development Lifecycle. Non esiste una metodologia di programma AppSec che si adatti ad ogni tipo di azienda.</p>"},{"location":"it/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#passo-3-realizzare-la-paved-road-con-il-team-di-sviluppo","title":"Passo 3. Realizzare la paved road con il team di sviluppo","text":"<p>Le paved road vengono realizzate con il consenso e il coinvolgimento diretto dei team di sviluppo e operativi interessati. La paved road dovrebbe essere allineata strategicamente con il business e aiutare a fornire pi\u00f9 velocemente applicazioni pi\u00f9 sicure. Realizzare la paved road dovrebbe essere un esercizio olistico che copre l'intera azienda o ecosistema di applicazioni, non un cerotto da applicare alle app, come avveniva in passato.</p>"},{"location":"it/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#passo-4-migrare-tutte-le-applicazioni-imminenti-ed-esistenti-sulla-paved-road","title":"Passo 4. Migrare tutte le applicazioni imminenti ed esistenti sulla paved road","text":"<p>Aggiungere strumenti di rilevamento per la paved road nella fase di development e fornire informazioni ai team di sviluppo per migliorare la sicurezza delle loro applicazioni permettendo loro di adottare direttamente elementi della paved road. Una volta che un aspetto della paved road \u00e8 stato adottato, le organizzazioni dovrebbero implementare sistemi di continuous integration che ispezionino il codice esistente e che avvertano nel caso di utilizzo di  alternative proibite e avvisino o rifiutino la build. Questo previene che opzioni insicure si insinuino nel codice nel tempo, prevenendo il debito tecnico e un'applicazione insicura. Questi avvertimenti dovrebbero suggerire l'alternativa sicura, cos\u00ec che il team di sviluppo riceva immediatamente la risposta corretta. Possono svolgere il refactoring del codice e adottare rapidamente il componente della paved road.</p>"},{"location":"it/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#passo-5-testare-che-la-paved-road-abbia-mitigato-le-problematriche-segnalate-dalla-owasp-top-10","title":"Passo 5. Testare che la paved road abbia mitigato le problematriche segnalate dalla OWASP Top 10","text":"<p>I componenti della paved road dovrebbero affrontare una problematica significativa con l'OWASP Top 10, per esempio, come rilevare o correggere automaticamente i componenti vulnerabili, o un plugin per l'IDE per svolgere l'analisi statica del codice per rilevare injection, o ancora meglio iniziare ad usare una libreria che \u00e8 notoriamente sicura contro le injection. Pi\u00f9 queste alternative sicure pronte all'uso vengono fornite ai team, meglio \u00e8. Un compito vitale del team AppSec \u00e8 quello di garantire che la sicurezza di questi componenti sia continuamente valutata e migliorata. Una volta applicate le migliorie, si dovrebbe indicare a chi utilizza il componente che si dovrebbe eseguire un aggiornamento, meglio ancora se avvenisse automaticamente, ma se cos\u00ec non fosse, almeno evidenziarlo su un dashboard o simile.</p>"},{"location":"it/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#passo-6-integrare-il-tuo-processo-in-un-programma-di-appsec-maturo","title":"Passo 6. Integrare il tuo processo in un programma di AppSec maturo","text":"<p>Non dovete fermarvi alla Top 10 di OWASP. Copre solo 10 categorie di rischio.  Incoraggiamo fortemente le organizzazioni ad adottare l'Application Security Verification Standard e aggiungere progressivamente componenti e test per il livello 1, 2 e 3, a seconda del livello di rischio delle applicazioni sviluppate.</p>"},{"location":"it/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#andare-oltre","title":"Andare oltre","text":"<p>Tutti i grandi programmi AppSec vanno oltre il minimo indispensabile. Tutti devono continuare ad andare avanti se vogliamo essere al top delle vulnerabilit\u00e0 dell'AppSec.</p> <ul> <li> <p>Integrit\u00e0 concettuale. I programmi AppSec maturi devono contenere qualche     concetto di architettura di sicurezza, sia che si tratti di un     architettura di sicurezza enterprise, cloud o threat modeling.</p> </li> <li> <p>Automazione e scalabilit\u00e0. I programmi AppSec maturi cercano di automatizzare il pi\u00f9     possibile, usando script per emulare complesse fasi di penetration test, strumenti di analisi statica del codice direttamente a disposizione dei team di sviluppo, assistendo i team di sviluppo nello     sviluppare unit e integration test per AppSec, e altro ancora.</p> </li> <li> <p>Cultura. I programmi AppSec maturi cercano smantellare design insicuri ed      eliminare il debito tecnico dal codice esistente essendo una     parte integrante del team di sviluppo, non accessoria. I team AppSec che     vedono i team di sviluppo come degli estranei sono destinati a fallire.</p> </li> <li> <p>Miglioramento continuo. I programmi AppSec maturi cercano di     migliorare costantemente. Se qualcosa non funziona, smetti di farlo. Se     qualcosa \u00e8 rudimentale o non scalabile, lavorate per migliorarlo. Se     qualcosa non viene usato dai team di sviluppo e ha un impatto limitato, fate qualcosa di diverso.      Solo perch\u00e9 facciamo verifiche documentali dagli anni '70 non significa che sia una buona     idea. Misurare, valutare e poi costruire o migliorare.</p> </li> </ul>"},{"location":"it/A00_2021_How_to_use_the_OWASP_Top_10_as_a_standard/","title":"Come usare la OWASP Top 10 come standard","text":"<p>La OWASP Top 10 \u00e8 principalmente un documento per diffondere consapevolezza. Tuttavia, questo non ha impedito alle organizzazioni di usarlo come standard de facto per l'AppSec sin dal suo inizio nel 2003. Se volete usare la OWASP Top 10 come standard di codifica o di test, sappiate che \u00e8 il minimo indispensabile e solo un punto di partenza.</p> <p>Una delle difficolt\u00e0 nell'usare la OWASP Top 10 come standard \u00e8 che documentiamo i rischi di sicurezza delle applicazioni, e non necessariamente problematiche facilmente testabili. Per esempio, A04:2021-Insecure Design \u00e8 oltre la portata della maggior parte delle forme di test. Un altro esempio \u00e8 il test sul posto, in uso, ed efficace dei log e il monitoraggio degli stessi che pu\u00f2 essere fatto solo con interviste e con la richiesta di un campione di risposte agli incidenti di sicurezza. Uno strumento di analisi statica del codice pu\u00f2 cercare l'assenza di istruzioni di logging, ma potrebbe essere impossibile determinare se la logica di business o il controllo degli accessi sta registrando violazioni della sicurezza. I penetration tester possono essere in grado solo di determinare che hanno invocato la procedura di incident response in un ambiente di test, ambienti che sono raramente monitorati allo stesso modo dell'ambiente di produzione.</p> <p>Ecco le nostre raccomandazioni per quando \u00e8 appropriato usare la OWASP Top 10:</p> Caso d'uso OWASP Top 10 2021 OWASP Application Security Verification Standard Awareness Si Training Livello base Completo Design and architecture Occasionalmente Si Coding standard Minimo indispensabile Si Secure Code review Minimo indispensabile Si Peer review checklist Minimo indispensabile Si Unit testing Occasionalmente Si Integration testing Occasionalmente Si Penetration testing Minimo indispensabile Si Tool support Minimo indispensabile Si Secure Supply Chain Occasionalmente Si <p>Incoraggiamo chiunque voglia adottare uno standard di sicurezza per le applicazioni ad utilizzare lo standard OWASP Application Security Verification Standard (ASVS), poich\u00e9 \u00e8 progettato per essere verificabile e testato, e pu\u00f2 essere usato in tutte le parti del un ciclo di vita di sviluppo sicuro del software.</p> <p>L'ASVS \u00e8 l'unica scelta accettabile per chi produce strumenti di testing. Gli strumenti non possono rilevare, testare o proteggere in modo esaustivo contro la Top 10 di OWASP a causa della natura di molti dei rischi OWASP Top 10, ad esempio A04:2021-Insecure Design.  OWASP scoraggia qualsiasi pretesa di copertura completa della OWASP Top 10, perch\u00e9 \u00e8 semplicemente falso.</p>"},{"location":"it/A00_2021_Introduction/","title":"Introduzione alla OWASP Top 10 2021","text":""},{"location":"it/A00_2021_Introduction/#vi-presentiamo-la-the-owasp-top-10-2021","title":"Vi presentiamo la the OWASP Top 10 - 2021","text":"<p>Ecco a voi l'ultima versione della OWASP Top 10! La OWASP Top 10 2021 \u00e8 tutta nuova, con un nuovo design grafico e un'infografica di una pagina che potete stampare o scaricare dalla nostra home page.</p> <p>Un enorme grazie a tutti coloro che hanno contribuito con il loro tempo e i loro dati per questa versione. Senza di voi, tutto questo non sarebbe stato possibile. GRAZIE!</p>"},{"location":"it/A00_2021_Introduction/#cosa-e-cambiato-nella-top-10-2021","title":"Cosa \u00e8 cambiato nella Top 10 2021","text":"<p>Ci sono tre nuove categorie, quattro categorie con cambiamenti nella denominazione e nello scopo, e alcuni consolidamenti nella Top 10 per il 2021. Quando necessario abbiamo cambiato i nomi per concentrarci pi\u00f9 sulla causa principale anzich\u00e8 sui sintomi.</p> <p></p> <ul> <li>A01:2021-Broken Access Control sale dalla quinta posizione alla categoria con il pi\u00f9 grave rischio per la sicurezza delle applicazioni web; i dati analizzati indicano che in media, il 3,81% delle applicazioni testate aveva una o pi\u00f9 Common Weakness Enumerations (CWEs) con pi\u00f9 di 318k occorrenze di CWEs in questa categoria di rischio. Le 34 CWE che corrispondevano a Broken Access Control avevano pi\u00f9 occorrenze di qualsiasi altra categoria.</li> <li>A02:2021-Cryptographic Failures si sposta di una posizione alla #2, precedentemente nota come A3:2017-Sensitive Data Exposure, che era un sintomo generico piuttosto che la causa principale. Il nome rinnovato si concentra sulle problematiche relative alla crittografia come \u00e8 stato prima, ma implicitamente. Questa categoria porta spesso all'esposizione di dati sensibili o alla compromissione del sistema.</li> <li>A03:2021-Injection scivola in terza posizione. Il 94% delle applicazioni \u00e8 stato testato per qualche forma di injection con un tasso di incidenza massimo del 19%, un tasso di incidenza medio del 3,37%, e le 33 CWE che corrispondevano a questa categoria hanno il secondo maggior numero di occorrenze nelle applicazioni, con 274k. In questa edizione il Cross-site Scripting fa parte di questa categoria.</li> <li>A04:2021-Insecure Design \u00e8 una nuova categoria per il 2021, con un focus sui rischi relativi ai difetti di progettazione. Se vogliamo veramente \"spostarci a sinistra\" come industria, abbiamo bisogno di pi\u00f9 threat modeling, secure design patterns e architetture di riferimento. Un design insicuro non pu\u00f2 essere corretto con un'implementazione perfetta, poich\u00e9 per definizione i controlli di sicurezza necessari non sono mai stati creati per difendersi da attacchi specifici.</li> <li>A05:2021-Security Misconfiguration sale dal numero 6 dell'edizione precedente; il 90% delle applicazioni \u00e8 stato testato per qualche forma di misconfigurazione, con un tasso di incidenza medio del 4,5% e oltre 208k casi di CWE corrispondenti a questa categoria di rischio. Con una tendenza al software altamente configurabile, non \u00e8 sorprendente vedere questa categoria salire. La precedente categoria per A4:2017-XML External Entities (XXE) \u00e8 ora parte di questa categoria di rischio.</li> <li>A06:2021-Vulnerable and Outdated Components era precedentemente intitolata \"Using Components with Known Vulnerabilities\" ed \u00e8 #2 nel sondaggio della comunit\u00e0 Top 10, ma aveva anche abbastanza numeri per far parte della Top 10 grazie ai dati raccolti e analizzati. Questa categoria sale dalla #9 del 2017 ed \u00e8 un problema noto per cui facciamo fatica a testare e a valutarne il rischio. \u00c8 l'unica categoria a non avere alcun Common Vulnerability and Exposures (CVE) corrispondente alle CWE incluse, quindi nel punteggio \u00e8 stato inserito un peso predefinito per sfruttabilit\u00e0 e impatto di 5.0.</li> <li>A07:2021-Identification and Authentication Failures era precedentemente nota come \"Broken Authentication\" e sta scivolando gi\u00f9 dalla seconda posizione, e ora include CWEs che sono pi\u00f9 legate a problematiche di identificazione. Questa categoria \u00e8 ancora parte integrante della Top 10, ma la maggiore diffusione di framework standard sembra aiutare.</li> <li>A08:2021-Software and Data Integrity Failures \u00e8 una nuova categoria per il 2021, che si concentra sul fare ipotesi relative agli aggiornamenti del software, ai dati critici e alle pipeline CI/CD senza verificare l'integrit\u00e0. Uno dei pi\u00f9 alti impatti ponderati dai dati di Common Vulnerability and Exposures/Common Vulnerability Scoring System (CVE/CVSS) \u00e8 stato messo in corrispondenza alle 10 CWE di questa categoria. A8:2017-Insecure Deserialization fa ora parte di questa categoria pi\u00f9 ampia.</li> <li>A09:2021-Security Logging and Monitoring Failures era precedentemente A10:2017-Insufficient Logging &amp; Monitoring e viene aggiunto dal sondaggio della comunit\u00e0 Top 10 (#3), passando dalla precedente #10. Questa categoria \u00e8 stata ampliata per includere pi\u00f9 tipi di problematiche, \u00e8 difficile da testare e non \u00e8 ben rappresentata nei dati CVE/CVSS. Tuttavia, le problematiche in questa categoria possono avere un impatto diretto sulla visibilit\u00e0, sull'alerting degli incidenti e sulle attivit\u00e0 forensi.</li> <li>A10:2021-Server-Side Request Forgery viene aggiunto dal sondaggio della comunit\u00e0 Top 10 (#1). I dati mostrano un tasso di incidenza relativamente basso con una copertura di test superiore alla media, insieme a valutazioni superiori alla media per il potenziale di sfruttabilit\u00e0 e di impatto. Questa categoria rappresenta lo scenario in cui i membri della nostra comunit\u00e0 ci stanno comunicando che \u00e8 importante, anche se in questo momento non \u00e8 evidente dai dati.</li> </ul>"},{"location":"it/A00_2021_Introduction/#metodologia","title":"Metodologia","text":"<p>Questa versione della Top 10 \u00e8 pi\u00f9 data-driven che mai, ma non ciecamente data-driven. Abbiamo selezionato otto delle dieci categorie dai dati forniti e due categorie dal sondaggio della comunit\u00e0 Top 10. Questo lo facciamo per una ragione fondamentale, guardare i dati forniti \u00e8 guardare nel passato. I ricercatori nel campo dell'AppSec impiegano tempo per trovare nuove vulnerabilit\u00e0 e nuovi modi per testarle. Ci vuole tempo per integrare questi test negli strumenti e nei processi. Nel momento in cui possiamo testare in modo affidabile una debolezza su larga scala, probabilmente sono passati anni. Per bilanciare questo punto di vista, usiamo un sondaggio comunitario per chiedere agli esperti di sicurezza e sviluppatori di applicazioni in prima linea quali sono le debolezze essenziali che i dati potrebbero non mostrare ancora.</p> <p>Ci sono alcuni cambiamenti importanti che abbiamo adottato per continuare a migliorare la Top 10.</p>"},{"location":"it/A00_2021_Introduction/#come-sono-strutturate-le-categorie","title":"Come sono strutturate le categorie","text":"<p>Alcune categorie sono cambiate dalla precedente versione della Top Ten di OWASP. Ecco un riassunto ad alto livello dei cambiamenti relativi alle categorie.</p> <p>I precedenti sforzi di raccolta dati erano focalizzati su un sottoinsieme prescritto di circa 30 CWE con un campo aperto che ne richiedeva altri. Abbiamo imparato che le organizzazioni si concentravano principalmente solo su quelle 30 CWE e raramente aggiungevano ulteriori CWE che avevano incontrato. In questa iterazione abbiamo chiesto solo dati, senza restrizioni sulle CWE. Abbiamo chiesto il numero di applicazioni testate per un dato anno (a partire dal 2017), e il numero di applicazioni con almeno un'istanza di una CWE trovata nei test. Questo formato ci permette di tracciare quanto sia prevalente ogni CWE all'interno della popolazione delle applicazioni. Per i nostri scopi ignoriamo la frequenza; mentre pu\u00f2 essere necessaria per altre situazioni, nasconde solo la reale prevalenza nella popolazione delle applicazioni. Che un'applicazione abbia quattro istanze di una CWE o 4.000 istanze, questo valore non influisce nel calcolo per la Top 10. Siamo passati da circa 30 CWE a quasi 400 CWE da analizzare. In futuro abbiamo in programma di fare ulteriori analisi dei dati come integrazione. Questo aumento significativo del numero di CWE richiede cambiamenti nel modo in cui le categorie sono strutturate.</p> <p>Abbiamo trascorso diversi mesi a raggruppare e categorizzare le CWE e avremmo potuto continuare per mesi. Ad un certo punto ci siamo dovuti fermare. Ci sono entrambi i tipi di CWE causa principale e sintomo, dove i tipi causa principale sono come \"Cryptographic Failures\" e \"Misconfiguration\" in contrasto con i tipi sintomo come \"Sensitive Data Exposure\" e \"Denial of Service\". Abbiamo deciso di concentrarci sulla causa principale ogni volta che \u00e8 possibile, in quanto \u00e8 pi\u00f9 logico per fornire una guida all'identificazione e al rimedio. Concentrarsi sulla causa principale piuttosto che sul sintomo non \u00e8 un concetto nuovo; la Top Ten \u00e8 stata un mix di sintomo e causa principale. Anche le CWE sono un mix di sintomo e causa principale; siamo semplicemente pi\u00f9 consapevoli di questo e lo diciamo ad alta voce. C'\u00e8 una media di 19.6 CWE per categoria in questa versione, con i limiti inferiori a 1 CWE per A10:2021-Server-Side Request Forgery (SSRF) a 40 CWE in A04:2021-Insecure Design. Questa struttura aggiornata delle categorie offre ulteriori benefici per la formazione in quanto le aziende possono concentrarsi sulle CWE che hanno senso per un linguaggio/framework.</p>"},{"location":"it/A00_2021_Introduction/#come-vengono-usati-i-dati-per-selezionare-le-categorie","title":"Come vengono usati i dati per selezionare le categorie","text":"<p>Nel 2017, abbiamo selezionato le categorie in base al tasso di incidenza per determinare la probabilit\u00e0, poi le abbiamo classificate in base alla discussione con il team sulla base di decenni di esperienza per Exploitability, Detectability (anche likelihood), e Technical Impact. Per il 2021, vogliamo usare i dati per Exploitability e (Technical) Impact se possibile.</p> <p>Abbiamo scaricato OWASP Dependency Check ed estratto i punteggi CVSS relativi a Exploit e Impact raggruppati per CWE correlati. Ci sono voluti un bel po' di ricerche e sforzi, poich\u00e9 tutti i CVE hanno punteggi CVSSv2, ma ci sono problematiche in CVSSv2 che CVSSv3 dovrebbe risolvere. Dopo un certo periodo di tempo, a tutti i CVE viene assegnato anche un punteggio CVSSv3. Inoltre, gli intervalli di punteggio e le formule sono stati aggiornati tra CVSSv2 e CVSSv3.</p> <p>Nel CVSSv2, sia Exploit che (Technical) Impact potevano essere fino a 10.0, ma la formula li riduceva al 60% per Exploit e al 40% per Impact. Nel CVSSv3, il massimo teorico era limitato a 6.0 per Exploit e 4.0 per Impact. Con la ponderazione considerata, il punteggio di Impact si \u00e8 spostato pi\u00f9 in alto, quasi un punto e mezzo in media in CVSSv3, e l'exploitability si \u00e8 spostato quasi mezzo punto pi\u00f9 in basso in media.</p> <p>Ci sono 125k record di una CVE corrispondente a una CWE nei dati del National Vulnerability Database (NVD) estratti da OWASP Dependency Check, e ci sono 241 CWE uniche corrispondenti a un CVE. 62k corrispondenze di CWE hanno un punteggio CVSSv3, che \u00e8 circa la met\u00e0 della popolazione nel set di dati.</p> <p>Per la Top Ten 2021, abbiamo calcolato i punteggi medi di Exploit e Impact nel modo seguente. Abbiamo raggruppato tutte le CVE con punteggi CVSS per CWE e ponderato entrambi i punteggi di Exploit e Impact per la percentuale della popolazione che aveva CVSSv3 pi\u00f9 la restante popolazione di punteggi CVSSv2 per ottenere una media complessiva. Abbiamo messo in corrispondenza queste medie alle CWE nel dataset da usare come punteggio di Exploit e (Technical) Impact per l'altra met\u00e0 dell'equazione del rischio.</p>"},{"location":"it/A00_2021_Introduction/#perche-non-utilizzare-dati-puramente-statistici","title":"Perch\u00e8 non utilizzare dati puramente statistici?","text":"<p>I risultati nei dati sono principalmente limitati a ci\u00f2 che possiamo testare in modo automatico. Parlate con un professionista esperto di AppSec e vi racconter\u00e0 delle vulnerabilit\u00e0 che trova e delle tendenze che vede che non sono ancora visibili nei dati. Ci vuole tempo perch\u00e9 le persone sviluppino metodologie di test per certi tipi di vulnerabilit\u00e0 e poi ancora pi\u00f9 tempo perch\u00e9 quei test siano automatizzati ed eseguiti su una vasta popolazione di applicazioni. Tutto ci\u00f2 che troviamo sta guardando indietro nel passato e potrebbe mancare delle tendenze dell'ultimo anno, che non sono presenti nei dati.</p> <p>Pertanto, prendiamo solo otto delle dieci categorie dai dati perch\u00e9 sono incompleti. Le altre due categorie provengono dal sondaggio della comunit\u00e0 Top 10. Questo permette ai professionisti in prima linea di votare per ci\u00f2 che identificano come i rischi pi\u00f9 alti che potrebbero non essere ancora visibili nei dati (e potrebbero non essere mai espressi nei dati).</p>"},{"location":"it/A00_2021_Introduction/#perche-tasso-di-incidenza-anziche-frequenza","title":"Perch\u00e8 tasso di incidenza anzich\u00e8 frequenza?","text":"<p>Ci sono tre fonti primarie di dati. Le identifichiamo come Human-assisted Tooling (HaT), Tool-assisted Human (TaH), e Tooling grezzo.</p> <p>Tooling e HaT generano una grande quantit\u00e0 di dati. Gli strumenti cercheranno vulnerabilit\u00e0 specifiche e tenteranno instancabilmente di trovare ogni istanza di quella vulnerabilit\u00e0 e genereranno un numero elevato di risultati per alcuni tipi di vulnerabilit\u00e0. Guardate il Cross-Site Scripting, che \u00e8 tipicamente di due tipi: o \u00e8 un errore piccolo e isolato o un problema sistemico. Quando si tratta di un problema sistemico, il conteggio pu\u00f2 essere di migliaia per una singola applicazione. Questa alta frequenza copre la maggior parte delle altre vulnerabilit\u00e0 trovate nei report o nei dati.</p> <p>TaH, d'altra parte, trover\u00e0 una gamma pi\u00f9 ampia di tipi di vulnerabilit\u00e0, ma con una frequenza molto pi\u00f9 bassa a causa dei vincoli temporali. Quando gli esseri umani testano un'applicazione e identificano problematiche come il Cross-Site Scripting, in genere trovano tre o quattro istanze e si fermano. Possono determinare una scoperta sistemica e scrivere nel report consigli per la correzione della problematica sull'intera applicazione. Non c'\u00e8 bisogno (o tempo) di trovare ogni istanza.</p> <p>Supponiamo di prendere questi due insiemi di dati distinti e cercare di unirli ina base alla frequenza. In questo caso, i dati di Tooling e HaT sommergeranno i pi\u00f9 accurati (ma ampi) dati TaH ed \u00e8 una buona parte del motivo per cui qualcosa come Cross-Site Scripting \u00e8 stato cos\u00ec altamente classificato in molte liste quando l'impatto \u00e8 generalmente basso o moderato. \u00c8 a causa dell'enorme volume di risultati. (Il Cross-Site Scripting \u00e8 anche ragionevolmente facile da testare, quindi ci sono molti pi\u00f9 test anche per questo).</p> <p>Nel 2017, abbiamo introdotto l'uso del tasso di incidenza per dare un nuovo sguardo ai dati e fondere in modo pulito i dati di Tooling e HaT con i dati TaH. Il tasso di incidenza chiede quale percentuale della popolazione di applicazioni ha avuto almeno un'istanza di un tipo di vulnerabilit\u00e0. Non ci interessa se era una tantum o sistemica. Questo \u00e8 irrilevante per i nostri scopi; abbiamo solo bisogno di sapere quante applicazioni ne avevano almeno un'istanza, il che aiuta a fornire una visione pi\u00f9 chiara dei risultati senza rischiare di inquinare i dati con risultati relativi a problematiche ad alta frequenza. Questo corrisponde a una visione legata al rischio, poich\u00e9 un attaccante ha bisogno di una sola istanza di una determinata vulnerabilit\u00e0 per attaccare con successo un'applicazione.</p>"},{"location":"it/A00_2021_Introduction/#quale-e-il-processo-di-raccolta-e-analisi-dei-dati","title":"Quale \u00e8 il processo di raccolta e analisi dei dati?","text":"<p>Abbiamo formalizzato il processo di raccolta dati OWASP Top 10 all'Open Security Summit del 2017. I leader di OWASP Top 10 e la comunit\u00e0 hanno trascorso due giorni a formalizzare un processo di raccolta dati trasparente. Per l'edizione 2021 \u00e8 la seconda volta che abbiamo usato questa metodologia.</p> <p>Richiediamo i dati attraverso i canali dei social media a nostra disposizione, sia del progetto che di OWASP. Sulla pagina del progetto OWASP, elenchiamo quali variabili e quale struttura stiamo cercando nei dati e come inviarli. Nela pagina GitHub, abbiamo file di esempio che servono come modelli. Lavoriamo con le organizzazioni, se necessario, per aiutarle a capire la struttura e la correlazione delle relative CWE.</p> <p>Otteniamo dati da organizzazioni che sono aziende che svolgono test di sicurezza, piattaforme di bug bounty e organizzazioni che contribuiscono con dati di test interni. Una volta che abbiamo i dati, li carichiamo insieme ed eseguiamo un'analisi fondamentale, ovvero la corrispondenza delle CWE alle categorie di rischio. C'\u00e8 una sovrapposizione tra alcune CWE, e altre sono strettamente correlati (es. vulnerabilit\u00e0 crittografiche). Qualsiasi decisione relativa ai dati grezzi presentati \u00e8 documentata e pubblicata per essere aperti e trasparenti sul processo di normalizzazione dei dati.</p> <p>Guardiamo le otto categorie con i pi\u00f9 alti tassi di incidenza per l'inclusione nella Top 10. Guardiamo anche i risultati del sondaggio della comunit\u00e0 Top 10 per vedere quali possono essere gi\u00e0 presenti nei dati. I primi due voti che non sono gi\u00e0 presenti nei dati saranno selezionati per gli altri due posti nella Top 10. Una volta che tutti e dieci sono stati selezionati, abbiamo applicato fattori generici per la sfruttabilit\u00e0 e l'impatto; per produrre una Top 10 2021 in un ordine basato sul rischio.</p>"},{"location":"it/A00_2021_Introduction/#etichette-dei-dati","title":"Etichette dei dati","text":"<p>Ci sono alcune etichette che sono elencati per ciascuna delle 10 categorie principali, ecco cosa significano:</p> <ul> <li>CWEs corrispondenti: Il numero di CWE corrispondenti a una categoria dal team Top 10.</li> <li>Tasso di incidenza:  Il tasso di incidenza \u00e8 la percentuale di applicazioni vulnerabili a quel CWE dalla popolazione testata da quella org per quell'anno.</li> <li>Copertura (di test): La percentuale di applicazioni testate da tutte le organizzazioni per un dato CWE.</li> <li>Sfruttabilit\u00e0 pesata: Il sub-score Exploit dai punteggi CVSSv2 e CVSSv3 assegnati ai CVE corrispondenti ai CWE, normalizzati e posizionati su una scala di 10 punti.</li> <li>Impatto pesato: Il sub-score di impatto dai punteggi CVSSv2 e CVSSv3 assegnati ai CVE corrispondenti ai CWE, normalizzato e posizionato su una scala di 10 punti.</li> <li>Occorrenze totali: Numero totale di applicazioni trovate che hanno i CWE corrispondenti ad una categoria.</li> <li>CVE totali: Numero totale di CVE nel DB NVD che sono stati messi in corrispondenza ai CWE relativi a una categoria.</li> </ul>"},{"location":"it/A00_2021_Introduction/#ringraziamo-chi-ha-contribuito-con-i-dati","title":"Ringraziamo chi ha contribuito con i dati","text":"<p>Le seguenti organizzazioni (insieme ad alcuni donatori anonimi) hanno gentilmente donato i dati per oltre 500.000 applicazioni per rendere questo il pi\u00f9 grande e completo set di dati sulla sicurezza delle applicazioni. Senza di voi, questo non sarebbe possibile.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"it/A00_2021_Introduction/#grazie-ai-nostri-sponsor","title":"Grazie ai nostri sponsor","text":"<p>Il team OWASP Top 10 2021 ringrazia il supporto finanziario di Secure Code Warrior e Just Eats.</p> <p></p> <p></p>"},{"location":"it/A01_2021-Broken_Access_Control/#fattori","title":"Fattori","text":"CWEs corrispondenti Tasso di incidenza Max Tasso di incidenza Medio Sfruttabilit\u00e0 pesata Impatto Medio Copertura Max Copertura media Occorrenze Totali CVE Totali 34 55.97% 3.81% 6.92 5.93 94.55% 47.72% 318,487 19,013"},{"location":"it/A01_2021-Broken_Access_Control/#panoramica","title":"Panoramica","text":"<p>Salendo dalla quinta posizione, il 94% delle applicazioni \u00e8 stato testato per una qualche forma di broken access control con un tasso medio di incidenza del 3,81%, e ha il maggior numero di occorrenze nel dataset con oltre 318k. Le Common Weakness Enumerations (CWE) incluse sono CWE-200: Exposure of Sensitive Information to an Unauthorized Actor, CWE-201: Exposure of Sensitive Information Through Sent Data, e CWE-352: Cross-Site Request Forgery.</p>"},{"location":"it/A01_2021-Broken_Access_Control/#descrizione","title":"Descrizione","text":"<p>Il controllo degli accessi fa rispettare la policy in modo che gli utenti non possano agire al di fuori dei permessi previsti. Problematiche su questo tipo di controllo tipicamente portano alla divulgazione non autorizzata di informazioni, alla modifica o alla distruzione di tutti i dati o l'esecuzione di una funzione di business al di fuori dei limiti dell'utente. Le vulnerabilit\u00e0 pi\u00f9 comuni che affliggono i meccanismi di controllo degli accessi includono:</p> <ul> <li> <p>Violazione del principio del minimo privilegio o deny by default,   dove l'accesso dovrebbe essere concesso solo per particolari capabilities,   ruoli o utenti, ma \u00e8 disponibile a chiunque.</p> </li> <li> <p>Bypassare i controlli di accesso modificando l'URL (modifica dei parametri o   navigazione forzata), lo stato interno dell'applicazione o la   pagina HTML, o utilizzando uno strumento di attacco che modifica le richieste API.</p> </li> <li> <p>Permettere la visualizzazione o la modifica dell'account di qualcun altro, fornendo   il suo identificatore unico (insecure direct object references)</p> </li> <li> <p>Accesso all'API con controlli di accesso mancanti per POST, PUT e DELETE.</p> </li> <li> <p>Elevazione dei privilegi. Agire come un utente senza essere loggato o   agire come amministratore quando si \u00e8 svolto il login come utente base.</p> </li> <li> <p>Manipolazione dei metadati, come la riproduzione o la modifica di un JSON   Web Token (JWT), o un cookie o un campo nascosto   manipolati per elevare i privilegi o abusare dell'invalidazione del JWT.</p> </li> <li> <p>La configurazione errata di CORS permette l'accesso all'API da origini non autorizzate/non fidate.</p> </li> <li> <p>Forzare la navigazione verso pagine autenticate come utente non autenticato o   a pagine privilegiate come utente base.</p> </li> </ul>"},{"location":"it/A01_2021-Broken_Access_Control/#come-prevenirla","title":"Come prevenirla","text":"<p>Il controllo degli accessi \u00e8 efficace solo nel codice lato server o API server-less, dove l'attaccante non pu\u00f2 modificare i meccanismi di controllo dell'accesso o i metadati.</p> <ul> <li> <p>Tranne che per le risorse pubbliche, applicare il principio di deny by default.</p> </li> <li> <p>Implementare i meccanismi di controllo dell'accesso una volta sola e riutilizzarli in tutta   l'applicazione, incluso limitare l'utilizzo di Cross-Origin Resource Sharing (CORS).</p> </li> <li> <p>I controlli di accesso del Model dovrebbero imporre la propriet\u00e0 dei record piuttosto che   accettare che l'utente possa creare, leggere, aggiornare o cancellare qualsiasi   record.</p> </li> <li> <p>I requisiti unici dei vincoli di business di un'applicazione dovrebbero essere applicati nei   modelli di dominio.</p> </li> <li> <p>Disabilitare il directory listing del server web e garantire che i metadati dei file (ad es,   .git) e i file di backup non siano presenti all'interno delle web roots.</p> </li> <li> <p>Registrare i fallimenti dei meccanismi di controllo dell'accesso, avvisare gli amministratori quando appropriato (ad es,   fallimenti ripetuti).</p> </li> <li> <p>Implementare meccanismi di rate limiting per accesso all'API e al controller per minimizzare il danno da   strumenti di attacco automatizzati.</p> </li> <li> <p>Gli identificatori di sessione stateful dovrebbero essere invalidati sul server dopo il logout.   I token JWT stateless dovrebbero piuttosto essere di breve durata in modo che la finestra di    opportunit\u00e0 per un attaccante sia ridotta al minimo. Per i JWT di lunga durata \u00e8 altamente raccomandato di   seguire gli standard OAuth per revocare l'accesso.</p> </li> </ul> <p>Gli sviluppatori e lo staff di QA dovrebbero includere test funzionali di controllo dell'accesso e test di integrazione.</p>"},{"location":"it/A01_2021-Broken_Access_Control/#esempi-di-scenari-dattacco","title":"Esempi di scenari d'attacco","text":"<p>Scenario #1: L'applicazione usa dati non verificati in una chiamata SQL che sta accedendo alle informazioni dell'account:</p> <pre><code> pstmt.setString(1, request.getParameter(\"acct\"));\n ResultSet results = pstmt.executeQuery( );\n</code></pre> <p>Un attaccante modifica semplicemente il parametro 'acct' del browser per inviare numero di conto a piacere. Se il parametro non \u00e8 verificato correttamente, l'attaccante pu\u00f2 accedere all'account di qualsiasi utente.</p> <pre><code> https://example.com/app/accountInfo?acct=notmyacct\n</code></pre> <p>Scenario #2: Un attaccante forza semplicemente la navigazione verso gli URL di destinazione. Sono richiesti i diritti di amministratore per accedere alla pagina di amministrazione.</p> <pre><code> https://example.com/app/getappInfo\n https://example.com/app/admin_getappInfo\n</code></pre> <p>Se un utente non autenticato pu\u00f2 accedere a una delle due pagine, \u00e8 una falla. Se un non amministratore pu\u00f2 accedere alla pagina dell'amministratore, questa \u00e8 una falla.</p>"},{"location":"it/A01_2021-Broken_Access_Control/#riferimenti","title":"Riferimenti","text":"<ul> <li> <p>OWASP Proactive Controls: Enforce Access     Controls</p> </li> <li> <p>OWASP Application Security Verification Standard: V4 Access     Control</p> </li> <li> <p>OWASP Testing Guide: Authorization     Testing</p> </li> <li> <p>OWASP Cheat Sheet: Authorization</p> </li> <li> <p>PortSwigger: Exploiting CORS     misconfiguration</p> </li> <li> <p>OAuth: Revoking Access</p> </li> </ul>"},{"location":"it/A01_2021-Broken_Access_Control/#lista-dei-cwes-correlati","title":"Lista dei CWEs correlati","text":"<p>CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</p> <p>CWE-23 Relative Path Traversal</p> <p>CWE-35 Path Traversal: '.../...//'</p> <p>CWE-59 Improper Link Resolution Before File Access ('Link Following')</p> <p>CWE-200 Exposure of Sensitive Information to an Unauthorized Actor</p> <p>CWE-201 Exposure of Sensitive Information Through Sent Data</p> <p>CWE-219 Storage of File with Sensitive Data Under Web Root</p> <p>CWE-264 Permissions, Privileges, and Access Controls (should no longer be used)</p> <p>CWE-275 Permission Issues</p> <p>CWE-276 Incorrect Default Permissions</p> <p>CWE-284 Improper Access Control</p> <p>CWE-285 Improper Authorization</p> <p>CWE-352 Cross-Site Request Forgery (CSRF)</p> <p>CWE-359 Exposure of Private Personal Information to an Unauthorized Actor</p> <p>CWE-377 Insecure Temporary File</p> <p>CWE-402 Transmission of Private Resources into a New Sphere ('Resource Leak')</p> <p>CWE-425 Direct Request ('Forced Browsing')</p> <p>CWE-441 Unintended Proxy or Intermediary ('Confused Deputy')</p> <p>CWE-497 Exposure of Sensitive System Information to an Unauthorized Control Sphere</p> <p>CWE-538 Insertion of Sensitive Information into Externally-Accessible File or Directory</p> <p>CWE-540 Inclusion of Sensitive Information in Source Code</p> <p>CWE-548 Exposure of Information Through Directory Listing</p> <p>CWE-552 Files or Directories Accessible to External Parties</p> <p>CWE-566 Authorization Bypass Through User-Controlled SQL Primary Key</p> <p>CWE-601 URL Redirection to Untrusted Site ('Open Redirect')</p> <p>CWE-639 Authorization Bypass Through User-Controlled Key</p> <p>CWE-651 Exposure of WSDL File Containing Sensitive Information</p> <p>CWE-668 Exposure of Resource to Wrong Sphere</p> <p>CWE-706 Use of Incorrectly-Resolved Name or Reference</p> <p>CWE-862 Missing Authorization</p> <p>CWE-863 Incorrect Authorization</p> <p>CWE-913 Improper Control of Dynamically-Managed Code Resources</p> <p>CWE-922 Insecure Storage of Sensitive Information</p> <p>CWE-1275 Sensitive Cookie with Improper SameSite Attribute</p>"},{"location":"it/A02_2021-Cryptographic_Failures/#fattori","title":"Fattori","text":"CWEs corrispondenti Tasso di incidenza Max Tasso di incidenza Medio Sfruttabilit\u00e0 pesata Impatto Medio Copertura Max Copertura media Occorrenze Totali CVE Totali 29 46.44% 4.49% 7.29 6.81 79.33% 34.85% 233,788 3,075"},{"location":"it/A02_2021-Cryptographic_Failures/#panoramica","title":"Panoramica","text":"<p>Sale alla seconda posizione, precedentemente conosciuta come Sensitive Data Exposure, che \u00e8 pi\u00f9 un ampio sintomo piuttosto che la causa principale, l'attenzione \u00e8 sulle problematiche relative alla crittografia (o la sua mancanza) che spesso portano all'esposizione di dati sensibili. Le Common Weakness Enumerations (CWE) incluse sono CWE-259: Use of Hard-coded Password, CWE-327: Broken or Risky Crypto Algorithm, e CWE-331 Insufficient Entropy.</p>"},{"location":"it/A02_2021-Cryptographic_Failures/#descrizione","title":"Descrizione","text":"<p>Il primo passo \u00e8 determinare le esigenze di protezione dei dati in transito e a riposo. Per esempio, password, numeri di carte di credito, documenti sanitari, informazioni personali e segreti aziendali richiedono una protezione adeguata, soprattutto se quei dati ricadono sotto le leggi sulla privacy, ad es. General Data Protection Regulation (GDPR), o regolamenti, ad es, protezione dei dati finanziari come il PCI Data Security Standard (PCI DSS). Per tutti questi dati:</p> <ul> <li> <p>I dati sono trasmessi in chiaro? Questo riguarda protocolli come     come HTTP, SMTP, FTP che utilizzano anche aggiornamenti TLS come STARTTLS.      Il traffico internet esterno \u00e8 pericoloso. Verificare tutto il traffico interno, ad es,      tra load balancer, server web o sistemi back-end.</p> </li> <li> <p>Ci sono algoritmi o protocolli crittografici vecchi o deboli utilizzati      di default o nel codice pi\u00f9 vecchio?</p> </li> <li> <p>Sono utilizzate chiavi crittografiche predefinite, chiavi crittografiche deboli generate o     riutilizzate, o manca un'adeguata gestione o rotazione delle chiavi?     Le chiavi crittografiche sono nei repository del codice sorgente?</p> </li> <li> <p>La crittografia non \u00e8 applicata, ad esempio, ci sono header HTTP (browser)     direttive di sicurezza o altri header mancanti?</p> </li> <li> <p>Il certificato ricevuto dal server e la chain of trust sono validati correttamente? </p> </li> <li> <p>I vettori di inizializzazione sono ignorati, riutilizzati o non generati in modo     sufficientemente sicuro per il funzionamento di una certa modalit\u00e0 crittografica?     \u00c8 in uso una modalit\u00e0 crittografica insicura come l'ECB? Viene utilizzata la semplice crittografia     quando \u00e8 invece necessario abbinarla anche ad un meccanismo di autenticazione?</p> </li> <li> <p>Le password vengono usate come chiavi crittografiche senza l'utilizzo di una     funzione di derivazione della chiave basata sulla password?</p> </li> <li> <p>Viene utilizzata una funzione di randomness che non \u00e8 stata progettata     per soddisfare i requisiti crittografici? Anche se viene utilizzata la funzione appropriata,      il seed deve essere inizializzato dallo sviluppatore, e se no,     lo sviluppatore ha sovrascritto la funzionalit\u00e0 di seed forte incorporata     con una che manca di sufficiente entropia/imprevedibilit\u00e0?</p> </li> <li> <p>Vengono utilizzate funzioni hash deprecate come MD5 o SHA1, o vengono utilizzate     funzioni hash non crittografiche quando sono necessarie funzioni hash crittografiche?</p> </li> <li> <p>Sono utilizzati metodi deprecati di padding crittografico come PKCS#1 v1.5?</p> </li> <li> <p>I messaggi di errore crittografici o le informazioni ottenute da un side channel sono     sfruttabili, per esempio per svolgere attacchi padding oracle?</p> </li> </ul> <p>Vedi ASVS Crypto (V7), Data Protection (V9), e SSL/TLS (V10)</p>"},{"location":"it/A02_2021-Cryptographic_Failures/#come-prevenire","title":"Come prevenire","text":"<p>Fare quanto segue, come minimo, e consultare i riferimenti in calce:</p> <ul> <li> <p>Classificare i dati elaborati, memorizzati o trasmessi da un'applicazione.     Identificare quali dati sono sensibili secondo le leggi sulla privacy,     requisiti normativi o esigenze aziendali.</p> </li> <li> <p>Non conservare inutilmente i dati sensibili. Eliminarli il prima possibile     o utilizzare un meccanismo di tokenizzazione conforme a PCI DSS o anche il troncamento.     I dati che non vengono conservati non possono essere rubati.</p> </li> <li> <p>Assicurarsi di cifrare tutti i dati sensibili a riposo.</p> </li> <li> <p>Utilizzare algoritmi, protocolli e chiavi standard forti e aggiornati.     Avere un adeguato processo di key management.</p> </li> <li> <p>Crittografare tutti i dati in transito con protocolli sicuri come TLS con     cifrari che garantiscano la FS (forward secrecy), prioritizzazione dei cifrari da parte del     server e parametri sicuri. Applicare la crittografia usando direttive     come HTTP Strict Transport Security (HSTS).</p> </li> <li> <p>Disabilitare il caching per le risposte che contengono dati sensibili.</p> </li> <li> <p>Applicare i controlli di sicurezza adeguati secondo la classificazione dei dati.</p> </li> <li> <p>Non usare protocolli legacy come FTP e SMTP per il trasporto di     dati sensibili.</p> </li> <li> <p>Memorizzare le password usando forti funzioni di hashing adattive con salt     con un work factor (delay factor), come Argon2, scrypt, bcrypt o     PBKDF2.</p> </li> <li> <p>I vettori di inizializzazione devono essere scelti in modo appropriato per il modo di     funzionamento.  Per molti modi di funzionamento, questo significa usare un CSPRNG (cryptographically     secure pseudo random number generator).  Per quelli che richiedono un     nonce, allora il vettore di inizializzazione (IV) non ha bisogno di un CSPRNG.  In tutti i casi, l'IV     non dovrebbe mai essere usato due volte per una stessa chiave.</p> </li> <li> <p>Usare sempre un meccanismo di crittografia autenticata invece della semplice crittografia.</p> </li> <li> <p>Le chiavi dovrebbero essere generate crittograficamente in modo casuale e memorizzate in     memoria come array di byte. Se viene usata una password, questa deve essere convertita     in una chiave tramite un'appropriata funzione di derivazione della chiave basata sulla password.</p> </li> <li> <p>Assicuratevi che la randomness crittografica venga utilizzata laddove appropriato, e     che non sia stato utilizzato un seed prevedibile o con bassa entropia.     La maggior parte delle API moderne non richiedono allo sviluppatore di inizializzare il seed della CSPRNG.</p> </li> <li> <p>Evitare funzioni crittografiche e schemi di padding deprecati, come     MD5, SHA1, PKCS#1 v1.5 </p> </li> <li> <p>Verificare in modo indipendente l'efficacia della configurazione e delle     impostazioni.</p> </li> </ul>"},{"location":"it/A02_2021-Cryptographic_Failures/#esempi-di-scenari-dattacco","title":"Esempi di scenari d'attacco","text":"<p>Scenario #1: Un'applicazione cifra i numeri delle carte di credito in un database usando la crittografia automatica del database. Tuttavia, questi dati sono automaticamente decriptati quando vengono recuperati, permettendo ad una falla di SQL injection di recuperare i numeri delle carte di credito in chiaro.</p> <p>Scenario #2: Un sito non usa o applica TLS per tutte le pagine o supporta una crittografia debole. Un aggressore monitora il traffico di rete (ad es. una rete wireless insicura), svolge il downgrade della connessione da HTTPS a HTTP, intercetta le richieste e ruba il cookie di sessione dell'utente.  L'attaccante riproduce questo cookie e dirotta la sessione dell'utente (autenticato) accedendo o modificando i dati privati dell'utente.  Oppure potrebbe alterare tutti i dati in transito, ad esempio, modificando il destinatario di un trasferimento di denaro.</p> <p>Scenario #3: Il database delle password usa hash semplici o senza salt per memorizzare le password di tutti gli utenti. Una falla nel caricamento dei file permette ad un attaccante di recuperare il database delle password. Tutti gli hash senza salt possono essere violati con una rainbow table di hash precalcolati. Gli hash generati da funzioni hash semplici o veloci possono essere decifrati dalle GPU, anche se in presenza di salt.</p>"},{"location":"it/A02_2021-Cryptographic_Failures/#riferimenti","title":"Riferimenti","text":"<ul> <li> <p>OWASP Proactive Controls: Protect Data     Everywhere</p> </li> <li> <p>OWASP Application Security Verification Standard (V7,     9, 10)</p> </li> <li> <p>OWASP Cheat Sheet: Transport Layer     Protection</p> </li> <li> <p>OWASP Cheat Sheet: User Privacy     Protection</p> </li> <li> <p>OWASP Cheat Sheet: Password and Cryptographic Storage</p> </li> <li> <p>OWASP Cheat Sheet:     HSTS</p> </li> <li> <p>OWASP Testing Guide: Testing for weak cryptography</p> </li> </ul>"},{"location":"it/A02_2021-Cryptographic_Failures/#lista-dei-cwe-correlati","title":"Lista dei CWE correlati","text":"<p>CWE-261 Weak Encoding for Password</p> <p>CWE-296 Improper Following of a Certificate's Chain of Trust</p> <p>CWE-310 Cryptographic Issues</p> <p>CWE-319 Cleartext Transmission of Sensitive Information</p> <p>CWE-321 Use of Hard-coded Cryptographic Key</p> <p>CWE-322 Key Exchange without Entity Authentication</p> <p>CWE-323 Reusing a Nonce, Key Pair in Encryption</p> <p>CWE-324 Use of a Key Past its Expiration Date</p> <p>CWE-325 Missing Required Cryptographic Step</p> <p>CWE-326 Inadequate Encryption Strength</p> <p>CWE-327 Use of a Broken or Risky Cryptographic Algorithm</p> <p>CWE-328 Reversible One-Way Hash</p> <p>CWE-329 Not Using a Random IV with CBC Mode</p> <p>CWE-330 Use of Insufficiently Random Values</p> <p>CWE-331 Insufficient Entropy</p> <p>CWE-335 Incorrect Usage of Seeds in Pseudo-Random Number Generator(PRNG)</p> <p>CWE-336 Same Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-337 Predictable Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-338 Use of Cryptographically Weak Pseudo-Random Number Generator(PRNG)</p> <p>CWE-340 Generation of Predictable Numbers or Identifiers</p> <p>CWE-347 Improper Verification of Cryptographic Signature</p> <p>CWE-523 Unprotected Transport of Credentials</p> <p>CWE-720 OWASP Top Ten 2007 Category A9 - Insecure Communications</p> <p>CWE-757 Selection of Less-Secure Algorithm During Negotiation('Algorithm Downgrade')</p> <p>CWE-759 Use of a One-Way Hash without a Salt</p> <p>CWE-760 Use of a One-Way Hash with a Predictable Salt</p> <p>CWE-780 Use of RSA Algorithm without OAEP</p> <p>CWE-818 Insufficient Transport Layer Protection</p> <p>CWE-916 Use of Password Hash With Insufficient Computational Effort</p>"},{"location":"it/A03_2021-Injection/#fattori","title":"Fattori","text":"CWEs corrispondenti Tasso di incidenza Max Tasso di incidenza Medio Sfruttabilit\u00e0 pesata Impatto Medio Copertura Max Copertura media Occorrenze Totali CVE Totali 33 19.09% 3.37% 7.25 7.15 94.04% 47.90% 274,228 32,078"},{"location":"it/A03_2021-Injection/#panoramica","title":"Panoramica","text":"<p>Injection scende alla terza posizione. Il 94% delle applicazioni sono state testate per qualche forma di injection con un tasso massimo di incidenza del 19%, un tasso medio di incidenza del 3% e 274k occorrenze. Le Common Weakness Enumerations (CWEs) incluse sono CWE-79: Cross-site Scripting, CWE-89: SQL Injection, and CWE-73: External Control of File Name or Path.</p>"},{"location":"it/A03_2021-Injection/#descrizione","title":"Descrizione","text":"<p>Un'applicazione \u00e8 vulnerabile alle injection quando:</p> <ul> <li> <p>I dati forniti dall'utente non sono validati, filtrati o sanificati dall'applicazione.</p> </li> <li> <p>Le query dinamiche o le chiamate non parametrizzate senza escaping contestuale vengono passate direttamente    all'interprete.</p> </li> <li> <p>Input malevolo viene usato all'interno di parametri di ricerca di un ORM (object-relational mapping)     per estrarre ulteriori record sensibili.</p> </li> <li> <p>Input malevolo viene usato in modo diretto o concatenato. Le query SQL o i comandi     includono i dati ostili nelle query dinamiche, nei comandi o nelle stored procedure.</p> </li> </ul> <p>Alcune delle forme di injection pi\u00f9 comuni sono SQL, NoSQL, OS command, Object Relational Mapping (ORM), LDAP, e Expression Language (EL) o Object Graph Navigation Library (OGNL). Il concetto \u00e8 identico tra tutti gli interpreti. La revisione del codice sorgente \u00e8 il metodo migliore per rilevare se le applicazioni sono vulnerabili alle injection. \u00c8 fortemente consigliato il testing automatico di tutti i parametri, headers, URL, cookie, e sui formati di dato come JSON, SOAP e XML.  Le organizzazioni possono includere strumenti statici (SAST), dinamici (DAST) e interattivi (IAST) per i test di sicurezza delle applicazioni nella pipeline CI/CD per identificare prima della messa in produzione le problematiche di injection eventualmente presenti.</p>"},{"location":"it/A03_2021-Injection/#come-prevenire","title":"Come prevenire","text":"<p>Prevenire le forme di injection richiede di mantenere i dati separati dai comandi e dalle query:</p> <ul> <li> <p>L'opzione preferita \u00e8 quella di usare un'API sicura, che eviti di usare l'interprete     interamente, che fornisce un'interfaccia parametrizzata o     migra verso strumenti di Object Relational Mapping (ORM). Nota: Anche quando sono parametrizzate, le stored procedure possono ancora introdurre     SQL injection se PL/SQL o T-SQL concatena query e dati o     esegue input ostili con EXECUTE IMMEDIATE o exec().</p> </li> <li> <p>Usare una validazione degli input lato server positiva. Questa     non \u00e8 una difesa completa, poich\u00e9 molte applicazioni richiedono caratteri speciali,      come aree di testo o API per applicazioni mobili.</p> </li> <li> <p>Per qualsiasi query dinamica residua, svolgera l'escaping dei caratteri speciali usando     la sintassi di escape specifica per quell'interprete. Nota: Le strutture SQL come i nomi delle tabelle, i nomi delle colonne e cos\u00ec via     non possono essere oggetto di escape, e quindi i nomi di queste strutture fornite dall'utente sono     e rimangono pericolose. Questo \u00e8 un problema comune nel software di reportistica.</p> </li> <li> <p>Usare LIMIT e altri controlli SQL all'interno delle query per prevenire la     divulgazione di massa dei record in caso di SQL injection.</p> </li> </ul>"},{"location":"it/A03_2021-Injection/#esempi-di-scenari-dattacco","title":"Esempi di scenari d'attacco","text":"<p>Scenario #1: Un'applicazione usa dati non fidati nella costruzione della seguente chiamata SQL vulnerabile:</p> <pre><code>String query = \"SELECT \\* FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\";\n</code></pre> <p>Scenario #2: Allo stesso modo, la fiducia cieca di un'applicazione nei framework pu\u00f2 risultare in query che sono ancora vulnerabili, (ad esempio, Hibernate Query Language (HQL)):</p> <pre><code> Query HQLQuery = session.createQuery(\"FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\");\n</code></pre> <p>In entrambi i casi, l'attaccante modifica il valore del parametro 'id' nel suo browser per inviare: ' UNION SELECT SLEEP(10);--. Per esempio:</p> <pre><code> http://example.com/app/accountView?id=' UNION SELECT SLEEP(10);--\n</code></pre> <p>Questo cambia il significato di entrambe le query per restituire tutti i record dalla della tabella degli account. Attacchi pi\u00f9 pericolosi potrebbero modificare o cancellare i dati o anche invocare stored procedures.</p>"},{"location":"it/A03_2021-Injection/#riferimenti","title":"Riferimenti","text":"<ul> <li> <p>OWASP Proactive Controls: Secure Database Access</p> </li> <li> <p>OWASP ASVS: V5 Input Validation and Encoding</p> </li> <li> <p>OWASP Testing Guide: SQL Injection, Command Injection,     and\u00a0ORM Injection</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: SQL Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention in Java</p> </li> <li> <p>OWASP Cheat Sheet: Query Parameterization</p> </li> <li> <p>OWASP Automated Threats to Web Applications \u2013 OAT-014</p> </li> <li> <p>PortSwigger: Server-side template injection</p> </li> </ul>"},{"location":"it/A03_2021-Injection/#lista-dei-cwe-correlati","title":"Lista dei CWE correlati","text":"<p>CWE-20 Improper Input Validation</p> <p>CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')</p> <p>CWE-75 Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)</p> <p>CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection')</p> <p>CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</p> <p>CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</p> <p>CWE-80 Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</p> <p>CWE-83 Improper Neutralization of Script in Attributes in a Web Page</p> <p>CWE-87 Improper Neutralization of Alternate XSS Syntax</p> <p>CWE-88 Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')</p> <p>CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</p> <p>CWE-90 Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</p> <p>CWE-91 XML Injection (aka Blind XPath Injection)</p> <p>CWE-93 Improper Neutralization of CRLF Sequences ('CRLF Injection')</p> <p>CWE-94 Improper Control of Generation of Code ('Code Injection')</p> <p>CWE-95 Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</p> <p>CWE-96 Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')</p> <p>CWE-97 Improper Neutralization of Server-Side Includes (SSI) Within a Web Page</p> <p>CWE-98 Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')</p> <p>CWE-99 Improper Control of Resource Identifiers ('Resource Injection')</p> <p>CWE-100 Deprecated: Was catch-all for input validation issues</p> <p>CWE-113 Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')</p> <p>CWE-116 Improper Encoding or Escaping of Output</p> <p>CWE-138 Improper Neutralization of Special Elements</p> <p>CWE-184 Incomplete List of Disallowed Inputs</p> <p>CWE-470 Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')</p> <p>CWE-471 Modification of Assumed-Immutable Data (MAID)</p> <p>CWE-564 SQL Injection: Hibernate</p> <p>CWE-610 Externally Controlled Reference to a Resource in Another Sphere</p> <p>CWE-643 Improper Neutralization of Data within XPath Expressions ('XPath Injection')</p> <p>CWE-644 Improper Neutralization of HTTP Headers for Scripting Syntax</p> <p>CWE-652 Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')</p> <p>[CWE-917 Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')] (https://cwe.mitre.org/data/definitions/917.html)</p>"},{"location":"it/A04_2021-Insecure_Design/#fattori","title":"Fattori","text":"CWEs corrispondenti Tasso di incidenza Max Tasso di incidenza Medio Sfruttabilit\u00e0 pesata Impatto Medio Copertura Max Copertura media Occorrenze Totali CVE Totali 40 24.19% 3.00% 6.46 6.78 77.25% 42.51% 262,407 2,691"},{"location":"it/A04_2021-Insecure_Design/#panoramica","title":"Panoramica","text":"<p>Una nuova categoria per il 2021 si concentra sui rischi legati ai difetti di progettazione e di architettura, con un appello per un maggiore uso del threat modeling, dei design pattern sicuri e delle architetture di riferimento. Come comunit\u00e0 dobbiamo andare oltre lo \"spostamento a sinistra\" nel processo di sviluppo per svolgere attivit\u00e0 preliminari che sono fondamentali per i principi di Secure by Design. Le Common Weakness Enumerations (CWEs) incluse sono CWE-209: Generation of Error Message Containing Sensitive Information, CWE-256: Unprotected Storage of Credentials, CWE-501: Trust Boundary Violation, and CWE-522: Insufficiently Protected Credentials.</p>"},{"location":"it/A04_2021-Insecure_Design/#descrizione","title":"Descrizione","text":"<p>Insecure design \u00e8 un'ampia categoria che rappresenta diverse debolezze, espressa come \"progettazione inefficace o mancante dei controlli di sicurezza\". Il design insicuro non \u00e8 la fonte di tutte le altre categorie di rischio nella Top 10. Design insicuro e implementazione insicura sono differenti. Distinguiamo tra difetti di progettazione e difetti di implementazione per un motivo: hanno cause e rimedi diversi. Un design sicuro pu\u00f2 ancora avere difetti di implementazione che portano a vulnerabilit\u00e0 che possono essere sfruttate. Un design insicuro non pu\u00f2 essere corretto da un'implementazione perfetta, poich\u00e9 per definizione, i controlli di sicurezza necessari non sono mai stati creati per difendersi da attacchi specifici. Uno dei fattori che contribuiscono al design insicuro \u00e8 la mancanza di un profilo di rischio aziendale inerente al software o al sistema che viene sviluppato, e quindi il fallimento nel determinare quale livello di security design \u00e8 richiesto.</p>"},{"location":"it/A04_2021-Insecure_Design/#requisiti-e-gestione-delle-risorse","title":"Requisiti e gestione delle risorse","text":"<p>Raccogliere e negoziare i requisiti di business per un'applicazione con l'azienda, compresi i requisiti di protezione relativi a riservatezza, integrit\u00e0, disponibilit\u00e0 e autenticit\u00e0 di tutte le risorse di dati e la logica di business prevista. Prendete in considerazione quanto sar\u00e0 esposta la vostra applicazione e se avete bisogno della segregazione dei tenants (oltre al controllo degli accessi). Compilare i requisiti tecnici, compresi i requisiti di sicurezza funzionali e non funzionali. Pianificare e negoziare il budget che copre tutte le attivit\u00e0 di progettazione, costruzione, test e funzionamento, comprese quelle di sicurezza.</p>"},{"location":"it/A04_2021-Insecure_Design/#secure-design","title":"Secure Design","text":"<p>Il secure design \u00e8 una cultura e una metodologia che valuta costantemente le minacce e assicura che il codice sia progettato e testato in modo robusto per prevenire attacchi conosciuti. La fase di threat modeling dovrebbe essere integrata nelle sessioni di perfezionamento (o attivit\u00e0 simili); prestare particolare attenzione ai cambiamenti nei flussi di dati e nel controllo degli accessi o altri controlli di sicurezza. Nello sviluppo della user story determinare il flusso corretto e gli stati considerati invalidi, assicurarsi che siano ben compresi e concordati dalle parti responsabili e interessate. Analizzare i presupposti e le condizioni per i flussi attesi e non attesi, assicurarsi che siano ancora accurati e auspicabili. Determinare come convalidare i presupposti e applicare le condizioni necessarie per i comportamenti corretti. Assicurarsi che i risultati siano documentati nella user story. Imparare dagli errori e offrire incentivi positivi per promuovere i miglioramenti. La progettazione sicura non \u00e8 n\u00e9 un add-on n\u00e9 uno strumento che si pu\u00f2 aggiungere al software.</p>"},{"location":"it/A04_2021-Insecure_Design/#secure-development-lifecycle","title":"Secure Development Lifecycle","text":"<p>Il software sicuro richiede un ciclo di vita di sviluppo sicuro, una qualche forma di modello di progettazione sicuro, una metodologia paved road, una libreria di componenti sicura, strumenti e threat modeling. Rivolgetevi agli specialisti della sicurezza all'inizio di un progetto software per tutto il progetto e la manutenzione del vostro software. Considerate di sfruttare il OWASP Software Assurance Maturity Model (SAMM) per aiutare a strutturare i vostri sforzi di sviluppo del software sicuro.</p>"},{"location":"it/A04_2021-Insecure_Design/#come-prevenire","title":"Come prevenire","text":"<ul> <li> <p>Stabilire e utilizzare un ciclo di vita di sviluppo sicuro con i professionisti di AppSec     per aiutare a valutare e progettare la sicurezza e i controlli relativi alla privacy</p> </li> <li> <p>Stabilire e utilizzare una libreria di design pattern sicuri o     componenti pronti all'uso</p> </li> <li> <p>Usare il threat modeling per i componenti di autenticazione pi\u00f9 critici, il controllo     dell'accesso, logica di business e flussi chiave</p> </li> <li> <p>Integrare il linguaggio e i controlli di sicurezza nelle user stories</p> </li> <li> <p>Integrare i controlli di plausibilit\u00e0 ad ogni livello della vostra applicazione     (dal frontend al backend)</p> </li> <li> <p>Scrivere test unitari e di integrazione per convalidare che tutti i flussi critici      siano resistenti al modello di minaccia rappresentato. Compilare i casi d'uso e i casi di uso improprio per ogni livello della vostra applicazione.</p> </li> <li> <p>Segregare i tier su livelli di sistema e di rete a seconda delle     esigenze di esposizione e protezione.</p> </li> <li> <p>Segregare i tenant in modo robusto by design in tutti i tier.</p> </li> <li> <p>Limitare il consumo di risorse per utente o servizio</p> </li> </ul>"},{"location":"it/A04_2021-Insecure_Design/#esempi-di-scenari-dattacco","title":"Esempi di scenari d'attacco","text":"<p>Scenario #1:  Un flusso per il recupero delle credenziali potrebbe includere \"domande e risposte\", che \u00e8 proibito da NIST 800-63b, OWASP ASVS e OWASP Top 10. Domande e risposte non possono essere attendibili come prova di identit\u00e0 in quanto pi\u00f9 di una persona pu\u00f2 conoscere le risposte, ed \u00e8 per questo che sono state proibite. Tale codice dovrebbe essere rimosso e sostituito con un design pi\u00f9 pi\u00f9 sicuro.</p> <p>Scenario #2: Una catena di cinema permette sconti per prenotazioni di gruppo e ha un massimo di quindici partecipanti prima di richiedere un pagamento. Gli attaccanti potrebbero svolgere il threat modeling di questo flusso e testare se possono prenotare seicento posti in tutti i cinema in una volta sola con poche richieste, causando una massiccia perdita di incassi.</p> <p>Scenario #3: Il sito di e-commerce di una catena di negozi non ha protezione contro i bot gestiti da scalper che comprano schede video di fascia alta per rivenderle su siti di aste online. Questo crea una terribile pubblicit\u00e0 per i produttori di schede video e i proprietari di catene di vendita al dettaglio e il perdurare del cattivo sangue con appassionati che non possono acquistare queste schede in nessun modo. Un'attenta progettazione anti-bot e regole di logica di dominio, come gli acquisti effettuati entro pochi secondi dalla disponibilit\u00e0, potrebbero identificare gli acquisti non autentici e respingere tali transazioni.</p>"},{"location":"it/A04_2021-Insecure_Design/#riferimenti","title":"Riferimenti","text":"<ul> <li> <p>OWASP Cheat Sheet: Secure Design Principles</p> </li> <li> <p>OWASP SAMM: Design:Security Architecture</p> </li> <li> <p>OWASP SAMM: Design:Threat Assessment </p> </li> <li> <p>NIST \u2013 Guidelines on Minimum Standards for Developer Verification of Software</p> </li> <li> <p>The Threat Modeling Manifesto</p> </li> <li> <p>Awesome Threat Modeling</p> </li> </ul>"},{"location":"it/A04_2021-Insecure_Design/#lista-dei-cwe-correlati","title":"Lista dei CWE correlati","text":"<p>CWE-73 External Control of File Name or Path</p> <p>CWE-183 Permissive List of Allowed Inputs</p> <p>CWE-209 Generation of Error Message Containing Sensitive Information</p> <p>CWE-213 Exposure of Sensitive Information Due to Incompatible Policies</p> <p>CWE-235 Improper Handling of Extra Parameters</p> <p>CWE-256 Unprotected Storage of Credentials</p> <p>CWE-257 Storing Passwords in a Recoverable Format</p> <p>CWE-266 Incorrect Privilege Assignment</p> <p>CWE-269 Improper Privilege Management</p> <p>CWE-280 Improper Handling of Insufficient Permissions or Privileges</p> <p>CWE-311 Missing Encryption of Sensitive Data</p> <p>CWE-312 Cleartext Storage of Sensitive Information</p> <p>CWE-313 Cleartext Storage in a File or on Disk</p> <p>CWE-316 Cleartext Storage of Sensitive Information in Memory</p> <p>CWE-419 Unprotected Primary Channel</p> <p>CWE-430 Deployment of Wrong Handler</p> <p>CWE-434 Unrestricted Upload of File with Dangerous Type</p> <p>CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')</p> <p>CWE-451 User Interface (UI) Misrepresentation of Critical Information</p> <p>CWE-472 External Control of Assumed-Immutable Web Parameter</p> <p>CWE-501 Trust Boundary Violation</p> <p>CWE-522 Insufficiently Protected Credentials</p> <p>CWE-525 Use of Web Browser Cache Containing Sensitive Information</p> <p>CWE-539 Use of Persistent Cookies Containing Sensitive Information</p> <p>CWE-579 J2EE Bad Practices: Non-serializable Object Stored in Session</p> <p>CWE-598 Use of GET Request Method With Sensitive Query Strings</p> <p>CWE-602 Client-Side Enforcement of Server-Side Security</p> <p>CWE-642 External Control of Critical State Data</p> <p>CWE-646 Reliance on File Name or Extension of Externally-Supplied File</p> <p>CWE-650 Trusting HTTP Permission Methods on the Server Side</p> <p>CWE-653 Insufficient Compartmentalization</p> <p>CWE-656 Reliance on Security Through Obscurity</p> <p>CWE-657 Violation of Secure Design Principles</p> <p>CWE-799 Improper Control of Interaction Frequency</p> <p>CWE-807 Reliance on Untrusted Inputs in a Security Decision</p> <p>CWE-840 Business Logic Errors</p> <p>CWE-841 Improper Enforcement of Behavioral Workflow</p> <p>CWE-927 Use of Implicit Intent for Sensitive Communication</p> <p>CWE-1021 Improper Restriction of Rendered UI Layers or Frames</p> <p>CWE-1173 Improper Use of Validation Framework</p>"},{"location":"it/A05_2021-Security_Misconfiguration/#fattori","title":"Fattori","text":"CWEs corrispondenti Tasso di incidenza Max Tasso di incidenza Medio Sfruttabilit\u00e0 pesata Impatto Medio Copertura Max Copertura media Occorrenze Totali CVE Totali 20 19.84% 4.51% 8.12 6.56 89.58% 44.84% 208,387 789"},{"location":"it/A05_2021-Security_Misconfiguration/#panoramica","title":"Panoramica","text":"<p>Sale dalla posizione #6 della scorsa edizione, il 90% delle applicazioni testate sono risultate vulnerabili ad una qualche forma di malconfigurazione, con un tasso medio di incidenza del 4%, e pi\u00f9 di 208k occorrenze di Common Weakness Enumeration (CWE) in questa categoria di rischio. Con un trend in crescita verso software sempre pi\u00f9 configurabili, non sorprende vedere queste categoria salire in classifica. Le CWE incluse sono CWE-16 Configuration and CWE-611 Improper Restriction of XML External Entity Reference.</p>"},{"location":"it/A05_2021-Security_Misconfiguration/#descrizione","title":"Descrizione","text":"<p>L'applicazione potrebbe risultare vulnerabile se:</p> <ul> <li> <p>Manca l'hardening di sicurezza appropriato in qualsiasi parte dello     stack applicativo o permessi configurati in modo improprio sui servizi     cloud.</p> </li> <li> <p>Sono abilitate o installate funzioni non necessarie (ad es.     porte, servizi, pagine, account o privilegi non necessari).</p> </li> <li> <p>Gli account di default sono ancora abilitati e presentano password predefinite.</p> </li> <li> <p>A seguito di condizioni di errore, vengono rivelate agli utenti stack traces o altri messaggi  di errore troppo verbosi.</p> </li> <li> <p>Per i sistemi aggiornati, le ultime funzionalit\u00e0 di sicurezza sono disabilitate o     non configurate in modo adeguato.</p> </li> <li> <p>Le impostazioni di sicurezza negli application server, nei framework     (ad esempio, Struts, Spring, ASP.NET), nelle librerie, database, ecc. non sono configurate su valori sicuri.</p> </li> <li> <p>Il server non invia header o direttive di sicurezza o non sono impostati su valori sicuri.</p> </li> <li> <p>Il software non \u00e8 aggiornato o \u00e8 vulnerabile (vedere A06:2021-Vulnerable     and Outdated Components).</p> </li> </ul> <p>Senza un processo coordinato e ripetibile per la configurazione della sicurezza delle applicazioni,  i sistemi presentano un rischio maggiore.</p>"},{"location":"it/A05_2021-Security_Misconfiguration/#come-prevenire","title":"Come prevenire","text":"<p>Dovrebbero essere implementati processi di installazione sicuri, tra cui:</p> <ul> <li> <p>Un processo di hardening ripetibile rende veloce e facile il deploy di     un altro ambiente preconfigurato in modo sicuro. Gli ambienti di sviluppo,     QA e di produzione dovrebbero essere tutti configurati in modo speculare, con credenziali diverse per ogni ambiente.     Questo processo dovrebbe essere automatizzato per minimizzare lo sforzo richiesto per     impostare un nuovo ambiente configurato in modo sicuro.</p> </li> <li> <p>Una piattaforma minimale senza funzionalit\u00e0,componenti,     documentazione ed esempi inutili. Rimuovere o non installare funzionalit\u00e0 e     framework inutilizzati.</p> </li> <li> <p>Un task per rivedere e aggiornare le configurazioni appropriate a tutte le     security notes, aggiornamenti e patch come parte del processo di gestione delle patch     (vedere A06:2021-Vulnerable     and Outdated Components). Revisionare     i permessi del cloud storage (ad esempio, i permessi dei bucket S3).</p> </li> <li> <p>Un'architettura applicativa segmentata fornisce un'efficace e sicura     separazione tra componenti o tenant, con segmentazione,     containerizzazione, o cloud security groups (ACL).</p> </li> <li> <p>L'invio di direttive di sicurezza ai client, ad esempio, i Security Headers.</p> </li> <li> <p>Un processo automatizzato per verificare l'efficacia delle     configurazioni e impostazioni in tutti gli ambienti.</p> </li> </ul>"},{"location":"it/A05_2021-Security_Misconfiguration/#esempi-di-scenari-dattacco","title":"Esempi di scenari d'attacco","text":"<p>Scenario #1: L'application server viene fornito con applicazioni di esempio non rimosse dal server di produzione. Queste applicazioni di esempio hanno falle di sicurezza note che gli attaccanti usano per compromettere il server. Supponiamo che una di queste applicazioni sia la console di amministrazione e che gli account predefiniti non siano stati cambiati. In questo caso, l'attaccante accede con le password predefinite e prende il controllo.</p> <p>Scenario #2: La funzionalit\u00e0 di directory listing non \u00e8 disabilitata sul server. Un attaccante scopre che si possono elencare tutte le directory. L'attaccante trova e scarica le classi Java compilate, su cui esegue la decompilazione e il reverse engineering per visualizzare il codice sorgente. L'attaccante trova poi una grave difetto di controllo degli accessi nell'applicazione.</p> <p>Scenario #3: La configurazione dell'application server permette di restituire agli utenti messaggi di errore dettagliati, ad esempio la stack trace. Questa problematica potenzialmente espone informazioni sensibili o problematiche come versioni dei componenti che sono note per essere vulnerabili.</p> <p>Scenario #4: Un cloud service provider ha dei permessi di condivisione predefiniti aperti a Internet da altri utenti nell'header Content Security Policy (CSP). Questo permette l'accesso ai dati sensibili memorizzati nel cloud storage.</p>"},{"location":"it/A05_2021-Security_Misconfiguration/#riferimenti","title":"Riferimenti","text":"<ul> <li> <p>OWASP Testing Guide: Configuration     Management</p> </li> <li> <p>OWASP Testing Guide: Testing for Error Codes</p> </li> <li> <p>Application Security Verification Standard V19 Configuration</p> </li> <li> <p>NIST Guide to General Server     Hardening</p> </li> <li> <p>CIS Security Configuration     Guides/Benchmarks</p> </li> <li> <p>Amazon S3 Bucket Discovery and     Enumeration</p> </li> </ul>"},{"location":"it/A05_2021-Security_Misconfiguration/#lista-dei-cwe-correlati","title":"Lista dei CWE correlati","text":"<p>CWE-2 7PK - Environment</p> <p>CWE-11 ASP.NET Misconfiguration: Creating Debug Binary</p> <p>CWE-13 ASP.NET Misconfiguration: Password in Configuration File</p> <p>CWE-15 External Control of System or Configuration Setting</p> <p>CWE-16 Configuration</p> <p>CWE-260 Password in Configuration File</p> <p>CWE-315 Cleartext Storage of Sensitive Information in a Cookie</p> <p>CWE-520 .NET Misconfiguration: Use of Impersonation</p> <p>CWE-526 Exposure of Sensitive Information Through Environmental Variables</p> <p>CWE-537 Java Runtime Error Message Containing Sensitive Information</p> <p>CWE-541 Inclusion of Sensitive Information in an Include File</p> <p>CWE-547 Use of Hard-coded, Security-relevant Constants</p> <p>CWE-611 Improper Restriction of XML External Entity Reference</p> <p>CWE-614 Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</p> <p>CWE-756 Missing Custom Error Page</p> <p>CWE-776 Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')</p> <p>CWE-942 Permissive Cross-domain Policy with Untrusted Domains</p> <p>CWE-1004 Sensitive Cookie Without 'HttpOnly' Flag</p> <p>CWE-1032 OWASP Top Ten 2017 Category A6 - Security Misconfiguration</p> <p>CWE-1174 ASP.NET Misconfiguration: Improper Model Validation</p>"},{"location":"it/A06_2021-Vulnerable_and_Outdated_Components/#fattori","title":"Fattori","text":"CWEs corrispondenti Tasso di incidenza Max Tasso di incidenza Medio Copertura Max Copertura Media Sfruttabilit\u00e0 media pesata Impatto medio pesato Occorrenze Totali CVE Totali 3 27.96% 8.77% 51.78% 22.47% 5.00 5.00 30,457 0"},{"location":"it/A06_2021-Vulnerable_and_Outdated_Components/#panoramica","title":"Panoramica","text":"<p>Era gi\u00e0 la numero #2 dal sondaggio della community della Top 10, ma aveva anche abbastanza evidenze da poter entrare nella Top 10 grazie ai dati. Vulnerable Components sono una problematica nota che si fatica a testare e a calcolarne il rischio, ed \u00e8 l'unica categoria per cui non abbiamo Common Weakness Enumerations (CWEs) correlate alle CWE incluse, verr\u00e0 quindi utilizzato un peso predefinito di 5.0 per sfruttabilit\u00e0/impatto. CWEs incluse sono CWE-1104: Use of Unmaintained Third-Party Components and the two CWEs from Top 10 2013 and 2017.</p>"},{"location":"it/A06_2021-Vulnerable_and_Outdated_Components/#descrizione","title":"Descrizione","text":"<p>La vulnerabilit\u00e0 si presenta se:</p> <ul> <li> <p>Non conosci le versioni di tutti i componenti utilizzati (sia     lato client che lato server). Questo include i componenti utilizzati direttamente     cos\u00ec come le dipendenze annidate.</p> </li> <li> <p>Se il software \u00e8 vulnerabile, non supportato o non aggiornato. Questo     include il sistema operativo, il server web/applicazione, il database management system     (DBMS), applicazioni, API e tutti i componenti, ambienti di esecuzione,     e librerie.</p> </li> <li> <p>Se non si fa la scansione delle vulnerabilit\u00e0 regolarmente e non si consultano i     bollettini di sicurezza relativi ai componenti utilizzati.</p> </li> <li> <p>Se non si corregge o non si aggiorna la piattaforma sottostante, i framework,     e le dipendenze in modo tempestivo e basato sul rischio. Questo comunemente     accade in ambienti in cui le patch vengono applicate mensilmente o trimestralmente     sotto change control, lasciando le organizzazioni scoperte per giorni o mesi     verso vulnerabilit\u00e0 gi\u00e0 risolte.</p> </li> <li> <p>Se gli sviluppatori non testano la compatibilit\u00e0 delle librerie aggiornate,     nuove o patchate.</p> </li> <li> <p>Se i componenti non vengono configurati in modo sicuro (vedere     A05:2021-Security Misconfiguration).</p> </li> </ul>"},{"location":"it/A06_2021-Vulnerable_and_Outdated_Components/#come-prevenire","title":"Come prevenire","text":"<p>Ci dovrebbe essere un processo di gestione delle patch in atto per:</p> <ul> <li> <p>Rimuovere le dipendenze, le funzionalit\u00e0, i componenti, i file,     e la documentazione non utilizzate.</p> </li> <li> <p>Inventariare in modo continuo le versioni dei componenti lato client e     lato server (ad esempio, framework, librerie) e le loro     dipendenze usando strumenti come OWASP Dependency Check,     retire.js, ecc. Monitorare continuamente fonti come Common Vulnerability and      Exposures (CVE) e il National Vulnerability Database (NVD) per     vulnerabilit\u00e0 nei componenti. Usare strumenti di software composition per automatizzare il processo.      Sottoscrivere avvisi e-mail per le vulnerabilit\u00e0 di sicurezza relative ai componenti utilizzati.</p> </li> <li> <p>Ottenere i componenti solo da fonti ufficiali tramite link sicuri.     Preferire pacchetti firmati per ridurre la possibilit\u00e0 di includere un componente modificato o dannoso (vedere A08:2021-Software and Data Integrity Failures).</p> </li> <li> <p>Controllare le librerie e i componenti che non sono pi\u00f9 mantenuti o che non     sviluppano pi\u00f9 patch di sicurezza per le vecchie versioni. Se il patching non \u00e8     possibile, considerare l'implementazione di una patch virtuale per monitorare, rilevare o     proteggere dal problema individuato.</p> </li> </ul> <p>Ogni organizzazione deve garantire un piano continuo per il monitoraggio, il triage, e l'applicazione di aggiornamenti o modifiche di configurazione per tutta la durata dell'applicazione o del portafoglio.</p>"},{"location":"it/A06_2021-Vulnerable_and_Outdated_Components/#esempi-di-scenari-dattacco","title":"Esempi di scenari d'attacco","text":"<p>Scenario #1: I componenti solitamente vengono eseguiti con gli stessi privilegi dell'applicazione stessa,  quindi le falle in qualsiasi componente possono avere un serio impatto. Tali difetti possono essere accidentali (ad esempio, un errore nel codice) o intenzionali (ad esempio, una backdoor in un componente). Alcuni esempi di vulnerabilit\u00e0 sfruttabili scoperte nei componenti sono:</p> <ul> <li> <p>CVE-2017-5638, una vulnerabilit\u00e0 di esecuzione di codice remoto di Struts 2 che     permette l'esecuzione di codice arbitrario sul server, \u00e8 stata     causa di breach importanti.</p> </li> <li> <p>Mentre l'internet delle cose (IoT) \u00e8 spesso difficile o     impossibile da patchare, l'importanza nel riuscirci \u00e8 elevata     (ad esempio, i dispositivi biomedici).</p> </li> </ul> <p>Ci sono strumenti automatici per aiutare gli attaccanti a trovare sistemi non patchati o sistemi mal configurati. Per esempio, il motore di ricerca Shodan IoT pu\u00f2 aiutare a trovare i dispositivi che soffrono ancora della vulnerabilit\u00e0 Heartbleed patchata nell'aprile 2014.</p>"},{"location":"it/A06_2021-Vulnerable_and_Outdated_Components/#riferimenti","title":"Riferimenti","text":"<ul> <li> <p>OWASP Application Security Verification Standard: V1 Architecture,     design and threat modelling</p> </li> <li> <p>OWASP Dependency Check (for Java and .NET libraries)</p> </li> <li> <p>OWASP Testing Guide - Map Application Architecture (OTG-INFO-010)</p> </li> <li> <p>OWASP Virtual Patching Best Practices</p> </li> <li> <p>The Unfortunate Reality of Insecure Libraries</p> </li> <li> <p>MITRE Common Vulnerabilities and Exposures (CVE) search</p> </li> <li> <p>National Vulnerability Database (NVD)</p> </li> <li> <p>Retire.js for detecting known vulnerable JavaScript libraries</p> </li> <li> <p>Node Libraries Security Advisories</p> </li> <li> <p>Ruby Libraries Security Advisory Database and Tools</p> </li> <li> <p>https://safecode.org/publication/SAFECode_Software_Integrity_Controls0610.pdf</p> </li> </ul>"},{"location":"it/A06_2021-Vulnerable_and_Outdated_Components/#lista-dei-cwe-correlati","title":"Lista dei CWE correlati","text":"<p>CWE-937 OWASP Top 10 2013: Using Components with Known Vulnerabilities</p> <p>CWE-1035 2017 Top 10 A9: Using Components with Known Vulnerabilities</p> <p>CWE-1104 Use of Unmaintained Third Party Components</p>"},{"location":"it/A07_2021-Identification_and_Authentication_Failures/#fattori","title":"Fattori","text":"CWEs corrispondenti Tasso di incidenza Max Tasso di incidenza Medio Sfruttabilit\u00e0 pesata Impatto Medio Copertura Max Copertura media Occorrenze Totali CVE Totali 22 14.84% 2.55% 7.40 6.50 79.51% 45.72% 132,195 3,897"},{"location":"it/A07_2021-Identification_and_Authentication_Failures/#panoramica","title":"Panoramica","text":"<p>Precedentemente sotto il nome di Broken Authentication, questa categoria scende dalla seconda posizione e ora include le Common Weakness  Enumerations (CWEs) relative ai fallimenti dei meccanismi di autorizzazione.  Le CWEs incluse sono CWE-297: Improper Validation of Certificate with Host Mismatch, CWE-287: Improper Authentication, e CWE-384: Session Fixation.</p>"},{"location":"it/A07_2021-Identification_and_Authentication_Failures/#descrizione","title":"Descrizione","text":"<p>La verifica dell'identit\u00e0 dell'utente, l'autenticazione e la gestione della sessione sono fondamentali per proteggersi dagli attacchi legati all'autenticazione.  Ci possono essere debolezze sui meccanismi di autenticazione se l'applicazione:</p> <ul> <li> <p>Permette attacchi automatici come il credential stuffing, dove l'attaccante     ha una lista di coppie nome utente e password validi.</p> </li> <li> <p>Permette attacchi di brute force o altri attacchi automatizzati.</p> </li> <li> <p>Permette password di default, deboli o ben note, come \"Password1\"     o \"admin/admin\".</p> </li> <li> <p>Utilizza un recupero delle credenziali e delle password dimenticate debole o inefficace     come le \"risposte basate sulla conoscenza\", che non possono essere rese     sicure.</p> </li> <li> <p>Memorizza le password in chiaro, in modo cifrato o con funzioni di hash deboli (vedi     A02:2021-Cryptographic Failures).</p> </li> <li> <p>Non ha un sistema di autenticazione a pi\u00f9 fattori o \u00e8 inefficace.</p> </li> <li> <p>Espone l'identificatore di sessione del URL.</p> </li> <li> <p>Riutilizza l'identificatore di sessione dopo un login avvenuto con successo.</p> </li> <li> <p>Non invalida correttamente l'identificatore di sessione. La sessione dell'utente o i token di autenticazione     (principalmente token di single sign-on (SSO)) non vengono invalidati in modo opportuno durante il logout o dopo un periodo di inattivit\u00e0</p> </li> </ul>"},{"location":"it/A07_2021-Identification_and_Authentication_Failures/#come-prevenire","title":"Come prevenire","text":"<ul> <li> <p>Dove possibile, implementare l'autenticazione a pi\u00f9 fattori per prevenire     attacchi di credential stuffing, brute force e riutilizzo delle credenziali rubate.</p> </li> <li> <p>Non mettere in produzione sistemi con credenziali di default, in particolare per gli utenti admin.</p> </li> <li> <p>Implementare controlli sulla debolezza delle password, come verificare le password nuove o modificate  con la lista delle 10,000 password peggiori.</p> </li> <li> <p>Allineare i requisiti di lunghezza delle password, complessit\u00e0 e politiche di rotazione con le linee guida della sezione 5.1.1 del documento  800-63b pubblicato dal National Institute of Standards and Technology (NIST)    riguardante la memorizzazione dei secret o altre policy relative alle password moderne e basate sui fatti .</p> </li> <li> <p>Assicurarsi che la registrazione, il recupero delle credenziali e le API siano     robusti contro gli attacchi di enumerazione degli account utilizzando gli stessi     messaggi generici per tutti i risultati.</p> </li> <li> <p>Limitare o ritardare sempre pi\u00f9 i tentativi di login falliti, ma fare attenzione a non creare uno scenario di denial of service. Loggare tutti i tentativi falliti e avvertire gli amministratori quando vengono rilevati attacchi di credential stuffing, brute force o     altri.</p> </li> <li> <p>Usare un gestore di sessione integrato lato server, che sia sicuro, che generi un     nuovo ID di sessione casuale con alta entropia dopo il login. L'identificatore di sessione     non dovrebbe essere nell'URL, deve essere memorizzato in modo sicuro e invalidato dopo il     logout, un periodo di inattivit\u00e0 e avere timeout assoluto.</p> </li> </ul>"},{"location":"it/A07_2021-Identification_and_Authentication_Failures/#esempi-di-scenari-dattacco","title":"Esempi di scenari d'attacco","text":"<p>Scenario #1: Il credential stuffing, l'uso di liste di password conosciute,  \u00e8 un attacco comune. Supponiamo che un'applicazione non implementi la protezione automatica contro le minacce o il credential stuffing. In questo caso,  l'applicazione pu\u00f2 essere usata come un oracolo di password per determinare se le credenziali sono valide.</p> <p>Scenario #2: La maggior parte degli attacchi relativi all'autenticazione si verifica a causa del continuo uso delle password come singolo fattore. Le best practice, la rotazione delle password e i requisiti di complessit\u00e0 incoraggiano gli utenti a usare e riutilizzare password deboli. Si raccomanda alle organizzazioni di interrompere queste pratiche secondo NIST 800-63 e utilizzare l'autenticazione a pi\u00f9 fattori.</p> <p>Scenario #3: I timeout della sessione dell'applicazione non sono gestiti correttamente. Un utente usa un computer pubblico per accedere a un'applicazione. Invece di selezionare \"logout\", l'utente chiude semplicemente la scheda del browser e se ne va via. Un attaccante usa lo stesso browser un'ora dopo, e l'utente risulta ancora autenticato.</p>"},{"location":"it/A07_2021-Identification_and_Authentication_Failures/#riferimenti","title":"Riferimenti","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Digital     Identity</p> </li> <li> <p>OWASP Application Security Verification Standard: V2     authentication</p> </li> <li> <p>OWASP Application Security Verification Standard: V3 Session     Management</p> </li> <li> <p>OWASP Testing Guide: Identity,\u00a0Authentication</p> </li> <li> <p>OWASP Cheat Sheet:     Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Credential Stuffing</p> </li> <li> <p>OWASP Cheat Sheet: Forgot     Password</p> </li> <li> <p>OWASP Cheat Sheet: Session Management</p> </li> <li> <p>OWASP Automated Threats     Handbook</p> </li> <li> <p>NIST 800-63b: 5.1.1 Memorized Secrets</p> </li> </ul>"},{"location":"it/A07_2021-Identification_and_Authentication_Failures/#lista-dei-cwe-correlati","title":"Lista dei CWE correlati","text":"<p>CWE-255 Credentials Management Errors</p> <p>CWE-259 Use of Hard-coded Password</p> <p>CWE-287 Improper Authentication</p> <p>CWE-288 Authentication Bypass Using an Alternate Path or Channel</p> <p>CWE-290 Authentication Bypass by Spoofing</p> <p>CWE-294 Authentication Bypass by Capture-replay</p> <p>CWE-295 Improper Certificate Validation</p> <p>CWE-297 Improper Validation of Certificate with Host Mismatch</p> <p>CWE-300 Channel Accessible by Non-Endpoint</p> <p>CWE-302 Authentication Bypass by Assumed-Immutable Data</p> <p>CWE-304 Missing Critical Step in Authentication</p> <p>CWE-306 Missing Authentication for Critical Function</p> <p>CWE-307 Improper Restriction of Excessive Authentication Attempts</p> <p>CWE-346 Origin Validation Error</p> <p>CWE-384 Session Fixation</p> <p>CWE-521 Weak Password Requirements</p> <p>CWE-613 Insufficient Session Expiration</p> <p>CWE-620 Unverified Password Change</p> <p>CWE-640 Weak Password Recovery Mechanism for Forgotten Password</p> <p>CWE-798 Use of Hard-coded Credentials</p> <p>CWE-940 Improper Verification of Source of a Communication Channel</p> <p>CWE-1216 Lockout Mechanism Errors</p>"},{"location":"it/A08_2021-Software_and_Data_Integrity_Failures/#fattori","title":"Fattori","text":"CWEs corrispondenti Tasso di incidenza Max Tasso di incidenza Medio Sfruttabilit\u00e0 pesata Impatto Medio Copertura Max Copertura media Occorrenze Totali CVE Totali 10 16.67% 2.05% 6.94 7.94 75.04% 45.35% 47,972 1,152"},{"location":"it/A08_2021-Software_and_Data_Integrity_Failures/#panoramica","title":"Panoramica","text":"<p>Una nuova categoria per il 2021 che \u00e8 relativa alla verifica dell'integrit\u00e0 di aggiornamenti software,  dati critici, e pipeline di CI/CD. Uno dei pi\u00f9 alti impatti pesati dai dati di  Common Vulnerability e Exposures/Common Vulnerability Scoring System (CVE/CVSS).  Le Common Weakness Enumerations (CWEs) incluse sono CWE-829: Inclusion of Functionality from Untrusted Control Sphere, CWE-494: Download of Code Without Integrity Check, e  CWE-502: Deserialization of Untrusted Data.</p>"},{"location":"it/A08_2021-Software_and_Data_Integrity_Failures/#descrizione","title":"Descrizione","text":"<p>Le problematiche dell'integrit\u00e0 del software e dei dati riguardano il codice e l'infrastruttura che non ne verificano adeguatamente l'integrit\u00e0. Un esempio \u00e8 quando un'applicazione si affida a plugin, librerie o moduli da fonti, repository e content delivery network (CDN) non attendibili. Una pipeline CI/CD insicura pu\u00f2 aprire la porta ad accessi non autorizzati, codice dannoso o compromissione completa del sistema. Infine, molte applicazioni ora includono funzionalit\u00e0 di auto-aggiornamento, dove gli aggiornamenti vengono scaricati senza una sufficiente verifica dell'integrit\u00e0 e applicati all'applicazione. Gli attaccanti potrebbero potenzialmente caricare i propri aggiornamenti malevoli da distribuire e da eseguire su tutte le installazioni. Un altro esempio \u00e8 la deserializzazione insicura, quando gli oggetti o i dati sono codificati o serializzati in una struttura che un attaccante pu\u00f2 ispezionare e modificare liberamente.</p>"},{"location":"it/A08_2021-Software_and_Data_Integrity_Failures/#come-prevenire","title":"Come prevenire","text":"<ul> <li> <p>Usare firme digitali o meccanismi equivalenti per verificare che il software o i dati provengano dalla fonte prevista e non siano stati alterati.</p> </li> <li> <p>Assicurarsi che le librerie e le dipendenze, come npm o Maven, siano collegati a repository affidabili. Se avete un profilo di rischio pi\u00f9 alto, considerate l'hosting di un repository interno ben conosciuto e controllato.</p> </li> <li> <p>Assicuratevi che venga usato uno strumento di sicurezza della supply chain del software, come OWASP     Dependency Check o OWASP CycloneDX, per verificare che i componenti non contengano vulnerabilit\u00e0 note</p> </li> <li> <p>Assicurarsi che ci sia un processo di revisione per le modifiche al codice e alla configurazione per ridurre al minimo la possibilit\u00e0 che codice o configurazione dannosi vengano introdotti nella pipeline del software.</p> </li> <li> <p>Assicurarsi che la pipeline CI/CD sia adeguatamente segregata, configurata adeguatamente e sia presente un meccanismo di controllo degli accessi per assicurare l'integrit\u00e0 del codice che passa attraverso i processi di compilazione e distribuzione.</p> </li> <li> <p>Assicuratevi che i dati serializzati non firmati o non crittografati non vengano inviati a     client non fidati senza qualche forma di controllo dell'integrit\u00e0 o firma digitale     per rilevare la manomissione o il replay dei dati serializzati.</p> </li> </ul>"},{"location":"it/A08_2021-Software_and_Data_Integrity_Failures/#esempi-di-scenari-dattacco","title":"Esempi di scenari d'attacco","text":"<p>Scenario #1 Aggiornamenti senza firma: Molti router domestici, set-top box,  e altri dispositivi non verificano gli aggiornamenti attraverso una firma. Il firmware non firmato \u00e8 sempre pi\u00f9 spesso un obiettivo per gli attaccanti e  questo \u00e8 un trend che sembra non essere destinato a cessare. Questa \u00e8 una problematica rilevante in quanto molte volte  non \u00e8 presente alcun meccanismo per rimediare se non quello di correggere in una versione futura e aspettare che le versioni precedenti invecchino.</p> <p>Scenario #2 Aggiornamento malevolo di SolarWinds: Gli stati-nazione sono sempre stati noti  per perpetrare attacchi verso i meccanismi di aggiornamento, con un recente e degno di nota attacco a SolarWinds Orion. L'azienda che sviluppa il software aveva  processi per svolgere le build in modo sicuro e controlli sull'integrit\u00e0 degli aggiornamenti.  Tuttavia, questi controlli sono violati e per parecchi mesi l'azienda distribu\u00ec un aggiornamento malevolo altamente mirato a pi\u00f9 di 18,000 organizzazioni, delle quali, circa 100 sono state infettate. Questo \u00e8 uno dei breach di questa natura di pi\u00f9 ampia portata e pi\u00f9 significativo nella storia.</p> <p>Scenario #3 Deserializzazione insicura: Un'applicazione React chiama un insieme di microservizi Spring Boot. Essendo stata scritta nel paradigma funzionale,  gli sviluppatori hanno cercato di garantire l'immutabilit\u00e0 del codice. La soluzione che hanno trovato \u00e8 serializzare lo stato dell'utente e passarlo avanti e indietro ad ogni richiesta. Un attaccante nota la firma dell'oggetto Java \"rO0\" (in base64) e usa lo strumento Java Serial Killer per ottenere esecuzione di codice remoto sul server dell'applicazione.</p>"},{"location":"it/A08_2021-Software_and_Data_Integrity_Failures/#riferimenti","title":"Riferimenti","text":"<ul> <li> <p>[OWASP Cheat Sheet: Software Supply Chain Security](Coming Soon)</p> </li> <li> <p>[OWASP Cheat Sheet: Secure build and deployment](Coming Soon)</p> </li> <li> <p>OWASP Cheat Sheet: Infrastructure as Code </p> </li> <li> <p>OWASP Cheat Sheet: Deserialization</p> </li> <li> <p>SAFECode Software Integrity Controls</p> </li> <li> <p>A 'Worst Nightmare' Cyberattack: The Untold Story Of The     SolarWinds     Hack</p> </li> <li> <p>CodeCov Bash Uploader Compromise</p> </li> <li> <p>Securing DevOps by Julien Vehent</p> </li> </ul>"},{"location":"it/A08_2021-Software_and_Data_Integrity_Failures/#lista-dei-cwe-correlati","title":"Lista dei CWE correlati","text":"<p>CWE-345 Insufficient Verification of Data Authenticity</p> <p>CWE-353 Missing Support for Integrity Check</p> <p>CWE-426 Untrusted Search Path</p> <p>CWE-494 Download of Code Without Integrity Check</p> <p>CWE-502 Deserialization of Untrusted Data</p> <p>CWE-565 Reliance on Cookies without Validation and Integrity Checking</p> <p>CWE-784 Reliance on Cookies without Validation and Integrity Checking in a Security Decision</p> <p>CWE-829 Inclusion of Functionality from Untrusted Control Sphere</p> <p>CWE-830 Inclusion of Web Functionality from an Untrusted Source</p> <p>CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes</p>"},{"location":"it/A09_2021-Security_Logging_and_Monitoring_Failures/#fattori","title":"Fattori","text":"CWEs corrispondenti Tasso di incidenza Max Tasso di incidenza Medio Sfruttabilit\u00e0 pesata Impatto Medio Copertura Max Copertura media Occorrenze Totali CVE Totali 4 19.23% 6.51% 6.87 4.99 53.67% 39.97% 53,615 242"},{"location":"it/A09_2021-Security_Logging_and_Monitoring_Failures/#panoramica","title":"Panoramica","text":"<p>La problematica relativa alla mancanza di logging e monitoraggio degli eventi di sicurezza proviene dal sondaggio della community della Top 10 (#3), salita leggermente dalla decima posizione della OWASP Top 10 2017. Questa problematica \u00e8 complicata da testare, spesso si utilizzano interviste o si chiede se durante i penetration test sono stati individuati degli attacchi. In questa categoria non ci sono molti dati di CVE/CVSS, ma identificare e rispondere alle violazioni di sicurezza \u00e8 essenziale. Ha un impatto elevato per quanto riguarda la responsabilit\u00e0, la visibilit\u00e0, l'allerta sugli incidenti e la forensics. Questa categoria estende la CWE-778 Insufficient Logging per includere CWE-117 Improper Output Neutralization for Logs, CWE-223 Omission of Security-relevant Information, e CWE-532 Insertion of Sensitive Information into Log File.</p>"},{"location":"it/A09_2021-Security_Logging_and_Monitoring_Failures/#descrizione","title":"Descrizione","text":"<p>Tornando alla Top 10 2021 di OWASP, questa categoria \u00e8 per aiutare a rilevare, svolgere escalation e rispondere alle violazioni attive. Senza logging e monitoraggio, le violazioni non possono essere rilevate. Il logging, il rilevamento, il monitoraggio e la risposta attiva insufficienti si verificano ogni volta che:</p> <ul> <li> <p>Gli eventi verificabili, come i login, i login falliti e le transazioni ad alto valore, non vengono registrati.</p> </li> <li> <p>Warning ed errori non generano messaggi di log, oppure sono inadeguati o poco chiari.</p> </li> <li> <p>I log di applicazioni e API non sono monitorati per attivit\u00e0 sospette.</p> </li> <li> <p>I file di log vengono memorizzati solo localmente.</p> </li> <li> <p>Non sono presenti o sono inefficaci le soglie di allarme e processi di escalation della risposta</p> </li> <li> <p>I penetration test e le scansioni da parte di strumenti DAST (Dynamic Application Security Testing) (come OWASP ZAP)      non attivano nessun allarme.</p> </li> <li> <p>L'applicazione non \u00e8 in grado di rilevare, svolgere escalation o avvisare per gli attacchi attivi     in real-time o quasi in real-time. </p> </li> </ul> <p>Si \u00e8 vulnerabili alla fuga di informazioni se gli eventi di logging e gli alert sono visibili ad un utente o ad un attaccante (vedi A01:2021-Broken Access Control).</p>"},{"location":"it/A09_2021-Security_Logging_and_Monitoring_Failures/#come-prevenire","title":"Come prevenire","text":"<p>Gli sviluppatori dovrebbero implementare alcuni o tutti i seguenti controlli,  a seconda del rischio dell'applicazione:</p> <ul> <li> <p>Assicurarsi che tutti i login, il controllo degli accessi e gli errori a seguito della verifica degli input lato server     possono essere registrati con un contesto utente sufficiente per identificare     account sospetti o malevoli e conservati per un tempo sufficiente a consentire     un'analisi forense a posteriori.</p> </li> <li> <p>Assicurarsi che i log siano generati in un formato che le soluzioni di gestione dei log     possano facilmente consumare.</p> </li> <li> <p>Assicurarsi che i dati di log siano codificati correttamente per prevenire injection o     attacchi ai sistemi di registrazione o monitoraggio.</p> </li> <li> <p>Assicurarsi che le transazioni di alto valore abbiano un audit trail con controlli di integrit\u00e0     per prevenire manomissioni o cancellazioni, come le tabelle append-only di un database, o simili.</p> </li> <li> <p>I team DevSecOps dovrebbero stabilire sistemi di monitoraggio di allerta efficaci     in modo che le attivit\u00e0 sospette siano rilevate e affrontate rapidamente.</p> </li> <li> <p>Stabilire o adottare un piano incident response e recovery, come ad esempio il     National Institute of Standards and Technology (NIST) 800-61r2 o successivo.</p> </li> </ul> <p>Ci sono framework di protezione delle applicazioni commerciali e open-source come l'OWASP ModSecurity Core Rule Set, e software di correlazione dei log open-source,  come Elasticsearch, Logstash, Kibana (ELK) che dispongono di dashboard e sistemi di alerting personalizzati.</p>"},{"location":"it/A09_2021-Security_Logging_and_Monitoring_Failures/#esempi-di-scenari-dattacco","title":"Esempi di scenari d'attacco","text":"<p>Scenario #1: L'operatore del sito web di un fornitore di piani sanitari per bambini non ha potuto rilevare una violazione a causa di una mancanza di logging e monitoraggio. Una terza parte ha informato il fornitore del piano sanitario che un attaccante aveva acceduto e modificato migliaia di cartelle cliniche di pi\u00f9 di 3,5 milioni di bambini. Una indagine post-incidente ha rilevato che gli sviluppatori del sito web non avevano corretto delle vulnerabilit\u00e0 significative presenti. Poich\u00e9 non c'era nessuna forma di logging o monitoraggio del sistema, la violazione dei dati potrebbe essere stata in corso dal 2013, un periodo di pi\u00f9 di sette anni.</p> <p>Scenario #2: Una grande compagnia aerea indiana ha subito una violazione dei dati che ha coinvolto  pi\u00f9 di dieci anni di dati personali di milioni di passeggeri, compresi i dati dei passaporti e delle carte di credito.  La violazione dei dati si \u00e8 verificata presso un fornitore di hosting cloud di terze parti,  che ha notificato la compagnia aerea della violazione dopo qualche tempo.</p> <p>Scenario #3: Una grande compagnia aerea europea ha subito una violazione riferibile al GDPR.  La violazione \u00e8 stata causata da delle vulnerabilit\u00e0 dell'applicazione di pagamento  sfruttate dagli aggressori, che hanno raccolto pi\u00f9 di 400.000 record di pagamento dei clienti. A seguito di ci\u00f2, la compagnia aerea \u00e8 stata multata 20 milioni di sterline  dal garante della privacy.</p>"},{"location":"it/A09_2021-Security_Logging_and_Monitoring_Failures/#riferimenti","title":"Riferimenti","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Logging and     Monitoring</p> </li> <li> <p>OWASP Application Security Verification Standard: V8 Logging and     Monitoring</p> </li> <li> <p>OWASP Testing Guide: Testing for Detailed Error     Code</p> </li> <li> <p>OWASP Cheat Sheet:     Application Logging Vocabulary</p> </li> <li> <p>OWASP Cheat Sheet:     Logging)   </p> </li> <li> <p>Data Integrity: Recovering from Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Identifying and Protecting Assets Against     Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Detecting and Responding to Ransomware and Other     Destructive     Events</p> </li> </ul>"},{"location":"it/A09_2021-Security_Logging_and_Monitoring_Failures/#lista-dei-cwe-correlati","title":"Lista dei CWE correlati","text":"<p>CWE-117 Improper Output Neutralization for Logs</p> <p>CWE-223 Omission of Security-relevant Information</p> <p>CWE-532 Insertion of Sensitive Information into Log File</p> <p>CWE-778 Insufficient Logging</p>"},{"location":"it/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#fattori","title":"Fattori","text":"CWEs corrispondenti Tasso di incidenza Max Tasso di incidenza Medio Sfruttabilit\u00e0 pesata Impatto Medio Copertura Max Copertura media Occorrenze Totali CVE Totali 1 2.72% 2.72% 8.28 6.72 67.72% 67.72% 9,503 385"},{"location":"it/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#panoramica","title":"Panoramica","text":"<p>Questa categoria \u00e8 stata aggiunta dal sondaggio della comunit\u00e0 Top 10 (#1). I dati mostrano un tasso di incidenza relativamente basso con una copertura di test superiore alla media e valutazioni potenziali di sfruttabilit\u00e0 e di impatto superiori alla media. Poich\u00e9 le nuove voci sono probabilmente un singolo o un piccolo gruppo di Common Weakness Enumerations (CWEs) per l'attenzione e per sensibilizzare, la speranza \u00e8 che siano oggetto di attenzione e possano essere incluse in una categoria adeguata in una futura edizione.</p>"},{"location":"it/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#descrizione","title":"Descrizione","text":"<p>Le falle SSRF si verificano ogni volta che un'applicazione web recupera una risorsa remota senza validare l'URL fornito dall'utente. Questo permette ad un attaccante di forzare l'applicazione ad inviare una richiesta preparata ad hoc ad una destinazione inattesa,  anche quando \u00e8 protetta da un firewall, una VPN o un altro tipo di network access control list (ACL).</p> <p>Dato che le moderne applicazioni web forniscono agli utenti finali parecchie funzionalit\u00e0, scaricare dati da un URL \u00e8 uno scenario comune. Di conseguenza, l'incidenza di SSRF \u00e8 in crescita. Inoltre, la gravit\u00e0 di SSRF sta diventando pi\u00f9 alta a causa dei servizi cloud e alla complessit\u00e0 crescente delle architetture.</p>"},{"location":"it/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#come-prevenire","title":"Come prevenire","text":"<p>Gli sviluppatori possono prevenire le SSRF implementando alcuni o tutti i seguenti controlli di defense in depth:</p>"},{"location":"it/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#dal-layer-di-rete","title":"Dal layer di rete:","text":"<ul> <li> <p>Segmentare in reti separate le funzionalit\u00e0 che richiedono un accesso alle risorse remote per     ridurre l'impatto di SSRF</p> </li> <li> <p>Applicare politiche di firewall \"deny by default\" o regole di controllo     per bloccare tutto il traffico intranet tranne quello essenziale. Suggerimenti:      ~ Stabilire una ownership e un ciclo di vita per le regole del firewall basate sulle applicazioni.     ~ Registrare tutti i flussi di rete accettati e bloccati sui firewall     (vedi A09:2021-Security Logging and Monitoring Failures).</p> </li> </ul>"},{"location":"it/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#dal-layer-applicativo","title":"Dal layer applicativo:","text":"<ul> <li> <p>Sanitizzare e convalidare tutti i dati di input forniti dal cliente</p> </li> <li> <p>Far rispettare lo URL schema, la porta e la destinazione con una allow list</p> </li> <li> <p>Non inviare risposte raw ai client</p> </li> <li> <p>Disabilitare i redirect HTTP </p> </li> <li> <p>Essere consapevoli della URL consistency per evitare attacchi come il DNS     rebinding e race conditions come \"time of check, time of use\" (TOCTOU)</p> </li> </ul> <p>Non mitigare la SSRF attraverso l'uso di una deny list o di un'espressione regolare. Gli attaccanti hanno a disposizione liste di payload, strumenti e abilit\u00e0 per bypassare le deny list.</p>"},{"location":"it/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#contromisure-addizionali-da-considerare","title":"Contromisure addizionali da considerare:","text":"<ul> <li> <p>Non svolgere il deploy di altri servizi rilevanti per la sicurezza sui sistemi di frontend (es. OpenID).      Controllare il traffico locale su questi sistemi (es. localhost)</p> </li> <li> <p>Per i frontend con gruppi di utenti dedicati e gestibili, usare la crittografia di rete (es. VPN)     su sistemi indipendenti che hanno esigenze di protezione molto elevate </p> </li> </ul>"},{"location":"it/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#esempi-di-scenari-dattacco","title":"Esempi di scenari d'attacco","text":"<p>Gli attaccanti possono sfruttare SSRF per attaccare sistemi protetti dietro web application firewall, firewall o ACL di rete, utilizzando scenari come:</p> <p>Scenario #1: Port scan dei server interni - Se l'architettura di rete non \u00e8 segmentata, gli attaccanti possono mappare le reti interne e determinare se sono presenti porte aperte o chiuse in base ai risultati della connessione o il tempo trascorso per accettare o rifiutare le connessioni del payload SSRF.</p> <p>Scenario #2: Sensitive data exposure \u2013 Gli attaccanti possono accedere a file locali  o servizi interni per ottenere informazioni sensibili  come <code>file:///etc/passwd&lt;/span&gt;</code> e <code>http://localhost:28017/</code>.</p> <p>Scenario #3: Accedere allo storage dei metadati dei servizi cloud - La maggior parte dei provider hanno un metadata storage come <code>http://169.254.169.254/</code>. Un attaccante pu\u00f2 leggere i metadati per ottenere informazioni sensibili.</p> <p>Scenario #4: Compromettere i servizi interni - L'attaccante pu\u00f2 abusare dei servizi interni per condurre ulteriori attacchi come Remote Code Execution (RCE) o Denial of Service (DoS).</p>"},{"location":"it/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#riferimenti","title":"Riferimenti","text":"<ul> <li> <p>OWASP - Server-Side Request Forgery Prevention Cheat     Sheet</p> </li> <li> <p>PortSwigger - Server-side request forgery     (SSRF)</p> </li> <li> <p>Acunetix - What is Server-Side Request Forgery     (SSRF)?</p> </li> <li> <p>SSRF     bible</p> </li> <li> <p>A New Era of SSRF - Exploiting URL Parser in Trending Programming     Languages!</p> </li> </ul>"},{"location":"it/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#lista-dei-cwe-correlati","title":"Lista dei CWE correlati","text":"<p>CWE-918 Server-Side Request Forgery (SSRF)</p>"},{"location":"it/A11_2021-Next_Steps/","title":"A11:2021 \u2013 Passi seguenti","text":"<p>Per natura, la OWASP Top 10 \u00e8 limitata ai dieci rischi pi\u00f9 impattanti. Ogni versione della OWASP Top 10 ha dei rischi che sono stati in bilico per quanto riguarda la loro inclusione, ma alla fine non ce l'hanno fatta. In qualsiasi modo avessimo provato ad interpretare o distorcere i dati, gli altri rischi sono risultati comunque pi\u00f9 prevalenti e impattanti. </p> <p>Le organizzazioni che lavorano verso un programma di AppSec maturo, per consulenze, o fornitori di strumenti che desiderano espandere la copertura per i loro prodotti, le seguenti tre problematiche valgono lo sforzo di essere identificate e risolte.</p>"},{"location":"it/A11_2021-Next_Steps/#problematiche-sulla-qualita-del-codice","title":"Problematiche sulla qualit\u00e0 del codice","text":"CWEs corrispondenti Tasso di incidenza Max Tasso di incidenza Medio Sfruttabilit\u00e0 pesata Impatto Medio Copertura Max Copertura media Occorrenze Totali CVE Totali 38 49.46% 2.22% 7.1 6.7 60.85% 23.42% 101736 7564 <ul> <li> <p>Descrizione. I problemi relativi alla qualit\u00e0 del codice includono difetti di sicurezza o pattern noti, il riutilizzo di variabili per scopi multipli, l'esposizione di     informazioni sensibili nell'output delle istruzioni di debug, errori off-by-one, condizioni time of check/time of use  (TOCTOU), race conditions, errori di conversione, use after free, e altro ancora. La caratteristica di questa     sezione \u00e8 che queste problematiche di solito possono essere identificate con settaggi rigorosi dei flag del compilatore, strumenti di analisi statica del codice e plugin dell'IDE per il linting.     I linguaggi moderni hanno eliminato molti di questi problemi by design, come     il concetto di memory ownership, di borrowing, e il threading di Rust, lo strict typing e il bounds checking di Go.</p> </li> <li> <p>Come prevenire. Abilitare e utilizzare le opzioni di analisi statica del      codice e dell'ambiente di sviluppo.     Considerare l'uso di uno strumento di analisi statica del codice.     Considerare se potrebbe essere possibile usare o migrare ad un linguaggio o     framework che elimina intere classi classi di bug, come Rust o Go.</p> </li> <li> <p>Esempi di scenari d'attacco. Un attaccante potrebbe ottenere o aggiornare     informazioni sensibili sfruttando una condizione di race condition con una     variabile staticamente condivisa da pi\u00f9 thread.</p> </li> <li> <p>Riferimenti</p> <ul> <li> <p>OWASP Code Review Guide</p> </li> <li> <p>Google Code Review Guide</p> </li> </ul> </li> </ul>"},{"location":"it/A11_2021-Next_Steps/#denial-of-service","title":"Denial of Service","text":"CWEs corrispondenti Tasso di incidenza Max Tasso di incidenza Medio Sfruttabilit\u00e0 pesata Impatto Medio Copertura Max Copertura media Occorrenze Totali CVE Totali 8 17.54% 4.89% 8.3 5.9 79.58% 33.26% 66985 973 <ul> <li> <p>Descrizione. Denial of service \u00e8 sempre possibile date     risorse sufficienti da parte di un attaccante. Tuttavia, le metodologie di progettazione e programmazione hanno un'influenza significativa sull'entit\u00e0 di questo tipo di attacchi.     Supponiamo che chiunque abbia il link possa accedere ad un file di grandi dimensioni, o che in ogni pagina venga svolta una transazione computazionalmente costosa. In questo     caso, lo sforzo per svolgere un attacco di denial of service richiederebbe pochissimo sforzo.</p> </li> <li> <p>Come prevenire. Testare le prestazioni del codice per utilizzo di CPU, I/O      e memoria. Utilizzare, riarchitettare, ottimizzare o mettere in cache le operazioni pi\u00f9 costose.     Considerare i controlli di accesso per gli oggetti pi\u00f9 grandi per assicurare che solo     persone autorizzate possano accedere a file o oggetti di grandi dimensioni o servirli     da una edge caching network. </p> </li> <li> <p>Esempi di scenari d'attacco. Un attaccante potrebbe determinare che un'operazione     richiede 5-10 secondi per essere completata. Quando si eseguono quattro     thread concorrenti, il server sembra smettere di rispondere. L'attaccante     utilizza 1000 thread e porta l'intero sistema offline.</p> </li> <li> <p>Riferimenti</p> <ul> <li> <p>OWASP Cheat Sheet: Denial of Service</p> </li> <li> <p>OWASP Attacks: Denial of Service</p> </li> </ul> </li> </ul>"},{"location":"it/A11_2021-Next_Steps/#errori-di-gestione-della-memoria","title":"Errori di gestione della memoria","text":"CWEs corrispondenti Tasso di incidenza Max Tasso di incidenza Medio Sfruttabilit\u00e0 pesata Impatto Medio Copertura Max Copertura media Occorrenze Totali CVE Totali 14 7.03% 1.16% 6.7 8.1 56.06% 31.74% 26576 16184 <ul> <li> <p>Descrizione. Le applicazioni web tendono ad essere scritte in     linguaggi managed, come Java, .NET, o Node.js (JavaScript o     TypeScript). Tuttavia, questi linguaggi sono scritti con linguaggi di basso livello     che soffrono di problemi di gestione della memoria, come buffer o heap     overflow, use after free, integer overflow, e altro. Ci sono stati     molti attacchi di sandbox escape nel corso degli anni che hanno dimostrato che solo     perch\u00e9 il linguaggio delle applicazioni web \u00e8 nominalmente \"memory safe\", le     basi sottostanti potrebbero non esserlo.</p> </li> <li> <p>Come prevenire. Molte API moderne vengono oramai scritte in linguaggi memory-safe     come Rust o Go. Nel caso di Rust, la sicurezza della memoria \u00e8     una caratteristica cruciale del linguaggio. Per il codice esistente, l'uso di     rigorosi flag del compilatore, strong typing, analisi statica del codice e fuzz testing     possono essere utili per identificare memory leaks, overrun di memoria e array, e altro ancora.</p> </li> <li> <p>Esempi di scenari d'attacco. I buffer e gli heap overflow sono stati un     un pilastro per gli attaccanti nel corso degli anni. L'attaccante invia dei dati ad un programma, che li memorizza in uno stack buffer sottodimensionato. Il risultato \u00e8 che le informazioni sul call stack vengono sovrascritte, incluso il puntatore di ritorno della funzione. I dati impostano il valore del puntatore di ritorno in modo che quando la funzione termina, trasferisce il controllo al codice maligno contenuto nei dati inviati dall'attaccante.</p> </li> <li> <p>Riferimenti</p> <ul> <li> <p>OWASP Vulnerabilities: Buffer Overflow</p> </li> <li> <p>OWASP Attacks: Buffer Overflow</p> </li> <li> <p>Science Direct: Integer Overflow</p> </li> </ul> </li> </ul>"},{"location":"ja/","title":"\u5c0e\u5165","text":""},{"location":"ja/#owasp-top-10-2021","title":"OWASP Top 10 - 2021 \u3078\u3088\u3046\u3053\u305d","text":"<p>OWASP \u30c8\u30c3\u30d7 10 \u306e\u6700\u65b0\u7248\u3078\u3088\u3046\u3053\u305d! OWASP \u30c8\u30c3\u30d7 10 2021\u5e74\u7248\u306f\u3001\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30c7\u30b6\u30a4\u30f3\u304c\u4e00\u65b0\u3055\u308c\u30011\u30da\u30fc\u30b8\u306e\u30a4\u30f3\u30d5\u30a9\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u30a4\u30f3\u30d5\u30a9\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u306f\u3001\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u304b\u3089\u5165\u624b\u3067\u304d\u3001\u5370\u5237\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u4eca\u56de\u306e\u30c8\u30c3\u30d710\u306e\u4f5c\u6210\u306b\u3042\u305f\u3063\u3066\u3001\u8cb4\u91cd\u306a\u6642\u9593\u3084\u30c7\u30fc\u30bf\u3092\u63d0\u4f9b\u3057\u3066\u304f\u3060\u3055\u3063\u305f\u3059\u3079\u3066\u306e\u7686\u3055\u3093\u306b\u611f\u8b1d\u3057\u307e\u3059\u3002\u7686\u69d8\u306e\u3054\u5354\u529b\u306a\u304f\u3057\u3066\u306f\u3001OWASP \u30c8\u30c3\u30d7 10 2021\u5e74\u7248\u306f\u5b58\u5728\u3057\u5f97\u307e\u305b\u3093\u3002\u672c\u5f53\u306b\u3001\u611f\u8b1d\u3044\u305f\u3057\u307e\u3059\u3002</p>"},{"location":"ja/#202110","title":"2021\u5e74\u7248\u30c8\u30c3\u30d710\u306e\u5909\u66f4\u70b9","text":"<p>2021\u5e74\u7248\u30c8\u30c3\u30d710\u3067\u306f\u30013\u3064\u306e\u65b0\u3057\u3044\u30ab\u30c6\u30b4\u30ea\u30fc\u30014\u3064\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u540d\u79f0\u3068\u30b9\u30b3\u30fc\u30d7\u306e\u5909\u66f4\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u7d71\u5408\u3055\u308c\u305f\u3082\u306e\u3082\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002</p> <p></p> <ul> <li>A01:2021-\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u4e0d\u5099 \u306f\u30015\u4f4d\u304b\u3089\u6700\u3082\u6df1\u523b\u306aWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ea\u30b9\u30af\u3078\u3068\u9806\u4f4d\u3092\u4e0a\u3052\u307e\u3057\u305f\u3002\u8ca2\u732e\u3055\u308c\u305f\u30c7\u30fc\u30bf\u304b\u3089\u3001\u5e73\u5747\u3067\u30c6\u30b9\u30c8\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e3.81%\u304c1\u3064\u4ee5\u4e0a\u306e\u5171\u901a\u8106\u5f31\u6027\u30bf\u30a4\u30d7\u4e00\u89a7\uff08CWE\uff09\u3092\u6301\u3063\u3066\u304a\u308a\u3001\u3053\u306e\u30ea\u30b9\u30af\u30ab\u30c6\u30b4\u30ea\u306b\u8a72\u5f53\u3059\u308bCWE\u306f 318,000 \u4ef6\u4ee5\u4e0a\u5b58\u5728\u3057\u3066\u3044\u305f\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u4ed6\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u6bd4\u3079\u3001\u300c\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u6b20\u9665\u300d\u306b\u3042\u305f\u308b34\u4ef6\u306eCWE\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u591a\u304f\u767a\u751f\u3057\u3066\u3044\u307e\u3057\u305f\u3002</li> <li>A02:2021-\u6697\u53f7\u5316\u306e\u5931\u6557 \u306f\u3001\u3072\u3068\u3064\u9806\u4f4d\u3092\u4e0a\u3052\u30662\u4f4d\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4ee5\u524d\u306f\u3001A3:2017-\u6a5f\u5fae\u306a\u60c5\u5831\u306e\u9732\u51fa \u3068\u547c\u3070\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u308c\u306f\u6839\u672c\u7684\u306a\u539f\u56e0\u3068\u3044\u3046\u3088\u308a\u5e45\u5e83\u304f\u307f\u3089\u308c\u308b\u75c7\u72b6\u3068\u8a00\u3048\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u6a5f\u5bc6\u30c7\u30fc\u30bf\u306e\u6f0f\u3048\u3044\u3084\u30b7\u30b9\u30c6\u30e0\u4fb5\u5bb3\u306b\u591a\u304f\u95a2\u9023\u3059\u308b\u3001\u6697\u53f7\u6280\u8853\u306b\u307e\u3064\u308f\u308b\u5931\u6557\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002</li> <li>A03:2021-\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3 \u306f\u30013\u4f4d\u306b\u4e0b\u304c\u3063\u3066\u3044\u307e\u3059\u300294%\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f55\u3089\u304b\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306b\u95a2\u3059\u308b\u554f\u984c\u304c\u78ba\u8a8d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u6700\u5927\u767a\u751f\u7387\u306f19%\u3001\u5e73\u5747\u767a\u751f\u7387\u306f3.37%\u3067\u3042\u308a\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u3042\u305f\u308b33\u306eCWE\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306e\u767a\u751f\u6570\u304c2\u756a\u76ee\u306b\u591a\u304f\u898b\u3089\u308c\u307e\u3059\u3002\u767a\u751f\u6570\u306f27\u4e074\u5343\u4ef6\u3067\u3057\u305f\u3002\u4eca\u56de\u304b\u3089\u3001\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0\u306f\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002</li> <li>A04:2021-\u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u306a\u3044\u4e0d\u5b89\u306a\u8a2d\u8a08 \u306f\u30012021\u5e74\u306b\u65b0\u8a2d\u3055\u308c\u305f\u30ab\u30c6\u30b4\u30ea\u30fc\u3067\u3001\u8a2d\u8a08\u4e0a\u306e\u6b20\u9665\u306b\u95a2\u3059\u308b\u30ea\u30b9\u30af\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\u4e00\u696d\u754c\u3068\u3057\u3066\u3001\u6211\u3005\u304c\u7d14\u7c8b\u306b\u300c\u30b7\u30d5\u30c8\u30ec\u30d5\u30c8\u300d\u3059\u308b\u3053\u3068\u3092\u671b\u3080\u306e\u3067\u3042\u308c\u3070\u3001\u8105\u5a01\u30e2\u30c7\u30ea\u30f3\u30b0\u3084\u3001\u5b89\u5168\u306a\u8a2d\u8a08\u30d1\u30bf\u30fc\u30f3\u3068\u539f\u5247\u3001\u307e\u305f\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30fb\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u3082\u3063\u3068\u5229\u7528\u3057\u3066\u3044\u304f\u3053\u3068\u304c\u5fc5\u8981\u3067\u3059\u3002 \u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u306a\u3044\u4e0d\u5b89\u306a\u8a2d\u8a08\u306f\u5b8c\u74a7\u306a\u5b9f\u88c5\u306b\u3088\u3063\u3066\u4fee\u6b63\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u5b9a\u7fa9\u4e0a\u3001(\u3064\u307e\u308a\u8a2d\u8a08\u81ea\u4f53\u304c\u554f\u984c\u306a\u306e\u3067)\u7279\u5b9a\u306e\u653b\u6483\u306b\u5bfe\u3057\u3066\u5fc5\u8981\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56\u304c\u4f5c\u3089\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u3048\u306a\u3044\u304b\u3089\u3067\u3059\u3002</li> <li>A05:2021-\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u8a2d\u5b9a\u30df\u30b9 \u306f\u3001\u524d\u56de\u306e6\u4f4d\u304b\u3089\u9806\u4f4d\u3092\u4e0a\u3052\u307e\u3057\u305f\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e90\uff05\u306b\u4f55\u3089\u304b\u306e\u8a2d\u5b9a\u30df\u30b9\u304c\u898b\u3089\u308c\u3001\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u306e\u5e73\u5747\u767a\u751f\u7387\u3068\u3057\u3066\u306f4.5%\u3001\u3053\u306e\u30ea\u30b9\u30af\u30ab\u30c6\u30b4\u30ea\u306b\u8a72\u5f53\u3059\u308bCWE\u306f 208,000 \u4ef6\u4ee5\u4e0a\u5b58\u5728\u3057\u3066\u3044\u305f\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002 \u9ad8\u5ea6\u306a\u8a2d\u5b9a\u304c\u53ef\u80fd\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3078\u306e\u79fb\u884c\u304c\u9032\u3080\u4e2d\u3067\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u9806\u4f4d\u304c\u4e0a\u304c\u3063\u305f\u3053\u3068\u306f\u5f53\u7136\u3068\u8a00\u3048\u307e\u3059\u3002\u4ee5\u524d\u306e\u3001A4:2017-XML \u5916\u90e8\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u53c2\u7167 (XXE) \u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306f\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002</li> <li>A06:2021-\u8106\u5f31\u3067\u53e4\u304f\u306a\u3063\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u306f\u3001\u4ee5\u524d\u306f\u300c\u65e2\u77e5\u306e\u8106\u5f31\u6027\u306e\u3042\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f7f\u7528\u300d\u3068\u3044\u3046\u30bf\u30a4\u30c8\u30eb\u3067\u3057\u305f\u3002\u3053\u306e\u554f\u984c\u306f\u3001Top 10\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u8abf\u67fb\u3067\u306f2\u4f4d\u3067\u3042\u308a\u3001\u30c7\u30fc\u30bf\u5206\u6790\u306b\u3088\u3063\u3066\u30c8\u30c3\u30d710\u306b\u5165\u308b\u3060\u3051\u306e\u30c7\u30fc\u30bf\u3082\u3042\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306f2017\u5e74\u306e9\u4f4d\u304b\u3089\u9806\u4f4d\u3092\u4e0a\u3052\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001\u30c6\u30b9\u30c8\u3084\u30ea\u30b9\u30af\u8a55\u4fa1\u306b\u82e6\u52b4\u3059\u308b\u3001\u3088\u304f\u77e5\u3089\u308c\u305f\u554f\u984c\u3067\u3059\u3002\u307e\u305f\u3001\u542b\u307e\u308c\u308bCWE\u306b\u3042\u305f\u308b\u5171\u901a\u8106\u5f31\u6027\u8b58\u5225\u5b50 (CVE)\u306e\u306a\u3044\u3001\u552f\u4e00\u306e\u30ab\u30c6\u30b4\u30ea\u3067\u3042\u308b\u305f\u3081\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a8\u30af\u30b9\u30d7\u30ed\u30a4\u30c8\u3068\u30a4\u30f3\u30d1\u30af\u30c8\u306e\u91cd\u307f\u306f5.0\u3068\u3057\u3066\u30b9\u30b3\u30a2\u306b\u53cd\u6620\u3055\u308c\u3066\u3044\u307e\u3059\u3002</li> <li>A07:2021-\u8b58\u5225\u3068\u8a8d\u8a3c\u306e\u5931\u6557 \u306f\u4ee5\u524d\u3001\u300c\u8a8d\u8a3c\u306e\u4e0d\u5099\u300d\u3068\u547c\u3070\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u306e\u7248\u3067\u306f\u7b2c2\u4f4d\u304b\u3089\u9806\u4f4d\u3092\u843d\u3068\u3057\u3001\u8b58\u5225\u306e\u5931\u6557\u306b\u95a2\u9023\u3059\u308bCWE\u3092\u3088\u308a\u591a\u304f\u542b\u3080\u610f\u5473\u5408\u3044\u306e\u30ab\u30c6\u30b4\u30ea\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306f\u4f9d\u7136\u3068\u3057\u3066\u30c8\u30c3\u30d710\u306b\u793a\u3059\u3079\u304d\u91cd\u8981\u306a\u9805\u76ee\u3067\u3059\u304c\u3001\u6a19\u6e96\u5316\u3055\u308c\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u5229\u7528\u304c\u9032\u3093\u3060\u3053\u3068\u304c\u529f\u3092\u594f\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002</li> <li>A08:2021-\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3068\u30c7\u30fc\u30bf\u306e\u6574\u5408\u6027\u306e\u4e0d\u5177\u5408 \u306f\u30012021\u5e74\u306b\u65b0\u8a2d\u3055\u308c\u305f\u30ab\u30c6\u30b4\u30ea\u30fc\u3067\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u66f4\u65b0\u3001\u91cd\u8981\u306a\u30c7\u30fc\u30bf\u3092\u3001CI/CD\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306b\u304a\u3044\u3066\u6574\u5408\u6027\u3092\u691c\u8a3c\u305b\u305a\u306b\u898b\u8fbc\u307f\u3067\u9032\u3081\u308b\u3053\u3068\u306b\u3088\u308b\u554f\u984c\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u3066\u3044\u307e\u3059\u3002\u5171\u901a\u8106\u5f31\u6027\u8b58\u5225\u5b50/\u5171\u901a\u8106\u5f31\u6027\u8a55\u4fa1\u30b7\u30b9\u30c6\u30e0 (CVE/CVSS) \u306e\u30c7\u30fc\u30bf\u304b\u3089\u6700\u3082\u91cd\u5927\u306a\u5f71\u97ff\u3092\u53d7\u3051\u305f\u3082\u306e\u306e1\u3064\u304c\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e10\u306eCWE\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002A8:2017-\u5b89\u5168\u3067\u306a\u3044\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3 \u306f\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u4e00\u90e8\u3068\u306a\u308a\u307e\u3057\u305f\u3002</li> <li>A09:2021-\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ed\u30b0\u3068\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u306e\u5931\u6557 \u306f\u3001\u5f93\u6765\u306fA10:2017-\u4e0d\u5341\u5206\u306a\u30ed\u30ae\u30f3\u30b0\u3068\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3067\u3057\u305f\u304c\u3001Top 10\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u8abf\u67fb\uff08\u7b2c3\u4f4d\uff09\u304b\u3089\u8ffd\u52a0\u3055\u308c\u3001\u5f93\u6765\u306e\u7b2c10\u4f4d\u304b\u3089\u30e9\u30f3\u30af\u30a2\u30c3\u30d7\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306f\u3001\u3088\u308a\u591a\u304f\u306e\u7a2e\u985e\u306e\u5931\u6557\u3092\u542b\u3080\u3088\u3046\u306b\u62e1\u5f35\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30c6\u30b9\u30c8\u304c\u56f0\u96e3\u306a\u3082\u306e\u3067\u3042\u308a\u3001\u304b\u3064\u3001CVE/CVSS\u306e\u30c7\u30fc\u30bf\u306b\u306f\u3042\u307e\u308a\u53cd\u6620\u3055\u308c\u306a\u3044\u3082\u306e\u3067\u3059\u3002\u3068\u306f\u3044\u3048\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u3067\u5931\u6557\u304c\u8d77\u304d\u308b\u3068\u3001\u53ef\u8996\u6027\u3001\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u30a2\u30e9\u30fc\u30c8\u3001\u30d5\u30a9\u30ec\u30f3\u30b8\u30c3\u30af\u306a\u3069\u306b\u76f4\u63a5\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</li> <li>A10:2021-\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u30ea\u30af\u30a8\u30b9\u30c8\u30d5\u30a9\u30fc\u30b8\u30a7\u30ea(SSRF) \u306f\u3001Top 10\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u8abf\u67fb\uff08\u7b2c1\u4f4d\uff09\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u3082\u306e\u3067\u3059\u3002\u8abf\u67fb\u30c7\u30fc\u30bf\u304b\u3089\u308f\u304b\u308b\u3053\u3068\u306f\u3001\u3088\u304f\u3042\u308b\u30c6\u30b9\u30c8\u3088\u308a\u5e83\u7bc4\u306a\u7bc4\u56f2\u306b\u304a\u3044\u3066\u3001\u554f\u984c\u306e\u767a\u751f\u7387\u306f\u6bd4\u8f03\u7684\u4f4e\u3044\u3082\u306e\u306e\u3001\u554f\u984c\u304c\u8d77\u304d\u305f\u5834\u5408\u306e\u30a8\u30af\u30b9\u30d7\u30ed\u30a4\u30c8\u3068\u30a4\u30f3\u30d1\u30af\u30c8\u306f\u5e73\u5747\u4ee5\u4e0a\u306e\u3082\u306e\u3068\u306a\u308a\u5f97\u307e\u3059\u3002\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306f\u3001\u73fe\u6642\u70b9\u3067\u30c7\u30fc\u30bf\u3068\u3057\u3066\u73fe\u308c\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u8907\u6570\u306e\u696d\u754c\u306e\u5c02\u9580\u5bb6\u306b\u3088\u308a\u91cd\u8981\u3068\u306e\u793a\u5506\u3092\u5f97\u305f\u30b7\u30ca\u30ea\u30aa\u3068\u3057\u3066\u53cd\u6620\u3057\u3066\u3044\u307e\u3059\u3002</li> </ul>"},{"location":"ja/#_2","title":"\u65b9\u6cd5\u8ad6","text":"<p>\u4eca\u56de\u306e\u30c8\u30c3\u30d710\u306f\u3001\u3053\u308c\u307e\u3067\u4ee5\u4e0a\u306b\u30c7\u30fc\u30bf\u3092\u91cd\u8996\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3084\u307f\u304f\u3082\u306b\u30c7\u30fc\u30bf\u3092\u91cd\u8996\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u300210\u9805\u76ee\u306e\u3046\u30618\u9805\u76ee\u306f\u63d0\u4f9b\u3055\u308c\u305f\u30c7\u30fc\u30bf\u304b\u3089\u30012\u9805\u76ee\u306fTop 10\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u8abf\u67fb\u304b\u3089\u9ad8\u3044\u30ec\u30d9\u30eb\u3067\u9078\u3073\u307e\u3057\u305f\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u306b\u306f\u3072\u3068\u3064\u306e\u6839\u672c\u7684\u306a\u7406\u7531\u304c\u3042\u308a\u307e\u3059\u3002\u63d0\u4f9b\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u898b\u308b\u3053\u3068\u306f\u3001\u904e\u53bb\u3092\u898b\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u30ea\u30b5\u30fc\u30c1\u30e3\u30fc\u304c\u65b0\u3057\u3044\u8106\u5f31\u6027\u3084\u3001\u305d\u308c\u3092\u30c6\u30b9\u30c8\u3059\u308b\u65b0\u3057\u3044\u65b9\u6cd5\u3092\u898b\u3064\u3051\u308b\u306e\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30c6\u30b9\u30c8\u3092\u30c4\u30fc\u30eb\u3084\u30d7\u30ed\u30bb\u30b9\u306b\u7d44\u307f\u8fbc\u3080\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\u3053\u3046\u3057\u305f\u5f31\u70b9\u3092\u5e83\u304f\u78ba\u5b9f\u306b\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u306b\u306f\u3001\u4f55\u5e74\u3082\u304b\u304b\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u305d\u3053\u3067\u3001\u30c7\u30fc\u30bf\u3067\u306f\u308f\u304b\u3089\u306a\u3044\u3088\u3046\u306a\u672c\u8cea\u7684\u306a\u5f31\u70b9\u306f\u4f55\u304b\u3068\u3044\u3046\u3053\u3068\u306b\u3064\u3044\u3066\u306f\u3001\u696d\u754c\u306e\u7b2c\u4e00\u7dda\u3067\u6d3b\u8e8d\u3055\u308c\u3066\u3044\u308b\u65b9\u3005\u306b\u304a\u805e\u304d\u3059\u308b\u3053\u3068\u3067\u30d0\u30e9\u30f3\u30b9\u3092\u3068\u308b\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002</p> <p>\u30c8\u30c3\u30d710\u3092\u7d99\u7d9a\u7684\u306b\u6210\u719f\u3055\u305b\u308b\u305f\u3081\u306b\u79c1\u305f\u3061\u304c\u63a1\u7528\u3057\u305f\u3001\u91cd\u8981\u306a\u5909\u66f4\u70b9\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/#_3","title":"\u30ab\u30c6\u30b4\u30ea\u306e\u69cb\u6210\u306b\u3064\u3044\u3066","text":"<p>\u524d\u56de\u306eOWASP Top 10\u304b\u3089\u3044\u304f\u3064\u304b\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u304c\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u306b\u4eca\u56de\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u5909\u66f4\u70b9\u3092\u5927\u307e\u304b\u306b\u307e\u3068\u3081\u307e\u3059\u3002</p> <p>\u524d\u56de\u306e\u30c7\u30fc\u30bf\u53ce\u96c6\u6d3b\u52d5\u306f\u3001\u7d0430\u500b\u306eCWE\u304b\u3089\u306a\u308b\u898f\u5b9a\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u306b\u7126\u70b9\u3092\u5f53\u3066\u3001\u8ffd\u52a0\u3068\u3057\u3066\u73fe\u5834\u3067\u306e\u8abf\u67fb\u7d50\u679c\u3092\u6c42\u3081\u3066\u3044\u307e\u3057\u305f\u3002\u3053\u306e\u65b9\u6cd5\u3067\u306f\u3001\u73fe\u5834\u306e\u7d44\u7e54\u306f\u3001\u4e3b\u306b\u3053\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u305f30\u306eCWE\u3060\u3051\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u5831\u544a\u3092\u304f\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u3001\u5b9f\u969b\u306b\u89b3\u5bdf\u3057\u305fCWE\u3092\u8ffd\u52a0\u3057\u3066\u304f\u308c\u308b\u3053\u3068\u306f\u307e\u308c\u3060\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u305d\u3053\u3067\u4eca\u56de\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308bCWE\u306b\u5236\u9650\u3092\u8a2d\u3051\u305a\u306b\u3001\u30c7\u30fc\u30bf\u3092\u63d0\u4f9b\u3057\u3066\u3082\u3089\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u3042\u308b\u5e74\u306b\uff08\u4eca\u56de\u306f2017\u5e74\u4ee5\u964d\uff09\u30c6\u30b9\u30c8\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6570\u3068\u3001\u30c6\u30b9\u30c8\u3067CWE\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u4f8b\u304c1\u3064\u4ee5\u4e0a\u898b\u3064\u304b\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6570\u3092\u51fa\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u4f9d\u983c\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3092\u6bcd\u96c6\u56e3\u3068\u3057\u3066\u3068\u3063\u305f\u4e0a\u3067\u3001\u305d\u308c\u305e\u308c\u306eCWE\u304c\u3069\u306e\u7a0b\u5ea6\u8513\u5ef6\u3057\u3066\u3044\u308b\u304b\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u76ee\u7684\u3092\u8e0f\u307e\u3048\u3066\u3001\u5f53\u8a72CWE\u306e\u767a\u898b\u983b\u5ea6\u306b\u3064\u3044\u3066\u306f\u7121\u8996\u3057\u307e\u3057\u305f\u3002\u983b\u5ea6\u306f\u4ed6\u306e\u72b6\u6cc1\u3067\u306f\u5fc5\u8981\u6027\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6bcd\u96c6\u56e3\u306b\u304a\u3044\u3066\u306f\u3001\u73fe\u5b9f\u306e\u8513\u5ef6\u7387\u3092\u96a0\u3059\u3053\u3068\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u3042\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3001\u3042\u308b\u7279\u5b9a\u306eCWE\u306e\u8106\u5f31\u6027\u304c4\u4f8b\u898b\u3064\u304b\u308b\u3053\u3068\u3082\u3042\u308c\u3070\u30014,000\u4f8b\u898b\u3064\u304b\u308b\u3053\u3068\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u305d\u306e\u767a\u751f\u983b\u5ea6\u306f\u30c8\u30c3\u30d710\u306e\u8a08\u7b97\u306b\u5f71\u97ff\u3055\u305b\u306a\u3044\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002\u3053\u3046\u3057\u3066\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u5206\u6790\u3067\u304d\u305fCWE\u306f\u7d0430\u500b\u304b\u3089\u7d04400\u500b\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4eca\u5f8c\u3001\u79c1\u305f\u3061\u306f\u8ffd\u52a0\u306e\u30c7\u30fc\u30bf\u89e3\u6790\u3092\u884c\u3044\u3001Top 10\u306b\u88dc\u8db3\u3059\u308b\u8a08\u753b\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306bCWE\u306e\u6570\u304c\u5927\u5e45\u306b\u5897\u3048\u305f\u3053\u3068\u3067\u3001\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u69cb\u6210\u65b9\u6cd5\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>CWE\u306e\u30b0\u30eb\u30fc\u30d7\u5316\u3068\u5206\u985e\u306b\u6570\u30f6\u6708\u3092\u8cbb\u3084\u3057\u307e\u3057\u305f\u3002\u3055\u3089\u306b\u6570\u30f6\u6708\u7d9a\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3069\u3053\u304b\u306e\u6642\u70b9\u3067\u6b62\u3081\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002CWE\u306b\u306f\u300c\u6839\u672c\u539f\u56e0\u300d\u3068\u300c\u75c7\u72b6\u300d\u304c\u3042\u308a\u3001\u300c\u6839\u672c\u539f\u56e0\u300d\u306b\u306f\u300c\u6697\u53f7\u306e\u6b20\u9665\u300d\u3084\u300c\u8a2d\u5b9a\u30df\u30b9\u300d\u306a\u3069\u304c\u3042\u308a\u3001\u300c\u75c7\u72b6\u300d\u306b\u306f\u300c\u6a5f\u5bc6\u30c7\u30fc\u30bf\u306e\u6f0f\u3048\u3044\u300d\u3084\u300c\u30b5\u30fc\u30d3\u30b9\u59a8\u5bb3\u300d\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u79c1\u305f\u3061\u306f\u3001\u53ef\u80fd\u306a\u9650\u308a\u6839\u672c\u7684\u306a\u539f\u56e0\u306b\u7126\u70b9\u3092\u5f53\u3066\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u8b58\u5225\u3068\u4fee\u5fa9\u306e\u305f\u3081\u306e\u30ac\u30a4\u30c0\u30f3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u306e\u306b\u9069\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\u300c\u75c7\u72b6\u300d\u3067\u306f\u306a\u304f\u300c\u6839\u672c\u539f\u56e0\u300d\u306b\u7126\u70b9\u3092\u5f53\u3066\u308b\u3053\u3068\u306f\u3001\u4eca\u306b\u59cb\u307e\u3063\u305f\u30b3\u30f3\u30bb\u30d7\u30c8\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3069\u306e\u7248\u306eTop 10\u3082\u3001\u75c7\u72b6\u3068\u539f\u56e0\u304c\u6df7\u5728\u3057\u3066\u304d\u307e\u3057\u305f\u3002CWE\u3082\u307e\u305f\u3001\u300c\u75c7\u72b6\u300d\u3068\u300c\u6839\u672c\u539f\u56e0\u300d\u304c\u6df7\u5728\u3057\u3066\u3044\u307e\u3059\u3002\u79c1\u305f\u3061\u306f\u305d\u306e\u3053\u3068\u3092\u3088\u308a\u614e\u91cd\u306b\u8003\u3048\u3001\u547c\u3073\u304b\u3051\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306e\u30ab\u30c6\u30b4\u30ea\u3054\u3068\u306b\u542b\u307e\u308c\u308bCWE\u6570\u306f\u5e73\u574719.6\u4ef6\u3067\u3001\u6700\u5c11\u3067 A10:2021-\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u30ea\u30af\u30a8\u30b9\u30c8\u30d5\u30a9\u30fc\u30b8\u30a7\u30ea(SSRF) \u306e1\u4ef6\u3001\u305d\u3057\u3066\u6700\u591a\u306e\u3082\u306e\u306f A04:2021-\u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u306a\u3044\u4e0d\u5b89\u306a\u8a2d\u8a08 \u306e40\u4ef6\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u69cb\u9020\u306e\u5909\u66f4\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u3055\u3089\u306a\u308b\u52b9\u679c\u3092\u3082\u305f\u3089\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u4f01\u696d\u306f\u3001\u5229\u7528\u3057\u3066\u3044\u308b\u8a00\u8a9e\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u3068\u3063\u3066\u610f\u5473\u306e\u3042\u308bCWE\u306b\u96c6\u4e2d\u3057\u3066\u6559\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002</p>"},{"location":"ja/#_4","title":"\u30ab\u30c6\u30b4\u30ea\u9078\u5b9a\u306b\u30c7\u30fc\u30bf\u304c\u3069\u306e\u3088\u3046\u306b\u4f7f\u7528\u3055\u308c\u305f\u304b","text":"<p>2017\u5e74\u3067\u306f\u3001\u767a\u751f\u7387\u3088\u308a\u30ab\u30c6\u30b4\u30ea\u30fc\u3092\u9078\u5b9a\u3057\u3066\u53ef\u80fd\u6027\u3092\u5224\u65ad\u3057\u3001\u6570\u5341\u5e74\u306e\u7d4c\u9a13\u306b\u57fa\u3065\u304d\u3001\u60aa\u7528\u306e\u3057\u3084\u3059\u3055\u3001\u691c\u51fa\u306e\u3057\u3084\u3059\u3055(\u304a\u3088\u3073 \u53ef\u80fd\u6027)\u3001\u6280\u8853\u9762\u3078\u306e\u5f71\u97ff\u306b\u3064\u3044\u3066\u30c1\u30fc\u30e0\u306e\u8b70\u8ad6\u306b\u3088\u308a\u30e9\u30f3\u30af\u4ed8\u3051\u3057\u307e\u3057\u305f\u30022021\u5e74\u306b\u3064\u3044\u3066\u306f\u3001\u53ef\u80fd\u3067\u3042\u308c\u3070\u60aa\u7528\u306e\u3057\u3084\u3059\u3055\u3068(\u6280\u8853\u9762\u306e) \u5f71\u97ff\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002</p> <p>OWASP Dependency Check\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001CVSS Exploit\u3001\u304a\u3088\u3073Impact\u306e\u30b9\u30b3\u30a2\u3092\u3001\u95a2\u9023\u3059\u308bCWE\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u62bd\u51fa\u3057\u307e\u3057\u305f\u3002CVSSv2\u306b\u306fCVSSv3\u3067\u5bfe\u51e6\u3055\u308c\u308b\u3067\u3042\u308d\u3046\u6b20\u9665\u304c\u3042\u308b\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u3059\u3079\u3066\u306eCVE\u306fCVSSv2\u306e\u30b9\u30b3\u30a2\u3092\u6301\u3063\u3066\u3044\u305f\u305f\u3081\u3001\u304b\u306a\u308a\u306e\u8abf\u67fb\u3068\u52b4\u529b\u3092\u8981\u3057\u307e\u3057\u305f\u3002\u3067\u3059\u304c\u3042\u308b\u6642\u70b9\u304b\u3089\u3001\u3059\u3079\u3066\u306eCVE\u306bCVSSv3\u306e\u30b9\u30b3\u30a2\u3082\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u306a\u304a\u3001CVSSv2\u3068CVSSv3\u306e\u9593\u3067\u306f\u3001\u30b9\u30b3\u30a2\u306e\u7bc4\u56f2\u3068\u8a08\u7b97\u5f0f\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>CVSSv2 \u3067\u306f\u3001\u60aa\u7528\u6027 \u3068 (\u6280\u8853\u9762\u306e) \u5f71\u97ff \u306e\u4e21\u65b9\u304c 10.0 \u307e\u3067\u53ef\u80fd\u3067\u3057\u305f\u304c\u3001\u8a08\u7b97\u5f0f\u306b\u3088\u3063\u3066 \u60aa\u7528\u6027 \u306f 60%\u3001\u5f71\u97ff \u306f 40% \u306b\u8abf\u6574\u3055\u308c\u307e\u3057\u305f\u3002CVSSv3\u3067\u306f\u3001\u7406\u8ad6\u7684\u306a\u6700\u5927\u5024\u304cExploit\u304c6.0\u3001Impact\u304c4.0\u306b\u5236\u9650\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u91cd\u307f\u4ed8\u3051\u306b\u3088\u308a\u3001CVSSv3\u3067\u306f\u30a4\u30f3\u30d1\u30af\u30c8\u306e\u30b9\u30b3\u30a2\u304c\u5e73\u5747\u3067\u307b\u307c1.5\u30dd\u30a4\u30f3\u30c8\u9ad8\u304f\u306a\u308a\u3001\u60aa\u7528\u6027\u306e\u30b9\u30b3\u30a2\u306f\u5e73\u5747\u3067\u307b\u307c0.5\u30dd\u30a4\u30f3\u30c8\u4f4e\u304f\u306a\u308a\u307e\u3057\u305f\u3002</p> <p>OWASP Dependency Check\u304b\u3089\u62bd\u51fa\u3055\u308c\u305fNVD\uff08National Vulnerability Database\uff09\u30c7\u30fc\u30bf\u306b\u306f\u3001CWE\u304c\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u305fCVE\u306e\u30ec\u30b3\u30fc\u30c9\u306f125,000\u4ef6\u3042\u308a\u3001\u3053\u308c\u3089\u306e\u4e2d\u306b\u4e00\u610f\u306eCWE\u306f241\u4ef6\u78ba\u8a8d\u3055\u308c\u307e\u3057\u305f\u3002CWE\u304c\u30de\u30c3\u30d7\u3055\u308c\u305f 6,200\u4ef6\u304cCVSSv3\u30b9\u30b3\u30a2\u3092\u6301\u3063\u3066\u304a\u308a\u3001\u3053\u308c\u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u6bcd\u6570\u306e\u7d04\u534a\u5206\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002</p> <p>2021\u5e74\u7248Top10\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u5e73\u5747\u60aa\u7528\u6027\u30b9\u30b3\u30a2\u3068\u5f71\u97ff\u30b9\u30b3\u30a2\u3092\u7b97\u51fa\u3057\u307e\u3057\u305f\u3002CVSS\u30b9\u30b3\u30a2\u3092\u6301\u3064\u3059\u3079\u3066\u306eCVE\u3092CWE\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3001\u60aa\u7528\u6027\u3068\u5f71\u97ff\u306e\u4e21\u30b9\u30b3\u30a2\u3092\u3001CVSSv3\u30b9\u30b3\u30a2\u3092\u6301\u3064\u6bcd\u96c6\u56e3\u306e\u5272\u5408 + CVSSv2\u30b9\u30b3\u30a2\u3092\u6301\u3064\u6b8b\u308a\u306e\u6bcd\u96c6\u56e3\u3067\u91cd\u307f\u4ed8\u3051\u3057\u3066\u5168\u4f53\u306e\u5e73\u5747\u5024\u3092\u7b97\u51fa\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u5e73\u5747\u5024\u3092\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306eCWE\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3001\u30ea\u30b9\u30af\u65b9\u7a0b\u5f0f\u306e\u3046\u3061\u534a\u5206\u306e\u60aa\u7528\u6027\u304a\u3088\u3073(\u6280\u8853\u9762\u306e) \u5f71\u97ff\u30b9\u30b3\u30a2\u3068\u3057\u3066\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002</p>"},{"location":"ja/#_5","title":"\u306a\u305c\u7d14\u7c8b\u306a\u7d71\u8a08\u30c7\u30fc\u30bf\u3060\u3051\u3067\u306f\u306a\u3044\u306e\u304b","text":"<p>\u30c7\u30fc\u30bf\u304b\u3089\u306e\u7d50\u679c\u306f\u3001\u4e3b\u306b\u81ea\u52d5\u5316\u3055\u308c\u305f\u65b9\u6cd5\u3067\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3082\u306e\u304b\u3089\u306b\u9650\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u7d4c\u9a13\u8c4a\u5bcc\u306aAppSec\u306e\u5c02\u9580\u5bb6\u306b\u8a71\u3092\u805e\u3051\u3070\u3001\u307e\u3060\u30c7\u30fc\u30bf\u306b\u306f\u306a\u3044\u767a\u898b\u3084\u50be\u5411\u306b\u3064\u3044\u3066\u6559\u3048\u3066\u304f\u308c\u308b\u3067\u3057\u3087\u3046\u3002\u3068\u306f\u3044\u3048\u7279\u5b9a\u306e\u8106\u5f31\u6027\u30bf\u30a4\u30d7\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\u624b\u6cd5\u3092\u958b\u767a\u3059\u308b\u306e\u306b\u306f\u6642\u9593\u304c\u5fc5\u8981\u3067\u3059\u3002\u305d\u306e\u30c6\u30b9\u30c8\u3092\u81ea\u52d5\u5316\u3057\u3001\u591a\u304f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u81ea\u52d5\u7684\u306b\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u306e\u306f\u3001\u3055\u3089\u306b\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u30c7\u30fc\u30bf\u304b\u3089\u904e\u53bb\u3092\u632f\u308a\u8fd4\u308b\u3060\u3051\u3067\u306f\u9650\u754c\u304c\u3042\u308a\u3001\u30c7\u30fc\u30bf\u306b\u306f\u306a\u3044\u6628\u5e74\u306e\u30c8\u30ec\u30f3\u30c9\u3092\u898b\u843d\u3068\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u305d\u306e\u305f\u3081\u3001\u4e0d\u5b8c\u5168\u3068\u3082\u3044\u3048\u308b\u30c7\u30fc\u30bf\u306e\u7d50\u679c\u304b\u3089\u306e\u30ab\u30c6\u30b4\u30ea\u9078\u5b9a\u306f10\u9805\u76ee\u306e\u3046\u30618\u9805\u76ee\u306b\u7559\u3081\u3066\u3044\u307e\u3059\u3002\u6b8b\u308a\u306e2\u3064\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306f\u3001\u30c8\u30c3\u30d710\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u8abf\u67fb\u306b\u3088\u3063\u3066\u9078\u3073\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001\u6700\u524d\u7dda\u3067\u5b9f\u969b\u306b\u6d3b\u8e8d\u3055\u308c\u3066\u3044\u308b\u65b9\u3005\u304c\u3001\u6700\u3082\u9ad8\u3044\u30ea\u30b9\u30af\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u30c7\u30fc\u30bf\u306b\u306f\u73fe\u308c\u306a\u3044\u3067\u3042\u308d\u3046\uff08\u30c7\u30fc\u30bf\u3067\u306f\u8868\u3057\u3088\u3046\u3082\u306a\u3044\uff09\u3068\u601d\u308f\u308c\u308b\u3082\u306e\u3092\u9078\u3093\u3067\u304f\u308c\u305f\u3082\u306e\u3067\u3059\u3002</p>"},{"location":"ja/#_6","title":"\u983b\u5ea6\u3067\u306f\u306a\u304f\u3001\u767a\u751f\u7387\u3092\u57fa\u6e96\u3068\u3057\u305f\u7406\u7531","text":"<p>\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306f\u4e3b\u306b3\u3064\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001HaT\uff08Human-assisted Tooling:\u4eba\u9593\u63f4\u52a9\u578b\u81ea\u52d5\u30c6\u30b9\u30c8\uff09\u3001TaH\uff08Tool-assisted Human:\u30c4\u30fc\u30eb\u3092\u5229\u7528\u3057\u305f\u624b\u52d5\u30c6\u30b9\u30c8\uff09\u3001\u305d\u3057\u3066Raw Tooling:\u5b8c\u5168\u81ea\u52d5\u30c6\u30b9\u30c8\u3068\u540d\u4ed8\u3051\u307e\u3057\u305f\u3002</p> <p>\u81ea\u52d5\u30c6\u30b9\u30c8\u3068HaT\u306f\u9ad8\u983b\u5ea6\u767a\u898b\u751f\u6210\u6a5f\u3067\u3059\u3002\u3053\u308c\u3089\u306f\u3001\u7279\u5b9a\u306e\u8106\u5f31\u6027\u306b\u5bfe\u3057\u3066\u3001\u305d\u306e\u8106\u5f31\u6027\u3092\u6301\u3064\u3059\u3079\u3066\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u3067\u304d\u308b\u9650\u308a\u898b\u3064\u3051\u3088\u3046\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u305f\u3081\u3001\u3044\u304f\u3064\u304b\u306e\u8106\u5f31\u6027\u306e\u30bf\u30a4\u30d7\u306b\u3064\u3044\u3066\u9ad8\u3044\u767a\u898b\u6570\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0\u3092\u4f8b\u306b\u3057\u307e\u3059\u3068\u3001\u3053\u306e\u8106\u5f31\u6027\u306f\u901a\u5e38\u3001\u8efd\u5fae\u3067\u5b64\u7acb\u3057\u305f\u30df\u30b9\u306b\u3088\u308b\u3082\u306e\u3068\u30b7\u30b9\u30c6\u30e0\u7684\u306a\u554f\u984c\u306b\u3088\u308b\u3082\u306e\u3001\u306e2\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002\u30b7\u30b9\u30c6\u30e0\u7684\u306a\u554f\u984c\u3067\u3042\u308b\u5834\u5408\u3001\u5358\u4e00\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u767a\u898b\u6570\u304c\u6570\u5343\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3067\u4ed6\u306e\u30ec\u30dd\u30fc\u30c8\u3084\u30c7\u30fc\u30bf\u304b\u3089\u767a\u898b\u3055\u308c\u305f\u4ed6\u306e\u307b\u3068\u3093\u3069\u306e\u8106\u5f31\u6027\u304c\u57cb\u3082\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p> <p>\u4e00\u65b9\u3001TaH\u3067\u306f\u3001\u3088\u308a\u5e45\u5e83\u3044\u7a2e\u985e\u306e\u8106\u5f31\u6027\u3092\u767a\u898b\u3057\u307e\u3059\u304c\u3001\u6642\u9593\u306e\u5236\u7d04\u4e0a\u3001\u767a\u898b\u983b\u5ea6\u306f\u304b\u306a\u308a\u4f4e\u304f\u306a\u308a\u307e\u3059\u3002\u4eba\u9593\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30c6\u30b9\u30c8\u3057\u3066\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0\u3068\u3044\u3063\u305f\u3082\u306e\u3092\u767a\u898b\u3057\u305f\u5834\u5408\u3001\u901a\u5e383\u3064\u304b4\u3064\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u767a\u898b\u3057\u3066\u5207\u308a\u4e0a\u3052\u307e\u3059\u3002\u3053\u306e\u6642\u70b9\u3067\u30b7\u30b9\u30c6\u30e0\u7684\u306a\u767a\u898b\u3092\u5224\u65ad\u3057\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u306e\u30b9\u30b1\u30fc\u30eb\u3067\u4fee\u6b63\u3059\u308b\u305f\u3081\u306e\u63a8\u5968\u4e8b\u9805\u3068\u3068\u3082\u306b\u3001\u30ec\u30dd\u30fc\u30c8\u3092\u66f8\u304d\u4e0a\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u306f(\u305d\u308c\u306b\u304b\u3051\u308b\u6642\u9593\u3082)\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002</p> <p>\u3053\u306e2\u3064\u306e\u7570\u306a\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u53d6\u308a\u51fa\u3057\u3066\u3001\u983b\u5ea6\u306e\u89b3\u70b9\u3067\u30de\u30fc\u30b8\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u3057\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u3001\u81ea\u52d5\u30c6\u30b9\u30c8\u3068HaT\u306e\u30c7\u30fc\u30bf\u3067\u3001\u3088\u308a\u6b63\u78ba\u3067\uff08\u305f\u3060\u3057\u5e83\u304f\u8584\u3044\uff09TaH\u306e\u30c7\u30fc\u30bf\u3092\u57cb\u3082\u308c\u3066\u3057\u307e\u3046\u3067\u3057\u3087\u3046\u3002\u3053\u308c\u304c\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0\u306e\u3088\u3046\u306b\u3001\u5f71\u97ff\u306f\u4e00\u822c\u7684\u306b\u5c0f\u3055\u3044\u304b\u4e2d\u7a0b\u5ea6\u3067\u3042\u308b\u3088\u3046\u306a\u3082\u306e\u304c\u3001\u591a\u304f\u306e\u30ea\u30b9\u30c8\u306b\u304a\u3044\u3066\u9ad8\u3044\u9806\u4f4d\u306b\u6319\u3052\u3089\u308c\u3066\u3044\u308b\u7406\u7531\u306e\u4e00\u3064\u3067\u3059\u3002\u3064\u307e\u308a\u307e\u3055\u3057\u304f\u767a\u898b\u304c\u975e\u5e38\u306b\u591a\u3044\u304b\u3089\u3067\u3059\u3002(\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0\u306f\u30c6\u30b9\u30c8\u3082\u3057\u3084\u3059\u3044\u306e\u3067\u3001\u305d\u308c\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\u3082\u591a\u304f\u884c\u308f\u308c\u3066\u3044\u307e\u3059\uff09\u3002</p> <p>2017\u5e74\u306b\u306f\u3001\u30c7\u30fc\u30bf\u3092\u6539\u3081\u3066\u898b\u76f4\u3057\u81ea\u52d5\u30c6\u30b9\u30c8\u53ca\u3073HaT\u306e\u30c7\u30fc\u30bf\u3092TaH\u306e\u30c7\u30fc\u30bf\u3068\u304d\u308c\u3044\u306b\u7d71\u5408\u3059\u308b\u305f\u3081\u306b\u3001\u4ee3\u308f\u308a\u306b\u767a\u751f\u7387\u3092\u7528\u3044\u308b\u3053\u3068\u3092\u5c0e\u5165\u3057\u307e\u3057\u305f\u3002\u767a\u751f\u7387\u3068\u306f\u3001\u3042\u308b\u8106\u5f31\u6027\u30bf\u30a4\u30d7\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4e00\u3064\u4ee5\u4e0a\u6301\u3063\u3066\u3044\u305f\u3082\u306e\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6bcd\u96c6\u56e3\u306e\u3046\u3061\u4f55\uff05\u3044\u305f\u304b\u3092\u78ba\u8a8d\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u5358\u767a\u7684\u306a\u3082\u306e\u304b\u30b7\u30b9\u30c6\u30e0\u7684\u306a\u3082\u306e\u304b\u306f\u6c17\u306b\u3057\u307e\u305b\u3093\u3002\u305d\u308c\u306f\u79c1\u305f\u3061\u306e\u76ee\u7684\u306b\u5f71\u97ff\u3057\u306a\u3044\u304b\u3089\u3067\u3059\u3002\u3064\u307e\u308a\u5c11\u306a\u304f\u3068\u30821\u3064\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6301\u3064\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6570\u304c\u5206\u304b\u308c\u3070\u3088\u3044\u3060\u3051\u306a\u306e\u3067\u3059\u3002\u3053\u308c\u306f\u3001\u9ad8\u983b\u5ea6\u306e\u7d50\u679c\u3067\u30c7\u30fc\u30bf\u3092\u57cb\u3082\u308c\u3055\u305b\u308b\u3053\u3068\u306a\u304f\u3001\u8907\u6570\u306e\u30c6\u30b9\u30c8\u30bf\u30a4\u30d7\u306b\u307e\u305f\u304c\u308b\u30c6\u30b9\u30c8\u306e\u6240\u898b\u3092\u3088\u308a\u660e\u78ba\u306b\u793a\u3059\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u30ea\u30b9\u30af\u5206\u6790\u89b3\u70b9\u3068\u3057\u3066\u3001\u653b\u6483\u8005\u306f\u305f\u3063\u305f1\u3064\u306e\u8106\u5f31\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u3042\u308a\u3055\u3048\u3059\u308c\u3070\u3001\u30ab\u30c6\u30b4\u30ea\u3092\u7d4c\u7531\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u653b\u6483\u6210\u529f\u3067\u304d\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u306b\u3082\u3042\u305f\u308a\u307e\u3059\u3002 </p>"},{"location":"ja/#_7","title":"\u30c7\u30fc\u30bf\u306e\u53ce\u96c6\u3068\u5206\u6790\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u3064\u3044\u3066","text":"<p>2017\u5e74\u306e\u30aa\u30fc\u30d7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b5\u30df\u30c3\u30c8\u3067OWASP Top 10\u306e\u30c7\u30fc\u30bf\u53ce\u96c6\u30d7\u30ed\u30bb\u30b9\u3092\u6b63\u5f0f\u5316\u3057\u307e\u3057\u305f\u3002OWASP Top 10\u306e\u30ea\u30fc\u30c0\u30fc\u3068\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306f\u30012\u65e5\u9593\u304b\u3051\u3066\u900f\u660e\u6027\u306e\u3042\u308b\u30c7\u30fc\u30bf\u53ce\u96c6\u30d7\u30ed\u30bb\u30b9\u3092\u6b63\u5f0f\u5316\u3059\u308b\u3053\u3068\u306b\u53d6\u308a\u7d44\u307f\u307e\u3057\u305f\u30022021\u5e74\u7248\u306f\u3001\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u5229\u7528\u3057\u305f2\u56de\u76ee\u306e\u53d6\u308a\u7d44\u307f\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u79c1\u305f\u3061\u306f\u3001\u30bd\u30fc\u30b7\u30e3\u30eb\u30e1\u30c7\u30a3\u30a2\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u901a\u3058\u3066\u3001OWASP\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068OWASP\u306eGithub\u4e21\u65b9\u3067\u30c7\u30fc\u30bf\u306e\u52df\u96c6\u3092\u516c\u8868\u3057\u3066\u3044\u307e\u3059\u3002OWASP\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001\u79c1\u305f\u3061\u304c\u6c42\u3081\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u8981\u7d20\u3084\u69cb\u9020\u3001\u305d\u3057\u3066\u63d0\u51fa\u65b9\u6cd5\u3092\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u3002GitHub\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u306a\u308b\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u7d44\u7e54\u3068\u5354\u529b\u3057\u3001\u69cb\u9020\u306e\u89e3\u6790\u3084CWE\u3078\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>\u30d9\u30f3\u30c0\u30fc\u306e\u30c6\u30b9\u30c8\u696d\u52d9\u3092\u751f\u696d\u3068\u3059\u308b\u7d44\u7e54\u3001\u30d0\u30b0\u30d0\u30a6\u30f3\u30c6\u30a3\u30d9\u30f3\u30c0\u30fc\u3001\u793e\u5185\u306e\u30c7\u30fc\u30bf\u30c6\u30b9\u30c8\u7d50\u679c\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u305f\u7d44\u7e54\u306a\u3069\u304b\u3089\u30c7\u30fc\u30bf\u3092\u5165\u624b\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u3092\u5165\u624b\u3057\u305f\u3089\u3001\u305d\u308c\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u3069\u306e\u3088\u3046\u306aCWE\u304c\u3069\u306e\u30ea\u30b9\u30af\u30ab\u30c6\u30b4\u30ea\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u308b\u304b\u3092\u6839\u672c\u7684\u306b\u5206\u6790\u3057\u307e\u3059\u3002CWE\u306e\u4e2d\u306b\u306f\u30ea\u30b9\u30af\u30ab\u30c6\u30b4\u30ea\u304c\u91cd\u8907\u3057\u3066\u3044\u308b\u3082\u306e\u3082\u3042\u308c\u3070\u3001\u975e\u5e38\u306b\u5bc6\u63a5\u306b\u5225\u306e\u30ea\u30b9\u30af\u30ab\u30c6\u30b4\u30ea\u306b\u95a2\u9023\u3057\u3066\u3044\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\uff08\u4f8b\uff1a\u6697\u53f7\u306e\u8106\u5f31\u6027\uff09\u3002\u63d0\u51fa\u3055\u308c\u305f\u751f\u30c7\u30fc\u30bf\u306b\u95a2\u3059\u308b\u6c7a\u5b9a\u306f\u3059\u3079\u3066\u6587\u66f8\u5316\u3055\u308c\u3001\u30aa\u30fc\u30d7\u30f3\u3068\u306a\u308b\u3088\u3046\u516c\u958b\u3057\u3001\u30c7\u30fc\u30bf\u3092\u3069\u306e\u3088\u3046\u306b\u6b63\u898f\u5316\u3057\u305f\u304b\u306b\u3064\u3044\u3066\u900f\u660e\u6027\u306e\u3042\u308b\u3082\u306e\u3068\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u30c8\u30c3\u30d710\u306b\u542b\u3081\u308b\u305f\u3081\u306b\u3001\u767a\u751f\u7387\u306e\u9ad8\u30448\u3064\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u3092\u8abf\u3079\u307e\u3059\u3002\u307e\u305f\u3001\u30c8\u30c3\u30d710\u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30a2\u30f3\u30b1\u30fc\u30c8\u7d50\u679c\u3092\u898b\u3066\u3001\u3059\u3067\u306b\u30c7\u30fc\u30bf\u3068\u3057\u3066\u78ba\u8a8d\u3067\u304d\u3066\u3044\u308b\u3067\u3042\u308d\u3046\u3082\u306e\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u305d\u3046\u3057\u3066\u30c7\u30fc\u30bf\u304b\u3089\u306f\u78ba\u8a8d\u3067\u304d\u306a\u304b\u3063\u305f\u4e0a\u4f4d2\u3064\u3092\u3001Top10\u306e\u6b8b\u308a\u306e2\u7b87\u6240\u306b\u9078\u3073\u307e\u3059\u300210\u500b\u3059\u3079\u3066\u304c\u9078\u3070\u308c\u305f\u3089\u3001\u30c8\u30c3\u30d710\u3092\u30ea\u30b9\u30af\u306b\u57fa\u3065\u304f\u9806\u5e8f\u3067\u30e9\u30f3\u30af\u4ed8\u3051\u3059\u308b\u306e\u306b\u5f79\u7acb\u3066\u308b\u3079\u304f\u3001\u60aa\u7528\u306e\u3057\u3084\u3059\u3055\u3068\u5f71\u97ff\u306b\u95a2\u3059\u308b\u4e00\u822c\u8981\u7d20\u3092\u3042\u3066\u306f\u3081\u307e\u3057\u305f\u3002</p>"},{"location":"ja/#_8","title":"\u7528\u8a9e\u96c6","text":"<p>\u30c8\u30c3\u30d710\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u305d\u308c\u305e\u308c\u306e\u4e2d\u306b\u3042\u308b\u4e0b\u8a18\u7528\u8a9e\u306b\u3064\u3044\u3066\u3001\u610f\u5473\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002</p> <ul> <li>CWEs Mapped(\u30ab\u30c6\u30b4\u30ea\u306b\u3042\u305f\u308bCWE\u306e\u6570): Top10\u30c1\u30fc\u30e0\u304c\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u305fCWE\u306e\u6570\u3067\u3059\u3002</li> <li>Incidence Rate(\u767a\u751f\u7387): \u767a\u751f\u7387\u3068\u306f\u3001\u5f53\u5e74\u306b\u6a5f\u95a2\u306b\u3088\u3063\u3066\u30c6\u30b9\u30c8\u3055\u308c\u305f\u6bcd\u96c6\u56e3\u306e\u3046\u3061\u3001\u30ab\u30c6\u30b4\u30ea\u306b\u30de\u30c3\u30d7\u3055\u308c\u305fCWE\u306b\u8106\u5f31\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5272\u5408\u3092\u793a\u3057\u307e\u3059\u3002</li> <li>(Testing) Coverage(\u30c6\u30b9\u30c8)\u7db2\u7f85\u7bc4\u56f2: \u30ab\u30c6\u30b4\u30ea\u306b\u30de\u30c3\u30d7\u3055\u308c\u305fCWE\u306b\u5bfe\u3057\u3066\u3001\u6a5f\u95a2\u304c\u30c6\u30b9\u30c8\u3067\u304d\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7bc4\u56f2\u3002</li> <li>Weighted Exploit(\u91cd\u307f\u4ed8\u3051\u3055\u308c\u305f\u60aa\u7528\u6027): CVE\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308bCVSSv2\u304a\u3088\u3073CVSSv3\u30b9\u30b3\u30a2\u306e\u60aa\u7528\u6027\u30b5\u30d6\u30b9\u30b3\u30a2\u3092\u6b63\u898f\u5316\u3057\u300110pt\u306e\u30b9\u30b1\u30fc\u30eb\u3067\u8868\u793a\u3057\u305f\u3082\u306e\u3067\u3059\u3002</li> <li>Weighted Impact(\u91cd\u307f\u4ed8\u3051\u3055\u308c\u305f\u5f71\u97ff\u5ea6): CVE\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308bCVSSv2\u304a\u3088\u3073CVSSv3\u30b9\u30b3\u30a2\u306e\u5f71\u97ff\u30b5\u30d6\u30b9\u30b3\u30a2\u3092\u6b63\u898f\u5316\u3057\u300110pt\u306e\u30b9\u30b1\u30fc\u30eb\u3067\u8868\u793a\u3057\u305f\u3082\u306e\u3067\u3059\u3002</li> <li>Total Occurrences(\u7dcf\u767a\u751f\u6570): \u30ab\u30c6\u30b4\u30ea\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u305fCWE\u3092\u6301\u3064\u3053\u3068\u304c\u5224\u660e\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7dcf\u6570\u3067\u3059\u3002</li> <li>Total CVEs(CVE\u5408\u8a08\u6570): \u30ab\u30c6\u30b4\u30ea\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u305fCWE\u306b\u8a72\u5f53\u3059\u308b\u3001NVD DB\u5185\u306eCVE\u306e\u7dcf\u6570\u3067\u3059\u3002</li> </ul>"},{"location":"ja/#_9","title":"\u30c7\u30fc\u30bf\u63d0\u4f9b\u8005\u3078\u306e\u8b1d\u8f9e","text":"<p>\u3053\u306e\u6700\u3082\u5927\u898f\u6a21\u3067\u5305\u62ec\u7684\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u308a\u4e0a\u3052\u308b\u305f\u3081\u306b\u3001\uff08\u4f55\u540d\u304b\u306e\u533f\u540d\u306e\u63d0\u4f9b\u8005\u3068\u3068\u3082\u306b\uff09\u4ee5\u4e0b\u306e\u7d44\u7e54\u306b\u306f 50,000 \u3092\u8d85\u3048\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u95a2\u3059\u308b\u30c7\u30fc\u30bf\u3092\u63d0\u4f9b\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002 \u3053\u308c\u306f\u7686\u69d8\u306e\u3054\u5354\u529b\u306a\u304f\u3057\u3066\u306f\u6210\u3057\u5f97\u307e\u305b\u3093\u3067\u3057\u305f\u3002</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"ja/#_10","title":"\u30b9\u30dd\u30f3\u30b5\u30fc\u3078\u306e\u8b1d\u8f9e","text":""},{"location":"ja/0x00_2021-notice/","title":"\u30ea\u30ea\u30fc\u30b9","text":"<p>2021\u5e749\u670824\u65e5 \u30ea\u30ea\u30fc\u30b9</p>"},{"location":"ja/0x00_2021-notice/#_2","title":"\u7b46\u982d\u8457\u8005","text":"<ul> <li>Andrew van der Stock (twitter: @vanderaj)</li> <li>Brian Glas (twitter: @infosecdad)</li> <li>Neil Smithline (twitter: @appsecneil)</li> <li>Torsten Gigler (twitter: @torsten_tweet)</li> </ul>"},{"location":"ja/0x00_2021-notice/#_3","title":"\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30bf\u30fc","text":"<ul> <li>Orange Tsai @orange_8361, A10-2021: \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u30ea\u30af\u30a8\u30b9\u30c8\u30d5\u30a9\u30fc\u30b8\u30a7\u30ea \u8457\u8005</li> <li>Jim Manico @manicode \u3068 Jakub Ma\u0107kowski @kubamackowski - OWASP CheatSheets \u30b3\u30fc\u30c7\u30a3\u30cd\u30fc\u30b7\u30e7\u30f3</li> </ul>"},{"location":"ja/0x00_2021-notice/#_4","title":"\u652f\u63f4\u306e\u65b9\u6cd5","text":"<p>\u73fe\u5728\u3001\u4ee5\u4e0b\u306e\u65b9\u3005\u3092\u5fc5\u8981\u3068\u3057\u3066\u3044\u307e\u3059</p> <ul> <li>\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8 - \u79c1\u305f\u3061\u306e\u5206\u6790\u306e\u30d4\u30a2\u30ec\u30d3\u30e5\u30fc\u3092\u304a\u9858\u3044\u3057\u307e\u3059</li> <li>Web\u30c7\u30b6\u30a4\u30ca\u30fc - \u30e2\u30d0\u30a4\u30eb\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u5236\u4f5c\u3092\u5fc5\u8981\u3068\u3057\u3066\u3044\u307e\u3059</li> <li>\u7ffb\u8a33\u8005 - \u7ffb\u8a33\u306e\u305f\u3081\u306b\u82f1\u8a9e\u306e\u30c6\u30ad\u30b9\u30c8\u306e\u30ec\u30d3\u30e5\u30fc\u3092\u304a\u9858\u3044\u3057\u307e\u3059</li> <li>ASVS\u3001Testing Guide\u305d\u3057\u3066Code Review Guide\u306e\u30ea\u30fc\u30c0\u30fc - \u79c1\u305f\u3061\u306e\u30c7\u30fc\u30bf\u3092\u6d3b\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u79c1\u305f\u3061\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084\u6a19\u6e96\u3092\u5171\u306b\u7d50\u3073\u3064\u3051\u308b\u305f\u3081\u306e\u652f\u63f4\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002</li> </ul>"},{"location":"ja/0x00_2021-notice/#_5","title":"\u30a4\u30b7\u30e5\u30fc\u3068\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u8d77\u7968","text":"<p>\u4fee\u6b63\u3084\u30a4\u30b7\u30e5\u30fc\u306e\u8d77\u7968\u3092\u304a\u9858\u3044\u3057\u307e\u3059:</p> <ul> <li>https://github.com/OWASP/Top10/issues</li> </ul>"},{"location":"ja/0x01_2021-about-owasp/","title":"OWASP\u306b\u3064\u3044\u3066","text":"<p>Open Worldwide Application Security Project\uff08OWASP\uff09\u306f\u3001\u7d44\u7e54\u304c\u4fe1\u983c\u3067\u304d\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3084 API \u3092\u958b\u767a\u3001\u8cfc\u5165\u3001\u7dad\u6301\u3067\u304d\u308b\u3088\u3046\u652f\u63f4\u3059\u308b\u3053\u3068\u306b\u5c02\u5ff5\u3059\u308b\u3001\u30aa\u30fc\u30d7\u30f3\u306a\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3067\u3059\u3002</p> <p>OWASP \u3067\u306f\u3001\u7121\u6599\u3067\u5229\u7528\u3067\u304d\u308b\u3082\u306e\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059:</p> <ul> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3068\u6a19\u6e96</li> <li>\u6700\u5148\u7aef\u306e\u7814\u7a76</li> <li>\u6a19\u6e96\u7684\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7ba1\u7406\u3068\u30e9\u30a4\u30d6\u30e9\u30ea</li> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fb\u30c6\u30b9\u30c8\u3001\u5b89\u5168\u306a\u30b3\u30fc\u30c9\u958b\u767a\u3001\u304a\u3088\u3073\u5b89\u5168\u306a\u30b3\u30fc\u30c9\u30fb\u30ec\u30d3\u30e5\u30fc\u306b\u95a2\u3059\u308b\u3072\u3068\u305d\u308d\u3044\u306e\u6587\u732e</li> <li>\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u30d3\u30c7\u30aa</li> <li>\u6570\u591a\u304f\u306e\u5171\u901a\u30c8\u30d4\u30c3\u30af\u306b\u95a2\u3059\u308b \u30c1\u30fc\u30c8\u30b7\u30fc\u30c8</li> <li>\u30c1\u30e3\u30d7\u30bf\u30fc\u30df\u30fc\u30c6\u30a3\u30f3\u30b0</li> <li>\u30a4\u30d9\u30f3\u30c8\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3001\u30ab\u30f3\u30d5\u30a1\u30ec\u30f3\u30b9\u3002</li> <li>Google\u30b0\u30eb\u30fc\u30d7</li> </ul> <p>\u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044:https://owasp.org.</p> <p>\u3059\u3079\u3066\u306eOWASP\u306e\u30c4\u30fc\u30eb\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3001\u30d3\u30c7\u30aa\u3001\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3001\u305d\u3057\u3066\u30c1\u30e3\u30d7\u30bf\u30fc\u306f\u81ea\u7531\u3067\u30aa\u30fc\u30d7\u30f3\u306a\u3082\u306e\u3067\u3042\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u6539\u5584\u3059\u308b\u4eba\u306a\u3089\u8ab0\u3067\u3082\u6d3b\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u308f\u305f\u3057\u305f\u3061\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u3001\u4eba\u3001\u30d7\u30ed\u30bb\u30b9\u3001\u304a\u3088\u3073\u6280\u8853\u306e\u554f\u984c\u3068\u3057\u3066\u3068\u3089\u3048\u308b\u3053\u3068\u3092\u63d0\u5531\u3057\u3066\u3044\u307e\u3059\u3002\u6700\u3082\u52b9\u679c\u7684\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3078\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u305d\u308c\u3089\u306e\u9818\u57df\u306b\u304a\u3051\u308b\u6539\u5584\u3092\u5fc5\u8981\u3068\u3059\u308b\u304b\u3089\u3067\u3059\u3002</p> <p>OWASP\u306f\u3001\u65b0\u3057\u3044\u30bf\u30a4\u30d7\u306e\u7d44\u7e54\u3067\u3059\u3002\u5546\u696d\u7684\u306a\u5727\u529b\u306b\u62d8\u675f\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u306e\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u504f\u308a\u306e\u306a\u3044\u3001\u5b9f\u7528\u7684\u3067\u30b3\u30b9\u30c8\u52b9\u7387\u306e\u9ad8\u3044\u60c5\u5831\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>OWASP\u306f\u3001\u5546\u7528\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853\u3092\u3088\u304f\u7406\u89e3\u3057\u305f\u4e0a\u3067\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u306f\u8cdb\u540c\u3057\u307e\u3059\u304c\u3001OWASP\u306f\u3001\u3044\u304b\u306a\u308b\u30c6\u30af\u30ce\u30ed\u30b8\u4f01\u696d\u3068\u3082\u63d0\u643a\u3057\u307e\u305b\u3093\u3002OWASP\u306f\u3001\u3055\u307e\u3056\u307e\u306a\u7a2e\u985e\u306e\u8cc7\u6599\u3092\u5171\u540c\u3067\u3001\u900f\u660e\u3067\u3001\u30aa\u30fc\u30d7\u30f3\u306a\u65b9\u6cd5\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <p>The OWASP Foundation(\u30aa\u30ef\u30b9\u30d7\u30fb\u30d5\u30a1\u30a6\u30f3\u30c7\u30fc\u30b7\u30e7\u30f3)\u306f\u3001\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u9577\u671f\u7684\u306a\u6210\u529f\u3092\u5b9f\u73fe\u3059\u308b\u975e\u55b6\u5229\u56e3\u4f53\u3067\u3059\u3002OWASP\u306b\u95a2\u308f\u308b\u307b\u3068\u3093\u3069\u306e\u4eba\u3059\u306a\u308f\u3061OWASP\u30dc\u30fc\u30c9\u3001\u30c1\u30e3\u30d7\u30bf\u30fc\u30ea\u30fc\u30c0\u30fc\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30ea\u30fc\u30c0\u30fc\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30e1\u30f3\u30d0\u30fc\u306f\u30dc\u30e9\u30f3\u30c6\u30a3\u30a2\u3067\u3059\u3002\u79c1\u305f\u3061\u306f\u3001\u9769\u65b0\u7684\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ea\u30b5\u30fc\u30c1\u3092\u3001\u91d1\u92ad\u9762\u3068\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002</p> <p>\u3069\u3046\u305e\u3001\u3054\u53c2\u52a0\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/0x01_2021-about-owasp/#copyright-and-license","title":"Copyright and License","text":"<p>Copyright \u00a9 2003-2025 The OWASP\u00ae Foundation. This document is released under the Creative Commons Attribution Share-Alike 4.0 license. For any reuse or distribution, you must make it clear to others the license terms of this work.</p>"},{"location":"ja/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/","title":"OWASP Top 10 \u3092\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u59cb\u3081\u308b\u306b\u306f","text":"<p>\u3053\u308c\u307e\u3067\u306f OWASP \u30c8\u30c3\u30d7 10 \u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u57fa\u790e\u3068\u306a\u308b\u3088\u3046\u306b\u306f\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002 \u3057\u304b\u3057\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u9053\u3092\u6b69\u307f\u59cb\u3081\u305f\u3070\u304b\u308a\u306e\u591a\u304f\u306e\u7d44\u7e54\u306b\u3068\u3063\u3066\u306f\u3001\u57fa\u790e\u3068\u306a\u308b\u7269\u304c\u4e0d\u53ef\u6b20\u3067\u3059\u3002 OWASP \u30c8\u30c3\u30d7 10 2021 \u306f\u3001\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8\u306a\u3069\u306e\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u3068\u3057\u3066\u306f\u826f\u3044\u30b9\u30bf\u30fc\u30c8\u3068\u306a\u308a\u307e\u3059\u304c\u3001\u305d\u308c\u3060\u3051\u3067\u306f\u5341\u5206\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"ja/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#1","title":"\u30b9\u30c6\u30fc\u30b81. \u81ea\u793e\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30ae\u30e3\u30c3\u30d7\u3068\u76ee\u6a19\u3092\u7279\u5b9a\u3059\u308b","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u591a\u304f\u306f\u3001\u5730\u9053\u306b\u4e01\u5be7\u306b\u9032\u3081\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u4e00\u6c17\u306b\u9032\u3081\u3089\u308c\u3088\u3046\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u53d6\u308a\u7d44\u307f\u306f\u3001\u5931\u6557\u3059\u308b\u904b\u547d\u306b\u3042\u308a\u307e\u3059\u3002 \u79c1\u305f\u3061\u306f\u3001CISO \u3068 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u30ea\u30fc\u30c0\u30fc\u306b\u3001\u30bd\u30d5\u30c8\u30a6\u30a8\u30a2\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4fdd\u8a3c\u6210\u719f\u5ea6\u30e2\u30c7\u30eb (OWASP SAMM) \u3092\u4f7f\u7528\u3057\u3066\u30011\uff5e3 \u5e74\u306e\u671f\u9593\u3067\u5f31\u70b9\u3068\u6539\u5584\u70b9\u3092\u7279\u5b9a\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u6700\u521d\u306e\u30b9\u30c6\u30c3\u30d7\u306f\u3001\u73fe\u5728\u306e\u72b6\u6cc1\u3092\u8a55\u4fa1\u3057\u3001\u3059\u3050\u306b\u89e3\u6c7a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u30ac\u30d0\u30ca\u30f3\u30b9\u3001\u8a2d\u8a08\u3001\u5b9f\u88c5\u3001\u691c\u8a3c\u3001\u304a\u3088\u3073\u904b\u7528\u306b\u304a\u3051\u308b\u30ae\u30e3\u30c3\u30d7\u3068\u3001\u5f8c\u56de\u3057\u306b\u3057\u3066\u3082\u3088\u3044\u30ae\u30e3\u30c3\u30d7\u3092\u7279\u5b9a\u3057\u300115 \u306e OWASP SAMM \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fb\u30d7\u30e9\u30af \u30c6\u30a3\u30b9\u306e\u5b9f\u65bd\u307e\u305f\u306f\u6539\u5584\u3092\u512a\u5148\u3059\u308b\u3053\u3068\u3067\u3059\u3002 OWASP SAMM \u306f\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fdd\u8a3c\u306e\u53d6\u308a\u7d44\u307f\u3092\u69cb\u7bc9\u3057\u3001\u6210\u719f\u5ea6\u3092\u6e2c\u5b9a\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</p>"},{"location":"ja/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#2","title":"\u30b9\u30c6\u30fc\u30b8 2. \u4fe1\u983c\u6027\u304c\u9ad8\u304f\u5b89\u5168\u6027\u3082\u691c\u8a3c\u3055\u308c\u3066\u3044\u308b\u30bb\u30ad\u30e5\u30a2\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306e\u8a08\u753b","text":"<p>\u5f93\u6765\u306f\u3044\u308f\u3086\u308b\u300c\u30e6\u30cb\u30b3\u30fc\u30f3\u4f01\u696d\u300d\u306e\u3082\u306e\u3067\u3057\u305f\u304c\u3001\u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u30b3\u30f3\u30bb\u30d7\u30c8\u306f\u3001\u5e74\u3005\u5897\u52a0\u3059\u308b\u958b\u767a\u30c1\u30fc\u30e0\u306e\u901f\u5ea6\u306b\u5408\u308f\u305b\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ea\u30bd\u30fc\u30b9\u3092\u62e1\u5f35\u3057\u3001\u6700\u5927\u306e\u52b9\u679c\u3092\u4e0a\u3052\u308b\u305f\u3081\u306e\u6700\u3082\u7c21\u5358\u306a\u65b9\u6cd5\u3067\u3059\u3002</p> <p>\u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u30b3\u30f3\u30bb\u30d7\u30c8\u306f\u3001\u300c\u6700\u3082\u7c21\u5358\u306a\u65b9\u6cd5\u306f\u3001\u6700\u3082\u5b89\u5168\u306a\u65b9\u6cd5\u3067\u3082\u3042\u308b\u300d\u3068\u3044\u3046\u3082\u306e\u3067\u3001\u958b\u767a\u30c1\u30fc\u30e0\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c1\u30fc\u30e0\u306e\u9593\u306b\u6df1\u3044\u30d1\u30fc\u30c8\u30ca\u30fc\u30b7\u30c3\u30d7\u306e\u6587\u5316\u304c\u5fc5\u8981\u3067\u3042\u308a\u3001\u3067\u304d\u308c\u3070\u4e21\u8005\u304c\u540c\u3058\u30c1\u30fc\u30e0\u3067\u3042\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3068\u3055\u308c\u307e\u3059\u3002 \u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u30b3\u30f3\u30bb\u30d7\u30c8\u306f\u3001\u7d99\u7d9a\u7684\u306a\u6539\u5584\u3001\u6e2c\u5b9a\u3001\u691c\u51fa\u3001\u304a\u3088\u3073\u5b89\u5168\u3067\u306a\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4ea4\u63db\u3092\u76ee\u7684\u3068\u3057\u3066\u304a\u308a\u3001\u4f01\u696d\u5168\u4f53\u3067\u5b89\u5168\u306a\u4ee3\u66ff\u54c1\u3068\u3057\u3066\u305d\u306e\u307e\u307e\u7f6e\u63db\u3048\u53ef\u80fd\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3001\u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u30b3\u30f3\u30bb\u30d7\u30c8\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u3067\u6539\u5584\u3067\u304d\u308b\u7b87\u6240\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3092\u5099\u3048\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u65e2\u5b58\u306e\u958b\u767a\u30c4\u30fc\u30eb\u304c\u5b89\u5168\u3067\u306f\u306a\u3044\u30d3\u30eb\u30c9\u3092\u5831\u544a\u3057\u3001\u958b\u767a\u30c1\u30fc\u30e0\u304c\u5b89\u5168\u3067\u306f\u306a\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u81ea\u5df1\u4fee\u6b63\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u30b3\u30f3\u30bb\u30d7\u30c8\u306f\u3001\u591a\u304f\u306e\u3053\u3068\u3092\u5438\u53ce\u3059\u308b\u3088\u3046\u306b\u898b\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u6642\u9593\u3092\u304b\u3051\u3066\u6bb5\u968e\u7684\u306b\u69cb\u7bc9\u3057\u3066\u3044\u304f\u3079\u304d\u3067\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306f\u3001\u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u30a2\u30b8\u30e3\u30a4\u30eb\u30bb\u30ad\u30e5\u30a2\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u306f\u3058\u3081\u3068\u3059\u308b\u4ed6\u306e\u5f62\u614b\u3082\u3042\u308a\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u6cd5\u304c\u3059\u3079\u3066\u306e\u30d3\u30b8\u30cd\u30b9\u306b\u9069\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"ja/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#3","title":"\u30b9\u30c6\u30fc\u30b8 3. \u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u30b3\u30f3\u30bb\u30d7\u30c8\u3092\u958b\u767a\u30c1\u30fc\u30e0\u3067\u5b9f\u884c\u3059\u308b","text":"<p>\u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u30b3\u30f3\u30bb\u30d7\u30c8\u306f\u3001\u95a2\u9023\u3059\u308b\u958b\u767a\u30c1\u30fc\u30e0\u3068\u904b\u7528\u30c1\u30fc\u30e0\u306e\u540c\u610f\u3068\u76f4\u63a5\u306e\u95a2\u4e0e\u3092\u5f97\u3066\u69cb\u7bc9\u3055\u308c\u307e\u3059\u3002 \u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u30b3\u30f3\u30bb\u30d7\u30c8\u306f\u30d3\u30b8\u30cd\u30b9\u3068\u6226\u7565\u7684\u306b\u9023\u643a\u3057\u3001\u3088\u308a\u5b89\u5168\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3088\u308a\u65e9\u304f\u63d0\u4f9b\u3059\u308b\u306e\u306b\u5f79\u7acb\u3064\u3082\u306e\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 \u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u30b3\u30f3\u30bb\u30d7\u30c8\u306b\u304a\u3051\u308b\u958b\u767a\u306f\u3001\u6614\u306e\u3088\u3046\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3054\u3068\u306e\u5fdc\u6025\u51e6\u7f6e\u3067\u306f\u306a\u304f\u3001\u4f01\u696d\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u3092\u5bfe\u8c61\u3068\u3057\u305f\u5168\u4f53\u7684\u306a\u53d6\u308a\u7d44\u307f\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"ja/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#4","title":"\u30b9\u30c6\u30fc\u30b8 4. \u4eca\u5f8c\u767a\u58f2\u3055\u308c\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3084\u65e2\u5b58\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3059\u3079\u3066\u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u30b3\u30f3\u30bb\u30d7\u30c8\u306b\u79fb\u884c\u3059\u308b","text":"<p>\u958b\u767a\u6642\u306b\u4fe1\u983c\u6027\u304c\u9ad8\u304f\u5b89\u5168\u6027\u3082\u691c\u8a3c\u3055\u308c\u3066\u3044\u308b\u691c\u51fa\u30c4\u30fc\u30eb\u3092\u8ffd\u52a0\u3057\u3001\u958b\u767a\u30c1\u30fc\u30e0\u304c\u3053\u308c\u3089\u306e\u8981\u7d20\u3092\u76f4\u63a5\u63a1\u7528\u3057\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u5411\u4e0a\u3055\u305b\u308b\u305f\u3081\u306e\u60c5\u5831\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u30b3\u30f3\u30bb\u30d7\u30c8\u306e\u3042\u308b\u5074\u9762\u304c\u63a1\u7528\u3055\u308c\u305f\u3089\u3001\u7d44\u7e54\u306f\u3001\u7981\u6b62\u3055\u308c\u3066\u3044\u308b\u9078\u629e\u80a2\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u65e2\u5b58\u306e\u30b3\u30fc\u30c9\u3084\u30c1\u30a7\u30c3\u30af\u30a4\u30f3\u3092\u691c\u67fb\u3057\u3001\u30d3\u30eb\u30c9\u3084\u30c1\u30a7\u30c3\u30af\u30a4\u30f3\u3092\u8b66\u544a\u307e\u305f\u306f\u62d2\u5426\u3059\u308b\u7d99\u7d9a\u7684\u7d71\u5408\u30c1\u30a7\u30c3\u30af\u3092\u5b9f\u65bd\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u5b89\u5168\u3067\u306a\u3044\u9078\u629e\u80a2\u304c\u6642\u9593\u306e\u7d4c\u904e\u3068\u3068\u3082\u306b\u30b3\u30fc\u30c9\u306b\u5165\u308a\u8fbc\u3080\u3053\u3068\u3092\u9632\u304e\u3001\u6280\u8853\u7684\u8ca0\u50b5\u3084\u6b20\u9665\u306e\u3042\u308b\u5b89\u5168\u3067\u306a\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5b89\u5168\u306a\u4ee3\u66ff\u6848\u306b\u30ea\u30f3\u30af\u3057\u3066\u3001\u958b\u767a\u30c1\u30fc\u30e0\u304c\u3059\u3050\u306b\u6b63\u3057\u3044\u7b54\u3048\u3092\u5f97\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u8b66\u544a\u3092\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u958b\u767a\u30c1\u30fc\u30e0\u306f\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3092\u884c\u3044\u3001\u4fe1\u983c\u6027\u304c\u9ad8\u304f\u5b89\u5168\u6027\u3082\u691c\u8a3c\u3055\u308c\u3066\u3044\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8fc5\u901f\u306b\u63a1\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#5-owasp-10","title":"\u30b9\u30c6\u30fc\u30b8 5. \u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u30b3\u30f3\u30bb\u30d7\u30c8\u304c OWASP \u30c8\u30c3\u30d7 10 \u3067\u767a\u898b\u3055\u308c\u305f\u554f\u984c\u3092\u8efd\u6e1b\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u30c6\u30b9\u30c8\u3059\u308b","text":"<p>\u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3001OWASP \u30c8\u30c3\u30d7 10 \u306e\u91cd\u8981\u306a\u554f\u984c\u306b\u5bfe\u51e6\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001\u8106\u5f31\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u81ea\u52d5\u7684\u306b\u691c\u51fa\u307e\u305f\u306f\u4fee\u6b63\u3059\u308b\u65b9\u6cd5\u3084\u3001\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3092\u691c\u51fa\u3059\u308b\u305f\u3081\u306e\u9759\u7684\u30b3\u30fc\u30c9\u5206\u6790 IDE \u30d7\u30e9\u30b0\u30a4\u30f3\u3001\u3055\u3089\u306b\u306f\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u5b89\u5168\u3067\u3042\u308b\u3053\u3068\u304c\u77e5\u3089\u308c\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306a\u5b89\u5168\u306a\u305d\u306e\u307e\u307e\u7f6e\u63db\u3048\u53ef\u80fd\u306a\u4ee3\u66ff\u54c1\u304c\u30c1\u30fc\u30e0\u306b\u63d0\u4f9b\u3055\u308c\u308c\u3070\u3055\u308c\u308b\u307b\u3069\u826f\u3044\u3067\u3057\u3087\u3046\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c1\u30fc\u30e0\u306e\u91cd\u8981\u306a\u4efb\u52d9\u306f\u3001\u3053\u308c\u3089\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u7d99\u7d9a\u7684\u306b\u8a55\u4fa1\u3057\u3001\u6539\u5584\u3059\u308b\u3053\u3068\u3067\u3059\u3002 \u6539\u5584\u3055\u308c\u305f\u3089\u3001\u305d\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u6d88\u8cbb\u8005\u3068\u306e\u4f55\u3089\u304b\u306e\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u30c1\u30e3\u30cd\u30eb\u3067\u3001\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u53ef\u80fd\u306a\u9650\u308a\u81ea\u52d5\u7684\u306b\u3001\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f\u5c11\u306a\u304f\u3068\u3082\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306a\u3069\u3067\u5f37\u8abf\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p>"},{"location":"ja/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#6","title":"\u30b9\u30c6\u30fc\u30b8 6. \u81ea\u793e\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6210\u719f\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3059\u308b","text":"<p>OWASP \u30c8\u30c3\u30d7 10 \u3060\u3051\u3067\u7d42\u308f\u3089\u305b\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\u305d\u308c\u306f\u300110 \u306e\u30ea\u30b9\u30af\u30ab\u30c6\u30b4\u30ea\u30fc\u3057\u304b\u30ab\u30d0\u30fc\u3057\u3066\u3044\u306a\u3044\u304b\u3089\u3067\u3059\u3002 \u79c1\u305f\u3061\u306f\u3001\u7d44\u7e54\u304c OWASP \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u691c\u8a3c\u6a19\u6e96 (OWASP ASVS) \u3092\u63a1\u7528\u3057\u3001\u958b\u767a\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ea\u30b9\u30af\u30ec\u30d9\u30eb\u306b\u5fdc\u3058\u3066\u3001\u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u30ec\u30d9\u30eb 1\u30012\u30013 \u306e\u30c6\u30b9\u30c8\u3092\u6bb5\u968e\u7684\u306b\u8ffd\u52a0\u3057\u3066\u3044\u304f\u3053\u3068\u3092\u5f37\u304f\u63a8\u5968\u3057\u307e\u3059\u3002</p>"},{"location":"ja/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#_1","title":"\u305d\u306e\u5148\u3078","text":"<p>\u512a\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u6700\u4f4e\u9650\u306e\u3053\u3068\u3057\u304b\u3057\u307e\u305b\u3093\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u8106\u5f31\u6027\u3092\u628a\u63e1\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u8ab0\u3082\u304c\u7d99\u7d9a\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002</p> <ul> <li> <p>\u30b3\u30f3\u30bb\u30d7\u30c8\u306e\u5b8c\u5168\u6027     \u6210\u719f\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u30af\u30e9\u30a6\u30c9\u3001\u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30ba\u30fb\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fb\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3001\u8105\u5a01\u30e2\u30c7\u30eb\u306a\u3069\u3001\u4f55\u3089\u304b\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fb\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u6982\u5ff5\u3092\u542b\u3093\u3067\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> </li> <li> <p>\u81ea\u52d5\u5316\u3068\u30b9\u30b1\u30fc\u30eb     \u6210\u719f\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u8907\u96d1\u306a\u4fb5\u5165\u30c6\u30b9\u30c8\u306e\u624b\u9806\u3092\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3001\u958b\u767a\u30c1\u30fc\u30e0\u304c\u76f4\u63a5\u5229\u7528\u3067\u304d\u308b\u9759\u7684\u30b3\u30fc\u30c9\u89e3\u6790\u30c4\u30fc\u30eb\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3084\u7d71\u5408\u30c6\u30b9\u30c8\u306e\u69cb\u7bc9\u306b\u304a\u3051\u308b\u958b\u767a\u30c1\u30fc\u30e0\u306e\u652f\u63f4\u306a\u3069\u3001\u6210\u679c\u7269\u3092\u53ef\u80fd\u306a\u9650\u308a\u81ea\u52d5\u5316\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002</p> </li> <li> <p>\u6587\u5316     \u6210\u719f\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u8107\u5f79\u3067\u306f\u306a\u304f\u958b\u767a\u30c1\u30fc\u30e0\u306e\u4e00\u54e1\u3068\u306a\u308b\u3053\u3068\u3067\u3001\u5b89\u5168\u3067\u306a\u3044\u8a2d\u8a08\u3068\u3001\u65e2\u5b58\u30b3\u30fc\u30c9\u306e\u6280\u8853\u7684\u8ca0\u50b5\u3092\u89e3\u6d88\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002     \u958b\u767a\u30c1\u30fc\u30e0\u3092 \"\u6211\u3005 \"\u3068 \"\u5f7c\u3089 \"\u3068\u3057\u3066\u898b\u3066\u3044\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c1\u30fc\u30e0\u306f\u3001\u5931\u6557\u3059\u308b\u904b\u547d\u306b\u3042\u308a\u307e\u3059\u3002</p> </li> <li> <p>\u7d99\u7d9a\u7684\u6539\u5584     \u6210\u719f\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u5e38\u306b\u5411\u4e0a\u3092\u76ee\u6307\u3057\u3066\u3044\u307e\u3059\u3002     \u6a5f\u80fd\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u304c\u3042\u308c\u3070\u3001\u305d\u308c\u3092\u3084\u3081\u307e\u3059\u3002\u4f55\u304b\u304c\u4e0d\u4fbf\u3067\u3042\u3063\u305f\u308a\u3001\u62e1\u5f35\u6027\u304c\u306a\u304b\u3063\u305f\u308a\u3059\u308b\u5834\u5408\u306f\u3001\u305d\u308c\u3092\u6539\u5584\u3059\u308b\u305f\u3081\u306b\u52aa\u529b\u3057\u307e\u3059\u3002     \u958b\u767a\u30c1\u30fc\u30e0\u304c\u4f7f\u7528\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u3067\u3001\u5f71\u97ff\u304c\u306a\u3044\u3001\u307e\u305f\u306f\u9650\u5b9a\u7684\u306a\u3082\u306e\u3067\u3042\u308c\u3070\u3001\u4f55\u304b\u9055\u3046\u3053\u3068\u3092\u3057\u307e\u3059\u3002     1970\u5e74\u4ee3\u306b\u30c7\u30b9\u30af\u30c1\u30a7\u30c3\u30af\u306e\u3088\u3046\u306a\u30c6\u30b9\u30c8\u3092\u884c\u3063\u3066\u3044\u305f\u304b\u3089\u3068\u3044\u3063\u3066\u3001\u305d\u308c\u304c\u826f\u3044\u30a2\u30a4\u30c7\u30a2\u3060\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\u6e2c\u5b9a\u3057\u3001\u8a55\u4fa1\u3057\u3001\u305d\u3057\u3066\u69cb\u7bc9\u307e\u305f\u306f\u6539\u5584\u3057\u3066\u3044\u304d\u307e\u3059\u3002</p> </li> </ul>"},{"location":"ja/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#how-to-start-an-appsec-program-with-the-owasp-top-10","title":"How to start an AppSec Program with the OWASP Top 10","text":"<p>Previously, the OWASP Top 10 was never designed to be the basis for an AppSec program. However, it's essential to start somewhere for many organizations just starting out on their application security journey. The OWASP Top 10 2021 is a good start as a baseline for checklists and so on, but it's not in itself sufficient.</p>"},{"location":"ja/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#stage-2-plan-for-a-paved-road-secure-development-lifecycle","title":"Stage 2. Plan for a paved road secure development lifecycle","text":"<p>Traditionally the preserve of so-called \"unicorns,\" the paved road concept is the easiest way to make the most impact and scale AppSec resources with development team velocity, which only increases every year.</p> <p>The paved road concept is \"the easiest way is also the most secure way\" and should involve a culture of deep partnerships between the development team and the security team, preferably such that they are one and the same team. The paved road aims to continuously improve, measure, detect and replace insecure alternatives by having an enterprise-wide library of drop-in secured replacements, with tooling to help see where improvements can be made by adopting the paved road. This allows existing development tools to report on insecure builds and help development teams self-correct away from insecure alternatives.</p> <p>The paved road might seem a lot to take in, but it should be built incrementally over time. There are other forms of appsec programs out there, notably the Microsoft Agile Secure Development Lifecycle. Not every appsec program methodology suits every business.</p>"},{"location":"ja/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#stage-5-test-that-the-paved-road-has-mitigated-the-issues-found-in-the-owasp-top-10","title":"Stage 5. Test that the paved road has mitigated the issues found in the OWASP Top 10","text":"<p>Paved road components should address a significant issue with the OWASP Top 10, for example, how to automatically detect or fix vulnerable components, or a static code analysis IDE plugin to detect injections or even better start using a library that is known safe against injection. The more of these secure drop-in replacements provided to teams, the better. A vital task of the appsec team is to ensure that the security of these components is continuously evaluated and improved. Once they are improved, some form of communication pathway with consumers of the component should indicate that an upgrade should occur, preferably automatically, but if not, as least highlighted on a dashboard or similar.</p>"},{"location":"ja/A00_2021_How_to_use_the_OWASP_Top_10_as_a_standard/","title":"OWASP Top 10 \u3092\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u3068\u3057\u3066\u4f7f\u3046\u306b\u306f","text":"<p>OWASP Top 10 \u306f\u3001\u4e3b\u306b\u610f\u8b58\u5411\u4e0a\u3092\u76ee\u7684\u3068\u3057\u305f\u6587\u66f8\u3067\u3059\u3002 \u3057\u304b\u3057 2003 \u5e74\u306b\u958b\u59cb\u3055\u308c\u3066\u4ee5\u6765\u3001\u7d44\u7e54\u306f\u4e8b\u5b9f\u4e0a\u306e\u696d\u754c\u306b\u304a\u3051\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u3068\u3057\u3066\u4f7f\u3044\u7d9a\u3051\u3066\u3044\u307e\u3059\u3002 OWASP \u30c8\u30c3\u30d7 10 \u3092\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3084\u30c6\u30b9\u30c8\u306e\u57fa\u6e96\u3068\u3057\u3066\u4f7f\u7528\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u305d\u308c\u304c\u6700\u4f4e\u9650\u306e\u3082\u306e\u3067\u3042\u308a\u3001\u51fa\u767a\u70b9\u306b\u904e\u304e\u306a\u3044\u3053\u3068\u3092\u77e5\u3063\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>OWASP \u30c8\u30c3\u30d7 10 \u3092\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u3068\u3057\u3066\u4f7f\u3046\u3053\u3068\u306e\u96e3\u3057\u3055\u306e 1 \u3064\u306f\u3001OWASP Top 10 \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u30ea\u30b9\u30af\u3092\u6587\u66f8\u5316\u3057\u3066\u3044\u308b\u3082\u306e\u3067\u3042\u308a\u3001\u5fc5\u305a\u3057\u3082\u7c21\u5358\u306b\u30c6\u30b9\u30c8\u3067\u304d\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 \u4f8b\u3048\u3070\u300cA04:2021-\u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u306a\u3044\u4e0d\u5b89\u306a\u8a2d\u8a08\u300d\u306f\u3001\u307b\u3068\u3093\u3069\u306e\u5f62\u5f0f\u306e\u30c6\u30b9\u30c8\u306e\u7bc4\u56f2\u3092\u8d85\u3048\u3066\u3044\u307e\u3059\u3002 \u4ed6\u306e\u4f8b\u3068\u3057\u3066\u306f\u3001\u8a2d\u7f6e\u3001\u4f7f\u7528\u3001\u52b9\u679c\u7684\u306a\u30ed\u30ae\u30f3\u30b0\u3068\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u306e\u30c6\u30b9\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30c6\u30b9\u30c8\u306f\u3001\u30a4\u30f3\u30bf\u30d3\u30e5\u30fc\u3092\u884c\u3044\u52b9\u679c\u7684\u306a\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u8981\u6c42\u3057\u306a\u3051\u308c\u3070\u5b9f\u65bd\u3067\u304d\u307e\u305b\u3093\u3002 \u9759\u7684\u306a\u30b3\u30fc\u30c9\u89e3\u6790\u30c4\u30fc\u30eb\u306f\u3001\u30ed\u30ae\u30f3\u30b0\u304c\u884c\u308f\u308c\u3066\u3044\u306a\u3044\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3084\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u304c\u91cd\u8981\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u9055\u53cd\u306e\u30ed\u30ae\u30f3\u30b0\u3092\u884c\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3059\u308b\u3053\u3068\u306f\u4e0d\u53ef\u80fd\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002 \u4fb5\u5165\u30c6\u30b9\u30c8\u62c5\u5f53\u8005\u306f\u3001\u672c\u756a\u74b0\u5883\u3068\u540c\u3058\u3088\u3046\u306b\u76e3\u8996\u3055\u308c\u308b\u3053\u3068\u304c\u307b\u3068\u3093\u3069\u306a\u3044\u30c6\u30b9\u30c8\u74b0\u5883\u3067\u3001\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8d77\u52d5\u3057\u305f\u3053\u3068\u3092\u5224\u65ad\u3059\u308b\u3053\u3068\u3057\u304b\u3067\u304d\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u3053\u3053\u3067\u306f\u3001OWASP Top 10 \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u308b\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u793a\u3057\u307e\u3059\u3002</p> \u30e6\u30fc\u30b9\u30b1\u30fc\u30b9 OWASP Top 10 2021 OWASP\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u691c\u8a3c\u6a19\u6e96 (OWASP ASVS) \u610f\u8b58\u5411\u4e0a \u63a8\u5968 \u8a13\u7df4 \u5165\u9580\u30ec\u30d9\u30eb \u5305\u62ec\u7684 \u8a2d\u8a08\u3068\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u9069\u5207\u3067\u3042\u308b\u5834\u5408\u3082\u3042\u308b \u63a8\u5968 \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9 \u5fc5\u8981\u6700\u4f4e\u9650 \u63a8\u5968 \u30bb\u30ad\u30e5\u30a2\u30b3\u30fc\u30c9\u30ec\u30d3\u30e5\u30fc \u5fc5\u8981\u6700\u4f4e\u9650 \u63a8\u5968 \u30d4\u30a2\u30ec\u30d3\u30e5\u30fc\u306b\u304a\u3051\u308b\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8 \u5fc5\u8981\u6700\u4f4e\u9650 \u63a8\u5968 \u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8 \u9069\u5207\u3067\u3042\u308b\u5834\u5408\u3082\u3042\u308b \u63a8\u5968 \u7d71\u5408\u30c6\u30b9\u30c8 \u9069\u5207\u3067\u3042\u308b\u5834\u5408\u3082\u3042\u308b \u63a8\u5968 \u4fb5\u5165\u30c6\u30b9\u30c8 \u5fc5\u8981\u6700\u4f4e\u9650 \u63a8\u5968 \u30c4\u30fc\u30eb\u652f\u63f4 \u5fc5\u8981\u6700\u4f4e\u9650 \u63a8\u5968 \u30bb\u30ad\u30e5\u30a2\u30b5\u30d7\u30e9\u30a4\u30c1\u30a7\u30fc\u30f3 \u9069\u5207\u3067\u3042\u308b\u5834\u5408\u3082\u3042\u308b \u63a8\u5968 <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306b\u304a\u3051\u308b\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u3092\u3092\u63a1\u7528\u3057\u305f\u3044\u3068\u8003\u3048\u3066\u3044\u308b\u4eba\u306b\u306f\u3001OWASP Application Security Verification Standard\uff08ASVS\uff09\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002</p> <p>OWASP ASVS \u306f\u3001\u30c4\u30fc\u30eb\u30d9\u30f3\u30c0\u30fc\u306b\u3068\u3063\u3066\u552f\u4e00\u53d7\u3051\u5165\u308c\u3089\u308c\u308b\u9078\u629e\u80a2\u3067\u3059\u3002 OWASP \u30c8\u30c3\u30d7 10 \u306b\u304a\u3051\u308b\u30ea\u30b9\u30af\u306e\u6027\u8cea\u4e0a\u3001\u30c4\u30fc\u30eb\u306f OWASP \u30c8\u30c3\u30d7 10 \u3092\u5305\u62ec\u7684\u306b\u691c\u51fa\u3001\u30c6\u30b9\u30c8\u3001\u3042\u308b\u3044\u306f\u4fdd\u8b77\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u300cA04:2021-\u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u306a\u3044\u4e0d\u5b89\u306a\u8a2d\u8a08\u300d\u304c\u3042\u3052\u3089\u308c\u307e\u3059\u3002 OWASP \u306f\u3001\u30c4\u30fc\u30eb\u304c OWASP \u30c8\u30c3\u30d7 10 \u3092\u5b8c\u5168\u306b\u7db2\u7f85\u3057\u3066\u3044\u308b\u3068\u4e3b\u5f35\u3059\u308b\u3053\u3068\u306f\u3001\u5358\u7d14\u306b\u4e8b\u5b9f\u3068\u7570\u306a\u308b\u305f\u3081\u3001\u63a8\u5968\u3057\u307e\u305b\u3093\u3002</p>"},{"location":"ja/A00_2021_How_to_use_the_OWASP_Top_10_as_a_standard/#how-to-use-the-owasp-top-10-as-a-standard","title":"How to use the OWASP Top 10 as a standard","text":"<p>The OWASP Top 10 is primarily an awareness document. However, this has not stopped organizations using it as a de facto industry AppSec standard since its inception in 2003. If you want to use the OWASP Top 10 as a coding or testing standard, know that it is the bare minimum and just a starting point.</p> <p>One of the difficulties of using the OWASP Top 10 as a standard is that we document appsec risks, and not necessarily easily testable issues. For example, A04:2021-Insecure Design is beyond the scope of most forms of testing. Another example is testing in place, in use, and effective logging and monitoring can only be done with interviews and requesting a sampling of effective incident responses. A static code analysis tool can look for the absence of logging, but it might be impossible to determine if business logic or access control is logging critical security breaches. Penetration testers may only be able to determine that they have invoked incident response in a test environment, which are rarely monitored in the same way as production.</p> <p>Here are our recommendations for when it is appropriate to use the OWASP Top 10:</p> Use Case OWASP Top 10 2021 OWASP Application Security Verification Standard Awareness Yes Training Entry level Comprehensive Design and architecture Occasionally Yes Coding standard Bare minimum Yes Secure Code review Bare minimum Yes Peer review checklist Bare minimum Yes Unit testing Occasionally Yes Integration testing Occasionally Yes Penetration testing Bare minimum Yes Tool support Bare minimum Yes Secure Supply Chain Occasionally Yes <p>We would encourage anyone wanting to adopt an application security standard to use the OWASP Application Security Verification Standard (ASVS), as it\u2019s designed to be verifiable and tested, and can be used in all parts of a secure development lifecycle.</p> <p>The ASVS is the only acceptable choice for tool vendors. Tools cannot comprehensively detect, test, or protect against the OWASP Top 10 due to the nature of several of the OWASP Top 10 risks, with reference to A04:2021-Insecure Design. OWASP discourages any claims of full coverage of the OWASP Top 10, because it\u2019s simply untrue.</p>"},{"location":"ja/A00_2021_Introduction/","title":"\u5c0e\u5165","text":""},{"location":"ja/A00_2021_Introduction/#owasp-top-10-2021","title":"OWASP Top 10 - 2021 \u3078\u3088\u3046\u3053\u305d","text":"<p>OWASP \u30c8\u30c3\u30d7 10 \u306e\u6700\u65b0\u7248\u3078\u3088\u3046\u3053\u305d! OWASP \u30c8\u30c3\u30d7 10 2021\u5e74\u7248\u306f\u3001\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30c7\u30b6\u30a4\u30f3\u304c\u4e00\u65b0\u3055\u308c\u30011\u30da\u30fc\u30b8\u306e\u30a4\u30f3\u30d5\u30a9\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u30a4\u30f3\u30d5\u30a9\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u306f\u3001\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u304b\u3089\u5165\u624b\u3067\u304d\u3001\u5370\u5237\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u4eca\u56de\u306e\u30c8\u30c3\u30d710\u306e\u4f5c\u6210\u306b\u3042\u305f\u3063\u3066\u3001\u8cb4\u91cd\u306a\u6642\u9593\u3084\u30c7\u30fc\u30bf\u3092\u63d0\u4f9b\u3057\u3066\u304f\u3060\u3055\u3063\u305f\u3059\u3079\u3066\u306e\u7686\u3055\u3093\u306b\u611f\u8b1d\u3057\u307e\u3059\u3002\u7686\u69d8\u306e\u3054\u5354\u529b\u306a\u304f\u3057\u3066\u306f\u3001OWASP \u30c8\u30c3\u30d7 10 2021\u5e74\u7248\u306f\u5b58\u5728\u3057\u5f97\u307e\u305b\u3093\u3002\u672c\u5f53\u306b\u3001\u611f\u8b1d\u3044\u305f\u3057\u307e\u3059\u3002</p>"},{"location":"ja/A00_2021_Introduction/#202110","title":"2021\u5e74\u7248\u30c8\u30c3\u30d710\u306e\u5909\u66f4\u70b9","text":"<p>2021\u5e74\u7248\u30c8\u30c3\u30d710\u3067\u306f\u30013\u3064\u306e\u65b0\u3057\u3044\u30ab\u30c6\u30b4\u30ea\u30fc\u30014\u3064\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u540d\u79f0\u3068\u30b9\u30b3\u30fc\u30d7\u306e\u5909\u66f4\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u7d71\u5408\u3055\u308c\u305f\u3082\u306e\u3082\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002</p> <p></p> <ul> <li>A01:2021\u2013\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u4e0d\u5099 \u306f\u30015\u4f4d\u304b\u3089\u6700\u3082\u6df1\u523b\u306aWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ea\u30b9\u30af\u3078\u3068\u9806\u4f4d\u3092\u4e0a\u3052\u307e\u3057\u305f\u3002\u8ca2\u732e\u3055\u308c\u305f\u30c7\u30fc\u30bf\u304b\u3089\u3001\u5e73\u5747\u3067\u30c6\u30b9\u30c8\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e3.81%\u304c1\u3064\u4ee5\u4e0a\u306e\u5171\u901a\u8106\u5f31\u6027\u30bf\u30a4\u30d7\u4e00\u89a7\uff08CWE\uff09\u3092\u6301\u3063\u3066\u304a\u308a\u3001\u3053\u306e\u30ea\u30b9\u30af\u30ab\u30c6\u30b4\u30ea\u306b\u8a72\u5f53\u3059\u308bCWE\u306f 318,000 \u4ef6\u4ee5\u4e0a\u5b58\u5728\u3057\u3066\u3044\u305f\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u4ed6\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u6bd4\u3079\u3001\u300c\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u6b20\u9665\u300d\u30ab\u30c6\u30b4\u30ea\u306b\u3042\u305f\u308b34\u4ef6\u306eCWE\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u591a\u304f\u767a\u751f\u3057\u3066\u3044\u307e\u3057\u305f\u3002</li> <li>A02:2021\u2013\u6697\u53f7\u5316\u306e\u5931\u6557 \u306f\u3001\u3072\u3068\u3064\u9806\u4f4d\u3092\u4e0a\u3052\u30662\u4f4d\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4ee5\u524d\u306f\u3001A3:2017-\u6a5f\u5fae\u306a\u60c5\u5831\u306e\u9732\u51fa \u3068\u547c\u3070\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u308c\u306f\u6839\u672c\u7684\u306a\u539f\u56e0\u3068\u3044\u3046\u3088\u308a\u5e45\u5e83\u304f\u307f\u3089\u308c\u308b\u75c7\u72b6\u3068\u8a00\u3048\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u6a5f\u5bc6\u30c7\u30fc\u30bf\u306e\u6f0f\u3048\u3044\u3084\u30b7\u30b9\u30c6\u30e0\u4fb5\u5bb3\u306b\u591a\u304f\u95a2\u9023\u3059\u308b\u3001\u6697\u53f7\u6280\u8853\u306b\u307e\u3064\u308f\u308b\u5931\u6557\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002</li> <li>A03:2021\u2013\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3 \u306f\u30013\u4f4d\u306b\u4e0b\u304c\u3063\u3066\u3044\u307e\u3059\u300294%\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f55\u3089\u304b\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306b\u95a2\u3059\u308b\u554f\u984c\u304c\u78ba\u8a8d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u6700\u5927\u767a\u751f\u7387\u306f19%\u3001\u5e73\u5747\u767a\u751f\u7387\u306f3.37%\u3067\u3042\u308a\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u3042\u305f\u308b33\u306eCWE\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306e\u767a\u751f\u6570\u304c2\u756a\u76ee\u306b\u591a\u304f\u898b\u3089\u308c\u307e\u3059\u3002\u767a\u751f\u6570\u306f27\u4e074\u5343\u4ef6\u3067\u3057\u305f\u3002\u4eca\u56de\u304b\u3089\u3001\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0\u306f\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002</li> <li>A04:2021-\u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u306a\u3044\u4e0d\u5b89\u306a\u8a2d\u8a08 \u306f\u30012021\u5e74\u306b\u65b0\u8a2d\u3055\u308c\u305f\u30ab\u30c6\u30b4\u30ea\u30fc\u3067\u3001\u8a2d\u8a08\u4e0a\u306e\u6b20\u9665\u306b\u95a2\u3059\u308b\u30ea\u30b9\u30af\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\u4e00\u696d\u754c\u3068\u3057\u3066\u3001\u6211\u3005\u304c\u7d14\u7c8b\u306b\u300c\u30b7\u30d5\u30c8\u30ec\u30d5\u30c8\u300d\u3059\u308b\u3053\u3068\u3092\u671b\u3080\u306e\u3067\u3042\u308c\u3070\u3001\u8105\u5a01\u30e2\u30c7\u30ea\u30f3\u30b0\u3084\u3001\u5b89\u5168\u306a\u8a2d\u8a08\u30d1\u30bf\u30fc\u30f3\u3068\u539f\u5247\u3001\u307e\u305f\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30fb\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u3082\u3063\u3068\u5229\u7528\u3057\u3066\u3044\u304f\u3053\u3068\u304c\u5fc5\u8981\u3067\u3059\u3002 \u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u306a\u3044\u4e0d\u5b89\u306a\u8a2d\u8a08\u306f\u5b8c\u74a7\u306a\u5b9f\u88c5\u306b\u3088\u3063\u3066\u4fee\u6b63\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u5b9a\u7fa9\u4e0a\u3001(\u3064\u307e\u308a\u8a2d\u8a08\u81ea\u4f53\u304c\u554f\u984c\u306a\u306e\u3067)\u7279\u5b9a\u306e\u653b\u6483\u306b\u5bfe\u3057\u3066\u5fc5\u8981\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56\u304c\u4f5c\u3089\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u3048\u306a\u3044\u304b\u3089\u3067\u3059\u3002</li> <li>A05:2021-\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u8a2d\u5b9a\u30df\u30b9 \u306f\u3001\u524d\u56de\u306e6\u4f4d\u304b\u3089\u9806\u4f4d\u3092\u4e0a\u3052\u307e\u3057\u305f\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e90\uff05\u306b\u4f55\u3089\u304b\u306e\u8a2d\u5b9a\u30df\u30b9\u304c\u898b\u3089\u308c\u3001\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u306e\u5e73\u5747\u767a\u751f\u7387\u3068\u3057\u3066\u306f4.5%\u3001\u3053\u306e\u30ea\u30b9\u30af\u30ab\u30c6\u30b4\u30ea\u306b\u8a72\u5f53\u3059\u308bCWE\u306f 208,000 \u4ef6\u4ee5\u4e0a\u5b58\u5728\u3057\u3066\u3044\u305f\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002 \u9ad8\u5ea6\u306a\u8a2d\u5b9a\u304c\u53ef\u80fd\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3078\u306e\u79fb\u884c\u304c\u9032\u3080\u4e2d\u3067\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u9806\u4f4d\u304c\u4e0a\u304c\u3063\u305f\u3053\u3068\u306f\u5f53\u7136\u3068\u8a00\u3048\u307e\u3059\u3002\u4ee5\u524d\u306e\u3001A4:2017-XML \u5916\u90e8\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u53c2\u7167 (XXE) \u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306f\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002</li> <li>A06:2021\u2013\u8106\u5f31\u3067\u53e4\u304f\u306a\u3063\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u306f\u3001\u4ee5\u524d\u306f\u300c\u65e2\u77e5\u306e\u8106\u5f31\u6027\u306e\u3042\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f7f\u7528\u300d\u3068\u3044\u3046\u30bf\u30a4\u30c8\u30eb\u3067\u3057\u305f\u3002\u3053\u306e\u554f\u984c\u306f\u3001Top 10\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u8abf\u67fb\u3067\u306f2\u4f4d\u3067\u3042\u308a\u3001\u30c7\u30fc\u30bf\u5206\u6790\u306b\u3088\u3063\u3066\u30c8\u30c3\u30d710\u306b\u5165\u308b\u3060\u3051\u306e\u30c7\u30fc\u30bf\u3082\u3042\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306f2017\u5e74\u306e9\u4f4d\u304b\u3089\u9806\u4f4d\u3092\u4e0a\u3052\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001\u30c6\u30b9\u30c8\u3084\u30ea\u30b9\u30af\u8a55\u4fa1\u306b\u82e6\u52b4\u3059\u308b\u3001\u3088\u304f\u77e5\u3089\u308c\u305f\u554f\u984c\u3067\u3059\u3002\u307e\u305f\u3001\u542b\u307e\u308c\u308bCWE\u306b\u3042\u305f\u308b\u5171\u901a\u8106\u5f31\u6027\u8b58\u5225\u5b50 (CVE)\u306e\u306a\u3044\u3001\u552f\u4e00\u306e\u30ab\u30c6\u30b4\u30ea\u3067\u3042\u308b\u305f\u3081\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a8\u30af\u30b9\u30d7\u30ed\u30a4\u30c8\u3068\u30a4\u30f3\u30d1\u30af\u30c8\u306e\u91cd\u307f\u306f5.0\u3068\u3057\u3066\u30b9\u30b3\u30a2\u306b\u53cd\u6620\u3055\u308c\u3066\u3044\u307e\u3059\u3002</li> <li>A07:2021\u2013\u8b58\u5225\u3068\u8a8d\u8a3c\u306e\u5931\u6557 \u306f\u4ee5\u524d\u3001\u300c\u8a8d\u8a3c\u306e\u4e0d\u5099\u300d\u3068\u547c\u3070\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u306e\u7248\u3067\u306f\u7b2c2\u4f4d\u304b\u3089\u9806\u4f4d\u3092\u843d\u3068\u3057\u3001\u8b58\u5225\u306e\u5931\u6557\u306b\u95a2\u9023\u3059\u308bCWE\u3092\u3088\u308a\u591a\u304f\u542b\u3080\u610f\u5473\u5408\u3044\u306e\u30ab\u30c6\u30b4\u30ea\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306f\u4f9d\u7136\u3068\u3057\u3066\u30c8\u30c3\u30d710\u306b\u793a\u3059\u3079\u304d\u91cd\u8981\u306a\u9805\u76ee\u3067\u3059\u304c\u3001\u6a19\u6e96\u5316\u3055\u308c\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u5229\u7528\u304c\u9032\u3093\u3060\u3053\u3068\u304c\u529f\u3092\u594f\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002</li> <li>A08:2021\u2013\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3068\u30c7\u30fc\u30bf\u306e\u6574\u5408\u6027\u306e\u4e0d\u5177\u5408 \u306f\u30012021\u5e74\u306b\u65b0\u8a2d\u3055\u308c\u305f\u30ab\u30c6\u30b4\u30ea\u30fc\u3067\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u66f4\u65b0\u3001\u91cd\u8981\u306a\u30c7\u30fc\u30bf\u3092\u3001CI/CD\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306b\u304a\u3044\u3066\u6574\u5408\u6027\u3092\u691c\u8a3c\u305b\u305a\u306b\u898b\u8fbc\u307f\u3067\u9032\u3081\u308b\u3053\u3068\u306b\u3088\u308b\u554f\u984c\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u3066\u3044\u307e\u3059\u3002\u5171\u901a\u8106\u5f31\u6027\u8b58\u5225\u5b50/\u5171\u901a\u8106\u5f31\u6027\u8a55\u4fa1\u30b7\u30b9\u30c6\u30e0 (CVE/CVSS) \u306e\u30c7\u30fc\u30bf\u304b\u3089\u6700\u3082\u91cd\u5927\u306a\u5f71\u97ff\u3092\u53d7\u3051\u305f\u3082\u306e\u306e1\u3064\u304c\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e10\u306eCWE\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002A8:2017-\u5b89\u5168\u3067\u306a\u3044\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3 \u306f\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u4e00\u90e8\u3068\u306a\u308a\u307e\u3057\u305f\u3002</li> <li>A09:2021\u2013\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ed\u30b0\u3068\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u306e\u5931\u6557 \u306f\u3001\u5f93\u6765\u306fA10:2017-\u4e0d\u5341\u5206\u306a\u30ed\u30ae\u30f3\u30b0\u3068\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3067\u3057\u305f\u304c\u3001Top 10\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u8abf\u67fb\uff08\u7b2c3\u4f4d\uff09\u304b\u3089\u8ffd\u52a0\u3055\u308c\u3001\u5f93\u6765\u306e\u7b2c10\u4f4d\u304b\u3089\u30e9\u30f3\u30af\u30a2\u30c3\u30d7\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306f\u3001\u3088\u308a\u591a\u304f\u306e\u7a2e\u985e\u306e\u5931\u6557\u3092\u542b\u3080\u3088\u3046\u306b\u62e1\u5f35\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30c6\u30b9\u30c8\u304c\u56f0\u96e3\u306a\u3082\u306e\u3067\u3042\u308a\u3001\u304b\u3064\u3001CVE/CVSS\u306e\u30c7\u30fc\u30bf\u306b\u306f\u3042\u307e\u308a\u53cd\u6620\u3055\u308c\u306a\u3044\u3082\u306e\u3067\u3059\u3002\u3068\u306f\u3044\u3048\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u3067\u5931\u6557\u304c\u8d77\u304d\u308b\u3068\u3001\u53ef\u8996\u6027\u3001\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u30a2\u30e9\u30fc\u30c8\u3001\u30d5\u30a9\u30ec\u30f3\u30b8\u30c3\u30af\u306a\u3069\u306b\u76f4\u63a5\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</li> <li>A10:2021-\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u30ea\u30af\u30a8\u30b9\u30c8\u30d5\u30a9\u30fc\u30b8\u30a7\u30ea (SSRF) \u306f\u3001Top 10\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u8abf\u67fb\uff08\u7b2c1\u4f4d\uff09\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u3082\u306e\u3067\u3059\u3002\u8abf\u67fb\u30c7\u30fc\u30bf\u304b\u3089\u308f\u304b\u308b\u3053\u3068\u306f\u3001\u3088\u304f\u3042\u308b\u30c6\u30b9\u30c8\u3088\u308a\u5e83\u7bc4\u306a\u7bc4\u56f2\u306b\u304a\u3044\u3066\u3001\u554f\u984c\u306e\u767a\u751f\u7387\u306f\u6bd4\u8f03\u7684\u4f4e\u3044\u3082\u306e\u306e\u3001\u554f\u984c\u304c\u8d77\u304d\u305f\u5834\u5408\u306e\u30a8\u30af\u30b9\u30d7\u30ed\u30a4\u30c8\u3068\u30a4\u30f3\u30d1\u30af\u30c8\u306f\u5e73\u5747\u4ee5\u4e0a\u306e\u3082\u306e\u3068\u306a\u308a\u5f97\u307e\u3059\u3002\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306f\u3001\u73fe\u6642\u70b9\u3067\u30c7\u30fc\u30bf\u3068\u3057\u3066\u73fe\u308c\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u8907\u6570\u306e\u696d\u754c\u306e\u5c02\u9580\u5bb6\u306b\u3088\u308a\u91cd\u8981\u3068\u306e\u793a\u5506\u3092\u5f97\u305f\u30b7\u30ca\u30ea\u30aa\u3068\u3057\u3066\u53cd\u6620\u3057\u3066\u3044\u307e\u3059\u3002</li> </ul>"},{"location":"ja/A00_2021_Introduction/#_2","title":"\u65b9\u6cd5\u8ad6","text":"<p>\u4eca\u56de\u306e\u30c8\u30c3\u30d710\u306f\u3001\u3053\u308c\u307e\u3067\u4ee5\u4e0a\u306b\u30c7\u30fc\u30bf\u3092\u91cd\u8996\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3084\u307f\u304f\u3082\u306b\u30c7\u30fc\u30bf\u3092\u91cd\u8996\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u300210\u9805\u76ee\u306e\u3046\u30618\u9805\u76ee\u306f\u63d0\u4f9b\u3055\u308c\u305f\u30c7\u30fc\u30bf\u304b\u3089\u30012\u9805\u76ee\u306fTop 10\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u8abf\u67fb\u304b\u3089\u9ad8\u3044\u30ec\u30d9\u30eb\u3067\u9078\u3073\u307e\u3057\u305f\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u306b\u306f\u3072\u3068\u3064\u306e\u6839\u672c\u7684\u306a\u7406\u7531\u304c\u3042\u308a\u307e\u3059\u3002\u63d0\u4f9b\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u898b\u308b\u3053\u3068\u306f\u3001\u904e\u53bb\u3092\u898b\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u30ea\u30b5\u30fc\u30c1\u30e3\u30fc\u304c\u65b0\u3057\u3044\u8106\u5f31\u6027\u3084\u3001\u305d\u308c\u3092\u30c6\u30b9\u30c8\u3059\u308b\u65b0\u3057\u3044\u65b9\u6cd5\u3092\u898b\u3064\u3051\u308b\u306e\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30c6\u30b9\u30c8\u3092\u30c4\u30fc\u30eb\u3084\u30d7\u30ed\u30bb\u30b9\u306b\u7d44\u307f\u8fbc\u3080\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\u3053\u3046\u3057\u305f\u5f31\u70b9\u3092\u5e83\u304f\u78ba\u5b9f\u306b\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u306b\u306f\u3001\u4f55\u5e74\u3082\u304b\u304b\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u305d\u3053\u3067\u3001\u30c7\u30fc\u30bf\u3067\u306f\u308f\u304b\u3089\u306a\u3044\u3088\u3046\u306a\u672c\u8cea\u7684\u306a\u5f31\u70b9\u306f\u4f55\u304b\u3068\u3044\u3046\u3053\u3068\u306b\u3064\u3044\u3066\u306f\u3001\u696d\u754c\u306e\u7b2c\u4e00\u7dda\u3067\u6d3b\u8e8d\u3055\u308c\u3066\u3044\u308b\u65b9\u3005\u306b\u304a\u805e\u304d\u3059\u308b\u3053\u3068\u3067\u30d0\u30e9\u30f3\u30b9\u3092\u3068\u308b\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002</p> <p>\u30c8\u30c3\u30d710\u3092\u7d99\u7d9a\u7684\u306b\u6210\u719f\u3055\u305b\u308b\u305f\u3081\u306b\u79c1\u305f\u3061\u304c\u63a1\u7528\u3057\u305f\u3001\u91cd\u8981\u306a\u5909\u66f4\u70b9\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/A00_2021_Introduction/#_3","title":"\u30ab\u30c6\u30b4\u30ea\u306e\u69cb\u6210\u306b\u3064\u3044\u3066","text":"<p>\u524d\u56de\u306eOWASP Top 10\u304b\u3089\u3044\u304f\u3064\u304b\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u304c\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u306b\u4eca\u56de\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u5909\u66f4\u70b9\u3092\u5927\u307e\u304b\u306b\u307e\u3068\u3081\u307e\u3059\u3002</p> <p>\u524d\u56de\u306e\u30c7\u30fc\u30bf\u53ce\u96c6\u6d3b\u52d5\u306f\u3001\u7d0430\u500b\u306eCWE\u304b\u3089\u306a\u308b\u898f\u5b9a\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u306b\u7126\u70b9\u3092\u5f53\u3066\u3001\u8ffd\u52a0\u3068\u3057\u3066\u73fe\u5834\u3067\u306e\u8abf\u67fb\u7d50\u679c\u3092\u6c42\u3081\u3066\u3044\u307e\u3057\u305f\u3002\u3053\u306e\u65b9\u6cd5\u3067\u306f\u3001\u73fe\u5834\u306e\u7d44\u7e54\u306f\u3001\u4e3b\u306b\u3053\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u305f30\u306eCWE\u3060\u3051\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u5831\u544a\u3092\u304f\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u3001\u5b9f\u969b\u306b\u89b3\u5bdf\u3057\u305fCWE\u3092\u8ffd\u52a0\u3057\u3066\u304f\u308c\u308b\u3053\u3068\u306f\u307e\u308c\u3060\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u305d\u3053\u3067\u4eca\u56de\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308bCWE\u306b\u5236\u9650\u3092\u8a2d\u3051\u305a\u306b\u3001\u30c7\u30fc\u30bf\u3092\u63d0\u4f9b\u3057\u3066\u3082\u3089\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u3042\u308b\u5e74\u306b\uff08\u4eca\u56de\u306f2017\u5e74\u4ee5\u964d\uff09\u30c6\u30b9\u30c8\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6570\u3068\u3001\u30c6\u30b9\u30c8\u3067CWE\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u4f8b\u304c1\u3064\u4ee5\u4e0a\u898b\u3064\u304b\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6570\u3092\u51fa\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u4f9d\u983c\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3092\u6bcd\u96c6\u56e3\u3068\u3057\u3066\u3068\u3063\u305f\u4e0a\u3067\u3001\u305d\u308c\u305e\u308c\u306eCWE\u304c\u3069\u306e\u7a0b\u5ea6\u8513\u5ef6\u3057\u3066\u3044\u308b\u304b\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u76ee\u7684\u3092\u8e0f\u307e\u3048\u3066\u3001\u5f53\u8a72CWE\u306e\u767a\u898b\u983b\u5ea6\u306b\u3064\u3044\u3066\u306f\u7121\u8996\u3057\u307e\u3057\u305f\u3002\u983b\u5ea6\u306f\u4ed6\u306e\u72b6\u6cc1\u3067\u306f\u5fc5\u8981\u6027\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6bcd\u96c6\u56e3\u306b\u304a\u3044\u3066\u306f\u3001\u73fe\u5b9f\u306e\u8513\u5ef6\u7387\u3092\u96a0\u3059\u3053\u3068\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u3042\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3001\u3042\u308b\u7279\u5b9a\u306eCWE\u306e\u8106\u5f31\u6027\u304c4\u4f8b\u898b\u3064\u304b\u308b\u3053\u3068\u3082\u3042\u308c\u3070\u30014,000\u4f8b\u898b\u3064\u304b\u308b\u3053\u3068\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u305d\u306e\u767a\u751f\u983b\u5ea6\u306f\u30c8\u30c3\u30d710\u306e\u8a08\u7b97\u306b\u5f71\u97ff\u3055\u305b\u306a\u3044\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002\u3053\u3046\u3057\u3066\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u5206\u6790\u3067\u304d\u305fCWE\u306f\u7d0430\u500b\u304b\u3089\u7d04400\u500b\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4eca\u5f8c\u3001\u79c1\u305f\u3061\u306f\u8ffd\u52a0\u306e\u30c7\u30fc\u30bf\u89e3\u6790\u3092\u884c\u3044\u3001Top 10\u306b\u88dc\u8db3\u3059\u308b\u8a08\u753b\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306bCWE\u306e\u6570\u304c\u5927\u5e45\u306b\u5897\u3048\u305f\u3053\u3068\u3067\u3001\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u69cb\u6210\u65b9\u6cd5\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>CWE\u306e\u30b0\u30eb\u30fc\u30d7\u5316\u3068\u5206\u985e\u306b\u6570\u30f6\u6708\u3092\u8cbb\u3084\u3057\u307e\u3057\u305f\u3002\u3055\u3089\u306b\u6570\u30f6\u6708\u7d9a\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3069\u3053\u304b\u306e\u6642\u70b9\u3067\u6b62\u3081\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002CWE\u306b\u306f\u300c\u6839\u672c\u539f\u56e0\u300d\u3068\u300c\u75c7\u72b6\u300d\u304c\u3042\u308a\u3001\u300c\u6839\u672c\u539f\u56e0\u300d\u306b\u306f\u300c\u6697\u53f7\u306e\u6b20\u9665\u300d\u3084\u300c\u8a2d\u5b9a\u30df\u30b9\u300d\u306a\u3069\u304c\u3042\u308a\u3001\u300c\u75c7\u72b6\u300d\u306b\u306f\u300c\u6a5f\u5bc6\u30c7\u30fc\u30bf\u306e\u6f0f\u3048\u3044\u300d\u3084\u300c\u30b5\u30fc\u30d3\u30b9\u59a8\u5bb3\u300d\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u79c1\u305f\u3061\u306f\u3001\u53ef\u80fd\u306a\u9650\u308a\u6839\u672c\u7684\u306a\u539f\u56e0\u306b\u7126\u70b9\u3092\u5f53\u3066\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u8b58\u5225\u3068\u4fee\u5fa9\u306e\u305f\u3081\u306e\u30ac\u30a4\u30c0\u30f3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u306e\u306b\u9069\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\u300c\u75c7\u72b6\u300d\u3067\u306f\u306a\u304f\u300c\u6839\u672c\u539f\u56e0\u300d\u306b\u7126\u70b9\u3092\u5f53\u3066\u308b\u3053\u3068\u306f\u3001\u4eca\u306b\u59cb\u307e\u3063\u305f\u30b3\u30f3\u30bb\u30d7\u30c8\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3069\u306e\u7248\u306eTop 10\u3082\u3001\u75c7\u72b6\u3068\u539f\u56e0\u304c\u6df7\u5728\u3057\u3066\u304d\u307e\u3057\u305f\u3002CWE\u3082\u307e\u305f\u3001\u300c\u75c7\u72b6\u300d\u3068\u300c\u6839\u672c\u539f\u56e0\u300d\u304c\u6df7\u5728\u3057\u3066\u3044\u307e\u3059\u3002\u79c1\u305f\u3061\u306f\u305d\u306e\u3053\u3068\u3092\u3088\u308a\u614e\u91cd\u306b\u8003\u3048\u3001\u547c\u3073\u304b\u3051\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306e\u30ab\u30c6\u30b4\u30ea\u3054\u3068\u306b\u542b\u307e\u308c\u308bCWE\u6570\u306f\u5e73\u574719.6\u4ef6\u3067\u3001\u6700\u5c11\u3067 A10:2021-\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u30ea\u30af\u30a8\u30b9\u30c8\u30d5\u30a9\u30fc\u30b8\u30a7\u30ea(SSRF) \u306e1\u4ef6\u3001\u305d\u3057\u3066\u6700\u591a\u306e\u3082\u306e\u306f A04:2021-\u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u306a\u3044\u4e0d\u5b89\u306a\u8a2d\u8a08 \u306e40\u4ef6\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u69cb\u9020\u306e\u5909\u66f4\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u3055\u3089\u306a\u308b\u52b9\u679c\u3092\u3082\u305f\u3089\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u4f01\u696d\u306f\u3001\u5229\u7528\u3057\u3066\u3044\u308b\u8a00\u8a9e\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u3068\u3063\u3066\u610f\u5473\u306e\u3042\u308bCWE\u306b\u96c6\u4e2d\u3057\u3066\u6559\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002</p>"},{"location":"ja/A00_2021_Introduction/#_4","title":"\u30ab\u30c6\u30b4\u30ea\u9078\u5b9a\u306b\u30c7\u30fc\u30bf\u304c\u3069\u306e\u3088\u3046\u306b\u4f7f\u7528\u3055\u308c\u305f\u304b","text":"<p>2017\u5e74\u3067\u306f\u3001\u767a\u751f\u7387\u3088\u308a\u30ab\u30c6\u30b4\u30ea\u30fc\u3092\u9078\u5b9a\u3057\u3066\u53ef\u80fd\u6027\u3092\u5224\u65ad\u3057\u3001\u6570\u5341\u5e74\u306e\u7d4c\u9a13\u306b\u57fa\u3065\u304d\u3001\u60aa\u7528\u306e\u3057\u3084\u3059\u3055\u3001\u691c\u51fa\u306e\u3057\u3084\u3059\u3055(\u304a\u3088\u3073 \u53ef\u80fd\u6027)\u3001\u6280\u8853\u9762\u3078\u306e\u5f71\u97ff\u306b\u3064\u3044\u3066\u30c1\u30fc\u30e0\u306e\u8b70\u8ad6\u306b\u3088\u308a\u30e9\u30f3\u30af\u4ed8\u3051\u3057\u307e\u3057\u305f\u30022021\u5e74\u306b\u3064\u3044\u3066\u306f\u3001\u53ef\u80fd\u3067\u3042\u308c\u3070\u60aa\u7528\u306e\u3057\u3084\u3059\u3055\u3068(\u6280\u8853\u9762\u306e) \u5f71\u97ff\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002</p> <p>OWASP Dependency Check\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001CVSS Exploit\u3001\u304a\u3088\u3073Impact\u306e\u30b9\u30b3\u30a2\u3092\u3001\u95a2\u9023\u3059\u308bCWE\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u62bd\u51fa\u3057\u307e\u3057\u305f\u3002CVSSv2\u306b\u306fCVSSv3\u3067\u5bfe\u51e6\u3055\u308c\u308b\u3067\u3042\u308d\u3046\u6b20\u9665\u304c\u3042\u308b\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u3059\u3079\u3066\u306eCVE\u306fCVSSv2\u306e\u30b9\u30b3\u30a2\u3092\u6301\u3063\u3066\u3044\u305f\u305f\u3081\u3001\u304b\u306a\u308a\u306e\u8abf\u67fb\u3068\u52b4\u529b\u3092\u8981\u3057\u307e\u3057\u305f\u3002\u3067\u3059\u304c\u3042\u308b\u6642\u70b9\u304b\u3089\u3001\u3059\u3079\u3066\u306eCVE\u306bCVSSv3\u306e\u30b9\u30b3\u30a2\u3082\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u306a\u304a\u3001CVSSv2\u3068CVSSv3\u306e\u9593\u3067\u306f\u3001\u30b9\u30b3\u30a2\u306e\u7bc4\u56f2\u3068\u8a08\u7b97\u5f0f\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>CVSSv2 \u3067\u306f\u3001\u60aa\u7528\u6027 \u3068 (\u6280\u8853\u9762\u306e) \u5f71\u97ff \u306e\u4e21\u65b9\u304c 10.0 \u307e\u3067\u53ef\u80fd\u3067\u3057\u305f\u304c\u3001\u8a08\u7b97\u5f0f\u306b\u3088\u3063\u3066 \u60aa\u7528\u6027 \u306f 60%\u3001\u5f71\u97ff \u306f 40% \u306b\u8abf\u6574\u3055\u308c\u307e\u3057\u305f\u3002CVSSv3\u3067\u306f\u3001\u7406\u8ad6\u7684\u306a\u6700\u5927\u5024\u304cExploit\u304c6.0\u3001Impact\u304c4.0\u306b\u5236\u9650\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u91cd\u307f\u4ed8\u3051\u306b\u3088\u308a\u3001CVSSv3\u3067\u306f\u30a4\u30f3\u30d1\u30af\u30c8\u306e\u30b9\u30b3\u30a2\u304c\u5e73\u5747\u3067\u307b\u307c1.5\u30dd\u30a4\u30f3\u30c8\u9ad8\u304f\u306a\u308a\u3001\u60aa\u7528\u6027\u306e\u30b9\u30b3\u30a2\u306f\u5e73\u5747\u3067\u307b\u307c0.5\u30dd\u30a4\u30f3\u30c8\u4f4e\u304f\u306a\u308a\u307e\u3057\u305f\u3002</p> <p>OWASP Dependency Check\u304b\u3089\u62bd\u51fa\u3055\u308c\u305fNVD\uff08National Vulnerability Database\uff09\u30c7\u30fc\u30bf\u306b\u306f\u3001CWE\u304c\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u305fCVE\u306e\u30ec\u30b3\u30fc\u30c9\u306f125,000\u4ef6\u3042\u308a\u3001\u3053\u308c\u3089\u306e\u4e2d\u306b\u4e00\u610f\u306eCWE\u306f241\u4ef6\u78ba\u8a8d\u3055\u308c\u307e\u3057\u305f\u3002CWE\u304c\u30de\u30c3\u30d7\u3055\u308c\u305f 6,200\u4ef6\u304cCVSSv3\u30b9\u30b3\u30a2\u3092\u6301\u3063\u3066\u304a\u308a\u3001\u3053\u308c\u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u6bcd\u6570\u306e\u7d04\u534a\u5206\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002</p> <p>2021\u5e74\u7248Top10\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u5e73\u5747\u60aa\u7528\u6027\u30b9\u30b3\u30a2\u3068\u5f71\u97ff\u30b9\u30b3\u30a2\u3092\u7b97\u51fa\u3057\u307e\u3057\u305f\u3002CVSS\u30b9\u30b3\u30a2\u3092\u6301\u3064\u3059\u3079\u3066\u306eCVE\u3092CWE\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3001\u60aa\u7528\u6027\u3068\u5f71\u97ff\u306e\u4e21\u30b9\u30b3\u30a2\u3092\u3001CVSSv3\u30b9\u30b3\u30a2\u3092\u6301\u3064\u6bcd\u96c6\u56e3\u306e\u5272\u5408 + CVSSv2\u30b9\u30b3\u30a2\u3092\u6301\u3064\u6b8b\u308a\u306e\u6bcd\u96c6\u56e3\u3067\u91cd\u307f\u4ed8\u3051\u3057\u3066\u5168\u4f53\u306e\u5e73\u5747\u5024\u3092\u7b97\u51fa\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u5e73\u5747\u5024\u3092\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306eCWE\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3001\u30ea\u30b9\u30af\u65b9\u7a0b\u5f0f\u306e\u3046\u3061\u534a\u5206\u306e\u60aa\u7528\u6027\u304a\u3088\u3073(\u6280\u8853\u9762\u306e) \u5f71\u97ff\u30b9\u30b3\u30a2\u3068\u3057\u3066\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002</p>"},{"location":"ja/A00_2021_Introduction/#_5","title":"\u306a\u305c\u7d14\u7c8b\u306a\u7d71\u8a08\u30c7\u30fc\u30bf\u3060\u3051\u3067\u306f\u306a\u3044\u306e\u304b","text":"<p>\u30c7\u30fc\u30bf\u304b\u3089\u306e\u7d50\u679c\u306f\u3001\u4e3b\u306b\u81ea\u52d5\u5316\u3055\u308c\u305f\u65b9\u6cd5\u3067\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3082\u306e\u304b\u3089\u306b\u9650\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u7d4c\u9a13\u8c4a\u5bcc\u306aAppSec\u306e\u5c02\u9580\u5bb6\u306b\u8a71\u3092\u805e\u3051\u3070\u3001\u307e\u3060\u30c7\u30fc\u30bf\u306b\u306f\u306a\u3044\u767a\u898b\u3084\u50be\u5411\u306b\u3064\u3044\u3066\u6559\u3048\u3066\u304f\u308c\u308b\u3067\u3057\u3087\u3046\u3002\u3068\u306f\u3044\u3048\u7279\u5b9a\u306e\u8106\u5f31\u6027\u30bf\u30a4\u30d7\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\u624b\u6cd5\u3092\u958b\u767a\u3059\u308b\u306e\u306b\u306f\u6642\u9593\u304c\u5fc5\u8981\u3067\u3059\u3002\u305d\u306e\u30c6\u30b9\u30c8\u3092\u81ea\u52d5\u5316\u3057\u3001\u591a\u304f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u81ea\u52d5\u7684\u306b\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u306e\u306f\u3001\u3055\u3089\u306b\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u30c7\u30fc\u30bf\u304b\u3089\u904e\u53bb\u3092\u632f\u308a\u8fd4\u308b\u3060\u3051\u3067\u306f\u9650\u754c\u304c\u3042\u308a\u3001\u30c7\u30fc\u30bf\u306b\u306f\u306a\u3044\u6628\u5e74\u306e\u30c8\u30ec\u30f3\u30c9\u3092\u898b\u843d\u3068\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u305d\u306e\u305f\u3081\u3001\u4e0d\u5b8c\u5168\u3068\u3082\u3044\u3048\u308b\u30c7\u30fc\u30bf\u306e\u7d50\u679c\u304b\u3089\u306e\u30ab\u30c6\u30b4\u30ea\u9078\u5b9a\u306f10\u9805\u76ee\u306e\u3046\u30618\u9805\u76ee\u306b\u7559\u3081\u3066\u3044\u307e\u3059\u3002\u6b8b\u308a\u306e2\u3064\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306f\u3001\u30c8\u30c3\u30d710\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u8abf\u67fb\u306b\u3088\u3063\u3066\u9078\u3073\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001\u6700\u524d\u7dda\u3067\u5b9f\u969b\u306b\u6d3b\u8e8d\u3055\u308c\u3066\u3044\u308b\u65b9\u3005\u304c\u3001\u6700\u3082\u9ad8\u3044\u30ea\u30b9\u30af\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u30c7\u30fc\u30bf\u306b\u306f\u73fe\u308c\u306a\u3044\u3067\u3042\u308d\u3046\uff08\u30c7\u30fc\u30bf\u3067\u306f\u8868\u3057\u3088\u3046\u3082\u306a\u3044\uff09\u3068\u601d\u308f\u308c\u308b\u3082\u306e\u3092\u9078\u3093\u3067\u304f\u308c\u305f\u3082\u306e\u3067\u3059\u3002</p>"},{"location":"ja/A00_2021_Introduction/#_6","title":"\u983b\u5ea6\u3067\u306f\u306a\u304f\u3001\u767a\u751f\u7387\u3092\u57fa\u6e96\u3068\u3057\u305f\u7406\u7531","text":"<p>\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306f\u4e3b\u306b3\u3064\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001HaT\uff08Human-assisted Tooling:\u4eba\u9593\u63f4\u52a9\u578b\u81ea\u52d5\u30c6\u30b9\u30c8\uff09\u3001TaH\uff08Tool-assisted Human:\u30c4\u30fc\u30eb\u3092\u5229\u7528\u3057\u305f\u624b\u52d5\u30c6\u30b9\u30c8\uff09\u3001\u305d\u3057\u3066Raw Tooling:\u5b8c\u5168\u81ea\u52d5\u30c6\u30b9\u30c8\u3068\u540d\u4ed8\u3051\u307e\u3057\u305f\u3002</p> <p>\u81ea\u52d5\u30c6\u30b9\u30c8\u3068HaT\u306f\u9ad8\u983b\u5ea6\u767a\u898b\u751f\u6210\u6a5f\u3067\u3059\u3002\u3053\u308c\u3089\u306f\u3001\u7279\u5b9a\u306e\u8106\u5f31\u6027\u306b\u5bfe\u3057\u3066\u3001\u305d\u306e\u8106\u5f31\u6027\u3092\u6301\u3064\u3059\u3079\u3066\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u3067\u304d\u308b\u9650\u308a\u898b\u3064\u3051\u3088\u3046\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u305f\u3081\u3001\u3044\u304f\u3064\u304b\u306e\u8106\u5f31\u6027\u306e\u30bf\u30a4\u30d7\u306b\u3064\u3044\u3066\u9ad8\u3044\u767a\u898b\u6570\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0\u3092\u4f8b\u306b\u3057\u307e\u3059\u3068\u3001\u3053\u306e\u8106\u5f31\u6027\u306f\u901a\u5e38\u3001\u8efd\u5fae\u3067\u5b64\u7acb\u3057\u305f\u30df\u30b9\u306b\u3088\u308b\u3082\u306e\u3068\u30b7\u30b9\u30c6\u30e0\u7684\u306a\u554f\u984c\u306b\u3088\u308b\u3082\u306e\u3001\u306e2\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002\u30b7\u30b9\u30c6\u30e0\u7684\u306a\u554f\u984c\u3067\u3042\u308b\u5834\u5408\u3001\u5358\u4e00\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u767a\u898b\u6570\u304c\u6570\u5343\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3067\u4ed6\u306e\u30ec\u30dd\u30fc\u30c8\u3084\u30c7\u30fc\u30bf\u304b\u3089\u767a\u898b\u3055\u308c\u305f\u4ed6\u306e\u307b\u3068\u3093\u3069\u306e\u8106\u5f31\u6027\u304c\u57cb\u3082\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p> <p>\u4e00\u65b9\u3001TaH\u3067\u306f\u3001\u3088\u308a\u5e45\u5e83\u3044\u7a2e\u985e\u306e\u8106\u5f31\u6027\u3092\u767a\u898b\u3057\u307e\u3059\u304c\u3001\u6642\u9593\u306e\u5236\u7d04\u4e0a\u3001\u767a\u898b\u983b\u5ea6\u306f\u304b\u306a\u308a\u4f4e\u304f\u306a\u308a\u307e\u3059\u3002\u4eba\u9593\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30c6\u30b9\u30c8\u3057\u3066\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0\u3068\u3044\u3063\u305f\u3082\u306e\u3092\u767a\u898b\u3057\u305f\u5834\u5408\u3001\u901a\u5e383\u3064\u304b4\u3064\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u767a\u898b\u3057\u3066\u5207\u308a\u4e0a\u3052\u307e\u3059\u3002\u3053\u306e\u6642\u70b9\u3067\u30b7\u30b9\u30c6\u30e0\u7684\u306a\u767a\u898b\u3092\u5224\u65ad\u3057\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u306e\u30b9\u30b1\u30fc\u30eb\u3067\u4fee\u6b63\u3059\u308b\u305f\u3081\u306e\u63a8\u5968\u4e8b\u9805\u3068\u3068\u3082\u306b\u3001\u30ec\u30dd\u30fc\u30c8\u3092\u66f8\u304d\u4e0a\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u306f(\u305d\u308c\u306b\u304b\u3051\u308b\u6642\u9593\u3082)\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002</p> <p>\u3053\u306e2\u3064\u306e\u7570\u306a\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u53d6\u308a\u51fa\u3057\u3066\u3001\u983b\u5ea6\u306e\u89b3\u70b9\u3067\u30de\u30fc\u30b8\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u3057\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u3001\u81ea\u52d5\u30c6\u30b9\u30c8\u3068HaT\u306e\u30c7\u30fc\u30bf\u3067\u3001\u3088\u308a\u6b63\u78ba\u3067\uff08\u305f\u3060\u3057\u5e83\u304f\u8584\u3044\uff09TaH\u306e\u30c7\u30fc\u30bf\u3092\u57cb\u3082\u308c\u3066\u3057\u307e\u3046\u3067\u3057\u3087\u3046\u3002\u3053\u308c\u304c\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0\u306e\u3088\u3046\u306b\u3001\u5f71\u97ff\u306f\u4e00\u822c\u7684\u306b\u5c0f\u3055\u3044\u304b\u4e2d\u7a0b\u5ea6\u3067\u3042\u308b\u3088\u3046\u306a\u3082\u306e\u304c\u3001\u591a\u304f\u306e\u30ea\u30b9\u30c8\u306b\u304a\u3044\u3066\u9ad8\u3044\u9806\u4f4d\u306b\u6319\u3052\u3089\u308c\u3066\u3044\u308b\u7406\u7531\u306e\u4e00\u3064\u3067\u3059\u3002\u3064\u307e\u308a\u307e\u3055\u3057\u304f\u767a\u898b\u304c\u975e\u5e38\u306b\u591a\u3044\u304b\u3089\u3067\u3059\u3002(\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0\u306f\u30c6\u30b9\u30c8\u3082\u3057\u3084\u3059\u3044\u306e\u3067\u3001\u305d\u308c\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\u3082\u591a\u304f\u884c\u308f\u308c\u3066\u3044\u307e\u3059\uff09\u3002</p> <p>2017\u5e74\u306b\u306f\u3001\u30c7\u30fc\u30bf\u3092\u6539\u3081\u3066\u898b\u76f4\u3057\u81ea\u52d5\u30c6\u30b9\u30c8\u53ca\u3073HaT\u306e\u30c7\u30fc\u30bf\u3092TaH\u306e\u30c7\u30fc\u30bf\u3068\u304d\u308c\u3044\u306b\u7d71\u5408\u3059\u308b\u305f\u3081\u306b\u3001\u4ee3\u308f\u308a\u306b\u767a\u751f\u7387\u3092\u7528\u3044\u308b\u3053\u3068\u3092\u5c0e\u5165\u3057\u307e\u3057\u305f\u3002\u767a\u751f\u7387\u3068\u306f\u3001\u3042\u308b\u8106\u5f31\u6027\u30bf\u30a4\u30d7\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4e00\u3064\u4ee5\u4e0a\u6301\u3063\u3066\u3044\u305f\u3082\u306e\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6bcd\u96c6\u56e3\u306e\u3046\u3061\u4f55\uff05\u3044\u305f\u304b\u3092\u78ba\u8a8d\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u5358\u767a\u7684\u306a\u3082\u306e\u304b\u30b7\u30b9\u30c6\u30e0\u7684\u306a\u3082\u306e\u304b\u306f\u6c17\u306b\u3057\u307e\u305b\u3093\u3002\u305d\u308c\u306f\u79c1\u305f\u3061\u306e\u76ee\u7684\u306b\u5f71\u97ff\u3057\u306a\u3044\u304b\u3089\u3067\u3059\u3002\u3064\u307e\u308a\u5c11\u306a\u304f\u3068\u30821\u3064\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6301\u3064\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6570\u304c\u5206\u304b\u308c\u3070\u3088\u3044\u3060\u3051\u306a\u306e\u3067\u3059\u3002\u3053\u308c\u306f\u3001\u9ad8\u983b\u5ea6\u306e\u7d50\u679c\u3067\u30c7\u30fc\u30bf\u3092\u57cb\u3082\u308c\u3055\u305b\u308b\u3053\u3068\u306a\u304f\u3001\u8907\u6570\u306e\u30c6\u30b9\u30c8\u30bf\u30a4\u30d7\u306b\u307e\u305f\u304c\u308b\u30c6\u30b9\u30c8\u306e\u6240\u898b\u3092\u3088\u308a\u660e\u78ba\u306b\u793a\u3059\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u30ea\u30b9\u30af\u5206\u6790\u89b3\u70b9\u3068\u3057\u3066\u3001\u653b\u6483\u8005\u306f\u305f\u3063\u305f1\u3064\u306e\u8106\u5f31\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u3042\u308a\u3055\u3048\u3059\u308c\u3070\u3001\u30ab\u30c6\u30b4\u30ea\u3092\u7d4c\u7531\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u653b\u6483\u6210\u529f\u3067\u304d\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u306b\u3082\u3042\u305f\u308a\u307e\u3059\u3002 </p>"},{"location":"ja/A00_2021_Introduction/#_7","title":"\u30c7\u30fc\u30bf\u306e\u53ce\u96c6\u3068\u5206\u6790\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u3064\u3044\u3066","text":"<p>2017\u5e74\u306e\u30aa\u30fc\u30d7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b5\u30df\u30c3\u30c8\u3067OWASP Top 10\u306e\u30c7\u30fc\u30bf\u53ce\u96c6\u30d7\u30ed\u30bb\u30b9\u3092\u6b63\u5f0f\u5316\u3057\u307e\u3057\u305f\u3002OWASP Top 10\u306e\u30ea\u30fc\u30c0\u30fc\u3068\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306f\u30012\u65e5\u9593\u304b\u3051\u3066\u900f\u660e\u6027\u306e\u3042\u308b\u30c7\u30fc\u30bf\u53ce\u96c6\u30d7\u30ed\u30bb\u30b9\u3092\u6b63\u5f0f\u5316\u3059\u308b\u3053\u3068\u306b\u53d6\u308a\u7d44\u307f\u307e\u3057\u305f\u30022021\u5e74\u7248\u306f\u3001\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u5229\u7528\u3057\u305f2\u56de\u76ee\u306e\u53d6\u308a\u7d44\u307f\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u79c1\u305f\u3061\u306f\u3001\u30bd\u30fc\u30b7\u30e3\u30eb\u30e1\u30c7\u30a3\u30a2\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u901a\u3058\u3066\u3001OWASP\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068OWASP\u306eGithub\u4e21\u65b9\u3067\u30c7\u30fc\u30bf\u306e\u52df\u96c6\u3092\u516c\u8868\u3057\u3066\u3044\u307e\u3059\u3002OWASP\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001\u79c1\u305f\u3061\u304c\u6c42\u3081\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u8981\u7d20\u3084\u69cb\u9020\u3001\u305d\u3057\u3066\u63d0\u51fa\u65b9\u6cd5\u3092\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u3002GitHub\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u306a\u308b\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u7d44\u7e54\u3068\u5354\u529b\u3057\u3001\u69cb\u9020\u306e\u89e3\u6790\u3084CWE\u3078\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>\u30d9\u30f3\u30c0\u30fc\u306e\u30c6\u30b9\u30c8\u696d\u52d9\u3092\u751f\u696d\u3068\u3059\u308b\u7d44\u7e54\u3001\u30d0\u30b0\u30d0\u30a6\u30f3\u30c6\u30a3\u30d9\u30f3\u30c0\u30fc\u3001\u793e\u5185\u306e\u30c7\u30fc\u30bf\u30c6\u30b9\u30c8\u7d50\u679c\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u305f\u7d44\u7e54\u306a\u3069\u304b\u3089\u30c7\u30fc\u30bf\u3092\u5165\u624b\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u3092\u5165\u624b\u3057\u305f\u3089\u3001\u305d\u308c\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u3069\u306e\u3088\u3046\u306aCWE\u304c\u3069\u306e\u30ea\u30b9\u30af\u30ab\u30c6\u30b4\u30ea\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u308b\u304b\u3092\u6839\u672c\u7684\u306b\u5206\u6790\u3057\u307e\u3059\u3002CWE\u306e\u4e2d\u306b\u306f\u30ea\u30b9\u30af\u30ab\u30c6\u30b4\u30ea\u304c\u91cd\u8907\u3057\u3066\u3044\u308b\u3082\u306e\u3082\u3042\u308c\u3070\u3001\u975e\u5e38\u306b\u5bc6\u63a5\u306b\u5225\u306e\u30ea\u30b9\u30af\u30ab\u30c6\u30b4\u30ea\u306b\u95a2\u9023\u3057\u3066\u3044\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\uff08\u4f8b\uff1a\u6697\u53f7\u306e\u8106\u5f31\u6027\uff09\u3002\u63d0\u51fa\u3055\u308c\u305f\u751f\u30c7\u30fc\u30bf\u306b\u95a2\u3059\u308b\u6c7a\u5b9a\u306f\u3059\u3079\u3066\u6587\u66f8\u5316\u3055\u308c\u3001\u30aa\u30fc\u30d7\u30f3\u3068\u306a\u308b\u3088\u3046\u516c\u958b\u3057\u3001\u30c7\u30fc\u30bf\u3092\u3069\u306e\u3088\u3046\u306b\u6b63\u898f\u5316\u3057\u305f\u304b\u306b\u3064\u3044\u3066\u900f\u660e\u6027\u306e\u3042\u308b\u3082\u306e\u3068\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u30c8\u30c3\u30d710\u306b\u542b\u3081\u308b\u305f\u3081\u306b\u3001\u767a\u751f\u7387\u306e\u9ad8\u30448\u3064\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u3092\u8abf\u3079\u307e\u3059\u3002\u307e\u305f\u3001\u30c8\u30c3\u30d710\u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30a2\u30f3\u30b1\u30fc\u30c8\u7d50\u679c\u3092\u898b\u3066\u3001\u3059\u3067\u306b\u30c7\u30fc\u30bf\u3068\u3057\u3066\u78ba\u8a8d\u3067\u304d\u3066\u3044\u308b\u3067\u3042\u308d\u3046\u3082\u306e\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u305d\u3046\u3057\u3066\u30c7\u30fc\u30bf\u304b\u3089\u306f\u78ba\u8a8d\u3067\u304d\u306a\u304b\u3063\u305f\u4e0a\u4f4d2\u3064\u3092\u3001Top10\u306e\u6b8b\u308a\u306e2\u7b87\u6240\u306b\u9078\u3073\u307e\u3059\u300210\u500b\u3059\u3079\u3066\u304c\u9078\u3070\u308c\u305f\u3089\u3001\u30c8\u30c3\u30d710\u3092\u30ea\u30b9\u30af\u306b\u57fa\u3065\u304f\u9806\u5e8f\u3067\u30e9\u30f3\u30af\u4ed8\u3051\u3059\u308b\u306e\u306b\u5f79\u7acb\u3066\u308b\u3079\u304f\u3001\u60aa\u7528\u306e\u3057\u3084\u3059\u3055\u3068\u5f71\u97ff\u306b\u95a2\u3059\u308b\u4e00\u822c\u8981\u7d20\u3092\u3042\u3066\u306f\u3081\u307e\u3057\u305f\u3002</p>"},{"location":"ja/A00_2021_Introduction/#_8","title":"\u7528\u8a9e\u96c6","text":"<p>\u30c8\u30c3\u30d710\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u305d\u308c\u305e\u308c\u306e\u4e2d\u306b\u3042\u308b\u4e0b\u8a18\u7528\u8a9e\u306b\u3064\u3044\u3066\u3001\u610f\u5473\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002</p> <ul> <li>CWEs Mapped(\u30ab\u30c6\u30b4\u30ea\u306b\u3042\u305f\u308bCWE\u306e\u6570): Top10\u30c1\u30fc\u30e0\u304c\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u305fCWE\u306e\u6570\u3067\u3059\u3002</li> <li>Incidence Rate(\u767a\u751f\u7387): \u767a\u751f\u7387\u3068\u306f\u3001\u5f53\u5e74\u306b\u6a5f\u95a2\u306b\u3088\u3063\u3066\u30c6\u30b9\u30c8\u3055\u308c\u305f\u6bcd\u96c6\u56e3\u306e\u3046\u3061\u3001\u30ab\u30c6\u30b4\u30ea\u306b\u30de\u30c3\u30d7\u3055\u308c\u305fCWE\u306b\u8106\u5f31\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5272\u5408\u3092\u793a\u3057\u307e\u3059\u3002</li> <li>(Testing) Coverage(\u30c6\u30b9\u30c8)\u7db2\u7f85\u7bc4\u56f2: \u30ab\u30c6\u30b4\u30ea\u306b\u30de\u30c3\u30d7\u3055\u308c\u305fCWE\u306b\u5bfe\u3057\u3066\u3001\u6a5f\u95a2\u304c\u30c6\u30b9\u30c8\u3067\u304d\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7bc4\u56f2\u3002</li> <li>Weighted Exploit(\u91cd\u307f\u4ed8\u3051\u3055\u308c\u305f\u60aa\u7528\u6027): CVE\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308bCVSSv2\u304a\u3088\u3073CVSSv3\u30b9\u30b3\u30a2\u306e\u60aa\u7528\u6027\u30b5\u30d6\u30b9\u30b3\u30a2\u3092\u6b63\u898f\u5316\u3057\u300110pt\u306e\u30b9\u30b1\u30fc\u30eb\u3067\u8868\u793a\u3057\u305f\u3082\u306e\u3067\u3059\u3002</li> <li>Weighted Impact(\u91cd\u307f\u4ed8\u3051\u3055\u308c\u305f\u5f71\u97ff\u5ea6): CVE\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308bCVSSv2\u304a\u3088\u3073CVSSv3\u30b9\u30b3\u30a2\u306e\u5f71\u97ff\u30b5\u30d6\u30b9\u30b3\u30a2\u3092\u6b63\u898f\u5316\u3057\u300110pt\u306e\u30b9\u30b1\u30fc\u30eb\u3067\u8868\u793a\u3057\u305f\u3082\u306e\u3067\u3059\u3002</li> <li>Total Occurrences(\u7dcf\u767a\u751f\u6570): \u30ab\u30c6\u30b4\u30ea\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u305fCWE\u3092\u6301\u3064\u3053\u3068\u304c\u5224\u660e\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7dcf\u6570\u3067\u3059\u3002</li> <li>Total CVEs(CVE\u5408\u8a08\u6570): \u30ab\u30c6\u30b4\u30ea\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u305fCWE\u306b\u8a72\u5f53\u3059\u308b\u3001NVD DB\u5185\u306eCVE\u306e\u7dcf\u6570\u3067\u3059\u3002</li> </ul>"},{"location":"ja/A00_2021_Introduction/#_9","title":"\u30c7\u30fc\u30bf\u8ca2\u732e\u8005\u3078\u306e\u8b1d\u8f9e","text":"<p>\u3053\u306e\u6700\u3082\u5927\u898f\u6a21\u3067\u5305\u62ec\u7684\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u308a\u4e0a\u3052\u308b\u305f\u3081\u306b\u3001\uff08\u4f55\u540d\u304b\u306e\u533f\u540d\u306e\u63d0\u4f9b\u8005\u3068\u3068\u3082\u306b\uff09\u4ee5\u4e0b\u306e\u7d44\u7e54\u306b\u306f 50,000 \u3092\u8d85\u3048\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u95a2\u3059\u308b\u30c7\u30fc\u30bf\u3092\u63d0\u4f9b\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002 \u3053\u308c\u306f\u7686\u69d8\u306e\u3054\u5354\u529b\u306a\u304f\u3057\u3066\u306f\u6210\u3057\u5f97\u307e\u305b\u3093\u3067\u3057\u305f\u3002</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"ja/A00_2021_Introduction/#_10","title":"\u30b9\u30dd\u30f3\u30b5\u30fc\u306e\u65b9\u3078\u306e\u8b1d\u8f9e","text":"<p>OWASP Top 10 2021 \u30c1\u30fc\u30e0\u306f\u3001\u8cc7\u91d1\u9762\u3067\u306e\u63f4\u52a9\u3092\u3044\u305f\u3060\u3044\u305f Secure Code Warrior \u304a\u3088\u3073 Just Eat \u306b\u5fc3\u3088\u308a\u611f\u8b1d\u3044\u305f\u3057\u307e\u3059\u3002</p> <p> </p> <p></p>"},{"location":"ja/A01_2021-Broken_Access_Control/","title":"A01:2021 \u2013 \u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u4e0d\u5099","text":""},{"location":"ja/A01_2021-Broken_Access_Control/#_1","title":"\u56e0\u5b50","text":"\u5bfe\u5fdc\u3059\u308b CWE \u6570 \u6700\u5927\u767a\u751f\u7387 \u5e73\u5747\u767a\u751f\u7387 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306e\u96e3\u6613\u5ea6\uff09 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306b\u3088\u308b\u5f71\u97ff\uff09 \u6700\u5927\u7db2\u7f85\u7387 \u5e73\u5747\u7db2\u7f85\u7387 \u7dcf\u767a\u751f\u6570 CVE \u5408\u8a08\u4ef6\u6570 34 55.97% 3.81% 6.92 5.93 94.55% 47.72% 318,487 19,013"},{"location":"ja/A01_2021-Broken_Access_Control/#_2","title":"\u6982\u8981","text":"<p>\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u4e0d\u5099\u306f\u30015\u4f4d\u304b\u3089\u9806\u4f4d\u3092\u4e0a\u3052\u307e\u3057\u305f\u3002 94%\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f55\u3089\u304b\u306e\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u4e0d\u5099\u304c\u78ba\u8a8d\u3055\u308c\u3001\u5e73\u5747\u767a\u751f\u73873.81%\u306731.8\u4e07\u3092\u8d85\u3048\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4e2d\u3067\u6700\u3082\u591a\u304f\u767a\u751f\u3057\u307e\u3057\u305f\u3002 \u6ce8\u76ee\u3059\u3079\u304d\u5171\u901a\u8106\u5f31\u6027\u5217\u6319 (CWE)\u306f\u3001CWE-200:\u8a8d\u8a3c\u3055\u308c\u3066\u3044\u306a\u3044\u52d5\u4f5c\u4e3b\u4f53\u3078\u306e\u60c5\u5831\u9732\u51fa\u3001 CWE-201:\u9001\u4fe1\u30c7\u30fc\u30bf\u3092\u901a\u3058\u305f\u60c5\u5831\u9732\u51fa\u3001\u305d\u3057\u3066CWE-352:\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30ea\u30af\u30a8\u30b9\u30c8\u30d5\u30a9\u30fc\u30b8\u30a7\u30ea\u3067\u3059\u3002</p>"},{"location":"ja/A01_2021-Broken_Access_Control/#_3","title":"\u8aac\u660e","text":"<p>\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306f\u3001\u30e6\u30fc\u30b6\u306b\u5bfe\u3057\u3066\u4e88\u3081\u4e0e\u3048\u3089\u308c\u305f\u6a29\u9650\u304b\u3089\u5916\u308c\u305f\u884c\u52d5\u3092\u3057\u306a\u3044\u3088\u3046\u306b\u30dd\u30ea\u30b7\u30fc\u3092\u9069\u7528\u3059\u308b\u3082\u306e\u3067\u3059\u3002\u30dd\u30ea\u30b7\u30fc\u9069\u7528\u306e\u5931\u6557\u306b\u3088\u308a\u3001\u8a31\u53ef\u3055\u308c\u3066\u3044\u306a\u3044\u60c5\u5831\u306e\u516c\u958b\u3001\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u306e\u5909\u66f4\u307e\u305f\u306f\u7834\u58ca\u3001\u307e\u305f\u306f\u30e6\u30fc\u30b6\u5236\u9650\u304b\u3089\u5916\u308c\u305f\u30d3\u30b8\u30cd\u30b9\u6a5f\u80fd\u306e\u5b9f\u884c\u304c\u5f15\u304d\u8d77\u3053\u3055\u308c\u307e\u3059\u3002\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u8106\u5f31\u6027\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u591a\u304f\u307f\u3089\u308c\u307e\u3059:</p> <ul> <li> <p>\u7279\u5b9a\u306e\u80fd\u529b\u3001\u5f79\u5272\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u3079\u304d\u3067\u3042\u308b\u306e\u306b\u3001\u6700\u5c0f\u6a29\u9650\u306e\u539f\u5247\u307e\u305f\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u62d2\u5426\u306e\u539f\u5247\u306b\u53cd\u3057\u3066\u8ab0\u3067\u3082\u30a2\u30af\u30bb\u30b9\u3067\u304d\u3066\u3057\u307e\u3046\u3002</p> </li> <li> <p>URL (\u30d1\u30e9\u30e1\u30fc\u30bf\u30fb\u30bf\u30f3\u30d1\u30ea\u30f3\u30b0\u307e\u305f\u306f\u5f37\u5236\u30d6\u30e9\u30a6\u30b8\u30f3\u30b0) \u3001\u5185\u90e8\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u3001HTML\u30da\u30fc\u30b8\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3084API\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u66f8\u304d\u63db\u3048\u308b\u653b\u6483\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u30c1\u30a7\u30c3\u30af\u3092\u8fc2\u56de\u3067\u304d\u3066\u3057\u307e\u3046\u3002</p> </li> <li> <p>\u4e00\u610f\u306e\u8b58\u5225\u5b50\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u4ed6\u4eba\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u95b2\u89a7\u3084\u7de8\u96c6\u3092\u8a31\u53ef\u3055\u308c\u3066\u3057\u307e\u3046\u3002 (\u5b89\u5168\u3067\u306a\u3044\u76f4\u63a5\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u53c2\u7167)</p> </li> <li> <p>POST\u3001PUT\u3001DELETE\u306e\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u304c\u306a\u3044API\u3078\u30a2\u30af\u30bb\u30b9\u304c\u3067\u304d\u3066\u3057\u307e\u3046\u3002</p> </li> <li> <p>\u6a29\u9650\u6607\u683c\u3002\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3053\u3068\u306a\u3057\u306b\u30e6\u30fc\u30b6\u3068\u3057\u3066\u884c\u52d5\u3057\u305f\u308a\u3001\u4e00\u822c\u30e6\u30fc\u30b6\u3068\u3057\u3066\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u6642\u306b\u7ba1\u7406\u8005\u3068\u3057\u3066\u884c\u52d5\u3067\u304d\u3066\u3057\u307e\u3046\u3002</p> </li> <li> <p>\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u64cd\u4f5c\u3002JSON Web Token\uff08JWT\uff09\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u30c8\u30fc\u30af\u30f3\u3084\u6a29\u9650\u6607\u683c\u3059\u308b\u305f\u3081\u306b\u64cd\u4f5c\u3055\u308c\u308bCookie\u3084hidden\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u518d\u751f\u6210\u307e\u305f\u306f\u6539\u3056\u3093\u3067\u304d\u305f\u308a\u3001JWT\u306e\u7121\u52b9\u5316\u3092\u60aa\u7528\u3067\u304d\u308b\u306a\u3069\u3002</p> </li> <li> <p>CORS\u306e\u8aa4\u8a2d\u5b9a\u306b\u3088\u3063\u3066\u8a8d\u53ef\u3055\u308c\u3066\u3044\u306a\u3044/\u4fe1\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u30aa\u30ea\u30b8\u30f3\u304b\u3089\u306eAPI\u30a2\u30af\u30bb\u30b9\u304c\u8a31\u53ef\u3055\u308c\u3066\u3057\u307e\u3046\u3002</p> </li> <li> <p>\u8a8d\u8a3c\u3055\u308c\u3066\u3044\u306a\u3044\u30e6\u30fc\u30b6\u3092\u8981\u8a8d\u8a3c\u30da\u30fc\u30b8\u3078\u3001\u4e00\u822c\u30e6\u30fc\u30b6\u3092\u8981\u6a29\u9650\u30da\u30fc\u30b8\u3078\u5f37\u5236\u30d6\u30e9\u30a6\u30ba\u3067\u304d\u3066\u3057\u307e\u3046\u3002\u3082\u3057\u304f\u306f\u901a\u5e38\u306e\u30e6\u30fc\u30b6\u304c\u7279\u6a29\u7684\u306a\u30da\u30fc\u30b8\u3078\u5f37\u5236\u30d6\u30e9\u30a6\u30ba\u3067\u304d\u3066\u3057\u307e\u3046\u3002</p> </li> </ul>"},{"location":"ja/A01_2021-Broken_Access_Control/#_4","title":"\u9632\u6b62\u65b9\u6cd5","text":"<p>\u653b\u6483\u8005\u304c\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u30c1\u30a7\u30c3\u30af\u3084\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305a\u3001\u4fe1\u983c\u3067\u304d\u308b\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306e\u30b3\u30fc\u30c9\u307e\u305f\u306f\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9API\u3067\u5b9f\u65bd\u3055\u308c\u308b\u5834\u5408\u306b\u3088\u3063\u3066\u306e\u307f\u3001\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u304c\u6a5f\u80fd\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <ul> <li> <p>\u516c\u958b\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u9664\u3044\u3066\u3001\u30a2\u30af\u30bb\u30b9\u3092\u539f\u5247\u3068\u3057\u3066\u62d2\u5426\u3059\u308b\u3002</p> </li> <li> <p>\u30aa\u30ea\u30b8\u30f3\u9593\u30ea\u30bd\u30fc\u30b9\u5171\u6709 (CORS) \u306e\u4f7f\u7528\u7b87\u6240\u3092\u6700\u5c0f\u9650\u306b\u6291\u3048\u308b\u306a\u3069\u3001\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u4e00\u304b\u6240\u3067\u5b9f\u88c5\u3057\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3067\u305d\u308c\u3092\u518d\u5229\u7528\u3059\u308b\u3002</p> </li> <li> <p>\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u30e2\u30c7\u30eb\u306f\u3001\u30e6\u30fc\u30b6\u304c\u3069\u306e\u3088\u3046\u306a\u30ec\u30b3\u30fc\u30c9\u3067\u3082\u4f5c\u6210\u3001\u8aad\u53d6\u3001\u66f4\u65b0\u3001\u307e\u305f\u306f\u524a\u9664\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30ec\u30b3\u30fc\u30c9\u306e\u6240\u6709\u6a29\u304c\u3042\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002</p> </li> <li> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72ec\u81ea\u306e\u30d3\u30b8\u30cd\u30b9\u4e0a\u306e\u5236\u7d04\u8981\u6c42\u306f\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306b\u3088\u3063\u3066\u8868\u73fe\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002</p> </li> <li> <p>Web\u30b5\u30fc\u30d0\u30fc\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30ea\u30b9\u30c6\u30a3\u30f3\u30b0\u3092\u7121\u52b9\u306b\u3057\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\uff08.git\u306a\u3069\uff09\u3084\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u304cWeb\u306e\u7d4c\u8def\u4e0a\u306b\u5b58\u5728\u3057\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002</p> </li> <li> <p>\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u5931\u6557\u3092\u30ed\u30b0\u306b\u8a18\u9332\u3057\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u7ba1\u7406\u8005\u306b\u8b66\u544a\u3059\u308b\uff08\u7e70\u308a\u8fd4\u3057\u5931\u6557\u3057\u3066\u3044\u308b\u306a\u3069\uff09\u3002</p> </li> <li> <p>\u30ec\u30fc\u30c8\u5236\u9650\u3059\u308bAPI\u3068\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306f\u81ea\u52d5\u653b\u6483\u30c4\u30fc\u30eb\u306b\u3088\u308b\u88ab\u5bb3\u3092\u6700\u5c0f\u9650\u306b\u6291\u3048\u308b\u305f\u3081\u306e\u624b\u6bb5\u3067\u3042\u308b\u3002</p> </li> <li> <p>\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u306a\u30bb\u30c3\u30b7\u30e7\u30f3\u8b58\u5225\u5b50\u306f\u3001\u30ed\u30b0\u30a2\u30a6\u30c8\u5f8c\u306b\u306f\u30b5\u30fc\u30d0\u30fc\u4e0a\u3067\u7121\u52b9\u3068\u3055\u308c\u308b\u3079\u304d\u3067\u3042\u308b\u3002\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306aJWT\u30c8\u30fc\u30af\u30f3\u306f\u3001\u653b\u6483\u8005\u306e\u6a5f\u4f1a\u3092\u6700\u5c0f\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u3080\u3057\u308d\u77ed\u547d\u3067\u3042\u308b\u3079\u304d\u3067\u3042\u308b\u3002\u5bff\u547d\u306e\u9577\u3044JWT\u306e\u5834\u5408\u306f\u3001\u30a2\u30af\u30bb\u30b9\u3092\u53d6\u308a\u6d88\u3059\u305f\u3081\u306bOAuth\u6a19\u6e96\u306b\u5f93\u3046\u3053\u3068\u304c\u5f37\u304f\u63a8\u5968\u3055\u308c\u308b\u3002</p> </li> </ul> <p>\u958b\u767a\u8005\u3068QA\u30b9\u30bf\u30c3\u30d5\u306f\u3001\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306b\u95a2\u3059\u308b\u6a5f\u80fd\u9762\u3067\u306e\u5358\u4f53\u53ca\u3073\u7d50\u5408\u30c6\u30b9\u30c8\u3092\u53d6\u308a\u5165\u308c\u308b\u3079\u304d\u3067\u3059\u3002</p>"},{"location":"ja/A01_2021-Broken_Access_Control/#_5","title":"\u653b\u6483\u30b7\u30ca\u30ea\u30aa\u306e\u4f8b","text":"<p>\u30b7\u30ca\u30ea\u30aa #1: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u3001\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308bSQL\u547c\u51fa\u3057\u306b\u672a\u691c\u8a3c\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002</p> <pre><code> pstmt.setString(1, request.getParameter(\"acct\"));\n ResultSet results = pstmt.executeQuery( );\n</code></pre> <p>\u653b\u6483\u8005\u306f\u3001\u5358\u306b\u30d6\u30e9\u30a6\u30b6\u3067\u30d1\u30e9\u30e1\u30fc\u30bf'acct'\u3092\u4efb\u610f\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u756a\u53f7\u306b\u6539\u5909\u3057\u3066\u9001\u4fe1\u3057\u307e\u3059\u3002\u9069\u5207\u306a\u691c\u8a3c\u304c\u306a\u3044\u5834\u5408\u3001\u653b\u6483\u8005\u306f\u4efb\u610f\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002</p> <pre><code> https://example.com/app/accountInfo?acct=notmyacct\n</code></pre> <p>\u30b7\u30ca\u30ea\u30aa #2: \u3042\u308b\u653b\u6483\u8005\u306f\u3001\u30d6\u30e9\u30a6\u30b6\u3067URL\u3092\u6307\u5b9a\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\u7ba1\u7406\u8005\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u7ba1\u7406\u8005\u6a29\u9650\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <pre><code> https://example.com/app/getappInfo\n https://example.com/app/admin_getappInfo\n</code></pre> <p>\u8a8d\u8a3c\u3055\u308c\u3066\u3044\u306a\u3044\u30e6\u30fc\u30b6\u304c\u3053\u308c\u3089\u306e\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306a\u3089\u3001\u6b20\u9665\u304c\u3042\u308a\u307e\u3059\u3002 \u7ba1\u7406\u8005\u3067\u306a\u3044\u4eba\u304c\u7ba1\u7406\u8005\u306e\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u306a\u3089\u3001\u305d\u308c\u3082\u6b20\u9665\u3067\u3059\u3002</p>"},{"location":"ja/A01_2021-Broken_Access_Control/#_6","title":"\u53c2\u8003\u8cc7\u6599","text":"<ul> <li> <p>OWASP Proactive Controls: Enforce Access     Controls</p> </li> <li> <p>OWASP Application Security Verification Standard: V4 Access     Control</p> </li> <li> <p>OWASP Testing Guide: Authorization     Testing</p> </li> <li> <p>OWASP Cheat Sheet: Authorization</p> </li> <li> <p>PortSwigger: Exploiting CORS     misconfiguration</p> </li> <li> <p>OAuth: Revoking Access</p> </li> </ul>"},{"location":"ja/A01_2021-Broken_Access_Control/#cwe","title":"\u5bfe\u5fdc\u3059\u308b CWE \u306e\u30ea\u30b9\u30c8","text":"<p>CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</p> <p>CWE-23 Relative Path Traversal</p> <p>CWE-35 Path Traversal: '.../...//'</p> <p>CWE-59 Improper Link Resolution Before File Access ('Link Following')</p> <p>CWE-200 Exposure of Sensitive Information to an Unauthorized Actor</p> <p>CWE-201 Exposure of Sensitive Information Through Sent Data</p> <p>CWE-219 Storage of File with Sensitive Data Under Web Root</p> <p>CWE-264 Permissions, Privileges, and Access Controls (should no longer be used)</p> <p>CWE-275 Permission Issues</p> <p>CWE-276 Incorrect Default Permissions</p> <p>CWE-284 Improper Access Control</p> <p>CWE-285 Improper Authorization</p> <p>CWE-352 Cross-Site Request Forgery (CSRF)</p> <p>CWE-359 Exposure of Private Personal Information to an Unauthorized Actor</p> <p>CWE-377 Insecure Temporary File</p> <p>CWE-402 Transmission of Private Resources into a New Sphere ('Resource Leak')</p> <p>CWE-425 Direct Request ('Forced Browsing')</p> <p>CWE-441 Unintended Proxy or Intermediary ('Confused Deputy')</p> <p>CWE-497 Exposure of Sensitive System Information to an Unauthorized Control Sphere</p> <p>CWE-538 Insertion of Sensitive Information into Externally-Accessible File or Directory</p> <p>CWE-540 Inclusion of Sensitive Information in Source Code</p> <p>CWE-548 Exposure of Information Through Directory Listing</p> <p>CWE-552 Files or Directories Accessible to External Parties</p> <p>CWE-566 Authorization Bypass Through User-Controlled SQL Primary Key</p> <p>CWE-601 URL Redirection to Untrusted Site ('Open Redirect')</p> <p>CWE-639 Authorization Bypass Through User-Controlled Key</p> <p>CWE-651 Exposure of WSDL File Containing Sensitive Information</p> <p>CWE-668 Exposure of Resource to Wrong Sphere</p> <p>CWE-706 Use of Incorrectly-Resolved Name or Reference</p> <p>CWE-862 Missing Authorization</p> <p>CWE-863 Incorrect Authorization</p> <p>CWE-913 Improper Control of Dynamically-Managed Code Resources</p> <p>CWE-922 Insecure Storage of Sensitive Information</p> <p>CWE-1275 Sensitive Cookie with Improper SameSite Attribute</p>"},{"location":"ja/A01_2021-Broken_Access_Control/#a012021-broken-access-control","title":"A01:2021 \u2013 Broken Access Control","text":""},{"location":"ja/A01_2021-Broken_Access_Control/#how-to-prevent","title":"How to Prevent","text":"<p>Access control is only effective in trusted server-side code or server-less API, where the attacker cannot modify the access control check or metadata.</p> <ul> <li> <p>Except for public resources, deny by default.</p> </li> <li> <p>Implement access control mechanisms once and re-use them throughout     the application, including minimizing Cross-Origin Resource Sharing (CORS) usage.</p> </li> <li> <p>Model access controls should enforce record ownership rather than     accepting that the user can create, read, update, or delete any     record.</p> </li> <li> <p>Unique application business limit requirements should be enforced by     domain models.</p> </li> <li> <p>Disable web server directory listing and ensure file metadata (e.g.,     .git) and backup files are not present within web roots.</p> </li> <li> <p>Log access control failures, alert admins when appropriate (e.g.,     repeated failures).</p> </li> <li> <p>Rate limit API and controller access to minimize the harm from     automated attack tooling.</p> </li> <li> <p>Stateful session identifiers should be invalidated on the server after logout.     Stateless JWT tokens should rather be short-lived so that the window of     opportunity for an attacker is minimized. For longer lived JWTs it's highly recommended to     follow the OAuth standards to revoke access.</p> </li> </ul> <p>Developers and QA staff should include functional access control unit and integration tests.</p>"},{"location":"ja/A02_2021-Cryptographic_Failures/","title":"A02:2021 \u2013 \u6697\u53f7\u5316\u306e\u5931\u6557","text":""},{"location":"ja/A02_2021-Cryptographic_Failures/#_1","title":"\u56e0\u5b50","text":"\u5bfe\u5fdc\u3059\u308b CWE \u6570 \u6700\u5927\u767a\u751f\u7387 \u5e73\u5747\u767a\u751f\u7387 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306e\u96e3\u6613\u5ea6\uff09 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306b\u3088\u308b\u5f71\u97ff\uff09 \u6700\u5927\u7db2\u7f85\u7387 \u5e73\u5747\u7db2\u7f85\u7387 \u7dcf\u767a\u751f\u6570 CVE \u5408\u8a08\u4ef6\u6570 29 46.44% 4.49% 7.29 6.81 79.33% 34.85% 233,788 3,075"},{"location":"ja/A02_2021-Cryptographic_Failures/#_2","title":"\u6982\u8981","text":"<p>\u524d\u56de\u304b\u3089\u9806\u4f4d\u3092\u4e00\u3064\u4e0a\u3052\u305f\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306f\u3001\u4ee5\u524d\u306f\u6a5f\u5fae\u306a\u60c5\u5831\u306e\u9732\u51fa\u3068\u3057\u3066\u77e5\u3089\u308c\u3066\u3044\u305f\u3082\u306e\u3067\u3059\u3002 \u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306f\u6839\u672c\u7684\u306a\u8981\u56e0\u3088\u308a\u3082\u3001\u6697\u53f7\u5316\u6280\u8853\u306e\u4e0d\u9069\u5207\u306a\u4f7f\u7528\u3001\u307e\u305f\u306f\u6697\u53f7\u5316\u306e\u6b20\u5982\u306b\u95a2\u9023\u3057\u305f\u5e45\u5e83\u3044\u969c\u5bb3\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3057\u305f\u969c\u5bb3\u306f\u3001\u6642\u306b\u6a5f\u5fae\u306a\u60c5\u5831\u306e\u9732\u51fa\u3092\u7d50\u679c\u3068\u3057\u3066\u3082\u305f\u3089\u3057\u307e\u3059\u3002 \u8003\u616e\u3059\u3079\u304d\u5171\u901a\u8106\u5f31\u6027\u30bf\u30a4\u30d7\u4e00\u89a7 (CWE)\u306b\u306f\u3001CWE-259:\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u4f7f\u7528\u3001CWE-327:\u4e0d\u9069\u5207\u306a\u6697\u53f7\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3001CWE-331:\u4e0d\u5341\u5206\u306a\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/A02_2021-Cryptographic_Failures/#_3","title":"\u8aac\u660e","text":"<p>\u307e\u305a\u3001\u9001\u4fe1\u3042\u308b\u3044\u306f\u4fdd\u5b58\u3059\u308b\u30c7\u30fc\u30bf\u304c\u4fdd\u8b77\u3092\u5fc5\u8981\u3068\u3059\u308b\u304b\u898b\u6975\u3081\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001\u30af\u30ec\u30b8\u30c3\u30c8\u30ab\u30fc\u30c9\u756a\u53f7\u3001\u5065\u5eb7\u8a18\u9332\u3001\u500b\u4eba\u30c7\u30fc\u30bf\u3084\u30d3\u30b8\u30cd\u30b9\u4e0a\u306e\u6a5f\u5bc6\u306f\u7279\u5225\u306a\u4fdd\u8b77\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u3001EU\u306e\u4e00\u822c\u30c7\u30fc\u30bf\u4fdd\u8b77\u898f\u5247(GDPR)\u306e\u3088\u3046\u306a\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u95a2\u9023\u306e\u6cd5\u5f8b\u304c\u9069\u7528\u3055\u308c\u308b\u5834\u5408\u3001\u307e\u305f\u3001PCI\u30c7\u30fc\u30bf\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9(PCI DSS)\u306a\u3069\u91d1\u878d\u306e\u60c5\u5831\u4fdd\u8b77\u306e\u8981\u6c42\u304c\u3042\u308b\u3088\u3046\u306a\u898f\u5b9a\u304c\u3042\u308b\u5834\u5408\u306b\u306f\u3001\u7279\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3059\u3079\u3066\u306b\u3064\u3044\u3066\u3001\u4ee5\u4e0b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044:</p> <ul> <li> <p>\u3069\u3093\u306a\u30c7\u30fc\u30bf\u3067\u3042\u308c\u5e73\u6587\u3067\u9001\u4fe1\u3057\u3066\u3044\u306a\u3044\u304b\u3002\u3053\u308c\u306f\u3001HTTP\u3001SMTP\u3001FTP\u3001\u3042\u308b\u3044\u306fSTARTTLS\u306e\u3088\u3046\u306aTLS upgrades\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u8a72\u5f53\u3059\u308b\u3002\u5916\u90e8\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3078\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306f\u5371\u967a\u3067\u3042\u308b\u3002\u307e\u305f\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3001Web\u30b5\u30fc\u30d0\u30fc\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b7\u30b9\u30c6\u30e0\u306a\u3069\u306e\u5185\u90e8\u306e\u901a\u4fe1\u3082\u3059\u3079\u3066\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3002</p> </li> <li> <p>\u53e4\u3044\u307e\u305f\u306f\u8106\u5f31\u306a\u6697\u53f7\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3084\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u521d\u671f\u8a2d\u5b9a\u306e\u307e\u307e\u3001\u307e\u305f\u306f\u53e4\u3044\u30b3\u30fc\u30c9\u3067\u4f7f\u3063\u3066\u3044\u306a\u3044\u304b\u3002</p> </li> <li> <p>\u521d\u671f\u5024\u306e\u307e\u307e\u306e\u6697\u53f7\u9375\u306e\u4f7f\u7528\u3001\u5f31\u3044\u6697\u53f7\u9375\u3092\u751f\u6210\u307e\u305f\u306f\u518d\u5229\u7528\u3001\u9069\u5207\u306a\u6697\u53f7\u9375\u7ba1\u7406\u307e\u305f\u306f\u9375\u306e\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u3057\u3066\u3044\u306a\u3044\u3001\u3053\u308c\u3089\u306e\u8a72\u5f53\u3059\u308b\u7b87\u6240\u306f\u306a\u3044\u304b\u3002\u6697\u53f7\u9375\u304c\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u304b\u3002</p> </li> <li> <p>HTTP\u30d8\u30c3\u30c0\u30fc\uff08\u30d6\u30e9\u30a6\u30b6\uff09\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3084\u30d8\u30c3\u30c0\u30fc\u304c\u6b20\u843d\u3057\u3066\u3044\u308b\u306a\u3069\u3001\u6697\u53f7\u5316\u304c\u5f37\u5236\u3055\u308c\u3066\u3044\u306a\u3044\u7b87\u6240\u306f\u306a\u3044\u304b\u3002</p> </li> <li> <p>\u53d7\u3051\u53d6\u3063\u305f\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u3068\u305d\u306e\u4fe1\u983c\u30c1\u30a7\u30fc\u30f3\u304c\u9069\u5207\u306b\u691c\u8a3c\u3055\u308c\u3066\u3044\u308b\u304b\u3002</p> </li> <li> <p>\u521d\u671f\u5316\u30d9\u30af\u30c8\u30eb\u304c\u7121\u8996\u3055\u308c\u305f\u308a\u3001\u518d\u5229\u7528\u3055\u308c\u305f\u308a\u3057\u3066\u3044\u306a\u3044\u304b\u3002\u307e\u305f\u3001\u6697\u53f7\u5229\u7528\u30e2\u30fc\u30c9\u306b\u3068\u3063\u3066\u5341\u5206\u306b\u30bb\u30ad\u30e5\u30a2\u3067\u306f\u306a\u3044\u72b6\u614b\u3067\u751f\u6210\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3002     ECB\u3068\u3044\u3063\u305f\u5b89\u5168\u3067\u306a\u3044\u30e2\u30fc\u30c9\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3002     \u8a8d\u8a3c\u4ed8\u304d\u6697\u53f7\u304c\u3088\u308a\u9069\u5207\u306a\u5834\u5408\u306b\u304a\u3044\u3066\u3001\u8a8d\u8a3c\u4ed8\u304d\u6697\u53f7\u3067\u306a\u3044\u6697\u53f7\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3002</p> </li> <li> <p>\u9375\u5c0e\u51fa\u95a2\u6570\u3092\u4f7f\u3046\u3053\u3068\u306a\u3057\u306b\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u6697\u53f7\u9375\u3068\u3057\u3066\u4f7f\u7528\u3057\u3066\u3044\u306a\u3044\u304b\u3002</p> </li> <li> <p>\u6697\u53f7\u5b66\u7684\u8981\u4ef6\u3092\u6e80\u305f\u3059\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u306a\u3044\u76ee\u7684\u3067\u30e9\u30f3\u30c0\u30e0\u6027\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3002     \u9069\u5207\u306a\u95a2\u6570\u304c\u9078\u3070\u308c\u3066\u3044\u308b\u5834\u5408\u3067\u3082\u3001\u95a2\u6570\u306f\u958b\u767a\u8005\u306b\u3088\u308b\u521d\u671f\u5316\u304c\u5fc5\u8981\u304b\u3002     \u5fc5\u8981\u3067\u306a\u3044\u5834\u5408\u3001\u958b\u767a\u8005\u304c\u5341\u5206\u306a\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3084\u4e88\u6e2c\u4e0d\u53ef\u80fd\u6027\u3092\u6b20\u3044\u305f\u30b7\u30fc\u30c9\u3092\u7528\u3044\u3066\u7d44\u307f\u8fbc\u307f\u306e\u5f37\u529b\u306a\u521d\u671f\u5316\u6a5f\u80fd\u3092\u4e0a\u66f8\u304d\u3057\u3066\u3044\u306a\u3044\u304b\u3002</p> </li> <li> <p>MD5\u3084SHA1\u3068\u3044\u3063\u305f\u975e\u63a8\u5968\u306e\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3002\u307e\u305f\u6697\u53f7\u5b66\u7684\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u304c\u5fc5\u8981\u3068\u3055\u308c\u308b\u5834\u5408\u306b\u304a\u3044\u3066\u3001\u6697\u53f7\u5b66\u7684\u3067\u306a\u3044\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3002</p> </li> <li> <p>PKCS#1 v1.5\u3068\u3044\u3063\u305f\u975e\u63a8\u5968\u306e\u6697\u53f7\u5b66\u7684\u30d1\u30c7\u30a3\u30f3\u30b0\u65b9\u5f0f\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3002</p> </li> <li> <p>\u6697\u53f7\u5316\u6642\u306e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u30b5\u30a4\u30c9\u30c1\u30e3\u30cd\u30eb\u306e\u60c5\u5831\u304c\u3001\u30d1\u30c7\u30a3\u30f3\u30b0\u30aa\u30e9\u30af\u30eb\u653b\u6483\u306e\u3088\u3046\u306a\u7a2e\u985e\u306e\u653b\u6483\u306b\u5229\u7528\u53ef\u80fd\u3067\u306f\u306a\u3044\u304b\u3002</p> </li> </ul> <p>ASVS Crypto (V7)\u3001Data Protection (V9)\u3001\u304a\u3088\u3073 SSL/TLS (V10) \u3092\u53c2\u7167\u3002</p>"},{"location":"ja/A02_2021-Cryptographic_Failures/#_4","title":"\u9632\u6b62\u65b9\u6cd5","text":"<p>\u6700\u4f4e\u9650\u5b9f\u65bd\u3059\u3079\u304d\u3053\u3068\u3092\u4ee5\u4e0b\u306b\u6319\u3052\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u53c2\u8003\u8cc7\u6599\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044:</p> <ul> <li> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3054\u3068\u306b\u51e6\u7406\u3059\u308b\u30c7\u30fc\u30bf\u3001\u4fdd\u5b58\u3059\u308b\u30c7\u30fc\u30bf\u3001\u9001\u4fe1\u3059\u308b\u30c7\u30fc\u30bf\u3092\u5206\u985e\u3059\u308b\u3002\u305d\u3057\u3066\u3001\u3069\u306e\u30c7\u30fc\u30bf\u304c\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u95a2\u9023\u306e\u6cd5\u5f8b\u30fb\u898f\u5247\u306e\u8981\u4ef6\u306b\u8a72\u5f53\u3059\u308b\u304b\u3001\u307e\u305f\u3069\u306e\u30c7\u30fc\u30bf\u304c\u30d3\u30b8\u30cd\u30b9\u4e0a\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u304b\u5224\u5b9a\u3059\u308b\u3002</p> </li> <li> <p>\u5fc5\u8981\u306e\u306a\u3044\u6a5f\u5fae\u306a\u60c5\u5831\u3092\u4fdd\u5b58\u3057\u306a\u3044\u3002\u3067\u304d\u308b\u9650\u308a\u3059\u3050\u306b\u305d\u306e\u3088\u3046\u306a\u6a5f\u5fae\u306a\u60c5\u5831\u3092\u7834\u68c4\u3059\u308b\u304b\u3001PCI DSS\u306b\u6e96\u62e0\u3057\u305f\u30c8\u30fc\u30af\u30ca\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3\u307e\u305f\u306f\u30c8\u30e9\u30f3\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\u3002\u30c7\u30fc\u30bf\u304c\u6b8b\u3063\u3066\u3044\u306a\u3051\u308c\u3070\u76d7\u307e\u308c\u306a\u3044\u3002</p> </li> <li> <p>\u4fdd\u5b58\u6642\u306b\u3059\u3079\u3066\u306e\u6a5f\u5fae\u306a\u60c5\u5831\u3092\u6697\u53f7\u5316\u3057\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3002</p> </li> <li> <p>\u6700\u65b0\u306e\u6697\u53f7\u5f37\u5ea6\u306e\u9ad8\u3044\u6a19\u6e96\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3001\u30d7\u30ed\u30c8\u30b3\u30eb\u3001\u6697\u53f7\u9375\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3002\u305d\u3057\u3066\u9069\u5207\u306b\u6697\u53f7\u9375\u3092\u7ba1\u7406\u3059\u308b\u3002</p> </li> <li> <p>\u524d\u65b9\u79d8\u533f\u6027(FS)\u3092\u6709\u52b9\u306b\u3057\u305fTLS\u3001\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306b\u3088\u308b\u6697\u53f7\u30b9\u30a4\u30fc\u30c8\u306e\u512a\u5148\u5ea6\u6c7a\u5b9a\u3001\u30bb\u30ad\u30e5\u30a2\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3069\u306e\u30bb\u30ad\u30e5\u30a2\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3001\u901a\u4fe1\u7d4c\u8def\u4e0a\u306e\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u6697\u53f7\u5316\u3059\u308b\u3002HTTP Strict Transport Security (HSTS)\u306e\u3088\u3046\u306a\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3067\u6697\u53f7\u5316\u3092\u5f37\u5236\u3059\u308b\u3002</p> </li> <li> <p>\u6a5f\u5fae\u306a\u60c5\u5831\u3092\u542b\u3080\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u3092\u7121\u52b9\u306b\u3059\u308b\u3002</p> </li> <li> <p>\u30c7\u30fc\u30bf\u5206\u985e\u306b\u5fdc\u3058\u3066\u5fc5\u8981\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5236\u5fa1\u3092\u9069\u7528\u3059\u308b\u3002</p> </li> <li> <p>FTP\u3084SMTP\u3068\u3044\u3063\u305f\u30ec\u30ac\u30b7\u30fc\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u6a5f\u5bc6\u30c7\u30fc\u30bf\u306e\u4f1d\u9001\u306b\u4f7f\u7528\u3057\u306a\u3044\u3002</p> </li> <li> <p>\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4fdd\u5b58\u3059\u308b\u969b\u3001Argon2\u3001scrypt\u3001bcrypt\u3001PBKDF2\u306e\u3088\u3046\u306a\u30ef\u30fc\u30af\u30d5\u30a1\u30af\u30bf(\u9045\u5ef6\u30d5\u30a1\u30af\u30bf)\u306e\u3042\u308b\u3001\u5f37\u304f\u304b\u3064\u9069\u5fdc\u53ef\u80fd\u306a\u30ec\u30d9\u30eb\u306e\u30bd\u30eb\u30c8\u4ed8\u304d\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u3092\u7528\u3044\u308b\u3002</p> </li> <li> <p>\u521d\u671f\u5316\u30d9\u30af\u30c8\u30eb\u306f\u5229\u7528\u30e2\u30fc\u30c9\u306b\u5fdc\u3058\u3066\u9069\u5207\u306a\u3082\u306e\u3092\u9078\u629e\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\u3053\u308c\u306f\u591a\u304f\u306e\u30e2\u30fc\u30c9\u306b\u304a\u3044\u3066CSPRNG(\u6697\u53f7\u8ad6\u7684\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u5668)\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3002     nonce\u3092\u5fc5\u8981\u3068\u3059\u308b\u30e2\u30fc\u30c9\u306e\u5834\u5408\u306f\u3001\u521d\u671f\u5316\u30d9\u30af\u30c8\u30eb(IV)\u306fCSPRNG\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\u3002     \u3059\u3079\u3066\u306e\u5834\u5408\u306b\u304a\u3044\u3066\u3001IV\u306f\u5358\u4e00\u306e\u56fa\u5b9a\u306e\u9375\u306b\u5bfe\u3057\u4e8c\u5ea6\u4f7f\u3063\u3066\u306f\u306a\u3089\u306a\u3044\u3002</p> </li> <li> <p>\u5358\u306a\u308b\u6697\u53f7\u3067\u306f\u306a\u304f\u3001\u8a8d\u8a3c\u4ed8\u304d\u6697\u53f7\u3092\u5e38\u306b\u4f7f\u7528\u3059\u308b\u3002</p> </li> <li> <p>\u9375\u306f\u6697\u53f7\u5b66\u7684\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u751f\u6210\u3057\u3001\u307e\u305f\u30d0\u30a4\u30c8\u914d\u5217\u3068\u3057\u3066\u30e1\u30e2\u30ea\u30fc\u306b\u4fdd\u5b58\u3059\u308b\u3002     \u3082\u3057\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u9069\u5207\u306a\u9375\u5c0e\u51fa\u95a2\u6570\u3092\u7528\u3044\u3066\u9375\u3078\u3068\u5909\u63db\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002</p> </li> <li> <p>\u6697\u53f7\u5b66\u7684\u4e71\u6570\u304c\u9069\u5207\u306a\u5834\u6240\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3001\u307e\u305f\u305d\u308c\u3089\u304c\u4e88\u6e2c\u53ef\u80fd\u306a\u65b9\u6cd5\u3084\u4f4e\u3044\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306b\u3088\u3063\u3066\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002     \u591a\u304f\u306e\u30e2\u30c0\u30f3\u306aAPI\u3067\u306f\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u78ba\u4fdd\u3059\u308b\u305f\u3081\u306b\u958b\u767a\u8005\u304cCSPRNG\u3092\u521d\u671f\u5316\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002</p> </li> <li> <p>MD5\u3084SHA1\u3001PKCS#1 v1.5\u3068\u3044\u3063\u305f\u975e\u63a8\u5968\u306e\u6697\u53f7\u5b66\u7684\u95a2\u6570\u3084\u30d1\u30c7\u30a3\u30f3\u30b0\u65b9\u5f0f\u306e\u4f7f\u7528\u3092\u907f\u3051\u308b\u3002</p> </li> <li> <p>\u8a2d\u5b9a\u3068\u305d\u306e\u8a2d\u5b9a\u5024\u304c\u305d\u308c\u305e\u308c\u72ec\u7acb\u3057\u3066\u52b9\u679c\u304c\u3042\u308b\u304b\u691c\u8a3c\u3059\u308b\u3002</p> </li> </ul>"},{"location":"ja/A02_2021-Cryptographic_Failures/#_5","title":"\u653b\u6483\u30b7\u30ca\u30ea\u30aa\u306e\u4f8b","text":"<p>\u30b7\u30ca\u30ea\u30aa #1: \u3042\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u81ea\u52d5\u6697\u53f7\u5316\u3092\u4f7f\u7528\u3057\u3001\u30af\u30ec\u30b8\u30c3\u30c8\u30ab\u30fc\u30c9\u756a\u53f7\u3092\u6697\u53f7\u5316\u3057\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u305d\u306e\u30c7\u30fc\u30bf\u304c\u53d6\u5f97\u3055\u308c\u308b\u3068\u304d\u306b\u81ea\u52d5\u7684\u306b\u5fa9\u53f7\u3055\u308c\u308b\u305f\u3081\u3001SQL\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u5e73\u6587\u306e\u30af\u30ec\u30b8\u30c3\u30c8\u30ab\u30fc\u30c9\u756a\u53f7\u3092\u53d6\u5f97\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #2: \u3042\u308b\u30b5\u30a4\u30c8\u306f\u3001\u3059\u3079\u3066\u306e\u30da\u30fc\u30b8\u3067TLS\u3092\u4f7f\u3063\u3066\u304a\u3089\u305a\u3001\u30e6\u30fc\u30b6\u306bTLS\u3092\u5f37\u5236\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u305d\u306e\u30b5\u30a4\u30c8\u3067\u306f\u5f31\u3044\u6697\u53f7\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u653b\u6483\u8005\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u76e3\u8996\u3057\uff08\u4f8b\u3048\u3070\u3001\u6697\u53f7\u5316\u3057\u3066\u3044\u306a\u3044\u7121\u7dda\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\uff09\u3001HTTPS\u901a\u4fe1\u3092HTTP\u901a\u4fe1\u306b\u30c0\u30a6\u30f3\u30b0\u30ec\u30fc\u30c9\u3057\u305d\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u76d7\u8074\u3059\u308b\u3053\u3068\u3067\u3001\u30e6\u30fc\u30b6\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u30af\u30c3\u30ad\u30fc\u3092\u76d7\u307f\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u653b\u6483\u8005\u306f\u3053\u306e\u30af\u30c3\u30ad\u30fc\u3092\u518d\u9001\u3057\u30e6\u30fc\u30b6\u306e(\u8a8d\u8a3c\u3055\u308c\u305f)\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4e57\u3063\u53d6\u308a\u3001\u305d\u306e\u30e6\u30fc\u30b6\u306e\u500b\u4eba\u30c7\u30fc\u30bf\u3092\u95b2\u89a7\u304a\u3088\u3073\u6539\u3056\u3093\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u653b\u6483\u8005\u306f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4e57\u3063\u53d6\u308b\u4ee3\u308f\u308a\u306b\u3001\u3059\u3079\u3066\u306e\u9001\u4fe1\u30c7\u30fc\u30bf\uff08\u4f8b\u3048\u3070\u3001\u5165\u91d1\u306e\u53d7\u53d6\u4eba\uff09\u3092\u6539\u3056\u3093\u3067\u304d\u307e\u3059\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #3: \u3042\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u3001\u30bd\u30eb\u30c8\u306a\u3057\u306e\u30cf\u30c3\u30b7\u30e5\u307e\u305f\u306f\u5358\u7d14\u306a\u30cf\u30c3\u30b7\u30e5\u3067\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\u3082\u3057\u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306e\u6b20\u9665\u304c\u3042\u308c\u3070\u3001\u653b\u6483\u8005\u306f\u305d\u308c\u3092\u60aa\u7528\u3057\u3066\u30d1\u30b9\u30ef\u30fc\u30c9\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u4e8b\u524d\u306b\u8a08\u7b97\u3055\u308c\u305f\u30cf\u30c3\u30b7\u30e5\u306e\u30ec\u30a4\u30f3\u30dc\u30fc\u30c6\u30fc\u30d6\u30eb\u3067\u3001\u3059\u3079\u3066\u306e\u30bd\u30eb\u30c8\u306a\u3057\u306e\u30cf\u30c3\u30b7\u30e5\u304c\u89e3\u8aad\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u305f\u3068\u3048\u30bd\u30eb\u30c8\u3042\u308a\u3067\u30cf\u30c3\u30b7\u30e5\u5316\u3055\u308c\u3066\u3044\u3066\u3082\u3001\u5358\u7d14\u307e\u305f\u306f\u9ad8\u901f\u306a\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u3067\u751f\u6210\u3057\u305f\u30cf\u30c3\u30b7\u30e5\u306fGPU\u3067\u89e3\u8aad\u3055\u308c\u3066\u3057\u307e\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002</p>"},{"location":"ja/A02_2021-Cryptographic_Failures/#_6","title":"\u53c2\u8003\u8cc7\u6599","text":"<ul> <li> <p>OWASP Proactive Controls: Protect Data     Everywhere</p> </li> <li> <p>OWASP Application Security Verification Standard (V7,     9, 10)</p> </li> <li> <p>OWASP Cheat Sheet: Transport Layer     Protection</p> </li> <li> <p>OWASP Cheat Sheet: User Privacy     Protection</p> </li> <li> <p>OWASP Cheat Sheet: Password and Cryptographic Storage</p> </li> <li> <p>OWASP Cheat Sheet:     HSTS</p> </li> <li> <p>OWASP Testing Guide: Testing for weak cryptography</p> </li> </ul>"},{"location":"ja/A02_2021-Cryptographic_Failures/#cwe","title":"\u5bfe\u5fdc\u3059\u308b CWE \u306e\u30ea\u30b9\u30c8","text":"<p>CWE-261 Weak Encoding for Password</p> <p>CWE-296 Improper Following of a Certificate's Chain of Trust</p> <p>CWE-310 Cryptographic Issues</p> <p>CWE-319 Cleartext Transmission of Sensitive Information</p> <p>CWE-321 Use of Hard-coded Cryptographic Key</p> <p>CWE-322 Key Exchange without Entity Authentication</p> <p>CWE-323 Reusing a Nonce, Key Pair in Encryption</p> <p>CWE-324 Use of a Key Past its Expiration Date</p> <p>CWE-325 Missing Required Cryptographic Step</p> <p>CWE-326 Inadequate Encryption Strength</p> <p>CWE-327 Use of a Broken or Risky Cryptographic Algorithm</p> <p>CWE-328 Reversible One-Way Hash</p> <p>CWE-329 Not Using a Random IV with CBC Mode</p> <p>CWE-330 Use of Insufficiently Random Values</p> <p>CWE-331 Insufficient Entropy</p> <p>CWE-335 Incorrect Usage of Seeds in Pseudo-Random Number Generator(PRNG)</p> <p>CWE-336 Same Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-337 Predictable Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-338 Use of Cryptographically Weak Pseudo-Random Number Generator(PRNG)</p> <p>CWE-340 Generation of Predictable Numbers or Identifiers</p> <p>CWE-347 Improper Verification of Cryptographic Signature</p> <p>CWE-523 Unprotected Transport of Credentials</p> <p>CWE-720 OWASP Top Ten 2007 Category A9 - Insecure Communications</p> <p>CWE-757 Selection of Less-Secure Algorithm During Negotiation('Algorithm Downgrade')</p> <p>CWE-759 Use of a One-Way Hash without a Salt</p> <p>CWE-760 Use of a One-Way Hash with a Predictable Salt</p> <p>CWE-780 Use of RSA Algorithm without OAEP</p> <p>CWE-818 Insufficient Transport Layer Protection</p> <p>CWE-916 Use of Password Hash With Insufficient Computational Effort</p>"},{"location":"ja/A02_2021-Cryptographic_Failures/#a022021-cryptographic-failures","title":"A02:2021 \u2013 Cryptographic Failures","text":""},{"location":"ja/A02_2021-Cryptographic_Failures/#overview","title":"Overview","text":"<p>Shifting up one position to #2, previously known as Sensitive Data Exposure, which is more of a broad symptom rather than a root cause, the focus is on failures related to cryptography (or lack thereof). Which often lead to exposure of sensitive data. Notable Common Weakness Enumerations (CWEs) included are CWE-259: Use of Hard-coded Password, CWE-327: Broken or Risky Crypto Algorithm, and CWE-331 Insufficient Entropy .</p>"},{"location":"ja/A02_2021-Cryptographic_Failures/#description","title":"Description","text":"<p>The first thing is to determine the protection needs of data in transit and at rest. For example, passwords, credit card numbers, health records, personal information, and business secrets require extra protection, mainly if that data falls under privacy laws, e.g., EU's General Data Protection Regulation (GDPR), or regulations, e.g., financial data protection such as PCI Data Security Standard (PCI DSS). For all such data:</p> <ul> <li> <p>Is any data transmitted in clear text? This concerns protocols such     as HTTP, SMTP, FTP also using TLS upgrades like STARTTLS. External     internet traffic is hazardous. Verify all internal traffic, e.g.,     between load balancers, web servers, or back-end systems.</p> </li> <li> <p>Are any old or weak cryptographic algorithms or protocols used either     by default or in older code?</p> </li> <li> <p>Are default crypto keys in use, weak crypto keys generated or     re-used, or is proper key management or rotation missing?     Are crypto keys checked into source code repositories?</p> </li> <li> <p>Is encryption not enforced, e.g., are any HTTP headers (browser)     security directives or headers missing?</p> </li> <li> <p>Is the received server certificate and the trust chain properly validated?</p> </li> <li> <p>Are initialization vectors ignored, reused, or not generated     sufficiently secure for the cryptographic mode of operation?     Is an insecure mode of operation such as ECB in use? Is encryption     used when authenticated encryption is more appropriate?</p> </li> <li> <p>Are passwords being used as cryptographic keys in absence of a     password base key derivation function?</p> </li> <li> <p>Is randomness used for cryptographic purposes that was not designed     to meet cryptographic requirements? Even if the correct function is     chosen, does it need to be seeded by the developer, and if not, has     the developer over-written the strong seeding functionality built into     it with a seed that lacks sufficient entropy/unpredictability?</p> </li> <li> <p>Are deprecated hash functions such as MD5 or SHA1 in use, or are     non-cryptographic hash functions used when cryptographic hash functions     are needed?</p> </li> <li> <p>Are deprecated cryptographic padding methods such as PKCS number 1 v1.5     in use?</p> </li> <li> <p>Are cryptographic error messages or side channel information     exploitable, for example in the form of padding oracle attacks?</p> </li> </ul> <p>See ASVS Crypto (V7), Data Protection (V9), and SSL/TLS (V10)</p>"},{"location":"ja/A02_2021-Cryptographic_Failures/#how-to-prevent","title":"How to Prevent","text":"<p>Do the following, at a minimum, and consult the references:</p> <ul> <li> <p>Classify data processed, stored, or transmitted by an application.     Identify which data is sensitive according to privacy laws,     regulatory requirements, or business needs.</p> </li> <li> <p>Don't store sensitive data unnecessarily. Discard it as soon as     possible or use PCI DSS compliant tokenization or even truncation.     Data that is not retained cannot be stolen.</p> </li> <li> <p>Make sure to encrypt all sensitive data at rest.</p> </li> <li> <p>Ensure up-to-date and strong standard algorithms, protocols, and     keys are in place; use proper key management.</p> </li> <li> <p>Encrypt all data in transit with secure protocols such as TLS with     forward secrecy (FS) ciphers, cipher prioritization by the     server, and secure parameters. Enforce encryption using directives     like HTTP Strict Transport Security (HSTS).</p> </li> <li> <p>Disable caching for response that contain sensitive data.</p> </li> <li> <p>Apply required security controls as per the data classification.</p> </li> <li> <p>Do not use legacy protocols such as FTP and SMTP for transporting     sensitive data.</p> </li> <li> <p>Store passwords using strong adaptive and salted hashing functions     with a work factor (delay factor), such as Argon2, scrypt, bcrypt or     PBKDF2.</p> </li> <li> <p>Initialization vectors must be chosen appropriate for the mode of     operation.  For many modes, this means using a CSPRNG (cryptographically     secure pseudo random number generator).  For modes that require a     nonce, then the initialization vector (IV) does not need a CSPRNG.  In all cases, the IV     should never be used twice for a fixed key.</p> </li> <li> <p>Always use authenticated encryption instead of just encryption.</p> </li> <li> <p>Keys should be generated cryptographically randomly and stored in     memory as byte arrays. If a password is used, then it must be converted     to a key via an appropriate password base key derivation function.</p> </li> <li> <p>Ensure that cryptographic randomness is used where appropriate, and     that it has not been seeded in a predictable way or with low entropy.     Most modern APIs do not require the developer to seed the CSPRNG to     get security.</p> </li> <li> <p>Avoid deprecated cryptographic functions and padding schemes, such as     MD5, SHA1, PKCS number 1 v1.5 .</p> </li> <li> <p>Verify independently the effectiveness of configuration and     settings.</p> </li> </ul>"},{"location":"ja/A02_2021-Cryptographic_Failures/#references","title":"References","text":"<ul> <li> <p>OWASP Proactive Controls: Protect Data     Everywhere</p> </li> <li> <p>OWASP Application Security Verification Standard (V7,     9, 10)</p> </li> <li> <p>OWASP Cheat Sheet: Transport Layer     Protection</p> </li> <li> <p>OWASP Cheat Sheet: User Privacy     Protection</p> </li> <li> <p>OWASP Cheat Sheet: Password and Cryptographic Storage</p> </li> <li> <p>OWASP Cheat Sheet:     HSTS</p> </li> <li> <p>OWASP Testing Guide: Testing for weak cryptography</p> </li> </ul>"},{"location":"ja/A02_2021-Cryptographic_Failures/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":"<p>CWE-261 Weak Encoding for Password</p> <p>CWE-296 Improper Following of a Certificate's Chain of Trust</p> <p>CWE-310 Cryptographic Issues</p> <p>CWE-319 Cleartext Transmission of Sensitive Information</p> <p>CWE-321 Use of Hard-coded Cryptographic Key</p> <p>CWE-322 Key Exchange without Entity Authentication</p> <p>CWE-323 Reusing a Nonce, Key Pair in Encryption</p> <p>CWE-324 Use of a Key Past its Expiration Date</p> <p>CWE-325 Missing Required Cryptographic Step</p> <p>CWE-326 Inadequate Encryption Strength</p> <p>CWE-327 Use of a Broken or Risky Cryptographic Algorithm</p> <p>CWE-328 Reversible One-Way Hash</p> <p>CWE-329 Not Using a Random IV with CBC Mode</p> <p>CWE-330 Use of Insufficiently Random Values</p> <p>CWE-331 Insufficient Entropy</p> <p>CWE-335 Incorrect Usage of Seeds in Pseudo-Random Number Generator(PRNG)</p> <p>CWE-336 Same Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-337 Predictable Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-338 Use of Cryptographically Weak Pseudo-Random Number Generator(PRNG)</p> <p>CWE-340 Generation of Predictable Numbers or Identifiers</p> <p>CWE-347 Improper Verification of Cryptographic Signature</p> <p>CWE-523 Unprotected Transport of Credentials</p> <p>CWE-720 OWASP Top Ten 2007 Category A9 - Insecure Communications</p> <p>CWE-757 Selection of Less-Secure Algorithm During Negotiation('Algorithm Downgrade')</p> <p>CWE-759 Use of a One-Way Hash without a Salt</p> <p>CWE-760 Use of a One-Way Hash with a Predictable Salt</p> <p>CWE-780 Use of RSA Algorithm without OAEP</p> <p>CWE-818 Insufficient Transport Layer Protection</p> <p>CWE-916 Use of Password Hash With Insufficient Computational Effort</p>"},{"location":"ja/A03_2021-Injection/","title":"A03:2021 \u2013 \u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3","text":""},{"location":"ja/A03_2021-Injection/#_1","title":"\u56e0\u5b50","text":"\u5bfe\u5fdc\u3059\u308b CWE \u6570 \u6700\u5927\u767a\u751f\u7387 \u5e73\u5747\u767a\u751f\u7387 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306e\u96e3\u6613\u5ea6\uff09 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306b\u3088\u308b\u5f71\u97ff\uff09 \u6700\u5927\u7db2\u7f85\u7387 \u5e73\u5747\u7db2\u7f85\u7387 \u7dcf\u767a\u751f\u6570 CVE \u5408\u8a08\u4ef6\u6570 33 19.09% 3.37% 7.25 7.15 94.04% 47.90% 274,228 32,078"},{"location":"ja/A03_2021-Injection/#_2","title":"\u6982\u8981","text":"<p>\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306f3\u4f4d\u306b\u4e0b\u304c\u3063\u3066\u3044\u307e\u3059\u3002 94%\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3001\u4f55\u3089\u304b\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306b\u95a2\u3059\u308b\u554f\u984c\u304c\u78ba\u8a8d\u3055\u308c\u3066\u304a\u308a\u3001\u6700\u5927\u767a\u751f\u7387\u306f19%\u3001\u5e73\u5747\u767a\u751f\u7387\u306f3%\u3001\u305d\u3057\u3066\u767a\u751f\u4ef6\u6570\u306f27\u4e074\u5343\u4ef6\u3067\u3057\u305f\u3002 \u6ce8\u76ee\u3059\u3079\u304d\u5171\u901a\u8106\u5f31\u6027\u8b58\u5225\u5b50 (CWEs) \u306f\u3001CWE-79:\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30fb\u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0\u3001 CWE-89:SQL\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3001\u305d\u3057\u3066CWE-73:\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u30d1\u30b9\u540d\u306e\u5916\u90e8\u5236\u5fa1\u3067\u3059\u3002</p>"},{"location":"ja/A03_2021-Injection/#_3","title":"\u8aac\u660e","text":"<p>\u6b21\u306e\u3088\u3046\u306a\u72b6\u6cc1\u3067\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3053\u306e\u653b\u6483\u306b\u5bfe\u3057\u3066\u8106\u5f31\u3067\u3059:</p> <ul> <li> <p>\u30e6\u30fc\u30b6\u304c\u63d0\u4f9b\u3057\u305f\u30c7\u30fc\u30bf\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u691c\u8a3c\u3001\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3001\u307e\u305f\u306f\u30b5\u30cb\u30bf\u30a4\u30ba\u3055\u308c\u306a\u3044\u3002</p> </li> <li> <p>\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b\u5fdc\u3058\u305f\u30a8\u30b9\u30b1\u30fc\u30d7\u304c\u884c\u308f\u308c\u305a\u3001\u52d5\u7684\u30af\u30a8\u30ea\u307e\u305f\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u547c\u51fa\u3057\u304c\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf\u306b\u76f4\u63a5\u4f7f\u7528\u3055\u308c\u308b\u3002</p> </li> <li> <p>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30fb\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30fb\u30de\u30c3\u30d4\u30f3\u30b0\uff08ORM\uff09\u306e\u691c\u7d22\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u60aa\u610f\u3092\u6301\u3063\u305f\u30c7\u30fc\u30bf\u304c\u4f7f\u7528\u3055\u308c\u3001\u91cd\u8981\u306a\u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3067\u62bd\u51fa\u3057\u3066\u3057\u307e\u3046\u3002</p> </li> <li> <p>\u60aa\u610f\u3092\u6301\u3063\u305f\u30c7\u30fc\u30bf\u3092\u76f4\u63a5\u307e\u305f\u306f\u9023\u7d50\u3057\u3066\u4f7f\u3046\u3002\u52d5\u7684\u30af\u30a8\u30ea\u3001\u30b3\u30de\u30f3\u30c9\u307e\u305f\u306f\u30b9\u30c8\u30a2\u30c9\u30fb\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306b\u304a\u3044\u3066SQL\u3084\u30b3\u30de\u30f3\u30c9\u304c\u305d\u306e\u3088\u3046\u306a\u69cb\u9020\u3068\u60aa\u610f\u3092\u6301\u3063\u305f\u30c7\u30fc\u30bf\u3092\u542b\u3080\u3002</p> </li> </ul> <p>\u3088\u308a\u4e00\u822c\u7684\u306a\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3068\u3057\u3066\u306f\u3001SQL\u3001NoSQL\u3001OS \u30b3\u30de\u30f3\u30c9\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30fb\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30fb\u30de\u30c3\u30d4\u30f3\u30b0\uff08ORM\uff09\u3001LDAP\u3001\u304a\u3088\u3073EL\u5f0f\uff08Expression Language\uff09\u307e\u305f\u306fOGNL\u5f0f\uff08Object Graph Navigation Library\uff09\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30bb\u30d7\u30c8\u306f\u3059\u3079\u3066\u306e\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf\u3067\u540c\u3058\u3067\u3059\u3002 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30ec\u30d3\u30e5\u30fc\u3059\u308c\u3070\u3001\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u8106\u5f31\u3067\u3042\u308b\u304b\u6700\u3082\u52b9\u679c\u7684\u306b\u691c\u51fa\u3067\u304d\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3001\u30d8\u30c3\u30c0\u30fc\u3001URL\u3001Cookie\u3001JSON\u3001SOAP\u3001\u304a\u3088\u3073XML\u30c7\u30fc\u30bf\u5165\u529b\u306e\u5b8c\u5168\u306a\u81ea\u52d5\u30c6\u30b9\u30c8\u304c\u63a8\u5968\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u3001\u7d44\u7e54\u306f\u9759\u7684 (SAST)\u3001\u52d5\u7684 (DAST)\u3001\u305d\u3057\u3066\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6 (IAST) \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c6\u30b9\u30c8\u30c4\u30fc\u30eb\u3092CI/CD\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306b\u5c0e\u5165\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u65b0\u305f\u306b\u4f5c\u3089\u308c\u3066\u3057\u307e\u3063\u305f\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u6b20\u9665\u3092\u7a3c\u50cd\u74b0\u5883\u306b\u5c55\u958b\u3059\u308b\u524d\u306b\u691c\u51fa\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/A03_2021-Injection/#_4","title":"\u9632\u6b62\u65b9\u6cd5","text":"<p>\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3092\u9632\u6b62\u3059\u308b\u305f\u3081\u306b\u306f\u30b3\u30de\u30f3\u30c9\u3068\u30af\u30a8\u30ea\u304b\u3089\u30c7\u30fc\u30bf\u3092\u5e38\u306b\u5206\u3051\u3066\u304a\u304f\u3053\u3068\u304c\u5fc5\u8981\u3067\u3059:</p> <ul> <li> <p>\u63a8\u5968\u3055\u308c\u308b\u9078\u629e\u80a2\u306f\u5b89\u5168\u306aAPI\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3002\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf\u306e\u4f7f\u7528\u3092\u5b8c\u5168\u306b\u907f\u3051\u308b\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5229\u7528\u3059\u308b\u3001\u307e\u305f\u306f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30fb\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30fb\u30de\u30c3\u30d4\u30f3\u30b0\u30fb\u30c4\u30fc\u30eb\uff08ORM\uff09\u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u79fb\u884c\u3059\u308b\u3053\u3068\u3002 \u6ce8\u610f: \u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3055\u308c\u3066\u3044\u305f\u3068\u3057\u3066\u3082\u3001\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u3067\u306f\u3001PL/SQL\u307e\u305f\u306fT-SQL\u306b\u3088\u3063\u3066\u30af\u30a8\u30ea\u3068\u30c7\u30fc\u30bf\u3092\u9023\u7d50\u3057\u305f\u308a\u3001EXECUTE IMMEDIATE\u3084exec()\u3092\u5229\u7528\u3057\u3066\u60aa\u610f\u306e\u3042\u308b\u30c7\u30fc\u30bf\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001SQL\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002</p> </li> <li> <p>\u30dd\u30b8\u30c6\u30a3\u30d6\u306a\u3001\u8a00\u3044\u63db\u3048\u308b\u3068\u300c\u30db\u30ef\u30a4\u30c8\u30ea\u30b9\u30c8\u300d\u306b\u3088\u308b\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306e\u5165\u529b\u691c\u8a3c\u3092\u7528\u3044\u308b\u3002\u7279\u6b8a\u6587\u5b57\u3092\u5fc5\u8981\u3068\u3059\u308b\u591a\u304f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3001\u305f\u3068\u3048\u3070\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30c6\u30ad\u30b9\u30c8\u9818\u57df\u3084API\u306a\u3069\u306b\u304a\u3044\u3066\u306f\u5b8c\u5168\u306a\u9632\u5fa1\u65b9\u6cd5\u3068\u306f\u306a\u3089\u306a\u3044\u3002</p> </li> <li> <p>\u4e0a\u8a18\u306e\u5bfe\u5fdc\u304c\u56f0\u96e3\u306a\u52d5\u7684\u30af\u30a8\u30ea\u3067\u306f\u3001\u305d\u306e\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf\u56fa\u6709\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u69cb\u6587\u3092\u4f7f\u7528\u3057\u3066\u7279\u6b8a\u6587\u5b57\u3092\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u3002 \u6ce8\u610f: \u30c6\u30fc\u30d6\u30eb\u540d\u3084\u30ab\u30e9\u30e0\u540d\u306a\u3069\u306eSQL\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u306b\u5bfe\u3057\u3066\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u304c\u3067\u304d\u306a\u3044\u3002\u305d\u306e\u305f\u3081\u3001\u30e6\u30fc\u30b6\u6307\u5b9a\u306e\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u540d\u306f\u5371\u967a\u3067\u3042\u308b\u3002\u3053\u308c\u306f\u30ec\u30dd\u30fc\u30c8\u4f5c\u6210\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306b\u5b58\u5728\u3059\u308b\u4e00\u822c\u7684\u306a\u554f\u984c\u3067\u3042\u308b\u3002</p> </li> <li> <p>\u30af\u30a8\u30ea\u5185\u3067LIMIT\u53e5\u3084\u305d\u306e\u4ed6\u306eSQL\u5236\u5fa1\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001SQL\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u653b\u6483\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306e\u30ec\u30b3\u30fc\u30c9\u306e\u5927\u91cf\u6f0f\u6d29\u3092\u9632\u3050\u3002</p> </li> </ul>"},{"location":"ja/A03_2021-Injection/#_5","title":"\u653b\u6483\u30b7\u30ca\u30ea\u30aa\u306e\u4f8b","text":"<p>\u30b7\u30ca\u30ea\u30aa #1: \u3042\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u4fe1\u983c\u3067\u304d\u306a\u3044\u30c7\u30fc\u30bf\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8106\u5f31\u306aSQL\u547c\u3073\u51fa\u3057\u3092\u4f5c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p> <pre><code> Query HQLQuery = session.createQuery(\"FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\");\n</code></pre> <p>\u30b7\u30ca\u30ea\u30aa #2: \u540c\u69d8\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u76f2\u4fe1\u3059\u308b\u3068\u3001\u8106\u5f31\u6027\u306e\u3042\u308b\u30af\u30a8\u30ea\u306b\u306a\u308a\u3048\u307e\u3059 (\u4f8b\u3048\u3070\u3001Hibernate\u30af\u30a8\u30ea\u8a00\u8a9e(HQL)):</p> <pre><code> Query HQLQuery = session.createQuery(\"FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\");\n</code></pre> <p>\u3053\u308c\u3089\u4e21\u65b9\u306e\u30b1\u30fc\u30b9\u306b\u304a\u3044\u3066\u3001\u653b\u6483\u8005\u306f\u30d6\u30e9\u30a6\u30b6\u3067\u30d1\u30e9\u30e1\u30fc\u30bf'id'\u306e\u5024\u3092' UNION SELECT SLEEP(10);--\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070:</p> <pre><code> http://example.com/app/accountView?id=' UNION SELECT SLEEP(10);--\n</code></pre> <p>\u3053\u308c\u3067\u3001\u4e21\u65b9\u306e\u30af\u30a8\u30ea\u306e\u610f\u5473\u304c\u5909\u3048\u3089\u308c\u3001accounts\u30c6\u30fc\u30d6\u30eb\u306b\u3042\u308b\u30ec\u30b3\u30fc\u30c9\u304c\u5168\u3066\u8fd4\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3055\u3089\u306a\u308b\u653b\u6483\u306b\u3088\u308a\u3001\u30c7\u30fc\u30bf\u306e\u6539\u3056\u3093\u3084\u524a\u9664\u3001\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u547c\u3073\u51fa\u3057\u304c\u53ef\u80fd\u3067\u3059\u3002</p>"},{"location":"ja/A03_2021-Injection/#_6","title":"\u53c2\u8003\u8cc7\u6599","text":"<ul> <li> <p>OWASP Proactive Controls: Secure Database Access</p> </li> <li> <p>OWASP ASVS: V5 Input Validation and Encoding</p> </li> <li> <p>OWASP Testing Guide: SQL Injection, Command Injection,     and\u00a0ORM Injection</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: SQL Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention in Java</p> </li> <li> <p>OWASP Cheat Sheet: Query Parameterization</p> </li> <li> <p>OWASP Automated Threats to Web Applications \u2013 OAT-014</p> </li> <li> <p>PortSwigger: Server-side template injection</p> </li> </ul>"},{"location":"ja/A03_2021-Injection/#cwe","title":"\u5bfe\u5fdc\u3059\u308b CWE \u306e\u30ea\u30b9\u30c8","text":"<p>CWE-20 Improper Input Validation</p> <p>CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')</p> <p>CWE-75 Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)</p> <p>CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection')</p> <p>CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</p> <p>CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</p> <p>CWE-80 Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</p> <p>CWE-83 Improper Neutralization of Script in Attributes in a Web Page</p> <p>CWE-87 Improper Neutralization of Alternate XSS Syntax</p> <p>CWE-88 Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')</p> <p>CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</p> <p>CWE-90 Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</p> <p>CWE-91 XML Injection (aka Blind XPath Injection)</p> <p>CWE-93 Improper Neutralization of CRLF Sequences ('CRLF Injection')</p> <p>CWE-94 Improper Control of Generation of Code ('Code Injection')</p> <p>CWE-95 Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</p> <p>CWE-96 Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')</p> <p>CWE-97 Improper Neutralization of Server-Side Includes (SSI) Within a Web Page</p> <p>CWE-98 Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')</p> <p>CWE-99 Improper Control of Resource Identifiers ('Resource Injection')</p> <p>CWE-100 Deprecated: Was catch-all for input validation issues</p> <p>CWE-113 Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')</p> <p>CWE-116 Improper Encoding or Escaping of Output</p> <p>CWE-138 Improper Neutralization of Special Elements</p> <p>CWE-184 Incomplete List of Disallowed Inputs</p> <p>CWE-470 Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')</p> <p>CWE-471 Modification of Assumed-Immutable Data (MAID)</p> <p>CWE-564 SQL Injection: Hibernate</p> <p>CWE-610 Externally Controlled Reference to a Resource in Another Sphere</p> <p>CWE-643 Improper Neutralization of Data within XPath Expressions ('XPath Injection')</p> <p>CWE-644 Improper Neutralization of HTTP Headers for Scripting Syntax</p> <p>CWE-652 Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')</p> <p>CWE-917 Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')</p>"},{"location":"ja/A03_2021-Injection/#a032021-injection","title":"A03:2021 \u2013 Injection","text":""},{"location":"ja/A03_2021-Injection/#overview","title":"Overview","text":"<p>Injection slides down to the third position. 94% of the applications were tested for some form of injection with a max incidence rate of 19%, an average incidence rate of 3%, and 274k occurances. Notable Common Weakness Enumerations (CWEs) included are CWE-79: Cross-site Scripting, CWE-89: SQL Injection, and CWE-73: External Control of File Name or Path.</p>"},{"location":"ja/A03_2021-Injection/#how-to-prevent","title":"How to Prevent","text":"<p>Preventing injection requires keeping data separate from commands and queries:</p> <ul> <li> <p>The preferred option is to use a safe API, which avoids using the     interpreter entirely, provides a parameterized interface, or     migrates to Object Relational Mapping Tools (ORMs). Note: Even when parameterized, stored procedures can still introduce     SQL injection if PL/SQL or T-SQL concatenates queries and data or     executes hostile data with EXECUTE IMMEDIATE or exec().</p> </li> <li> <p>Use positive server-side input validation. This is     not a complete defense as many applications require special     characters, such as text areas or APIs for mobile applications.</p> </li> <li> <p>For any residual dynamic queries, escape special characters using     the specific escape syntax for that interpreter. Note: SQL structures such as table names, column names, and so on     cannot be escaped, and thus user-supplied structure names are     dangerous. This is a common issue in report-writing software.</p> </li> <li> <p>Use LIMIT and other SQL controls within queries to prevent mass     disclosure of records in case of SQL injection.</p> </li> </ul>"},{"location":"ja/A04_2021-Insecure_Design/","title":"A04:2021 - \u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u306a\u3044\u4e0d\u5b89\u306a\u8a2d\u8a08","text":""},{"location":"ja/A04_2021-Insecure_Design/#_1","title":"\u56e0\u5b50","text":"\u5bfe\u5fdc\u3059\u308b CWE \u6570 \u6700\u5927\u767a\u751f\u7387 \u5e73\u5747\u767a\u751f\u7387 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306e\u96e3\u6613\u5ea6\uff09 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306b\u3088\u308b\u5f71\u97ff\uff09 \u6700\u5927\u7db2\u7f85\u7387 \u5e73\u5747\u7db2\u7f85\u7387 \u7dcf\u767a\u751f\u6570 CVE \u5408\u8a08\u4ef6\u6570 40 24.19% 3.00% 6.46 6.78 77.25% 42.51% 262,407 2,691"},{"location":"ja/A04_2021-Insecure_Design/#_2","title":"\u6982\u8981","text":"<p>2021\u5e74\u306e\u65b0\u30ab\u30c6\u30b4\u30ea\u30fc\u3067\u306f\u3001\u8a2d\u8a08\u3084\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u6b20\u9665\u306b\u95a2\u3059\u308b\u30ea\u30b9\u30af\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002 \u79c1\u305f\u3061\u306f\u8105\u5a01\u306e\u30e2\u30c7\u30eb\u5316\u3001\u30bb\u30ad\u30e5\u30a2\u306a\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u304a\u3088\u3073\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306a\u3069\u3092\u3082\u3063\u3068\u5229\u7528\u3057\u3066\u3044\u304f\u3053\u3068\u304c\u5fc5\u8981\u3067\u3059\u3002 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3068\u3057\u3066\u3001\u79c1\u305f\u3061\u306f\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30da\u30fc\u30b9\u3067\u306e\u300cshift-left\u300d\u3092\u8d85\u3048\u3001Secure by Design\u306e\u539f\u5247\u306b\u4e0d\u53ef\u6b20\u306a\u30d7\u30ec\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u6d3b\u52d5\u306b\u79fb\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u6ce8\u76ee\u3059\u3079\u304d CWE (Common Weakness Enumerations) \u306f\u3001CWE-209: \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u306e\u60c5\u5831\u6f0f\u6d29\u3001CWE-256: \u4fdd\u8b77\u3055\u308c\u3066\u3044\u306a\u3044\u8a8d\u8a3c\u60c5\u5831\u306e\u4fdd\u5b58\u3001CWE-501: \u4fe1\u983c\u5883\u754c\u7dda\u306e\u4fb5\u5bb3\u304a\u3088\u3073\u3001CWE-522: \u9069\u5207\u306b\u4fdd\u8b77\u3055\u308c\u3066\u3044\u306a\u3044\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb \u306a\u3069\u3067\u3059\u3002</p>"},{"location":"ja/A04_2021-Insecure_Design/#_3","title":"\u8aac\u660e","text":"<p>\u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u306a\u3044\u4e0d\u5b89\u306a\u8a2d\u8a08\u3068\u306f\u3001\u69d8\u3005\u306a\u8106\u5f31\u6027\u3092\u8868\u3059\u5e83\u7bc4\u306a\u30ab\u30c6\u30b4\u30ea\u30fc\u3067\u3042\u308a\u3001\u300c\u6b20\u843d\u3057\u305f\u3001\u3042\u308b\u3044\u306f\u4e0d\u5341\u5206\u306a\u5236\u5fa1\u8a2d\u8a08\u300d\u3068\u3082\u8868\u3055\u308c\u307e\u3059\u3002 \u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u306a\u3044\u4e0d\u5b89\u306a\u8a2d\u8a08\u306f\u3001\u4ed6\u306eTop10\u30ea\u30b9\u30af\u30ab\u30c6\u30b4\u30ea\u306e\u539f\u56e0\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u5b89\u5168\u3067\u306a\u3044\u8a2d\u8a08\u3068\u5b89\u5168\u3067\u306a\u3044\u5b9f\u88c5\u306f\u7570\u306a\u308a\u307e\u3059\u3002\u8a2d\u8a08\u4e0a\u306e\u6b20\u9665\u3068\u5b9f\u88c5\u4e0a\u306e\u6b20\u9665\u3092\u533a\u5225\u3059\u308b\u306e\u306b\u306f\u7406\u7531\u304c\u3042\u308a\u3001\u6839\u672c\u7684\u306a\u539f\u56e0\u3068\u6539\u5584\u65b9\u6cd5\u304c\u7570\u306a\u308b\u304b\u3089\u3067\u3059\u3002 \u5b89\u5168\u306a\u8a2d\u8a08\u3067\u3042\u3063\u3066\u3082\u3001\u5b9f\u88c5\u4e0a\u306e\u6b20\u9665\u304c\u3042\u308b\u3068\u3001\u305d\u308c\u304c\u60aa\u7528\u3055\u308c\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u8106\u5f31\u6027\u306b\u3064\u306a\u304c\u308a\u307e\u3059\u3002 \u5b89\u5168\u3067\u306a\u3044\u8a2d\u8a08\u306f\u3001\u5b8c\u74a7\u306a\u5b9f\u88c5\u306b\u3088\u3063\u3066\u4fee\u6b63\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u5b9a\u7fa9\u4e0a\u3001\u7279\u5b9a\u306e\u653b\u6483\u3092\u9632\u5fa1\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5236\u5fa1\u304c\u4f5c\u6210\u3055\u308c\u305f\u3053\u3068\u306f\u306a\u3044\u304b\u3089\u3067\u3059\u3002 \u5b89\u5168\u3067\u306a\u3044\u8a2d\u8a08\u306e\u8981\u56e0\u306e\u4e00\u3064\u3068\u3057\u3066\u3001\u958b\u767a\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3084\u30b7\u30b9\u30c6\u30e0\u306b\u5185\u5728\u3059\u308b\u30d3\u30b8\u30cd\u30b9\u30ea\u30b9\u30af\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u304c\u884c\u308f\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u306b\u3001\u3069\u306e\u30ec\u30d9\u30eb\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8a2d\u8a08\u304c\u5fc5\u8981\u306a\u306e\u304b\u3092\u5224\u65ad\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002</p>"},{"location":"ja/A04_2021-Insecure_Design/#_4","title":"\u8981\u4ef6\u3068\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30b8\u30e1\u30f3\u30c8","text":"<p>\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u8cc7\u7523\u306e\u6a5f\u5bc6\u6027\u3001\u5b8c\u5168\u6027\u3001\u53ef\u7528\u6027\u3001\u305d\u3057\u3066\u771f\u6b63\u6027\u306b\u95a2\u3059\u308b\u4fdd\u8b77\u8981\u4ef6\u304a\u3088\u3073\u3001\u671f\u5f85\u3055\u308c\u308b\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306a\u3069\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30b8\u30cd\u30b9\u8981\u4ef6\u3092\u53ce\u96c6\u3057\u3001\u4e8b\u696d\u90e8\u9580\u3068\u5354\u8b70\u3057\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u516c\u958b\u3055\u308c\u308b\u7a0b\u5ea6\u306b\u5fdc\u3058\u3066\u3001\uff08\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306b\u52a0\u3048\u3066\uff09\u30c6\u30ca\u30f3\u30c8\u3092\u5206\u96e2\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6a5f\u80fd\u7684\u304a\u3088\u3073\u975e\u6a5f\u80fd\u7684\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8981\u4ef6\u3092\u542b\u3080\u3001\u6280\u8853\u7684\u306a\u8981\u4ef6\u3092\u307e\u3068\u3081\u307e\u3059\u3002 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6d3b\u52d5\u3092\u542b\u3080\u8a2d\u8a08\u3001\u69cb\u7bc9\u3001\u30c6\u30b9\u30c8\u304a\u3088\u3073\u3001\u904b\u7528\u306e\u3059\u3079\u3066\u3092\u30ab\u30d0\u30fc\u3059\u308b\u4e88\u7b97\u3092\u8a08\u753b\u3057\u3001\u4e8b\u696d\u90e8\u9580\u3068\u5354\u8b70\u3057\u307e\u3059\u3002</p>"},{"location":"ja/A04_2021-Insecure_Design/#_5","title":"\u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u305f\u5b89\u5fc3\u306a\u8a2d\u8a08","text":"<p>\u300c\u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u305f\u5b89\u5fc3\u306a\u8a2d\u8a08\u300d\u3068\u306f\u3001\u5e38\u306b\u8105\u5a01\u3092\u8a55\u4fa1\u3057\u3001\u65e2\u77e5\u306e\u653b\u6483\u65b9\u6cd5\u3092\u9632\u3050\u305f\u3081\u306b\u30b3\u30fc\u30c9\u3092\u5805\u7262\u306b\u8a2d\u8a08\u3057\u3001\u30c6\u30b9\u30c8\u3059\u308b\u6587\u5316\u3068\u65b9\u6cd5\u8ad6\u306e\u3053\u3068\u3067\u3059\u3002 \u30c7\u30fc\u30bf\u30d5\u30ed\u30fc\u3084\u30a2\u30af\u30bb\u30b9\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u306a\u3069\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u306e\u5909\u66f4\u3092\u78ba\u8a8d\u3059\u308b\u30bb\u30c3\u30b7\u30e7\u30f3\uff08\u307e\u305f\u306f\u540c\u69d8\u306e\u6d3b\u52d5\uff09\u306b\u8105\u5a01\u306e\u30e2\u30c7\u30eb\u5316\u3092\u7d71\u5408\u3059\u308b\u3079\u304d\u3067\u3059\u3002 \u30e6\u30fc\u30b6\u30b9\u30c8\u30fc\u30ea\u30fc\u306e\u958b\u767a\u306b\u304a\u3044\u3066\u306f\u3001\u6b63\u5e38\u306a\u30d5\u30ed\u30fc\u53ca\u3073\u969c\u5bb3\u306e\u72b6\u614b\u3092\u6c7a\u5b9a\u3057\u3001\u8cac\u4efb\u8005\u304a\u3088\u3073\u3001\u5f71\u97ff\u3092\u53d7\u3051\u308b\u5f53\u4e8b\u8005\u304c\u305d\u308c\u3089\u3092\u5341\u5206\u306b\u7406\u89e3\u3057\u5408\u610f\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6b63\u5e38\u7cfb\u3068\u7570\u5e38\u7cfb\u306e\u30d5\u30ed\u30fc\u306e\u4eee\u8aac\u3068\u6761\u4ef6\u3092\u5206\u6790\u3057\u3001\u305d\u308c\u3089\u304c\u6b63\u78ba\u3067\u3042\u308a\u671f\u5f85\u3055\u308c\u308b\u7269\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u4eee\u8aac\u3092\u691c\u8a3c\u3057\u3001\u9069\u5207\u306a\u52d5\u4f5c\u306b\u5fc5\u8981\u306a\u6761\u4ef6\u3092\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u3092\u6c7a\u5b9a\u3057\u3001\u7d50\u679c\u3092\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc\u3068\u3057\u3066\u78ba\u5b9f\u306b\u6587\u66f8\u5316\u3057\u307e\u3057\u3087\u3046\u3002 \u5931\u6557\u304b\u3089\u5b66\u3073\u3001\u6539\u5584\u3092\u4fc3\u9032\u3059\u308b\u305f\u3081\u306e\u7a4d\u6975\u7684\u306a\u30a4\u30f3\u30bb\u30f3\u30c6\u30a3\u30d6\u3092\u63d0\u4f9b\u3057\u3066\u3044\u304f\u3053\u3068\u304c\u809d\u8981\u3067\u3059\u3002\u300c\u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u305f\u5b89\u5fc3\u306a\u8a2d\u8a08\u300d\u3068\u306f\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306b\u8ffd\u52a0\u3067\u304d\u308b\u30a2\u30c9\u30aa\u30f3\u3067\u3082\u30c4\u30fc\u30eb\u3067\u3082\u3042\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"ja/A04_2021-Insecure_Design/#secure-development-lifecycle","title":"Secure Development Lifecycle","text":"<p>\u300c\u5b89\u5168\u304c\u78ba\u8a8d\u3055\u308c\u305f\u5b89\u5fc3\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u300d\u3092\u5b9f\u73fe\u3059\u308b\u306b\u306f\u3001\u30bb\u30ad\u30e5\u30a2\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3001\u4f55\u3089\u304b\u306e\u30bb\u30ad\u30e5\u30a2\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3001\u300c\u30da\u30a4\u30d6\u30c9\u30fb\u30ed\u30fc\u30c9\u300d\u65b9\u6cd5\u8ad6\u3001\u5b89\u5168\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3001\u30c4\u30fc\u30eb\u3001\u304a\u3088\u3073\u8105\u5a01\u306e\u30e2\u30c7\u30eb\u5316\u304c\u5fc5\u8981\u3067\u3059\u3002 \u5168\u3066\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u958b\u767a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u671f\u9593\u3092\u901a\u3057\u3066\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u958b\u59cb\u6642\u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u5c02\u9580\u5bb6\u306b\u58f0\u3092\u304b\u3051\u3066\u304f\u3060\u3055\u3044\u3002 OWASP \u30bd\u30d5\u30c8\u30a6\u30a8\u30a2\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4fdd\u8a3c\u6210\u719f\u5ea6\u30e2\u30c7\u30eb(OWASP SAMM) \u3092\u6d3b\u7528\u3057\u3066\u3001\u5b89\u5168\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u306b\u53d6\u308a\u7d44\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"ja/A04_2021-Insecure_Design/#_6","title":"\u9632\u6b62\u65b9\u6cd5","text":"<ul> <li> <p>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u304a\u3088\u3073\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u95a2\u9023\u306e\u7ba1\u7406\u7b56\u306e\u8a55\u4fa1\u304a\u3088\u3073\u8a2d\u8a08\u3092\u652f\u63f4\u3059\u308b\u305f\u3081\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u5c02\u9580\u5bb6\u3068\u3068\u3082\u306b\u30bb\u30ad\u30e5\u30a2\u306a\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u78ba\u7acb\u3057\u4f7f\u7528\u3059\u308b</p> </li> <li> <p>\u30bb\u30ad\u30e5\u30a2\u306a\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u307e\u305f\u306f\u3001\u4fe1\u983c\u6027\u304c\u9ad8\u304f\u5b89\u5168\u6027\u3082\u691c\u8a3c\u3055\u308c\u3066\u3044\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u69cb\u7bc9\u3057\u4f7f\u7528\u3059\u308b</p> </li> <li> <p>\u91cd\u8981\u306a\u8a8d\u8a3c\u3001\u30a2\u30af\u30bb\u30b9\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3001\u304a\u3088\u3073\u6697\u53f7\u9375\u306e\u7ba1\u7406\u30d5\u30ed\u30fc\u306b\u8105\u5a01\u30e2\u30c7\u30eb\u3092\u4f7f\u7528\u3059\u308b</p> </li> <li> <p>\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc\u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8a00\u8a9e\u3068\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3092\u7d44\u307f\u8fbc\u3080</p> </li> <li> <p>(\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u304b\u3089\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u307e\u3067)\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5404\u5c64\u306b\u59a5\u5f53\u6027\u30c1\u30a7\u30c3\u30af\u3092\u7d71\u5408\u3059\u308b</p> </li> <li> <p>\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u304a\u3088\u3073\u7d71\u5408\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3057\u3001\u3059\u3079\u3066\u306e\u91cd\u8981\u306a\u30d5\u30ed\u30fc\u304c\u8105\u5a01\u30e2\u30c7\u30eb\u306b\u5bfe\u3057\u3066\u8010\u6027\u304c\u3042\u308b\u3053\u3068\u3092\u691c\u8a3c\u3059\u308b\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5404\u968e\u5c64\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3068\u30df\u30b9\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u307e\u3068\u3081\u308b</p> </li> <li> <p>\u30ea\u30b9\u30af\u7ba1\u7406\u306b\u304a\u3051\u308b\u4fdd\u8b77\u306e\u5fc5\u8981\u6027\u306b\u5fdc\u3058\u3066\u3001\u30b7\u30b9\u30c6\u30e0\u5c64\u3068\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5c64\u306e\u968e\u5c64\u3092\u5206\u3051\u308b</p> </li> <li> <p>\u3059\u3079\u3066\u306e\u968e\u5c64\u3067\u30c6\u30ca\u30f3\u30c8\u3092\u5206\u96e2\u3057\u305f\u5805\u7262\u306a\u8a2d\u8a08\u3092\u884c\u3046</p> </li> <li> <p>\u30e6\u30fc\u30b6\u30fc\u3084\u30b5\u30fc\u30d3\u30b9\u306b\u3088\u308b\u904e\u5270\u306a\u30ea\u30bd\u30fc\u30b9\u6d88\u8cbb\u3092\u5236\u9650\u3059\u308b</p> </li> </ul>"},{"location":"ja/A04_2021-Insecure_Design/#_7","title":"\u653b\u6483\u30b7\u30ca\u30ea\u30aa\u306e\u4f8b","text":"<p>\u30b7\u30ca\u30ea\u30aa #1: </p> <p>\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u306e\u56de\u5fa9\u30d5\u30ed\u30fc\u306b\u306f\u300c\u79d8\u5bc6\u306e\u8cea\u554f\u3068\u7b54\u3048\u300d\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u300c\u79d8\u5bc6\u306e\u8cea\u554f\u3068\u7b54\u3048\u300d\u306f\u3001NIST 800-63b\u3001OWASP ASVS\u3001\u304a\u3088\u3073 OWASP Top 10 \u3067\u7981\u6b62\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u300c\u79d8\u5bc6\u306e\u8cea\u554f\u3068\u7b54\u3048\u300d\u306f\u8907\u6570\u306e\u4eba\u304c\u7b54\u3048\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u305f\u3081\u3001\u30a2\u30a4\u30c7\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u8a3c\u62e0\u3068\u3057\u3066\u4fe1\u983c\u3067\u304d\u306a\u3044\u305f\u3081\u3067\u3059\u3002 \u3053\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306f\u524a\u9664\u3057\u3001\u3088\u308a\u5b89\u5168\u306a\u8a2d\u8a08\u306b\u7f6e\u304d\u63db\u3048\u308b\u3079\u304d\u3067\u3059\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #2: </p> <p>\u3042\u308b\u6620\u753b\u9928\u30c1\u30a7\u30fc\u30f3\u3067\u306f\u56e3\u4f53\u4e88\u7d04\u306b\u3088\u308b\u5272\u5f15\u3092\u8a8d\u3081\u3066\u304a\u308a\u3001\u6700\u5927 15 \u540d\u307e\u3067\u306f\u4e88\u7d04\u4fdd\u8a3c\u91d1\u304c\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002 \u653b\u6483\u8005\u306f\u3001\u3053\u306e\u30d5\u30ed\u30fc\u306b\u5bfe\u3059\u308b\u8105\u5a01\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3057\u3001\u6570\u56de\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067600\u5e2d\u3068\u3059\u3079\u3066\u306e\u6620\u753b\u9928\u3092\u4e00\u5ea6\u306b\u4e88\u7d04\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u30c6\u30b9\u30c8\u3057\u3001\u5927\u898f\u6a21\u306a\u640d\u5931\u3092\u5f15\u304d\u8d77\u3053\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #3: </p> <p>\u3042\u308b\u5c0f\u58f2\u30c1\u30a7\u30fc\u30f3\u306e\u96fb\u5b50\u5546\u53d6\u5f15\u30b5\u30a4\u30c8\u3067\u306f\u3001\u30c0\u30d5\u5c4b\u304c\u30aa\u30fc\u30af\u30b7\u30e7\u30f3\u30b5\u30a4\u30c8\u306b\u8ee2\u58f2\u3059\u308b\u305f\u3081\u306b\u9ad8\u7d1a\u30d3\u30c7\u30aa\u30ab\u30fc\u30c9\u3092\u8cfc\u5165\u3059\u308b\u30dc\u30c3\u30c8\u3078\u306e\u5bfe\u7b56\u304c\u306a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 \u3053\u306e\u7d50\u679c\u3001\u30d3\u30c7\u30aa\u30ab\u30fc\u30c9\u30e1\u30fc\u30ab\u30fc\u3084\u5c0f\u58f2\u30c1\u30a7\u30fc\u30f3\u5e97\u306b\u3068\u3063\u3066\u306f\u6700\u60aa\u306e\u8a55\u5224\u3068\u306a\u308a\u3001\u3053\u308c\u3089\u306e\u30ab\u30fc\u30c9\u3092\u307e\u3063\u305f\u304f\u624b\u306b\u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u71b1\u72c2\u7684\u306a\u30d5\u30a1\u30f3\u306b\u3068\u3063\u3066\u306f\u4e0d\u5e78\u3092\u3082\u305f\u3089\u3057\u307e\u3059\u3002 \u6ce8\u610f\u6df1\u3044\u30dc\u30c3\u30c8\u5bfe\u7b56\u306e\u8a2d\u8a08\u3084\u3001\u5165\u624b\u53ef\u80fd\u306b\u306a\u3063\u3066\u304b\u3089\u6570\u79d2\u4ee5\u5185\u306b\u8cfc\u5165\u3055\u308c\u305f\u5834\u5408\u306a\u3069\u306e\u30c9\u30e1\u30a4\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001\u975e\u6b63\u898f\u306e\u8cfc\u5165\u3092\u8b58\u5225\u3057\u3001\u305d\u306e\u3088\u3046\u306a\u53d6\u5f15\u3092\u62d2\u5426\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002</p>"},{"location":"ja/A04_2021-Insecure_Design/#_8","title":"\u53c2\u8003\u8cc7\u6599","text":"<ul> <li> <p>OWASP Cheat Sheet: Secure Design Principles</p> </li> <li> <p>OWASP SAMM: Design:Security Architecture</p> </li> <li> <p>OWASP SAMM: Design:Threat Assessment </p> </li> <li> <p>NIST \u2013 Guidelines on Minimum Standards for Developer Verification of Software</p> </li> <li> <p>The Threat Modeling Manifesto</p> </li> <li> <p>Awesome Threat Modeling</p> </li> </ul>"},{"location":"ja/A04_2021-Insecure_Design/#cwe","title":"\u5bfe\u5fdc\u3059\u308b CWE \u306e\u30ea\u30b9\u30c8","text":"<p>CWE-73 \u30d5\u30a1\u30a4\u30eb\u540d\u3084\u30d1\u30b9\u540d\u306e\u5916\u90e8\u5236\u5fa1</p> <p>CWE-183 \u8a31\u5bb9\u7bc4\u56f2\u304c\u5e83\u3059\u304e\u308b\u5165\u529b\u5236\u9650</p> <p>CWE-209 \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u306e\u60c5\u5831\u6f0f\u6d29</p> <p>CWE-213 \u4e92\u63db\u6027\u306e\u306a\u3044\u30dd\u30ea\u30b7\u30fc\u306b\u3088\u308b\u6a5f\u5bc6\u60c5\u5831\u306e\u6f0f\u6d29</p> <p>CWE-235 \u60f3\u5b9a\u3092\u8d85\u3048\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4e0d\u9069\u5207\u306a\u51e6\u7406</p> <p>CWE-256 \u30d1\u30b9\u30ef\u30fc\u30c9\u306a\u3069\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u304c\u5e73\u6587\u306e\u307e\u307e\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u554f\u984c</p> <p>CWE-257 \u5fa9\u5143\u53ef\u80fd\u306a\u5f62\u5f0f\u3067\u4fdd\u5b58\u3055\u308c\u305f\u30d1\u30b9\u30ef\u30fc\u30c9</p> <p>CWE-266 \u4e0d\u6b63\u78ba\u306a\u7279\u6a29\u306e\u5272\u308a\u5f53\u3066</p> <p>CWE-269 \u4e0d\u9069\u5207\u306a\u7279\u6a29\u7ba1\u7406</p> <p>CWE-280 \u6a29\u9650\u7ba1\u7406\u306e\u4e0d\u5099</p> <p>CWE-311 \u91cd\u8981\u306a\u60c5\u5831\u3092\u6697\u53f7\u5316\u3057\u3066\u3044\u306a\u3044\u554f\u984c</p> <p>CWE-312 \u91cd\u8981\u306a\u60c5\u5831\u304c\u5e73\u6587\u306e\u307e\u307e\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u554f\u984c</p> <p>CWE-313 \u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30b9\u30af\u306b\u5e73\u6587\u306e\u307e\u307e\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u554f\u984c</p> <p>CWE-316 \u30e1\u30e2\u30ea\u4e0a\u306b\u5e73\u6587\u306e\u307e\u307e\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u554f\u984c</p> <p>CWE-419 \u4fdd\u8b77\u3055\u308c\u3066\u3044\u306a\u3044\u30d7\u30e9\u30a4\u30de\u30ea\u30fc\u30c1\u30e3\u30cd\u30eb</p> <p>CWE-430 \u8aa4\u3063\u305f\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u914d\u7f6e</p> <p>CWE-434 \u9069\u5207\u3067\u306a\u3044\u30a2\u30c3\u30d7\u30ed\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u5236\u9650</p> <p>CWE-444 HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u77db\u76fe\u3057\u305f\u89e3\u91c8\uff08HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u30b9\u30de\u30b0\u30ea\u30f3\u30b0\uff09</p> <p>CWE-451 \u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\uff08UI\uff09\u306b\u3088\u308b\u91cd\u8981\u60c5\u5831\u306e\u8aa4\u8868\u793a</p> <p>CWE-472 \u4e0d\u5909\u3068\u4eee\u5b9a\u3055\u308c\u308b Web \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5916\u90e8\u5236\u5fa1</p> <p>CWE-501 \u4fe1\u983c\u5883\u754c\u7dda\u306e\u4fb5\u5bb3</p> <p>CWE-522 \u5341\u5206\u3067\u306a\u3044\u8cc7\u683c\u60c5\u5831\u4fdd\u8b77</p> <p>CWE-525 \u6a5f\u5bc6\u60c5\u5831\u3092\u542b\u3080Web\u30d6\u30e9\u30a6\u30b6\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4f7f\u7528</p> <p>CWE-539 \u6a5f\u5bc6\u60c5\u5831\u3092\u542b\u3080\u30d1\u30fc\u30b7\u30b9\u30c6\u30f3\u30c8\u30af\u30c3\u30ad\u30fc\u306e\u4f7f\u7528</p> <p>CWE-579 J2EE\u306e\u30d0\u30c3\u30c9\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\uff1a\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u683c\u7d0d\u3055\u308c\u305f\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u4e0d\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</p> <p>CWE-598 GET\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30af\u30a8\u30ea\u6587\u5b57\u5217\u304b\u3089\u306e\u60c5\u5831\u6f0f\u6d29</p> <p>CWE-602 \u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u5b9f\u65bd</p> <p>CWE-642 \u91cd\u8981\u306a\u72b6\u614b\u30c7\u30fc\u30bf\u306e\u5916\u90e8\u5236\u5fa1</p> <p>CWE-646 \u5916\u90e8\u304b\u3089\u63d0\u4f9b\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u62e1\u5f35\u5b50\u3078\u306e\u4f9d\u5b58</p> <p>CWE-650 \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306b\u304a\u3051\u308b HTTP \u30e1\u30bd\u30c3\u30c9\u3078\u306e\u904e\u5270\u306a\u4fe1\u983c</p> <p>CWE-653 \u4e0d\u5341\u5206\u306a\u30b3\u30f3\u30d1\u30fc\u30c8\u30e1\u30f3\u30c8\u5316</p> <p>CWE-656 \u96a0\u307a\u3044\u306b\u3088\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3078\u306e\u4f9d\u5b58</p> <p>CWE-657 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8a2d\u8a08\u539f\u5247\u306e\u9055\u53cd</p> <p>CWE-799 \u9069\u5207\u3067\u306a\u3044\u76f8\u4e92\u4f5c\u7528\u306b\u5bfe\u3059\u308b\u983b\u5ea6\u5236\u5fa1</p> <p>CWE-807 \u4fe1\u983c\u3067\u304d\u306a\u3044\u5165\u529b\u306b\u57fa\u3065\u3044\u305f\u5224\u65ad\u3078\u306e\u4f9d\u5b58</p> <p>CWE-840 \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306e\u30a8\u30e9\u30fc</p> <p>CWE-841 \u30e6\u30fc\u30b6\u30fc\u306e\u632f\u308b\u821e\u3044\u306b\u57fa\u3065\u3044\u305f\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306b\u4f9d\u5b58\u3057\u305f\u4e0d\u9069\u5207\u306a\u51e6\u7406\u306e\u5b9f\u65bd</p> <p>CWE-927 \u30bb\u30f3\u30b7\u30c6\u30a3\u30d6\u306a\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u3078\u306e\u6697\u9ed9\u7684\u30a4\u30f3\u30c6\u30f3\u30c8\u306e\u4f7f\u7528</p> <p>CWE-1021 \u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u305fUI\u30ec\u30a4\u30e4\u30fc\u3084\u30d5\u30ec\u30fc\u30e0\u306e\u4e0d\u9069\u5207\u306a\u5236\u9650</p> <p>CWE-1173 \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u4e0d\u9069\u5207\u306a\u4f7f\u7528</p>"},{"location":"ja/A04_2021-Insecure_Design/#a042021-insecure-design","title":"A04:2021 \u2013 Insecure Design","text":""},{"location":"ja/A04_2021-Insecure_Design/#secure-development-lifecycle_1","title":"Secure Development Lifecycle","text":"<p>Secure software requires a secure development lifecycle, some form of secure design pattern, paved road methodology, secured component library, tooling, and threat modeling. Reach out for your security specialists at the beginning of a software project throughout the whole project and maintenance of your software. Consider leveraging the OWASP Software Assurance Maturity Model (SAMM) to help structure your secure software development efforts.</p>"},{"location":"ja/A04_2021-Insecure_Design/#how-to-prevent","title":"How to Prevent","text":"<ul> <li> <p>Establish and use a secure development lifecycle with AppSec     professionals to help evaluate and design security and     privacy-related controls</p> </li> <li> <p>Establish and use a library of secure design patterns or paved road     ready to use components</p> </li> <li> <p>Use threat modeling for critical authentication, access control,     business logic, and key flows</p> </li> <li> <p>Integrate security language and controls into user stories</p> </li> <li> <p>Integrate plausibility checks at each tier of your application     (from frontend to backend)</p> </li> <li> <p>Write unit and integration tests to validate that all critical flows     are resistant to the threat model. Compile use-cases and misuse-cases     for each tier of your application.</p> </li> <li> <p>Segregate tier layers on the system and network layers depending on the     exposure and protection needs</p> </li> <li> <p>Segregate tenants robustly by design throughout all tiers</p> </li> <li> <p>Limit resource consumption by user or service</p> </li> </ul>"},{"location":"ja/A05_2021-Security_Misconfiguration/","title":"A05:2021-\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u8a2d\u5b9a\u30df\u30b9","text":""},{"location":"ja/A05_2021-Security_Misconfiguration/#_1","title":"\u56e0\u5b50","text":"\u5bfe\u5fdc\u3059\u308b CWE \u6570 \u6700\u5927\u767a\u751f\u7387 \u5e73\u5747\u767a\u751f\u7387 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306e\u96e3\u6613\u5ea6\uff09 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306b\u3088\u308b\u5f71\u97ff\uff09 \u6700\u5927\u7db2\u7f85\u7387 \u5e73\u5747\u7db2\u7f85\u7387 \u7dcf\u767a\u751f\u6570 CVE \u5408\u8a08\u4ef6\u6570 20 19.84% 4.51% 89.58% 44.84% 8.12 6.56 208,387 789"},{"location":"ja/A05_2021-Security_Misconfiguration/#_2","title":"\u6982\u8981","text":"<p>\u524d\u56de\u306e 6 \u4f4d\u304b\u3089\u9806\u4f4d\u3092\u4e0a\u3052\u307e\u3057\u305f\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e 90 \uff05\u306b\u306f\u4f55\u3089\u304b\u306e\u8a2d\u5b9a\u30df\u30b9\u304c\u78ba\u8a8d\u3055\u308c\u3001\u5e73\u5747\u767a\u751f\u7387\u306f 4 \uff05\u3067\u3042\u308a\u300120 \u4e07 8 \u5343\u4ee5\u4e0a\u306eCWE\u304c\u767a\u751f\u3057\u3066\u3044\u307e\u3057\u305f\u3002 \u9ad8\u5ea6\u306a\u8a2d\u5b9a\u304c\u53ef\u80fd\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3078\u306e\u79fb\u884c\u304c\u9032\u3080\u4e2d\u3067\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u9806\u4f4d\u304c\u4e0a\u304c\u3063\u305f\u3053\u3068\u306f\u5f53\u7136\u3068\u8a00\u3048\u307e\u3059\u3002 \u6ce8\u76ee\u3059\u3079\u304d CWE (Common Weakness Enumeration) \u306f CWE-16 \u8a2d\u5b9a\u306e\u554f\u984c \u3068 CWE-611 \u5916\u90e8\u306b\u7f6e\u304b\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u547c\u3073\u51fa\u3059 XXE (Xml eXternal Entity) \u554f\u984c \u3067\u3059\u3002</p>"},{"location":"ja/A05_2021-Security_Misconfiguration/#_3","title":"\u8aac\u660e","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u4e0b\u8a18\u306e\u3088\u3046\u306a\u3089\u3001\u6050\u3089\u304f\u8106\u5f31\u3067\u3059:</p> <ul> <li> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b9\u30bf\u30c3\u30af\u306e\u3044\u305a\u308c\u304b\u306e\u90e8\u5206\u306b\u304a\u3051\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5805\u7262\u5316\u306e\u4e0d\u8db3\u3001\u3042\u308b\u3044\u306f\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u3067\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u304c\u4e0d\u9069\u5207\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b</p> </li> <li> <p>\u5fc5\u8981\u306e\u306a\u3044\u6a5f\u80fd\u304c\u6709\u52b9\u3001\u3042\u308b\u3044\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b(\u4f8b\u3048\u3070\u3001\u5fc5\u8981\u306e\u306a\u3044\u30dd\u30fc\u30c8\u3084\u30b5\u30fc\u30d3\u30b9\u3001\u30da\u30fc\u30b8\u3001\u30a2\u30ab\u30a6\u30f3\u30c8\u3001\u7279\u6a29)</p> </li> <li> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6709\u52b9\u306b\u306a\u3063\u305f\u307e\u307e\u5909\u66f4\u3055\u308c\u3066\u3044\u306a\u3044</p> </li> <li> <p>\u30a8\u30e9\u30fc\u51e6\u7406\u304c\u30e6\u30fc\u30b6\u306b\u5bfe\u3057\u3066\u3001\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3084\u305d\u306e\u4ed6\u4f59\u8a08\u306a\u60c5\u5831\u3092\u542b\u3080\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u898b\u305b\u308b</p> </li> <li> <p>\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3057\u305f\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u3001\u6700\u65b0\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6a5f\u80fd\u304c\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044</p> </li> <li> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af(\u4f8b\u3048\u3070\u3001Struts\u3001Spring\u3001 ASP.NET)\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u7b49\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u8a2d\u5b9a\u304c\u3001\u5b89\u5168\u306a\u5024\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044</p> </li> <li> <p>\u30b5\u30fc\u30d0\u304c\u30bb\u30ad\u30e5\u30ea\u30c6\u30a4\u30d8\u30c3\u30c0\u30fc\u3084\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3092\u9001\u3089\u306a\u304b\u3063\u305f\u308a\u3001\u5b89\u5168\u306a\u5024\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u308a\u3059\u308b</p> </li> <li> <p>\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u53e4\u3044\u304b\u8106\u5f31\u3067\u3042\u308b\u3002(# A06:2021 \u2013 \u8106\u5f31\u3067\u53e4\u304f\u306a\u3063\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u3092\u53c2\u7167)</p> </li> </ul> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u8a2d\u5b9a\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u3092\u5354\u8abf\u3057\u3066\u7e70\u308a\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u306a\u3051\u308c\u3070\u3001\u30b7\u30b9\u30c6\u30e0\u306f\u3088\u308a\u9ad8\u3044\u30ea\u30b9\u30af\u306b\u3055\u3089\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ja/A05_2021-Security_Misconfiguration/#_4","title":"\u9632\u6b62\u65b9\u6cd5","text":"<p>\u5b89\u5168\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u306b\u304a\u3044\u3066\u3001\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u5b9f\u65bd\u3059\u3079\u304d\u3067\u3059:</p> <ul> <li> <p>\u7e70\u308a\u8fd4\u3057\u5805\u7262\u5316\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u306f\u3001\u7d20\u65e9\u304f\u304b\u3064\u5bb9\u6613\u306b\u4ed6\u306e\u74b0\u5883\u306b\u5c55\u958b\u3055\u308c\u3001\u6b63\u3057\u304f\u30ed\u30c3\u30af\u30c0\u30a6\u30f3\u3059\u308b\u3053\u3068\u3002     \u958b\u767a\u3084QA\u3001\u672c\u756a\u74b0\u5883\u306f\u5b8c\u5168\u306b\u540c\u3058\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u74b0\u5883\u3067\u5225\u3005\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3002     \u3053\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u81ea\u52d5\u5316\u3057\u3001\u65b0\u3057\u3044\u5b89\u5168\u306a\u74b0\u5883\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u969b\u306b\u306f\u3001\u624b\u9593\u3092\u6700\u5c0f\u9650\u306b\u3059\u308b\u3053\u3068\u3002</p> </li> <li> <p>\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306f\u6700\u5c0f\u9650\u306e\u3082\u306e\u3068\u3057\u3001\u5fc5\u8981\u306e\u306a\u3044\u6a5f\u80fd\u3084\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u9664\u304f\u3053\u3068\u3002     \u4f7f\u7528\u3057\u306a\u3044\u6a5f\u80fd\u3068\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u3001\u524a\u9664\u3082\u3057\u304f\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u306a\u3044\u3053\u3068\u3002</p> </li> <li> <p>\u30ec\u30d3\u30e5\u30fc\u3092\u5b9f\u65bd\u3057\u3066\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u95a2\u9023\u306e\u8a18\u9332\u3068\u66f4\u65b0\u306e\u5168\u3066\u306b\u52a0\u3048\u3001\u30d1\u30c3\u30c1\u3092\u7ba1\u7406\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u306e\u4e00\u74b0\u3068\u3057\u3066\u30d1\u30c3\u30c1\u306e\u8a2d\u5b9a\u3092\u9069\u5207\u306b\u66f4\u65b0\u3059\u308b\u3053\u3068(# A06:2021 \u2013 \u8106\u5f31\u3067\u53e4\u304f\u306a\u3063\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u3092\u53c2\u7167)\u3002     \u30af\u30e9\u30a6\u30c9\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u306f\u3001\u8a73\u7d30\u306b\u30ec\u30d3\u30e5\u30fc\u3059\u308b\u3053\u3068 (\u4f8b\u3048\u3070\u3001S3 \u30d0\u30b1\u30c3\u30c8\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3)\u3002</p> </li> <li> <p>\u30bb\u30b0\u30e1\u30f3\u30c8\u5316\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u3001\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3084\u30b3\u30f3\u30c6\u30ca\u30ea\u30bc\u30fc\u30b7\u30e7\u30f3\u3001\u30af\u30e9\u30a6\u30c9\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7(ACL)\u3092\u3068\u3082\u306a\u3063\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3084\u30c6\u30ca\u30f3\u30c8\u9593\u306b\u3001\u52b9\u679c\u7684\u3067\u5b89\u5168\u306a\u4ed5\u5207\u308a\u3092\u3082\u305f\u3089\u3059\u3002</p> </li> <li> <p>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078\u9001\u308b\u3053\u3068\u3002\u4f8b\u3068\u3057\u3066\u306f \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d8\u30c3\u30c0\u30fc \u304c\u6319\u3052\u3089\u308c\u308b\u3002</p> </li> <li> <p>\u30d7\u30ed\u30bb\u30b9\u3092\u81ea\u52d5\u5316\u3057\u3066\u8a2d\u5b9a\u306e\u6709\u52b9\u6027\u3092\u691c\u8a3c\u3057\u3001\u74b0\u5883\u3059\u3079\u3066\u306b\u9069\u7528\u3059\u308b\u3053\u3068\u3002</p> </li> </ul>"},{"location":"ja/A05_2021-Security_Misconfiguration/#_5","title":"\u653b\u6483\u30b7\u30ca\u30ea\u30aa\u306e\u4f8b","text":"<p>\u30b7\u30ca\u30ea\u30aa #1: </p> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u4ed8\u5c5e\u3057\u3066\u3044\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3067\u3042\u308b\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u304b\u3089\u30b5\u30f3\u30d7\u30eb\u304c\u524a\u9664\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 \u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u306f\u3001\u653b\u6483\u8005\u304c\u30b5\u30fc\u30d0\u306b\u4fb5\u5165\u3059\u308b\u969b\u306b\u3088\u304f\u4f7f\u3046\u65e2\u77e5\u306e\u8106\u5f31\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u305d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u7ba1\u7406\u7528\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u5909\u66f4\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u3001\u653b\u6483\u8005\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u30ed\u30b0\u30a4\u30f3\u3057\u3001\u4e57\u3063\u53d6\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #2: </p> <p>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30ea\u30b9\u30c6\u30a3\u30f3\u30b0\u304c\u30b5\u30fc\u30d0\u4e0a\u3067\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u653b\u6483\u8005\u306f\u305d\u308c\u3092\u898b\u3064\u3051\u51fa\u3057\u3001\u3084\u3059\u3084\u3059\u3068\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u8868\u793a\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u653b\u6483\u8005\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u306eJava\u30af\u30e9\u30b9\u3092\u898b\u3064\u3051\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u30c7\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304b\u3089\u30ea\u30d0\u30fc\u30b9\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u3057\u3066\u30b3\u30fc\u30c9\u3092\u898b\u307e\u3059\u3002 \u305d\u3057\u3066\u653b\u6483\u8005\u306f\u3001\u305d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6df1\u523b\u306a\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u4e0a\u306e\u7a74\u3092\u898b\u3064\u3051\u307e\u3059\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #3: </p> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u306e\u8a2d\u5b9a\u304c\u3001\u8a73\u7d30\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8(\u4f8b\u3048\u3070\u3001\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9)\u3092\u30e6\u30fc\u30b6\u306b\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u3063\u3066\u6a5f\u5fae\u306a\u60c5\u5831\u3084\u8106\u5f31\u3067\u3042\u308b\u3068\u3055\u308c\u3066\u3044\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u3044\u3063\u305f\u6f5c\u5728\u7684\u306a\u6b20\u9665\u304c\u3055\u3089\u3055\u308c\u308b\u6050\u308c\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #4: </p> <p>\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0 (CSP) \u306f\u3001\u4ed6\u306eCSP\u30e6\u30fc\u30b6\u306b\u3088\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u516c\u958b\u3055\u308c\u305f\u5171\u6709\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u3046\u306a\u308b\u3068\u3001\u6a5f\u5fae\u306a\u60c5\u5831\u304c\u30af\u30e9\u30a6\u30c9\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u4fdd\u5b58\u3055\u308c\u3001\u30a2\u30af\u30bb\u30b9\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p>"},{"location":"ja/A05_2021-Security_Misconfiguration/#_6","title":"\u53c2\u8003\u8cc7\u6599","text":"<ul> <li> <p>OWASP Testing Guide: Configuration     Management</p> </li> <li> <p>OWASP Testing Guide: Testing for Error Codes</p> </li> <li> <p>Application Security Verification Standard V14 Configuration</p> </li> <li> <p>NIST Guide to General Server     Hardening</p> </li> <li> <p>CIS Security Configuration     Guides/Benchmarks</p> </li> <li> <p>Amazon S3 Bucket Discovery and     Enumeration</p> </li> </ul>"},{"location":"ja/A05_2021-Security_Misconfiguration/#cwe","title":"\u5bfe\u5fdc\u3059\u308b CWE \u306e\u30ea\u30b9\u30c8","text":"<p>CWE-2 \u74b0\u5883\u8a2d\u5b9a</p> <p>CWE-11 ASP.NET \u306b\u304a\u3051\u308b\u8a2d\u5b9a\u30df\u30b9: \u30c7\u30d0\u30c3\u30b0\u30d0\u30a4\u30ca\u30ea\u306e\u4f5c\u6210</p> <p>CWE-13 ASP.NET \u306b\u304a\u3051\u308b\u8a2d\u5b9a\u30df\u30b9: \u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u554f\u984c</p> <p>CWE-15 \u30b7\u30b9\u30c6\u30e0\u3084\u30b3\u30f3\u30d5\u30a3\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u8a2d\u5b9a\u306e\u5916\u90e8\u5236\u5fa1</p> <p>CWE-16 \u8a2d\u5b9a\u306e\u554f\u984c</p> <p>CWE-260 \u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u554f\u984c</p> <p>CWE-315 \u30af\u30c3\u30ad\u30fc\u3078\u306e\u6a5f\u5bc6\u60c5\u5831\u306e\u5e73\u6587\u4fdd\u5b58</p> <p>CWE-520 .NET \u306b\u304a\u3051\u308b\u8a2d\u5b9a\u30df\u30b9: \u507d\u88c5\u306e\u4f7f\u7528</p> <p>CWE-526 \u74b0\u5883\u5909\u6570\u306b\u3088\u308b\u6a5f\u5bc6\u60c5\u5831\u306e\u66b4\u9732</p> <p>CWE-537 \u6a5f\u5bc6\u60c5\u5831\u3092\u542b\u3080 Java \u30e9\u30f3\u30bf\u30a4\u30e0\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8</p> <p>CWE-541 \u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u6a5f\u5bc6\u60c5\u5831\u306e\u53d6\u308a\u8fbc\u307f</p> <p>CWE-547 \u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u95a2\u9023\u306e\u5b9a\u6570\u306e\u4f7f\u7528</p> <p>CWE-611 \u5916\u90e8\u306b\u7f6e\u304b\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u547c\u3073\u51fa\u3059 XXE (Xml eXternal Entity) \u554f\u984c</p> <p>CWE-614 'Secure' \u5c5e\u6027\u306e\u306a\u3044 HTTPS \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308b\u6a5f\u5bc6\u6027\u306e\u9ad8\u3044\u30af\u30c3\u30ad\u30fc</p> <p>CWE-756 \u30ab\u30b9\u30bf\u30e0\u30a8\u30e9\u30fc\u30da\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u554f\u984c</p> <p>CWE-776 \u9069\u5207\u3067\u306a\u3044\u518d\u5e30\u7684\u306a\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u53c2\u7167\u5236\u9650 (XML Entity Expansion) \u554f\u984c</p> <p>CWE-942 \u904e\u5270\u306b\u8a31\u53ef\u3055\u308c\u305f\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u30fb\u30db\u30ef\u30a4\u30c8\u30ea\u30b9\u30c8</p> <p>CWE-1004 'HttpOnly' \u30d5\u30e9\u30b0\u306e\u306a\u3044 \u6a5f\u5bc6\u6027\u306e\u9ad8\u3044\u30af\u30c3\u30ad\u30fc</p> <p>CWE-1032 OWASP Top Ten 2017 Category A6 - \u4e0d\u9069\u5207\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8a2d\u5b9a</p> <p>CWE-1174 ASP.NET \u306b\u304a\u3051\u308b\u8a2d\u5b9a\u30df\u30b9: \u4e0d\u9069\u5207\u306a\u30e2\u30c7\u30eb\u691c\u8a3c</p>"},{"location":"ja/A05_2021-Security_Misconfiguration/#a052021-security-misconfiguration","title":"A05:2021 \u2013 Security Misconfiguration","text":""},{"location":"ja/A05_2021-Security_Misconfiguration/#overview","title":"Overview","text":"<p>Moving up from #6 in the previous edition, 90% of applications were tested for some form of misconfiguration, with an average incidence rate of 4.5%, and over 208k occurences of a Common Weakness Enumeration (CWE) in this risk category. With more shifts into highly configurable software, it's not surprising to see this category move up. Notable CWEs included are CWE-16 Configuration and CWE-611 Improper Restriction of XML External Entity Reference.</p>"},{"location":"ja/A06_2021-Vulnerable_and_Outdated_Components/","title":"A06:2021 \u2013 \u8106\u5f31\u3067\u53e4\u304f\u306a\u3063\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8","text":""},{"location":"ja/A06_2021-Vulnerable_and_Outdated_Components/#_1","title":"\u56e0\u5b50","text":"\u5bfe\u5fdc\u3059\u308b CWE \u6570 \u6700\u5927\u767a\u751f\u7387 \u5e73\u5747\u767a\u751f\u7387 \u6700\u5927\u7db2\u7f85\u7387 \u5e73\u5747\u7db2\u7f85\u7387 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306e\u96e3\u6613\u5ea6\uff09 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306b\u3088\u308b\u5f71\u97ff\uff09 \u7dcf\u767a\u751f\u6570 CVE \u5408\u8a08\u4ef6\u6570 3 27.96% 8.77% 51.78% 22.47% 5.00 5.00 30,457 0"},{"location":"ja/A06_2021-Vulnerable_and_Outdated_Components/#_2","title":"\u6982\u8981","text":"<p>\u3053\u306e\u9805\u76ee\u306f Top10 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306b\u3088\u308b\u8abf\u67fb\u3067\u306f 2 \u4f4d\u3067\u3057\u305f\u304c\u3001Top10 \u306b\u5165\u308b\u5341\u5206\u306a\u30c7\u30fc\u30bf\u3082\u3042\u308a\u307e\u3057\u305f\u3002 \u8106\u5f31\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3001\u30c6\u30b9\u30c8\u3084\u30ea\u30b9\u30af\u8a55\u4fa1\u306b\u82e6\u52b4\u3059\u308b\u554f\u984c\u3068\u3057\u3066\u77e5\u3089\u308c\u3066\u304a\u308a\u3001\u542b\u307e\u308c\u308bCWE(Common Weakness Enumerations)\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u305fCWE\u304c\u306a\u3044\u552f\u4e00\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u3067\u3059\u3002 \u3053\u306e\u305f\u3081\u6a19\u6e96\u306e\u653b\u6483\u306e\u96e3\u6613\u5ea6\u304a\u3088\u3073\u3001\u653b\u6483\u306b\u3088\u308b\u5f71\u97ff\u306e\u30a6\u30a7\u30a4\u30c8\u306f5.0\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002 \u6ce8\u76ee\u3059\u3079\u304d CWE \u306f CWE-1104 \u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3055\u308c\u3066\u3044\u306a\u3044\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30fc\u88fd\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f7f\u7528\u3068\u3001OWASP Top10 2013 A9 \u304a\u3088\u3073 2017 A9 \u3092\u53c2\u7167\u3059\u308b\uff12\u3064\u306e CWE \u3067\u3059\u3002</p>"},{"location":"ja/A06_2021-Vulnerable_and_Outdated_Components/#_3","title":"\u8aac\u660e","text":"<p>\u4ee5\u4e0b\u306b\u8a72\u5f53\u3059\u308b\u5834\u5408\u3001\u8106\u5f31\u3068\u8a00\u3048\u307e\u3059\u3002</p> <ul> <li> <p>\u4f7f\u7528\u3057\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u77e5\u3089\u306a\u3044\u5834\u5408\uff08\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u30fb\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u4e21\u65b9\u306b\u3064\u3044\u3066\uff09\u3002     \u3053\u308c\u306b\u306f\u76f4\u63a5\u4f7f\u7528\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3060\u3051\u3067\u306a\u304f\u3001\u30cd\u30b9\u30c8\u3055\u308c\u305f\u4f9d\u5b58\u95a2\u4fc2\u3082\u542b\u3080\u3002</p> </li> <li> <p>\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u8106\u5f31\u306a\u5834\u5408\u3084\u30b5\u30dd\u30fc\u30c8\u304c\u306a\u3044\u5834\u5408\u3001\u307e\u305f\u4f7f\u7528\u671f\u9650\u304c\u5207\u308c\u3066\u3044\u308b\u5834\u5408\u3002     \u3053\u308c\u306b\u306f\u3001OS\u3084Web\u30b5\u30fc\u30d0\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\uff08DBMS\uff09\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3001API\u3001\u3059\u3079\u3066\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3001\u30e9\u30f3\u30bf\u30a4\u30e0\u74b0\u5883\u3068\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u542b\u3080\u3002</p> </li> <li> <p>\u8106\u5f31\u6027\u30b9\u30ad\u30e3\u30f3\u3092\u5b9a\u671f\u7684\u306b\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3084\u3001\u4f7f\u7528\u3057\u3066\u3044\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u95a2\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u60c5\u5831\u3092\u8cfc\u8aad\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3002</p> </li> <li> <p>\u57fa\u76e4\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304a\u3088\u3073\u4f9d\u5b58\u95a2\u4fc2\u3092\u30ea\u30b9\u30af\u306b\u57fa\u3065\u304d\u30bf\u30a4\u30e0\u30ea\u30fc\u306b\u4fee\u6b63\u307e\u305f\u306f\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3057\u306a\u3044\u5834\u5408\u3002     \u30d1\u30c3\u30c1\u9069\u7528\u304c\u5909\u66f4\u7ba1\u7406\u306e\u4e0b\u3001\u6708\u6b21\u3084\u56db\u534a\u671f\u306e\u30bf\u30b9\u30af\u3068\u3055\u308c\u3066\u3044\u308b\u74b0\u5883\u3067\u3088\u304f\u8d77\u3053\u308b\u3002     \u3053\u308c\u306b\u3088\u308a\u3001\u5f53\u8a72\u7d44\u7e54\u306f\u3001\u89e3\u6c7a\u6e08\u307f\u306e\u8106\u5f31\u6027\u306b\u3064\u3044\u3066\u3001\u4f55\u65e5\u3082\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u4f55\u30f6\u6708\u3082\u4e0d\u5fc5\u8981\u306a\u5371\u967a\u306b\u3055\u3089\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308b\u3002</p> </li> <li> <p>\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u8005\u304c\u3001\u66f4\u65b0\u3084\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u307e\u305f\u306f\u30d1\u30c3\u30c1\u306e\u4e92\u63db\u6027\u3092\u30c6\u30b9\u30c8\u3057\u306a\u3044\u5834\u5408\u3002</p> </li> <li> <p>\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8a2d\u5b9a\u3092\u30bb\u30ad\u30e5\u30a2\u306b\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3002\uff08A05-2021: \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u8a2d\u5b9a\u30df\u30b9 \u53c2\u7167\uff09</p> </li> </ul>"},{"location":"ja/A06_2021-Vulnerable_and_Outdated_Components/#_4","title":"\u9632\u6b62\u65b9\u6cd5","text":"<p>\u4ee5\u4e0b\u306b\u793a\u3059\u30d1\u30c3\u30c1\u7ba1\u7406\u30d7\u30ed\u30bb\u30b9\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <ul> <li> <p>\u672a\u4f7f\u7528\u306e\u4f9d\u5b58\u95a2\u4fc2\u3001\u4e0d\u8981\u306a\u6a5f\u80fd\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3001\u30d5\u30a1\u30a4\u30eb\u3084\u6587\u66f8\u3092\u53d6\u308a\u9664\u304f\u3002</p> </li> <li> <p>Versions Maven Plugin, OWASP Dependency Check, Retire.js\u306a\u3069\u306e\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304a\u3088\u3073\u30b5\u30fc\u30d0\u306e\u4e21\u65b9\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff08\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069\uff09\u3068\u305d\u306e\u4f9d\u5b58\u95a2\u4fc2\u306e\u68da\u5378\u3057\u3092\u7d99\u7d9a\u7684\u306b\u884c\u3046\u3002     \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8106\u5f31\u6027\u306b\u3064\u3044\u3066CVE(Common Vulnerability and Exposures)\u3084NVD(National Vulnerability Database)\u306a\u3069\u306e\u60c5\u5831\u30bd\u30fc\u30b9\u3092\u7d99\u7d9a\u7684\u306b\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u3002\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u69cb\u6210\u5206\u6790\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u30d7\u30ed\u30bb\u30b9\u3092\u81ea\u52d5\u5316\u3059\u308b\u3002     \u4f7f\u7528\u3057\u3066\u3044\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u95a2\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8106\u5f31\u6027\u306e\u96fb\u5b50\u30e1\u30fc\u30eb\u30a2\u30e9\u30fc\u30c8\u306b\u767b\u9332\u3059\u308b\u3002</p> </li> <li> <p>\u5b89\u5168\u306a\u30ea\u30f3\u30af\u3092\u4ecb\u3057\u3001\u516c\u5f0f\u30bd\u30fc\u30b9\u304b\u3089\u306e\u307f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002     \u5909\u66f4\u3055\u308c\u305f\u60aa\u610f\u3042\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u53ef\u80fd\u6027\u3092\u6e1b\u3089\u3059\u305f\u3081\u3001\u7f72\u540d\u4ed8\u304d\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u9078\u3076\u3088\u3046\u306b\u3059\u308b\u3002     (A08-2021: \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3068\u30c7\u30fc\u30bf\u306e\u6574\u5408\u6027\u306e\u4e0d\u5177\u5408 \u53c2\u7167)</p> </li> <li> <p>\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3055\u308c\u3066\u3044\u306a\u3044\u3001\u3082\u3057\u304f\u306f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d1\u30c3\u30c1\u304c\u4f5c\u3089\u308c\u3066\u3044\u306a\u3044\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u76e3\u8996\u3059\u308b\u3002     \u30d1\u30c3\u30c1\u9069\u7528\u304c\u4e0d\u53ef\u80fd\u306a\u5834\u5408\u306f\u3001\u767a\u898b\u3055\u308c\u305f\u554f\u984c\u3092\u76e3\u8996\u3001\u691c\u77e5\u307e\u305f\u306f\u4fdd\u8b77\u3059\u308b\u305f\u3081\u306b\u3001\u4eee\u60f3\u30d1\u30c3\u30c1\u306e\u9069\u7528\u3092\u691c\u8a0e\u3059\u308b\u3002</p> </li> </ul> <p>\u3044\u304b\u306a\u308b\u7d44\u7e54\u3082\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u307e\u305f\u306f\u30dd\u30fc\u30c8\u30d5\u30a9\u30ea\u30aa\u306e\u5b58\u7d9a\u671f\u9593\u306f\u3001\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3068\u30c8\u30ea\u30a2\u30fc\u30b8\u3092\u884c\u3044\u66f4\u65b0\u307e\u305f\u306f\u8a2d\u5b9a\u5909\u66f4\u3092\u884c\u3046\u7d99\u7d9a\u7684\u306a\u8a08\u753b\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/A06_2021-Vulnerable_and_Outdated_Components/#_5","title":"\u653b\u6483\u30b7\u30ca\u30ea\u30aa\u306e\u4f8b","text":"<p>\u30b7\u30ca\u30ea\u30aa #1: </p> <p>\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u901a\u5e38\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u81ea\u4f53\u3068\u540c\u3058\u6a29\u9650\u3067\u5b9f\u884c\u3055\u308c\u308b\u305f\u3081\u3001\u3069\u3093\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u5b58\u5728\u3059\u308b\u6b20\u9665\u3082\u3001\u6df1\u523b\u306a\u5f71\u97ff\u3092\u53ca\u307c\u3059\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u305d\u306e\u3088\u3046\u306a\u6b20\u9665\u306f\u3001\u5076\u767a\u7684\uff08\u4f8b\uff1a\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30a8\u30e9\u30fc\uff09\u307e\u305f\u306f\u610f\u56f3\u7684\uff08\u4f8b\uff1a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30d0\u30c3\u30af\u30c9\u30a2\uff09\u4e21\u65b9\u306e\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u767a\u898b\u6e08\u307f\u306e\u60aa\u7528\u53ef\u80fd\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8106\u5f31\u6027\u306e\u4f8b\uff1a</p> <ul> <li>Apache Struts 2\u306b\u304a\u3044\u3066\u30ea\u30e2\u30fc\u30c8\u3067\u4efb\u610f\u306e\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u8106\u5f31\u6027CVE-2017-5638\u306f\u3001\u91cd\u5927\u306a\u4fb5\u5bb3\u3092\u3082\u305f\u3089\u3057\u3066\u3044\u307e\u3059\u3002</li> <li>Internet of things (IoT)\u306f\u3001\u983b\u7e41\u306a\u30d1\u30c3\u30c1\u9069\u7528\u304c\u56f0\u96e3\u3082\u3057\u304f\u306f\u4e0d\u53ef\u80fd\u3067\u3059\u304c\u3001\u4e00\u65b9\u3067\u30d1\u30c3\u30c1\u9069\u7528\u306e\u91cd\u8981\u6027\u306f\u307e\u3059\u307e\u3059\u9ad8\u307e\u3063\u3066\u3044\u307e\u3059\u3002\uff08\u4f8b\uff1a\u533b\u7642\u6a5f\u5668\uff09</li> </ul> <p>\u653b\u6483\u8005\u3092\u52a9\u3051\u308b\u3088\u3046\u306a\u30c4\u30fc\u30eb\u304c\u3042\u308a\u3001\u30d1\u30c3\u30c1\u304c\u672a\u9069\u7528\u306a\u30b7\u30b9\u30c6\u30e0\u3084\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u5b9a\u30df\u30b9\u3092\u81ea\u52d5\u7684\u306b\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001Shodan IoT search engine\u306f\u30012014\u5e744\u6708\u306b\u30d1\u30c3\u30c1\u304c\u9069\u7528\u3055\u308c\u305fHeartbleed\u306e\u8106\u5f31\u6027\u306a\u3069\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306b\u554f\u984c\u306e\u3042\u308b\u6a5f\u5668\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/A06_2021-Vulnerable_and_Outdated_Components/#_6","title":"\u53c2\u8003\u8cc7\u6599","text":"<ul> <li> <p>OWASP Application Security Verification Standard: V1 Architecture,     design and threat modelling</p> </li> <li> <p>OWASP Dependency Check (for Java and .NET libraries)</p> </li> <li> <p>OWASP Testing Guide - Map Application Architecture (OTG-INFO-010)</p> </li> <li> <p>OWASP Virtual Patching Best Practices</p> </li> <li> <p>The Unfortunate Reality of Insecure Libraries</p> </li> <li> <p>MITRE Common Vulnerabilities and Exposures (CVE) search</p> </li> <li> <p>National Vulnerability Database (NVD)</p> </li> <li> <p>Retire.js for detecting known vulnerable JavaScript libraries</p> </li> <li> <p>Node Libraries Security Advisories</p> </li> <li> <p>Ruby Libraries Security Advisory Database and Tools</p> </li> <li> <p>https://safecode.org/publication/SAFECode_Software_Integrity_Controls0610.pdf</p> </li> </ul>"},{"location":"ja/A06_2021-Vulnerable_and_Outdated_Components/#cwe","title":"\u5bfe\u5fdc\u3059\u308b CWE \u306e\u30ea\u30b9\u30c8","text":"<p>CWE-937 OWASP Top 10 2013 A9: \u65e2\u77e5\u306e\u8106\u5f31\u6027\u306e\u3042\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f7f\u7528</p> <p>CWE-1035 2017 Top 10 A9: \u65e2\u77e5\u306e\u8106\u5f31\u6027\u306e\u3042\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f7f\u7528</p> <p>CWE-1104 \u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3055\u308c\u3066\u3044\u306a\u3044\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30fc\u88fd\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f7f\u7528</p>"},{"location":"ja/A06_2021-Vulnerable_and_Outdated_Components/#a062021-vulnerable-and-outdated-components","title":"A06:2021 \u2013 Vulnerable and Outdated Components","text":""},{"location":"ja/A06_2021-Vulnerable_and_Outdated_Components/#overview","title":"Overview","text":"<p>It was #2 from the Top 10 community survey but also had enough data to make the Top 10 via data. Vulnerable Components are a known issue that we struggle to test and assess risk and is the only category to not have any Common Weakness Enumerations (CWEs) mapped to the included CWEs, so a default exploits/impact weight of 5.0 is used. Notable CWEs included are CWE-1104: Use of Unmaintained Third-Party Components and the two CWEs from Top 10 2013 and 2017.</p>"},{"location":"ja/A06_2021-Vulnerable_and_Outdated_Components/#how-to-prevent","title":"How to Prevent","text":"<p>There should be a patch management process in place to:</p> <ul> <li> <p>Remove unused dependencies, unnecessary features, components, files,     and documentation.</p> </li> <li> <p>Continuously inventory the versions of both client-side and     server-side components (e.g., frameworks, libraries) and their     dependencies using tools like versions, OWASP Dependency Check,     retire.js, etc. Continuously monitor sources like Common Vulnerability and      Exposures (CVE) and National Vulnerability Database (NVD) for     vulnerabilities in the components. Use software composition analysis     tools to automate the process. Subscribe to email alerts for     security vulnerabilities related to components you use.</p> </li> <li> <p>Only obtain components from official sources over secure links.     Prefer signed packages to reduce the chance of including a modified,     malicious component (See A08:2021-Software and Data Integrity     Failures).</p> </li> <li> <p>Monitor for libraries and components that are unmaintained or do not     create security patches for older versions. If patching is not     possible, consider deploying a virtual patch to monitor, detect, or     protect against the discovered issue.</p> </li> </ul> <p>Every organization must ensure an ongoing plan for monitoring, triaging, and applying updates or configuration changes for the lifetime of the application or portfolio.</p>"},{"location":"ja/A06_2021-Vulnerable_and_Outdated_Components/#references","title":"References","text":"<ul> <li> <p>OWASP Application Security Verification Standard: V1 Architecture,     design and threat modelling</p> </li> <li> <p>OWASP Dependency Check (for Java and .NET libraries)</p> </li> <li> <p>OWASP Testing Guide - Map Application Architecture (OTG-INFO-010)</p> </li> <li> <p>OWASP Virtual Patching Best Practices</p> </li> <li> <p>The Unfortunate Reality of Insecure Libraries</p> </li> <li> <p>MITRE Common Vulnerabilities and Exposures (CVE) search</p> </li> <li> <p>National Vulnerability Database (NVD)</p> </li> <li> <p>Retire.js for detecting known vulnerable JavaScript libraries</p> </li> <li> <p>Node Libraries Security Advisories</p> </li> <li> <p>Ruby Libraries Security Advisory Database and Tools</p> </li> <li> <p>https://safecode.org/publication/SAFECode_Software_Integrity_Controls0610.pdf</p> </li> </ul>"},{"location":"ja/A07_2021-Identification_and_Authentication_Failures/","title":"A07:2021 \u2013 \u8b58\u5225\u3068\u8a8d\u8a3c\u306e\u5931\u6557","text":""},{"location":"ja/A07_2021-Identification_and_Authentication_Failures/#_1","title":"\u56e0\u5b50","text":"\u5bfe\u5fdc\u3059\u308b CWE \u6570 \u6700\u5927\u767a\u751f\u7387 \u5e73\u5747\u767a\u751f\u7387 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306e\u96e3\u6613\u5ea6\uff09 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306b\u3088\u308b\u5f71\u97ff\uff09 \u6700\u5927\u7db2\u7f85\u7387 \u5e73\u5747\u7db2\u7f85\u7387 \u7dcf\u767a\u751f\u6570 CVE \u5408\u8a08\u4ef6\u6570 22 14.84% 2.55% 7.40 6.50 79.51% 45.72% 132,195 3,897"},{"location":"ja/A07_2021-Identification_and_Authentication_Failures/#_2","title":"\u6982\u8981","text":"<p>\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306f\u3001\u3053\u308c\u307e\u3067\u306e\u7248\u3067\u306f\u8a8d\u8a3c\u306e\u4e0d\u5099\u3068\u3057\u3066\u77e5\u3089\u308c\u3066\u3044\u305f\u3082\u306e\u3067\u3059\u3002\u524d\u56de\u306f\u7b2c2\u4f4d\u3067\u3057\u305f\u304c\u4eca\u56de\u306f\u7b2c7\u4f4d\u306b\u9806\u4f4d\u3092\u843d\u3068\u3057\u307e\u3057\u305f\u3002\u307e\u305f\u3001\u3053\u306e\u7248\u3067\u306f\u8b58\u5225\u306e\u5931\u6557\u306b\u95a2\u3059\u308b\u3044\u304f\u3064\u304b\u306e\u5171\u901a\u8106\u5f31\u6027\u30bf\u30a4\u30d7\u4e00\u89a7 (CWE) \u3092\u542b\u3081\u3066\u3044\u307e\u3059\u3002\u8003\u616e\u3059\u3079\u304dCWE\u306b\u306f\u3001CWE-297:\u30db\u30b9\u30c8\u306e\u4e0d\u4e00\u81f4\u306b\u3088\u308b\u8a3c\u660e\u66f8\u306e\u4e0d\u9069\u5207\u306a\u691c\u8a3c\u3001CWE-287:\u4e0d\u9069\u5207\u306a\u8a8d\u8a3c\u3001CWE-384:\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u56fa\u5b9a\u5316\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/A07_2021-Identification_and_Authentication_Failures/#_3","title":"\u8aac\u660e","text":"<p>\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30a4\u30c7\u30f3\u30c6\u30a3\u78ba\u8a8d\u3001\u8a8d\u8a3c\u305d\u3057\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u306f\u3001\u8a8d\u8a3c\u95a2\u9023\u306e\u653b\u6483\u5bfe\u7b56\u3068\u3057\u3066\u6975\u3081\u3066\u91cd\u8981\u3067\u3059\u3002 \u3082\u3057\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6b21\u306b\u5217\u6319\u3059\u308b\u3088\u3046\u306a\u554f\u984c\u304c\u3042\u308c\u3070\u3001\u8a8d\u8a3c\u306b\u554f\u984c\u304c\u3042\u308b\u3068\u8a00\u3048\u307e\u3059\u3002</p> <ul> <li> <p>\u30d1\u30b9\u30ef\u30fc\u30c9\u30ea\u30b9\u30c8\u653b\u6483\uff08\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u30fb\u30b9\u30bf\u30c3\u30d5\u30a3\u30f3\u30b0\u653b\u6483\uff09\u306e\u3088\u3046\u306a\u81ea\u52d5\u5316\u3055\u308c\u305f\u653b\u6483\u304c\u51fa\u6765\u3066\u3057\u307e\u3046\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u30ea\u30b9\u30c8\u653b\u6483\u3068\u306f\u3001\u653b\u6483\u8005\u304c\u6b63\u5f53\u306a\u30e6\u30fc\u30b6\u30fc\u540d\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u5165\u624b\u3057\u3066\u884c\u3046\u653b\u6483\u624b\u6cd5\u306e\u3053\u3068\u3067\u3059\u3002</p> </li> <li> <p>\u30d6\u30eb\u30fc\u30c8\u30d5\u30a9\u30fc\u30b9\u653b\u6483\uff08\u7dcf\u5f53\u305f\u308a\u653b\u6483\uff09\u306a\u3069\u306e\u81ea\u52d5\u5316\u3055\u308c\u305f\u653b\u6483\u304c\u51fa\u6765\u3066\u3057\u307e\u3046\u3002</p> </li> <li> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3001\u5f31\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u3001\u826f\u304f\u4f7f\u308f\u308c\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u5229\u7528\u3067\u304d\u3066\u3057\u307e\u3046\u3002\u305f\u3068\u3048\u3070\u300cPassword1\u300d\u3084\u300cadmin/admin\u300d\u306a\u3069\u3067\u3059\u3002</p> </li> <li> <p>\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u306e\u5fa9\u65e7\u3084\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5fd8\u308c\u305f\u5834\u5408\u306e\u30d7\u30ed\u30bb\u30b9\u304c\u5f31\u3044\u3001\u3042\u308b\u3044\u306f\u52b9\u679c\u304c\u306a\u3044\u3002\u305f\u3068\u3048\u3070\u300c\u79d8\u5bc6\u306e\u8cea\u554f\u300d\u306e\u3088\u3046\u306a\u3084\u308a\u65b9\u306f\u5b89\u5168\u3068\u306f\u8a00\u3048\u307e\u305b\u3093\u3002</p> </li> <li> <p>\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u4fdd\u5b58\u3059\u308b\u969b\u306b\u3001\u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u307e\u307e\u3067\u4fdd\u5b58\u3057\u3066\u3044\u308b\u3001\u307e\u305f\u306f\u6697\u53f7\u5316\u3057\u3066\u4fdd\u5b58\u3057\u3066\u3044\u308b\u3002\u3042\u308b\u3044\u306f\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u3066\u4fdd\u5b58\u3057\u3066\u3044\u305f\u3068\u3057\u3066\u3082\u8106\u5f31\u306a\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3002\uff08A02:2021-\u6697\u53f7\u5316\u306e\u5931\u6557\u3092\u53c2\u7167\uff09</p> </li> <li> <p>\u591a\u8981\u7d20\u8a8d\u8a3c\u3092\u63a1\u7528\u3057\u3066\u3044\u306a\u3044\u3002\u3042\u308b\u3044\u306f\u9593\u9055\u3063\u305f\u4f7f\u3044\u65b9\u3092\u3057\u3066\u3044\u308b\u3002</p> </li> <li> <p>\u30bb\u30c3\u30b7\u30e7\u30f3\u8b58\u5225\u5b50\u304cURL\u306e\u4e00\u90e8\u3068\u3057\u3066\u9732\u51fa\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3002</p> </li> <li> <p>\u30ed\u30b0\u30a4\u30f3\u5f8c\u306b\u30bb\u30c3\u30b7\u30e7\u30f3\u8b58\u5225\u5b50\u3092\u4f7f\u3044\u307e\u308f\u3057\u3066\u3044\u308b\u3002</p> </li> <li> <p>\u30bb\u30c3\u30b7\u30e7\u30f3ID\u3092\u6b63\u3057\u304f\u7121\u52b9\u5316\u3057\u3066\u3044\u306a\u3044\u3002\u305f\u3068\u3048\u3070\u3001\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u305f\u969b\u3084\u4e00\u5b9a\u671f\u9593\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u7121\u3044\u5834\u5408\u306b\u3082\u3001\u30e6\u30fc\u30b6\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u3084\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\uff08\u30b7\u30f3\u30b0\u30eb\u30b5\u30a4\u30f3\u30aa\u30f3\u306e\u30c8\u30fc\u30af\u30f3\u306a\u3069\u304c\u591a\u3044\uff09\u304c\u3001\u7121\u52b9\u5316\u3055\u308c\u306a\u3044\u3002</p> </li> </ul>"},{"location":"ja/A07_2021-Identification_and_Authentication_Failures/#_4","title":"\u9632\u6b62\u65b9\u6cd5","text":"<ul> <li> <p>\u591a\u8981\u7d20\u8a8d\u8a3c\u3092\u53ef\u80fd\u306a\u9650\u308a\u5b9f\u88c5\u3059\u308b\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u30ea\u30b9\u30c8\u653b\u6483\u3001\u30d6\u30eb\u30fc\u30c8\u30d5\u30a9\u30fc\u30b9\u653b\u6483\u3001\u76d7\u7528\u3057\u305f\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u306e\u518d\u5229\u7528\u306a\u3069\u591a\u304f\u306e\u81ea\u52d5\u5316\u3055\u308c\u305f\u653b\u6483\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> </li> <li> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u306e\u307e\u307e\u30d7\u30ed\u30b0\u30e9\u30e0\uff08\u30b5\u30fc\u30d3\u30b9\uff09\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u306a\u3044\u3002\u7279\u306b\u7ba1\u7406\u8005\u30e6\u30fc\u30b6\u30fc\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u306e\u307e\u307e\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u306e\u306f\u8a00\u8a9e\u9053\u65ad\u3067\u3059\u3002</p> </li> <li> <p>\u5f31\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u3044\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u6a5f\u80fd\u3092\u5b9f\u88c5\u3059\u308b\u3002\u305f\u3068\u3048\u3070\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u65b0\u898f\u8a2d\u5b9a\u3084\u66f4\u65b0\u6642\u306b\u306f\u3001\u300c\u5f31\u3044\u30d1\u30b9\u30ef\u30fc\u30c9 \u30c8\u30c3\u30d710,000\u300d\u306a\u3069\u306e\u30ea\u30b9\u30c8\u3092\u4f7f\u3063\u3066\u691c\u8a3c\u3059\u308b\u3002</p> </li> <li> <p>\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u300c\u9577\u3055\u300d\u3084\u300c\u8907\u96d1\u3055\u300d\u305d\u3057\u3066\u300c\u5b9a\u671f\u7684\u306a\u5909\u66f4\u300d\u306a\u3069\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u30dd\u30ea\u30b7\u30fc\u306b\u3064\u3044\u3066\u306f\u3001\u7c73\u56fd\u56fd\u7acb\u6a19\u6e96\u6280\u8853\u7814\u7a76\u6240 (NIST) \u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\uff08800-63b \u30bb\u30af\u30b7\u30e7\u30f35.1.1:\u8a18\u61b6\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\uff09\u3084\u3001\u8fd1\u4ee3\u7684\u3067\u6839\u62e0\u306b\u57fa\u3065\u304f\u30dd\u30ea\u30b7\u30fc\u306b\u6cbf\u3046\u3088\u3046\u306b\u3059\u308b\u3002</p> </li> <li> <p>\u65b0\u898f\u767b\u9332\u306e\u5834\u5408\u3001\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u30ea\u30ab\u30d0\u30ea\u30fc\u306e\u5834\u5408\u3001\u307e\u305fAPI\u7d4c\u7531\u306e\u5834\u5408\u306a\u3069\u3001\u3069\u306e\u3088\u3046\u306a\u5834\u5408\u3067\u3042\u3063\u3066\u3082\u30a2\u30ab\u30a6\u30f3\u30c8\u5217\u6319\u653b\u6483\u306b\u5bfe\u3057\u3066\u5f37\u5316\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002\u8a8d\u8a3c\u306e\u969b\u306b\u306f\u3069\u306e\u3088\u3046\u306a\u7d50\u679c\u3067\u3042\u308c\uff08\u6210\u529f\u3067\u3082\u5931\u6557\u3067\u3082\uff09\u540c\u3058\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4f7f\u3046\u3088\u3046\u306b\u3059\u308b\u3002</p> </li> <li> <p>\u30ed\u30b0\u30a4\u30f3\u8a66\u884c\u56de\u6570\u306b\u5236\u9650\u3092\u8a2d\u3051\u308b\u304b\u3001\u30ed\u30b0\u30a4\u30f3\u306b\u7e70\u308a\u8fd4\u3057\u5931\u6557\u3059\u308b\u3088\u3046\u306a\u3089\u5f90\u3005\u306b\u51e6\u7406\u3092\u9045\u5ef6\u3055\u305b\u308b\u3002\u305d\u306e\u969b\u3001\u30b5\u30fc\u30d3\u30b9\u62d2\u5426\u306e\u6a5f\u4f1a\u3092\u4f5c\u3089\u306a\u3044\u3088\u3046\u6ce8\u610f\u3059\u308b\u3002\u30ed\u30b0\u30a4\u30f3\u306e\u5931\u6557\u306f\u3059\u3079\u3066\u30ed\u30b0\u306b\u8a18\u9332\u3059\u308b\u3002\u305d\u3057\u3066\u30d1\u30b9\u30ef\u30fc\u30c9\u30ea\u30b9\u30c8\u653b\u6483\u3084\u30d6\u30eb\u30fc\u30c8\u30d5\u30a9\u30fc\u30b9\u653b\u6483\u306a\u3069\u306e\u653b\u6483\u3092\u691c\u77e5\u3057\u305f\u969b\u306b\u306f\u7ba1\u7406\u8005\u306b\u901a\u77e5\u3059\u308b\u3002</p> </li> <li> <p>\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u306f\u30b5\u30fc\u30d0\u5074\u3067\u884c\u3044\u3001\u5b89\u5168\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u306a\u3069\u306b\u5185\u8535\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u4f7f\u3044\u307e\u3059\u3002\u30ed\u30b0\u30a4\u30f3\u6bce\u306b\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306e\u9ad8\u3044\u30e9\u30f3\u30c0\u30e0\u306a\u30bb\u30c3\u30b7\u30e7\u30f3ID\u3092\u767a\u884c\u3059\u308b\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u6a5f\u69cb\u3092\u5229\u7528\u3059\u308b\u3002\u30bb\u30c3\u30b7\u30e7\u30f3\u8b58\u5225\u5b50\u306fURL\u306b\u542b\u307e\u308c\u308b\u3079\u304d\u3067\u306f\u306a\u304f\u3001\u5b89\u5168\u306b\u4fdd\u7ba1\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u8b58\u5225\u5b50\u306f\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u305f\u969b\u3001\u4e00\u5b9a\u671f\u9593\u30a2\u30af\u30bb\u30b9\u304c\u7121\u3044\u5834\u5408\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u9593\u3092\u7d4c\u904e\u3057\u305f\u5834\u5408\u306b\u306f\u7121\u52b9\u306b\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002</p> </li> </ul>"},{"location":"ja/A07_2021-Identification_and_Authentication_Failures/#_5","title":"\u653b\u6483\u30b7\u30ca\u30ea\u30aa\u306e\u4f8b","text":"<p>\u30b7\u30ca\u30ea\u30aa #1: \u65e2\u77e5\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u30ea\u30b9\u30c8\u3092\u4f7f\u3046\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u30ea\u30b9\u30c8\u653b\u6483\u306f\u3088\u304f\u3042\u308b\u653b\u6483\u624b\u6cd5\u3067\u3059\u3002\u3082\u3057\u3042\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u306f\u3001\u3053\u306e\u3088\u3046\u306a\u30ea\u30b9\u30c8\u3092\u4f7f\u3046\u9023\u7d9a\u653b\u6483\u3084\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u30ea\u30b9\u30c8\u653b\u6483\u3078\u306e\u9632\u5fa1\u304c\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u3057\u307e\u3057\u3087\u3046\u3002\u3059\u308b\u3068\u3001\u305d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u795e\u8a17\u6240\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u304c\u6709\u52b9\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3057\u307e\u3046\u306e\u3067\u3059\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #2: \u8a8d\u8a3c\u3092\u72d9\u3046\u653b\u6483\u306e\u591a\u304f\u306f\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u552f\u4e00\u306e\u8a8d\u8a3c\u8981\u7d20\u3068\u3057\u3066\u4f7f\u3044\u7d9a\u3051\u3066\u3044\u308b\u3053\u3068\u306b\u8d77\u56e0\u3057\u307e\u3059\u3002\u300c\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u5b9a\u671f\u7684\u306a\u5909\u66f4\u300d\u3084\u300c\u8907\u96d1\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u8981\u6c42\u300d\u306f\u3001\u4ee5\u524d\u306f\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3068\u8003\u3048\u3089\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u304b\u3048\u3063\u3066\u5f31\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u3042\u3061\u3053\u3061\u306e\u30b5\u30a4\u30c8\u3067\u4f7f\u3044\u307e\u308f\u3059\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002NIST 800-63\u306e\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u306b\u5f93\u3063\u3066\u3001\u3053\u306e\u3088\u3046\u306a\u6614\u306a\u304c\u3089\u306e\u6163\u7fd2\u306f\u3082\u3046\u8f9e\u3081\u306b\u3057\u307e\u3057\u3087\u3046\u3001\u305d\u3057\u3066\u591a\u8981\u7d20\u8a8d\u8a3c\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #3: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u304c\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u3002\u3082\u3057\u304b\u3057\u305f\u3089\u30e6\u30fc\u30b6\u30fc\u306f\u516c\u5171\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u30e6\u30fc\u30b6\u30fc\u304c\u300c\u30ed\u30b0\u30a2\u30a6\u30c8\u300d\u3092\u30af\u30ea\u30c3\u30af\u305b\u305a\u306b\u3001\u8868\u793a\u3057\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306e\u30bf\u30d6\u3092\u9589\u3058\u3066\u3069\u3053\u304b\u3078\u884c\u3063\u3066\u3057\u307e\u3063\u305f\u3089\u3069\u3046\u306a\u308b\u3067\u3057\u3087\u3046\u304b\u3002\u30bb\u30c3\u30b7\u30e7\u30f3\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u3044\u3068\u3001\u653b\u6483\u8005\u306f\uff11\u6642\u9593\u5f8c\u306b\u305d\u306e\u30d6\u30e9\u30a6\u30b6\u3067\u5148\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u306a\u308a\u3059\u307e\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p>"},{"location":"ja/A07_2021-Identification_and_Authentication_Failures/#_6","title":"\u53c2\u8003\u8cc7\u6599","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Digital     Identity</p> </li> <li> <p>OWASP Application Security Verification Standard: V2     authentication</p> </li> <li> <p>OWASP Application Security Verification Standard: V3 Session     Management</p> </li> <li> <p>OWASP Testing Guide: Identity,\u00a0Authentication</p> </li> <li> <p>OWASP Cheat Sheet:     Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Credential Stuffing</p> </li> <li> <p>OWASP Cheat Sheet: Forgot     Password</p> </li> <li> <p>OWASP Cheat Sheet: Session Management</p> </li> <li> <p>OWASP Automated Threats     Handbook</p> </li> <li> <p>NIST 800-63b: 5.1.1 Memorized Secrets</p> </li> </ul>"},{"location":"ja/A07_2021-Identification_and_Authentication_Failures/#cwe","title":"\u5bfe\u5fdc\u3059\u308b CWE \u306e\u30ea\u30b9\u30c8","text":"<p>CWE-255 \u8a3c\u660e\u66f8\u30fb\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u7ba1\u7406</p> <p>CWE-259 \u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u4f7f\u7528</p> <p>CWE-287 \u4e0d\u9069\u5207\u306a\u8a8d\u8a3c</p> <p>CWE-288 \u4ee3\u66ff\u30d1\u30b9\u307e\u305f\u306f\u30c1\u30e3\u30cd\u30eb\u3092\u4f7f\u7528\u3057\u305f\u8a8d\u8a3c\u56de\u907f</p> <p>CWE-290 \u30b9\u30d7\u30fc\u30d5\u30a3\u30f3\u30b0\u306b\u3088\u308b\u8a8d\u8a3c\u56de\u907f</p> <p>CWE-294 Capture-replay \u306b\u3088\u308b\u8a8d\u8a3c\u56de\u907f</p> <p>CWE-295 \u4e0d\u6b63\u306a\u8a3c\u660e\u66f8\u691c\u8a3c</p> <p>CWE-297 \u30db\u30b9\u30c8\u306e\u4e0d\u4e00\u81f4\u306b\u3088\u308b\u8a3c\u660e\u66f8\u306e\u4e0d\u9069\u5207\u306a\u691c\u8a3c</p> <p>CWE-300 \u4e2d\u9593\u8005\u306e\u554f\u984c</p> <p>CWE-302 \u8a8d\u8a3c\u56de\u907f\u306e\u8106\u5f31\u6027</p> <p>CWE-304 \u8a8d\u8a3c\u306b\u304a\u3051\u308b\u91cd\u8981\u306a\u30b9\u30c6\u30c3\u30d7\u306e\u6b20\u843dn</p> <p>CWE-306 \u91cd\u8981\u306a\u6a5f\u80fd\u306b\u5bfe\u3059\u308b\u8a8d\u8a3c\u306e\u6b20\u5982</p> <p>CWE-307 \u904e\u5ea6\u306a\u8a8d\u8a3c\u8a66\u884c\u306e\u4e0d\u9069\u5207\u306a\u5236\u9650</p> <p>CWE-346 \u540c\u4e00\u751f\u6210\u5143\u30dd\u30ea\u30b7\u30fc\u9055\u53cd</p> <p>CWE-384 \u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u56fa\u5b9a\u5316</p> <p>CWE-521 \u8106\u5f31\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u8981\u6c42</p> <p>CWE-613 \u4e0d\u9069\u5207\u306a\u30bb\u30c3\u30b7\u30e7\u30f3\u671f\u9650</p> <p>CWE-620 \u672a\u691c\u8a3c\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u5909\u66f4</p> <p>CWE-640 \u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5fd8\u308c\u305f\u5834\u5408\u306e\u8106\u5f31\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u30ea\u30ab\u30d0\u30ea\u306e\u4ed5\u7d44\u307f</p> <p>CWE-798 \u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3055\u308c\u305f\u8a8d\u8a3c\u60c5\u5831\u306e\u4f7f\u7528</p> <p>CWE-940 \u901a\u4fe1\u30c1\u30e3\u30cd\u30eb\u30bd\u30fc\u30b9\u306e\u4e0d\u9069\u5207\u306a\u691c\u8a3c</p> <p>CWE-1216 \u30ed\u30c3\u30af\u30a2\u30a6\u30c8\u6a5f\u69cb\u306e\u4e0d\u5099</p>"},{"location":"ja/A07_2021-Identification_and_Authentication_Failures/#a072021-identification-and-authentication-failures","title":"A07:2021 \u2013 Identification and Authentication Failures","text":""},{"location":"ja/A07_2021-Identification_and_Authentication_Failures/#overview","title":"Overview","text":"<p>Previously known as Broken Authentication, this category slid down from the second position and now includes Common Weakness Enumerations (CWEs) related to identification failures. Notable CWEs included are CWE-297: Improper Validation of Certificate with Host Mismatch, CWE-287: Improper Authentication, and CWE-384: Session Fixation.</p>"},{"location":"ja/A07_2021-Identification_and_Authentication_Failures/#example-attack-scenarios","title":"Example Attack Scenarios","text":"<p>Scenario #1: Credential stuffing, the use of lists of known passwords, is a common attack. Suppose an application does not implement automated threat or credential stuffing protection. In that case, the application can be used as a password oracle to determine if the credentials are valid.</p> <p>Scenario #2: Most authentication attacks occur due to the continued use of passwords as a sole factor. Once considered, best practices, password rotation, and complexity requirements encourage users to use and reuse weak passwords. Organizations are recommended to stop these practices per NIST 800-63 and use multi-factor authentication.</p> <p>Scenario #3: Application session timeouts aren't set correctly. A user uses a public computer to access an application. Instead of selecting \"logout,\" the user simply closes the browser tab and walks away. An attacker uses the same browser an hour later, and the user is still authenticated.</p>"},{"location":"ja/A07_2021-Identification_and_Authentication_Failures/#references","title":"References","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Digital     Identity</p> </li> <li> <p>OWASP Application Security Verification Standard: V2     authentication</p> </li> <li> <p>OWASP Application Security Verification Standard: V3 Session     Management</p> </li> <li> <p>OWASP Testing Guide: Identity,\u00a0Authentication</p> </li> <li> <p>OWASP Cheat Sheet:     Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Credential Stuffing</p> </li> <li> <p>OWASP Cheat Sheet: Forgot     Password</p> </li> <li> <p>OWASP Cheat Sheet: Session Management</p> </li> <li> <p>OWASP Automated Threats     Handbook</p> </li> <li> <p>NIST 800-63b: 5.1.1 Memorized Secrets</p> </li> </ul>"},{"location":"ja/A08_2021-Software_and_Data_Integrity_Failures/","title":"A08:2021 \u2013 \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3068\u30c7\u30fc\u30bf\u306e\u6574\u5408\u6027\u306e\u4e0d\u5177\u5408","text":""},{"location":"ja/A08_2021-Software_and_Data_Integrity_Failures/#_1","title":"\u56e0\u5b50","text":"\u5bfe\u5fdc\u3059\u308b CWE \u6570 \u6700\u5927\u767a\u751f\u7387 \u5e73\u5747\u767a\u751f\u7387 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306e\u96e3\u6613\u5ea6\uff09 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306b\u3088\u308b\u5f71\u97ff\uff09 \u6700\u5927\u7db2\u7f85\u7387 \u5e73\u5747\u7db2\u7f85\u7387 \u7dcf\u767a\u751f\u6570 CVE \u5408\u8a08\u4ef6\u6570 10 16.67% 2.05% 6.94 7.94 75.04% 45.35% 47,972 1,152"},{"location":"ja/A08_2021-Software_and_Data_Integrity_Failures/#_2","title":"\u6982\u8981","text":"<p>\u3053\u308c\u306f2021\u5e74\u306b\u65b0\u8a2d\u3055\u308c\u305f\u30ab\u30c6\u30b4\u30ea\u30fc\u3067\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u66f4\u65b0\u3001\u91cd\u8981\u306a\u30c7\u30fc\u30bf\u3092\u3001CI/CD\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306b\u304a\u3044\u3066\u6574\u5408\u6027\u3092\u691c\u8a3c\u305b\u305a\u306b\u898b\u8fbc\u307f\u3067\u9032\u3081\u308b\u3053\u3068\u306b\u3088\u308b\u554f\u984c\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u3066\u3044\u307e\u3059\u3002 \u5171\u901a\u8106\u5f31\u6027\u8b58\u5225\u5b50/\u5171\u901a\u8106\u5f31\u6027\u8a55\u4fa1\u30b7\u30b9\u30c6\u30e0 (CVE/CVSS) \u306e\u30c7\u30fc\u30bf\u304b\u3089\u6700\u3082\u91cd\u5927\u306a\u5f71\u97ff\u3092\u53d7\u3051\u305f\u3082\u306e\u306e1\u3064\u3067\u3059\u3002 \u6ce8\u76ee\u3059\u3079\u304d\u5171\u901a\u8106\u5f31\u6027\u30bf\u30a4\u30d7\u4e00\u89a7 (CWE) \u306f\u3001CWE-829: \u4fe1\u983c\u3067\u304d\u306a\u3044\u5236\u5fa1\u9818\u57df\u304b\u3089\u306e\u6a5f\u80fd\u306e\u7d44\u307f\u8fbc\u307f\u3001CWE-494: \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30b3\u30fc\u30c9\u306e\u5b8c\u5168\u6027\u691c\u8a3c\u4e0d\u5099\u3001\u305d\u3057\u3066CWE-502: \u4fe1\u983c\u3067\u304d\u306a\u3044\u30c7\u30fc\u30bf\u306e\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002</p>"},{"location":"ja/A08_2021-Software_and_Data_Integrity_Failures/#_3","title":"\u8aac\u660e","text":"<p>\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3068\u30c7\u30fc\u30bf\u306e\u6574\u5408\u6027\u306e\u4e0d\u5177\u5408\u306f\u3001\u30b3\u30fc\u30c9\u3084\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u304c\u6574\u5408\u6027\u9055\u53cd\u304b\u3089\u4fdd\u8b77\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u306b\u95a2\u9023\u3057\u3066\u3044\u307e\u3059\u3002 \u4f8b\u3068\u3057\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u4fe1\u983c\u3055\u308c\u3066\u3044\u306a\u3044\u30bd\u30fc\u30b9\u306b\u7531\u6765\u3059\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af (CDNs) \u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002 \u5b89\u5168\u3067\u306a\u3044CI/CD\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3082\u3001\u6a29\u9650\u306e\u306a\u3044\u30a2\u30af\u30bb\u30b9\u3084\u60aa\u610f\u306e\u3042\u308b\u30b3\u30fc\u30c9\u3001\u30b7\u30b9\u30c6\u30e0\u306e\u306e\u3063\u3068\u308a\u306e\u53ef\u80fd\u6027\u3092\u9ad8\u3081\u307e\u3059\u3002 \u4eca\u3067\u306f\u591a\u304f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u81ea\u52d5\u66f4\u65b0\u306e\u6a5f\u80fd\u3092\u5099\u3048\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u3053\u3067\u3001\u5341\u5206\u306a\u6574\u5408\u6027\u306e\u691c\u8a3c\u3092\u884c\u3046\u3053\u3068\u306a\u304f\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u3001\u4fe1\u983c\u6e08\u307f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u9069\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u653b\u6483\u8005\u306f\u81ea\u524d\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3001\u5168\u3066\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5bfe\u8c61\u306b\u5bfe\u3057\u3066\u914d\u4fe1\u3092\u884c\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u4ed6\u306e\u4f8b\u3068\u3057\u3066\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3084\u30c7\u30fc\u30bf\u304c\u653b\u6483\u8005\u304c\u76ee\u3067\u898b\u3066\u4fee\u6b63\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306a\u69cb\u9020\u3068\u3057\u3066\u30a8\u30f3\u30b3\u30fc\u30c9\u307e\u305f\u306f\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u308b\u3088\u3046\u306a\u5834\u5408\u306f\u3001\u5b89\u5168\u3067\u306a\u3044\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u8106\u5f31\u3067\u3042\u308b\u3068\u8a00\u3048\u307e\u3059\u3002</p>"},{"location":"ja/A08_2021-Software_and_Data_Integrity_Failures/#_4","title":"\u9632\u6b62\u65b9\u6cd5","text":"<ul> <li> <p>\u7f72\u540d\u3042\u308b\u3044\u306f\u985e\u4f3c\u306e\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u7528\u3044\u3066\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3084\u30c7\u30fc\u30bf\u304c\u610f\u56f3\u3055\u308c\u305f\u30bd\u30fc\u30b9\u304b\u3089\u53d6\u5f97\u3055\u308c\u305f\u3082\u306e\u3067\u3042\u308b\u3053\u3068\u3092\u691c\u8a3c\u3057\u307e\u3059\u3002</p> </li> <li> <p>npm\u3084Maven\u306a\u3069\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3084\u4f9d\u5b58\u95a2\u4fc2\u304c\u4fe1\u983c\u3055\u308c\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u65e2\u77e5\u306e\u8106\u5f31\u6027\u3092\u542b\u307e\u306a\u3044\u3053\u3068\u3092\u691c\u8a3c\u3059\u308b\u305f\u3081\u306b\u3001OWASP Dependency Check\u3084OWASP CycloneDX\u3068\u3044\u3063\u305f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30b5\u30d7\u30e9\u30a4\u30c1\u30a7\u30fc\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c4\u30fc\u30eb\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u60aa\u610f\u306e\u3042\u308b\u30b3\u30fc\u30c9\u3084\u8a2d\u5b9a\u304c\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306b\u7d44\u307f\u8fbc\u307e\u308c\u308b\u6a5f\u4f1a\u3092\u6700\u5c0f\u5316\u3059\u308b\u305f\u3081\u306b\u3001\u30b3\u30fc\u30c9\u3084\u8a2d\u5b9a\u306e\u5909\u66f4\u306b\u5bfe\u3059\u308b\u30ec\u30d3\u30e5\u30fc\u30d7\u30ed\u30bb\u30b9\u304c\u78ba\u7acb\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002</p> </li> <li> <p>CI/CD\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c\u9069\u5207\u306b\u5206\u96e2\u3055\u308c\u3001\u8a2d\u5b9a\u3055\u308c\u3001\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u3001\u307e\u305f\u3001\u30d3\u30eb\u30c9\u3084\u30c7\u30d7\u30ed\u30a4\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u81f3\u308b\u30b3\u30fc\u30c9\u30d5\u30ed\u30fc\u306e\u6574\u5408\u6027\u304c\u78ba\u4fdd\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u6539\u3056\u3093\u3084\u518d\u751f\u6210\u3092\u691c\u51fa\u3059\u308b\u4f55\u3089\u304b\u306e\u6574\u5408\u6027\u78ba\u8a8d\u3084\u30c7\u30b8\u30bf\u30eb\u7f72\u540d\u3092\u884c\u3046\u3053\u3068\u306a\u3057\u306b\u3001\u4fe1\u983c\u3055\u308c\u3066\u3044\u306a\u3044\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u5bfe\u3057\u3066\u672a\u7f72\u540d\u3082\u3057\u304f\u306f\u6697\u53f7\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3057\u307e\u305b\u3093\u3002</p> </li> </ul>"},{"location":"ja/A08_2021-Software_and_Data_Integrity_Failures/#_5","title":"\u653b\u6483\u30b7\u30ca\u30ea\u30aa\u306e\u4f8b","text":"<p>\u30b7\u30ca\u30ea\u30aa #1 \u7f72\u540d\u306e\u306a\u3044\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8: \u591a\u304f\u306e\u30db\u30fc\u30e0\u30eb\u30fc\u30bf\u30fc\u3001\u30bb\u30c3\u30c8\u30c8\u30c3\u30d7\u30dc\u30c3\u30af\u30b9\u3001\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u7b49\u306f\u3001\u7f72\u540d\u6e08\u307f\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306b\u3088\u308b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u691c\u8a3c\u3092\u884c\u3044\u307e\u305b\u3093\u3002 \u672a\u7f72\u540d\u306e\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306f\u3001\u653b\u6483\u8005\u306b\u3068\u3063\u3066\u62e1\u5927\u3057\u3064\u3064\u3042\u308b\u6a19\u7684\u3067\u3042\u308a\u3001\u60aa\u5316\u306e\u4e00\u9014\u304c\u4e88\u60f3\u3055\u308c\u307e\u3059\u3002 \u591a\u304f\u306e\u5834\u5408\u306b\u304a\u3044\u3066\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u5c06\u6765\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3066\u4fee\u6b63\u3092\u884c\u3063\u305f\u4e0a\u3067\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4f7f\u7528\u3055\u308c\u306a\u304f\u306a\u308b\u306e\u3092\u5f85\u3064\u307b\u304b\u306a\u3044\u3053\u3068\u304b\u3089\u3001\u3053\u308c\u306f\u975e\u5e38\u306b\u5927\u304d\u306a\u61f8\u5ff5\u4e8b\u9805\u3067\u3059\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #2 SolarWinds\u3067\u306e\u60aa\u610f\u306e\u3042\u308b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8: \u6700\u8fd1\u306e\u6ce8\u76ee\u3059\u3079\u304d\u653b\u6483\u304cSolarWinds Orion\u3067\u306e\u653b\u6483\u3067\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3068\u4f75\u305b\u3066\u3001\u56fd\u5bb6\u306f\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u6a5f\u69cb\u3092\u653b\u6483\u3059\u308b\u3053\u3068\u304c\u77e5\u3089\u308c\u3066\u3044\u307e\u3059\u3002 \u305d\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u958b\u767a\u3057\u305f\u4f01\u696d\u306f\u3001\u5b89\u5168\u306a\u30d3\u30eb\u30c9\u3068\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u6574\u5408\u30d7\u30ed\u30bb\u30b9\u3092\u5099\u3048\u3066\u3044\u307e\u3057\u305f\u3002 \u3057\u304b\u3057\u3001\u305d\u308c\u3089\u306f\u7834\u58ca\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u3063\u305f\u305f\u3081\u306b\u3001\u305d\u306e\u4f01\u696d\u306f\u3001\u6570\u30f6\u6708\u306b\u308f\u305f\u3063\u3066\u3001\u9ad8\u5ea6\u306b\u6a19\u7684\u5316\u3055\u308c\u305f\u60aa\u610f\u306e\u3042\u308b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u309218,000\u3092\u8d85\u3048\u308b\u7d44\u7e54\u306b\u914d\u4fe1\u3057\u3001\u305d\u306e\u3046\u3061100\u307b\u3069\u306e\u7d44\u7e54\u304c\u5f71\u97ff\u3092\u53d7\u3051\u307e\u3057\u305f\u3002 \u3053\u306e\u4e00\u4ef6\u306f\u3001\u3053\u306e\u985e\u306e\u4fb5\u5bb3\u3068\u3057\u3066\u306f\u3001\u6b74\u53f2\u4e0a\u6700\u3082\u5e83\u7bc4\u56f2\u306b\u5f71\u97ff\u304c\u5e83\u304c\u308a\u3001\u307e\u305f\u6700\u3082\u91cd\u5927\u3067\u3042\u3063\u305f\u3082\u306e\u306e\u4e00\u3064\u3067\u3059\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #3 \u5b89\u5168\u3067\u306a\u3044\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3: React\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u3001\u4e00\u9023\u306eSpring Boot\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002 \u95a2\u6570\u578b\u8a00\u8a9e\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306f\u3001\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3053\u3046\u3068\u3057\u307e\u3059\u3002 \u305d\u3053\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306f\u3001\u547c\u3073\u51fa\u3057\u306e\u524d\u5f8c\u3067\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u72b6\u614b\u3092\u6e21\u3059\u3001\u3068\u8a00\u3046\u89e3\u6c7a\u7b56\u3092\u601d\u3044\u3064\u304d\u307e\u3059\u3002 \u653b\u6483\u8005\u306f (base64\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u793a\u3059) \"rO0\" \u3068\u3044\u3046Java\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u306b\u6c17\u3065\u304d\u3001Java Serial Killer\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u4e0a\u3067\u30ea\u30e2\u30fc\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002</p>"},{"location":"ja/A08_2021-Software_and_Data_Integrity_Failures/#_6","title":"\u53c2\u8003\u8cc7\u6599","text":"<ul> <li> <p>[OWASP Cheat Sheet: Software Supply Chain Security](Coming Soon)</p> </li> <li> <p>[OWASP Cheat Sheet: Secure build and deployment](Coming Soon)</p> </li> <li> <p>OWASP Cheat Sheet: Infrastructure as Code</p> </li> <li> <p>OWASP Cheat Sheet: Deserialization</p> </li> <li> <p>SAFECode Software Integrity Controls</p> </li> <li> <p>A 'Worst Nightmare' Cyberattack: The Untold Story Of The     SolarWinds     Hack</p> </li> <li> <p>CodeCov Bash Uploader Compromise</p> </li> <li> <p>Securing DevOps by Julien Vehent</p> </li> </ul>"},{"location":"ja/A08_2021-Software_and_Data_Integrity_Failures/#cwe","title":"\u5bfe\u5fdc\u3059\u308b CWE \u306e\u30ea\u30b9\u30c8","text":"<p>CWE-345 Insufficient Verification of Data Authenticity</p> <p>CWE-353 Missing Support for Integrity Check</p> <p>CWE-426 Untrusted Search Path</p> <p>CWE-494 Download of Code Without Integrity Check</p> <p>CWE-502 Deserialization of Untrusted Data</p> <p>CWE-565 Reliance on Cookies without Validation and Integrity Checking</p> <p>CWE-784 Reliance on Cookies without Validation and Integrity Checking in a Security Decision</p> <p>CWE-829 Inclusion of Functionality from Untrusted Control Sphere</p> <p>CWE-830 Inclusion of Web Functionality from an Untrusted Source</p> <p>CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes</p>"},{"location":"ja/A08_2021-Software_and_Data_Integrity_Failures/#a082021-software-and-data-integrity-failures","title":"A08:2021 \u2013 Software and Data Integrity Failures","text":""},{"location":"ja/A08_2021-Software_and_Data_Integrity_Failures/#overview","title":"Overview","text":"<p>A new category for 2021 focuses on making assumptions related to software updates, critical data, and CI/CD pipelines without verifying integrity. One of the highest weighted impacts from Common Vulnerability and Exposures/Common Vulnerability Scoring System (CVE/CVSS) data. Notable Common Weakness Enumerations (CWEs) include CWE-829: Inclusion of Functionality from Untrusted Control Sphere, CWE-494: Download of Code Without Integrity Check, and CWE-502: Deserialization of Untrusted Data.</p>"},{"location":"ja/A08_2021-Software_and_Data_Integrity_Failures/#references","title":"References","text":"<ul> <li> <p>[OWASP Cheat Sheet: Software Supply Chain Security](Coming Soon)</p> </li> <li> <p>[OWASP Cheat Sheet: Secure build and deployment](Coming Soon)</p> </li> <li> <p>OWASP Cheat Sheet: Infrastructure as Code</p> </li> <li> <p>OWASP Cheat Sheet: Deserialization</p> </li> <li> <p>SAFECode Software Integrity Controls</p> </li> <li> <p>A 'Worst Nightmare' Cyberattack: The Untold Story Of The     SolarWinds     Hack</p> </li> <li> <p>CodeCov Bash Uploader Compromise</p> </li> <li> <p>Securing DevOps by Julien Vehent</p> </li> </ul>"},{"location":"ja/A09_2021-Security_Logging_and_Monitoring_Failures/","title":"A09:2021 \u2013 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ed\u30b0\u3068\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u306e\u5931\u6557","text":""},{"location":"ja/A09_2021-Security_Logging_and_Monitoring_Failures/#_1","title":"\u56e0\u5b50","text":"\u5bfe\u5fdc\u3059\u308b CWE \u6570 \u6700\u5927\u767a\u751f\u7387 \u5e73\u5747\u767a\u751f\u7387 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306e\u96e3\u6613\u5ea6\uff09 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306b\u3088\u308b\u5f71\u97ff\uff09 \u6700\u5927\u7db2\u7f85\u7387 \u5e73\u5747\u7db2\u7f85\u7387 \u7dcf\u767a\u751f\u6570 CVE \u5408\u8a08\u4ef6\u6570 4 19.23% 6.51% 6.87 4.99 53.67% 39.97% 53,615 242"},{"location":"ja/A09_2021-Security_Logging_and_Monitoring_Failures/#_2","title":"\u6982\u8981","text":"<p>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ed\u30ae\u30f3\u30b0\u3068\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u306f\u3001OWASP Top10 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306b\u3088\u308b\u8abf\u67fb\u306b\u3066\u7b2c3\u4f4d\u3067\u3001OWASP \u30c8\u30c3\u30d7 10 2017 \u306e\u7b2c 10 \u4f4d\u304b\u3089\u308f\u305a\u304b\u306b\u4e0a\u6607\u3057\u307e\u3057\u305f\u3002 \u30ed\u30ae\u30f3\u30b0\u3068\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u306f\u30c6\u30b9\u30c8\u304c\u96e3\u3057\u304f\u3001\u30a4\u30f3\u30bf\u30d3\u30e5\u30fc\u3084\u30da\u30cd\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8\u3067\u653b\u6483\u304c\u691c\u51fa\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306e CVE/CVSS \u30c7\u30fc\u30bf\u306f\u3042\u307e\u308a\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u4fb5\u5bb3\u3092\u691c\u77e5\u3057\u3066\u5bfe\u5fdc\u3059\u308b\u3053\u3068\u306f\u91cd\u8981\u3067\u3059\u3002 \u3068\u306f\u3044\u3048\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u3067\u5931\u6557\u304c\u8d77\u304d\u308b\u3068\u3001\u8aac\u660e\u8cac\u4efb\u3001\u53ef\u8996\u5316\u3001\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u30a2\u30e9\u30fc\u30c8\u3001\u30d5\u30a9\u30ec\u30f3\u30b8\u30c3\u30af\u306a\u3069\u306b\u5f71\u97ff\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306f\u3001CWE-778 \u30ed\u30ae\u30f3\u30b0\u306e\u4e0d\u8db3 \u3060\u3051\u3067\u306a\u304f\u3001CWE-117 \u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u4e0d\u9069\u5207\u306a\u51fa\u529b\u3001CWE-223 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306b\u95a2\u9023\u3059\u308b\u60c5\u5831\u306e\u7701\u7565\u3001CWE-532 \u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306e\u60c5\u5831\u6f0f\u6d29 \u306a\u3069\u3082\u542b\u307e\u308c\u307e\u3059\u3002</p>"},{"location":"ja/A09_2021-Security_Logging_and_Monitoring_Failures/#_3","title":"\u8aac\u660e","text":"<p>OWASP Top 10 2021 \u306b\u8a71\u3092\u623b\u3059\u3068\u3001\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306f\u3001\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u9055\u53cd\u306e\u691c\u51fa\u3001\u30a8\u30b9\u30ab\u30ec\u30fc\u30b7\u30e7\u30f3\u3001\u304a\u3088\u3073\u5bfe\u5fdc\u3092\u652f\u63f4\u3059\u308b\u3082\u306e\u3067\u3059\u3002 \u30ed\u30ae\u30f3\u30b0\u3068\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u304c\u306a\u3051\u308c\u3070\u3001\u4fb5\u5bb3\u3092\u691c\u77e5\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u30ed\u30ae\u30f3\u30b0\u3084\u691c\u77e5\u3001\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3001\u9069\u6642\u306e\u5bfe\u5fdc\u304c\u5341\u5206\u306b\u884c\u308f\u308c\u306a\u3044\u3068\u3044\u3046\u72b6\u6cc1\u306f\u3001\u3044\u3064\u3067\u3082\u767a\u751f\u3057\u307e\u3059:</p> <ul> <li> <p>\u30ed\u30b0\u30a4\u30f3\u3001\u5931\u6557\u3057\u305f\u30ed\u30b0\u30a4\u30f3\u3001\u91cd\u8981\u306a\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306a\u3069\u306e\u76e3\u67fb\u53ef\u80fd\u306a\u30a4\u30d9\u30f3\u30c8\u304c\u30ed\u30b0\u306b\u8a18\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u3002</p> </li> <li> <p>\u8b66\u544a\u3068\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u3082\u30ed\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u751f\u6210\u3055\u308c\u306a\u3044\u3001\u307e\u305f\u306f\u4e0d\u5341\u5206\u3001\u4e0d\u660e\u78ba\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3002</p> </li> <li> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068API\u306e\u30ed\u30b0\u304c\u3001\u7591\u308f\u3057\u3044\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u3092\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u3044\u306a\u3044\u3002</p> </li> <li> <p>\u30ed\u30b0\u304c\u30ed\u30fc\u30ab\u30eb\u306b\u306e\u307f\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u3002</p> </li> <li> <p>\u30a2\u30e9\u30fc\u30c8\u306e\u9069\u5207\u306a\u3057\u304d\u3044\u5024\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30a8\u30b9\u30ab\u30ec\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30b9\u304c\u6574\u3048\u3089\u308c\u3066\u3044\u306a\u3044\u3001\u307e\u305f\u306f\u6709\u52b9\u3067\u306f\u306a\u3044\u3002</p> </li> <li> <p>\u30da\u30cd\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8\u3084DAST(dynamic application security testing)\u30c4\u30fc\u30eb\uff08OWASP ZAP\u306a\u3069\uff09\u306b\u3088\u308b\u30b9\u30ad\u30e3\u30f3\u304c\u30a2\u30e9\u30fc\u30c8\u3092\u3042\u3052\u306a\u3044\u3002</p> </li> <li> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3001\u6e96\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u653b\u6483\u3092\u691c\u77e5\u3001\u30a8\u30b9\u30ab\u30ec\u30fc\u30c8\u3001\u307e\u305f\u306f\u30a2\u30e9\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002</p> </li> </ul> <p>\u30e6\u30fc\u30b6\u307e\u305f\u306f\u653b\u6483\u8005\u304c\u30ed\u30b0\u3084\u30a2\u30e9\u30fc\u30c8\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u95b2\u89a7\u3067\u304d\u308b\u3068\u3001\u60c5\u5831\u306e\u6f0f\u3048\u3044\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059 (A01:2021-\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u4e0d\u5099 \u3092\u53c2\u7167).</p>"},{"location":"ja/A09_2021-Security_Logging_and_Monitoring_Failures/#_4","title":"\u9632\u6b62\u65b9\u6cd5","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u4fdd\u5b58\u307e\u305f\u306f\u51e6\u7406\u3055\u308c\u308b\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30af\u306b\u5fdc\u3058\u3066\u5bfe\u5fdc\u3059\u308b\uff1a</p> <ul> <li> <p>\u30ed\u30b0\u30a4\u30f3\u3001\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u5931\u6557\u3001\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u5165\u529b\u691c\u8a3c\u306e\u5931\u6557\u3092\u5168\u3066\u30ed\u30b0\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002     \u30ed\u30b0\u306f\u3001\u4e0d\u5be9\u306a\u30a2\u30ab\u30a6\u30f3\u30c8\u3084\u60aa\u610f\u306e\u3042\u308b\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u7279\u5b9a\u3059\u308b\u305f\u3081\u306b\u5341\u5206\u306a\u30e6\u30fc\u30b6\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u6301\u3061\u3001     \u5f8c\u65e5\u3001\u30d5\u30a9\u30ec\u30f3\u30b8\u30c3\u30af\u5206\u6790\u3092\u884c\u3046\u306e\u306b\u5341\u5206\u306a\u671f\u9593\u5206\u4fdd\u6301\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002</p> </li> <li> <p>\u7d71\u5408\u30ed\u30b0\u7ba1\u7406\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u7c21\u5358\u306b\u4f7f\u7528\u3067\u304d\u308b\u5f62\u5f0f\u3067\u30ed\u30b0\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002</p> </li> <li> <p>\u4fa1\u5024\u306e\u9ad8\u3044\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\u3001\u76e3\u67fb\u8a3c\u8de1\u304c\u53d6\u5f97\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3002     \u305d\u306e\u969b\u3001\u8ffd\u8a18\u578b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c6\u30fc\u30d6\u30eb\u306a\u3069\u306e\u3088\u3046\u306a\u3001\u5b8c\u5168\u6027\u3092\u4fdd\u3064\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3092\u7528\u3044\u3066\u3001\u6539\u3056\u3093\u3084\u524a\u9664\u3092\u9632\u6b62\u3059\u308b\u3002</p> </li> <li> <p>DevSecOps \u30c1\u30fc\u30e0\u304c\u7591\u308f\u3057\u3044\u6d3b\u52d5\u3092\u30bf\u30a4\u30e0\u30ea\u30fc\u306b\u691c\u77e5\u3057\u3066\u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u52b9\u679c\u7684\u306a\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3068\u30a2\u30e9\u30fc\u30c8\u3092\u78ba\u7acb\u3059\u308b\u3002</p> </li> <li> <p>NIST(National Institute of Standards and Technology) 800-61 rev 2\uff08\u307e\u305f\u306f\u305d\u308c\u4ee5\u964d\uff09\u306e\u3088\u3046\u306a\u3001\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u5bfe\u5fdc\u304a\u3088\u3073\u5fa9\u65e7\u8a08\u753b\u3092\u7b56\u5b9a\u307e\u305f\u306f\u63a1\u7528\u3059\u308b\u3002</p> </li> </ul> <p>OWASP AppSensor\u3001OWASP ModSecurity Core Rule Set\u3092\u4f7f\u7528\u3057\u305fModSecurity\u306a\u3069\u306eWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3001 \u30ab\u30b9\u30bf\u30e0\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u3068\u30a2\u30e9\u30fc\u30c8\u3092\u4f7f\u7528\u3057\u305f\u30ed\u30b0\u76f8\u95a2\u5206\u6790\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\uff08Elasticsearch, Logstash, Kibana (ELK) \uff09\u306a\u3069\u3001\u5546\u7528\u304a\u3088\u3073\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4fdd\u8b77\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/A09_2021-Security_Logging_and_Monitoring_Failures/#_5","title":"\u653b\u6483\u30b7\u30ca\u30ea\u30aa\u306e\u4f8b","text":"<p>\u30b7\u30ca\u30ea\u30aa #1: </p> <p>\u3042\u308b\u5150\u7ae5\u533b\u7642\u30d7\u30e9\u30f3\u306e\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u904b\u55b6\u8005\u306f\u3001\u76e3\u8996\u3068\u30ed\u30b0\u306e\u4e0d\u8db3\u306e\u305f\u3081\u306b\u4fb5\u5bb3\u3092\u691c\u77e5\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002 \u653b\u6483\u8005\u304c 350 \u4e07\u4eba\u4ee5\u4e0a\u306e\u5b50\u3069\u3082\u305f\u3061\u306e\u6570\u5343\u3082\u306e\u6a5f\u5bc6\u6027\u306e\u9ad8\u3044\u5065\u5eb7\u8a18\u9332\u306b\u30a2\u30af\u30bb\u30b9\u3057\u5909\u66f4\u3057\u305f\u3068\u3044\u3046\u9023\u7d61\u304c\u3001\u5916\u90e8\u306e\u95a2\u4fc2\u8005\u304b\u3089\u533b\u7642\u6a5f\u95a2\u306b\u3042\u308a\u307e\u3057\u305f\u3002 \u4e8b\u6545\u5f8c\u306e\u30ec\u30d3\u30e5\u30fc\u3067\u306f\u3001\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306e\u958b\u767a\u8005\u304c\u91cd\u8981\u306a\u8106\u5f31\u6027\u306b\u5bfe\u51e6\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u3053\u3068\u304c\u5224\u660e\u3057\u307e\u3057\u305f\u3002 \u30b7\u30b9\u30c6\u30e0\u306e\u30ed\u30ae\u30f3\u30b0\u3084\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u304c\u884c\u308f\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u305f\u3081\u3001\u30c7\u30fc\u30bf\u4fb5\u5bb3\u306f 2013 \u5e74\u304b\u3089 7 \u5e74\u4ee5\u4e0a\u306b\u308f\u305f\u3063\u3066\u9032\u884c\u3057\u3066\u3044\u305f\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #2: </p> <p>\u3042\u308b\u30a4\u30f3\u30c9\u306e\u5927\u624b\u822a\u7a7a\u4f1a\u793e\u3067\u3001\u30d1\u30b9\u30dd\u30fc\u30c8\u3084\u30af\u30ec\u30b8\u30c3\u30c8\u30ab\u30fc\u30c9\u306a\u3069\u6570\u767e\u4e07\u4eba\u306e\u4e57\u5ba2\u306e 10 \u5e74\u5206\u4ee5\u4e0a\u306e\u500b\u4eba\u60c5\u5831\u3092\u542b\u3080\u30c7\u30fc\u30bf\u304c\u6d41\u51fa\u3057\u307e\u3057\u305f\u3002 \u3053\u306e\u30c7\u30fc\u30bf\u6d41\u51fa\u306f\u3001\u7b2c\u4e09\u8005\u306e\u30af\u30e9\u30a6\u30c9\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3067\u767a\u751f\u3057\u3001\u3057\u3070\u3089\u304f\u3057\u3066\u304b\u3089\u822a\u7a7a\u4f1a\u793e\u306b\u901a\u77e5\u3055\u308c\u307e\u3057\u305f\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #3: </p> <p>\u3042\u308b\u6b27\u5dde\u306e\u5927\u624b\u822a\u7a7a\u4f1a\u793e\u304c\u3001GDPR\u306e\u5831\u544a\u5bfe\u8c61\u3068\u306a\u308b\u4fb5\u5bb3\u3092\u53d7\u3051\u307e\u3057\u305f\u3002 \u3053\u306e\u9055\u53cd\u306f\u3001\u6c7a\u6e08\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8106\u5f31\u6027\u304c\u653b\u6483\u8005\u306b\u60aa\u7528\u3055\u308c\u300140\u4e07\u4ef6\u4ee5\u4e0a\u306e\u9867\u5ba2\u306e\u6c7a\u6e08\u8a18\u9332\u304c\u53ce\u96c6\u3055\u308c\u305f\u3053\u3068\u304c\u539f\u56e0\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u822a\u7a7a\u4f1a\u793e\u306f\u3001\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u898f\u5236\u6a5f\u95a2\u304b\u30892,000\u4e07\u30dd\u30f3\u30c9\u306e\u7f70\u91d1\u3092\u79d1\u305b\u3089\u308c\u307e\u3057\u305f\u3002</p>"},{"location":"ja/A09_2021-Security_Logging_and_Monitoring_Failures/#_6","title":"\u53c2\u8003\u8cc7\u6599","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Logging and     Monitoring</p> </li> <li> <p>OWASP Application Security Verification Standard: V8 Logging and     Monitoring</p> </li> <li> <p>OWASP Testing Guide: Testing for Detailed Error     Code</p> </li> <li> <p>OWASP Cheat Sheet:     Application Logging Vocabulary</p> </li> <li> <p>OWASP Cheat Sheet:     Logging)   </p> </li> <li> <p>Data Integrity: Recovering from Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Identifying and Protecting Assets Against     Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Detecting and Responding to Ransomware and Other     Destructive     Events</p> </li> </ul>"},{"location":"ja/A09_2021-Security_Logging_and_Monitoring_Failures/#cwe","title":"\u5bfe\u5fdc\u3059\u308b CWE \u306e\u30ea\u30b9\u30c8","text":"<p>CWE-117 \u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u4e0d\u9069\u5207\u306a\u51fa\u529b</p> <p>CWE-223 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306b\u95a2\u9023\u3059\u308b\u60c5\u5831\u306e\u7701\u7565</p> <p>CWE-532 \u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306e\u60c5\u5831\u6f0f\u6d29</p> <p>CWE-778 \u30ed\u30ae\u30f3\u30b0\u306e\u4e0d\u8db3</p>"},{"location":"ja/A09_2021-Security_Logging_and_Monitoring_Failures/#a092021-security-logging-and-monitoring-failures","title":"A09:2021 \u2013 Security Logging and Monitoring Failures","text":""},{"location":"ja/A09_2021-Security_Logging_and_Monitoring_Failures/#description","title":"Description","text":"<p>Returning to the OWASP Top 10 2021, this category is to help detect, escalate, and respond to active breaches. Without logging and monitoring, breaches cannot be detected. Insufficient logging, detection, monitoring, and active response occurs any time:</p> <ul> <li> <p>Auditable events, such as logins, failed logins, and high-value     transactions, are not logged.</p> </li> <li> <p>Warnings and errors generate no, inadequate, or unclear log     messages.</p> </li> <li> <p>Logs of applications and APIs are not monitored for suspicious     activity.</p> </li> <li> <p>Logs are only stored locally.</p> </li> <li> <p>Appropriate alerting thresholds and response escalation processes     are not in place or effective.</p> </li> <li> <p>Penetration testing and scans by dynamic application security testing (DAST) tools (such as OWASP ZAP) do     not trigger alerts.</p> </li> <li> <p>The application cannot detect, escalate, or alert for active attacks     in real-time or near real-time.</p> </li> </ul> <p>You are vulnerable to information leakage by making logging and alerting events visible to a user or an attacker (see A01:2021-Broken Access Control).</p>"},{"location":"ja/A09_2021-Security_Logging_and_Monitoring_Failures/#references","title":"References","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Logging and     Monitoring</p> </li> <li> <p>OWASP Application Security Verification Standard: V8 Logging and     Monitoring</p> </li> <li> <p>OWASP Testing Guide: Testing for Detailed Error     Code</p> </li> <li> <p>OWASP Cheat Sheet:     Application Logging Vocabulary</p> </li> <li> <p>OWASP Cheat Sheet:     Logging</p> </li> <li> <p>Data Integrity: Recovering from Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Identifying and Protecting Assets Against     Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Detecting and Responding to Ransomware and Other     Destructive     Events</p> </li> </ul>"},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/","title":"A10:2021 - \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u30ea\u30af\u30a8\u30b9\u30c8\u30d5\u30a9\u30fc\u30b8\u30a7\u30ea (SSRF)","text":""},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_1","title":"\u56e0\u5b50","text":"\u5bfe\u5fdc\u3059\u308b CWE \u6570 \u6700\u5927\u767a\u751f\u7387 \u5e73\u5747\u767a\u751f\u7387 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306e\u96e3\u6613\u5ea6\uff09 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306b\u3088\u308b\u5f71\u97ff\uff09 \u6700\u5927\u7db2\u7f85\u7387 \u5e73\u5747\u7db2\u7f85\u7387 \u7dcf\u767a\u751f\u6570 CVE \u5408\u8a08\u4ef6\u6570 1 2.72% 2.72% 8.28 6.72 67.72% 67.72% 9,503 385"},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_2","title":"\u6982\u8981","text":"<p>\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306fTop10\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u8abf\u67fb\uff08\u7b2c1\u4f4d\uff09\u304b\u3089\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 \u8abf\u67fb\u30c7\u30fc\u30bf\u304b\u3089\u308f\u304b\u308b\u3053\u3068\u306f\u3001\u3088\u304f\u3042\u308b\u30c6\u30b9\u30c8\u3088\u308a\u5e83\u7bc4\u306a\u7bc4\u56f2\u306b\u304a\u3044\u3066\u3001\u554f\u984c\u306e\u767a\u751f\u7387\u306f\u6bd4\u8f03\u7684\u4f4e\u3044\u3082\u306e\u306e\u3001\u554f\u984c\u304c\u8d77\u304d\u305f\u5834\u5408\u306e\u30a8\u30af\u30b9\u30d7\u30ed\u30a4\u30c8\u3068\u30a4\u30f3\u30d1\u30af\u30c8\u306f\u5e73\u5747\u4ee5\u4e0a\u306e\u3082\u306e\u3068\u306a\u308a\u5f97\u307e\u3059\u3002 \u3053\u306eSSRF\u306e\u3088\u3046\u306a\u65b0\u3057\u3044\u9805\u76ee\u306f\u3001\u6ce8\u610f\u3068\u8a8d\u8b58\u3092\u4e0a\u3052\u308b\u305f\u3081\u306b\u5358\u4e00\u307e\u305f\u306f\u5c0f\u3055\u306a\u5171\u901a\u8106\u5f31\u6027\u30bf\u30a4\u30d7\u4e00\u89a7 (CWE) \u306e\u96c6\u5408\u3067\u3042\u308b\u3053\u3068\u304c\u591a\u304f\u3001\u6ce8\u76ee\u3092\u96c6\u3081\u308b\u3053\u3068\u3067\u5c06\u6765\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3066\u3088\u308a\u5927\u304d\u306a\u30ab\u30c6\u30b4\u30ea\u306b\u96c6\u7d04\u3055\u308c\u308b\u3088\u3046\u671f\u5f85\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_3","title":"\u8aac\u660e","text":"<p>SSRF\u306e\u6b20\u9665\u306f\u3001Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4e0a\u304b\u3089\u30ea\u30e2\u30fc\u30c8\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3059\u308b\u969b\u306b\u3001\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u63d0\u4f9b\u3055\u308c\u305fURL\u3092\u691c\u8a3c\u305b\u305a\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u767a\u751f\u3057\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3084VPN\u3042\u308b\u3044\u306f\u305d\u306e\u4ed6\u306e\u7a2e\u985e\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u30ea\u30b9\u30c8(ACL)\u306b\u3088\u3063\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u4fdd\u8b77\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3067\u3042\u3063\u3066\u3082\u3001SSRF\u306b\u3088\u308a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u610f\u56f3\u3057\u306a\u3044\u5b9b\u5148\u3078\u7d30\u5de5\u3055\u308c\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5f37\u5236\u7684\u306b\u767a\u884c\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u30e2\u30c0\u30f3\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u30fc\u306b\u4fbf\u5229\u306a\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067URL\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u306f\u73cd\u3057\u3044\u72b6\u6cc1\u3067\u306f\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002 \u305d\u306e\u305f\u3081SSRF\u306e\u767a\u751f\u304c\u5897\u52a0\u3057\u3066\u3044\u307e\u3059\u3002 \u307e\u305fSSRF\u306e\u6df1\u523b\u5ea6\u3082\u3001\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u3084\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u8907\u96d1\u6027\u3092\u80cc\u666f\u3068\u3057\u3066\u3001\u6bb5\u3005\u3068\u5927\u304d\u304f\u306a\u308a\u3064\u3064\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_4","title":"\u9632\u6b62\u65b9\u6cd5","text":"<p>\u958b\u767a\u8005\u306f\u4ee5\u4e0b\u306e\u591a\u5c64\u9632\u5fa1\u306e\u5236\u5fa1\u306e\u4e00\u90e8\u306a\u3044\u3057\u5168\u3066\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001SSRF\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_5","title":"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5c64\u304b\u3089","text":"<ul> <li> <p>SSRF\u306e\u5f71\u97ff\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u3001\u30ea\u30e2\u30fc\u30c8\u306e\u30ea\u30bd\u30fc\u30b9\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u6a5f\u80fd\u3092\u5206\u96e2\u3055\u308c\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5207\u308a\u51fa\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u5fc5\u9808\u306e\u30a4\u30f3\u30c8\u30e9\u30cd\u30c3\u30c8\u901a\u4fe1\u3092\u9664\u304d\u5168\u3066\u306e\u901a\u4fe1\u3092\u30d6\u30ed\u30c3\u30af\u3059\u308b\u3088\u3046\u3001\u300c\u30c7\u30d5\u30a9\u30eb\u30c8\u62d2\u5426\u300d\u306e\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u30dd\u30ea\u30b7\u30fc\u307e\u305f\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u3092\u5f37\u5236\u3057\u307e\u3059\u3002 \u30d2\u30f3\u30c8:     ~ \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5fdc\u3058\u3066\u3001\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u30eb\u30fc\u30eb\u306e\u6240\u6709\u6a29\u3068\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u660e\u78ba\u5316\u3057\u307e\u3059\u3002     ~ \u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306b\u304a\u3044\u3066\u8a31\u53ef\u3055\u308c\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3001\u305d\u3057\u3066\u30d6\u30ed\u30c3\u30af\u3055\u308c\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u5168\u3066\u30ed\u30b0\u3068\u3057\u3066\u8a18\u9332\u3057\u307e\u3059     (A09:2021-\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ed\u30b0\u3068\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u306e\u5931\u6557\u3092\u53c2\u7167)\u3002</p> </li> </ul>"},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_6","title":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u304b\u3089:","text":"<ul> <li> <p>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u63d0\u4f9b\u3057\u305f\u5168\u3066\u306e\u5165\u529b\u30c7\u30fc\u30bf\u3092\u30b5\u30cb\u30bf\u30a4\u30ba\u3057\u3001\u691c\u8a3c\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u660e\u78ba\u306a\u8a31\u53ef\u30ea\u30b9\u30c8\u7528\u3044\u3066URL\u30b9\u30ad\u30fc\u30e0\u3001\u30dd\u30fc\u30c8\u3001\u5b9b\u5148\u3092\u5f37\u5236\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u751f\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u9001\u4fe1\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> </li> <li> <p>HTTP\u306e\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3092\u7121\u52b9\u5316\u3057\u307e\u3059\u3002</p> </li> <li> <p>DNS\u30ea\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3084\"time of check, time of use\" (TOCTOU) \u7af6\u5408\u72b6\u614b\u3068\u3044\u3063\u305f\u653b\u6483\u3092\u9632\u3050\u305f\u3081\u306b\u3001URL\u306e\u6574\u5408\u6027\u306b\u6ce8\u610f\u3057\u307e\u3059\u3002</p> </li> </ul> <p>\u62d2\u5426\u30ea\u30b9\u30c8\u3084\u6b63\u898f\u8868\u73fe\u3092\u7528\u3044\u3066\u306eSSRF\u5bfe\u7b56\u3092\u5b9f\u88c5\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u653b\u6483\u8005\u306f\u62d2\u5426\u30ea\u30b9\u30c8\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u30ea\u30b9\u30c8\u3001\u30c4\u30fc\u30eb\u3001\u305d\u3057\u3066\u6280\u8853\u3092\u5099\u3048\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_7","title":"\u691c\u8a0e\u3059\u3079\u304d\u8ffd\u52a0\u306e\u5bfe\u7b56:","text":"<ul> <li> <p>\u30d5\u30ed\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0\u306b\u306f\u3001\u4ed6\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u95a2\u9023\u30b5\u30fc\u30d3\u30b9\uff08\u4f8b\uff1aOpenID\uff09\u3092\u30c7\u30d7\u30ed\u30a4\uff08\u914d\u5099\uff09\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u3053\u308c\u3089\u306e\u30b7\u30b9\u30c6\u30e0\u4e0a\u306e\u30ed\u30fc\u30ab\u30eb\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\uff08\u4f8b\uff1alocalhost\uff09\u3082\u5236\u5fa1\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> </li> <li> <p>\u30e6\u30fc\u30b6\u30fc\u30b0\u30eb\u30fc\u30d7\u304c\u9650\u5b9a\u7684\u304b\u3064\u7ba1\u7406\u53ef\u80fd\u3067\u3042\u308b\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3067\u3001\u7279\u306b\u9ad8\u3044\u30ec\u30d9\u30eb\u306e\u4fdd\u8b77\u304c\u6c42\u3081\u3089\u308c\u308b\u5834\u5408\u306f\u3001\u72ec\u7acb\u3057\u305f\u30b7\u30b9\u30c6\u30e0\u4e0a\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u6697\u53f7\u5316\uff08\u4f8b\uff1aVPN\uff09\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> </li> </ul>"},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_8","title":"\u653b\u6483\u30b7\u30ca\u30ea\u30aa\u306e\u4f8b","text":"<p>\u653b\u6483\u8005\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b7\u30ca\u30ea\u30aa\u3067\u3001Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3084\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3001\u3082\u3057\u304f\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30afACL\u306b\u3088\u3063\u3066\u4fdd\u8b77\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u653b\u6483\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059:</p> <p>\u30b7\u30ca\u30ea\u30aa #1: \u5185\u90e8\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30dd\u30fc\u30c8\u30b9\u30ad\u30e3\u30f3 - \u30bb\u30b0\u30e1\u30f3\u30c8\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u5834\u5408\u3001\u653b\u6483\u8005\u306f\u5185\u90e8\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u6a19\u7684\u3068\u3057\u3066\u3001SSRF\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u63a5\u7d9a\u7d50\u679c\u3082\u3057\u304f\u306f\u63a5\u7d9a\u3084\u62d2\u5426\u3055\u308c\u308b\u307e\u3067\u306b\u304b\u304b\u3063\u305f\u6642\u9593\u3092\u3082\u3068\u306b\u5185\u90e8\u30b5\u30fc\u30d0\u30fc\u306e\u30dd\u30fc\u30c8\u304c\u30aa\u30fc\u30d7\u30f3\u304b\u30af\u30ed\u30fc\u30ba\u304b\u3092\u8abf\u3079\u307e\u3059\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #2: \u6a5f\u5fae\u306a\u60c5\u5831\u306e\u9732\u51fa - \u653b\u6483\u8005\u306f\u6a5f\u5fae\u306a\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u3001<code>file:///etc/passwd&lt;/span&gt;</code> \u3084 <code>http://localhost:28017/</code> \u306e\u3088\u3046\u306a\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f\u5185\u90e8\u30b5\u30fc\u30d0\u30fc\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #3: \u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u3078\u306e\u30a2\u30af\u30bb\u30b9 - \u591a\u304f\u306e\u30af\u30e9\u30a6\u30c9\u30d7\u30ed\u30d0\u30a4\u30c0\u306f <code>http://169.254.169.254/</code> \u306e\u3088\u3046\u306a\u30e1\u30bf\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u653b\u6483\u8005\u306f\u6a5f\u5fae\u306a\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u53d6\u308a\u307e\u3059\u3002</p> <p>\u30b7\u30ca\u30ea\u30aa #4: \u5185\u90e8\u30b5\u30fc\u30d3\u30b9\u306e\u4e57\u3063\u53d6\u308a - \u653b\u6483\u8005\u306f\u30ea\u30e2\u30fc\u30c8\u30b3\u30fc\u30c9\u5b9f\u884c (RCE) \u3084\u30b5\u30fc\u30d3\u30b9\u62d2\u5426 (DoS) \u306e\u3088\u3046\u306a\u3055\u3089\u306a\u308b\u653b\u6483\u3092\u884c\u3046\u305f\u3081\u306b\u5185\u90e8\u30b5\u30fc\u30d3\u30b9\u3092\u60aa\u7528\u3057\u307e\u3059\u3002</p>"},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_9","title":"\u53c2\u8003\u8cc7\u6599","text":"<ul> <li> <p>OWASP - Server-Side Request Forgery Prevention Cheat     Sheet</p> </li> <li> <p>PortSwigger - Server-side request forgery     (SSRF)</p> </li> <li> <p>Acunetix - What is Server-Side Request Forgery     (SSRF)?</p> </li> <li> <p>SSRF     bible</p> </li> <li> <p>A New Era of SSRF - Exploiting URL Parser in Trending Programming     Languages!</p> </li> </ul>"},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#cwe","title":"\u5bfe\u5fdc\u3059\u308b CWE \u306e\u30ea\u30b9\u30c8","text":"<p>CWE-918 Server-Side Request Forgery (SSRF)</p>"},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#a102021-server-side-request-forgery-ssrf","title":"A10:2021 \u2013 Server-Side Request Forgery (SSRF)","text":""},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#from-network-layer","title":"From Network layer","text":"<ul> <li> <p>Segment remote resource access functionality in separate networks to     reduce the impact of SSRF</p> </li> <li> <p>Enforce \u201cdeny by default\u201d firewall policies or network access     control rules to block all but essential intranet traffic. Hints:     ~ Establish an ownership and a lifecycle for firewall rules based on applications.     ~ Log all accepted and blocked network flows on firewalls     (see A09:2021-Security Logging and Monitoring Failures).</p> </li> </ul>"},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#additional-measures-to-consider","title":"Additional Measures to consider:","text":"<ul> <li> <p>Don't deploy other security relevant services on front systems (e.g. OpenID).     Control local traffic on these systems (e.g. localhost)</p> </li> <li> <p>For frontends with dedicated and manageable user groups use network encryption (e.g. VPNs)     on independent systems to consider very high protection needs</p> </li> </ul>"},{"location":"ja/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#example-attack-scenarios","title":"Example Attack Scenarios","text":"<p>Attackers can use SSRF to attack systems protected behind web application firewalls, firewalls, or network ACLs, using scenarios such as:</p> <p>Scenario #1: Port scan internal servers \u2013 If the network architecture is unsegmented, attackers can map out internal networks and determine if ports are open or closed on internal servers from connection results or elapsed time to connect or reject SSRF payload connections.</p> <p>Scenario #2: Sensitive data exposure \u2013 Attackers can access local files such as or internal services to gain sensitive information such as <code>file:///etc/passwd&lt;/span&gt;</code> and <code>http://localhost:28017/</code>.</p> <p>Scenario #3: Access metadata storage of cloud services \u2013 Most cloud providers have metadata storage such as <code>http://169.254.169.254/</code>. An attacker can read the metadata to gain sensitive information.</p> <p>Scenario #4: Compromise internal services \u2013 The attacker can abuse internal services to conduct further attacks such as Remote Code Execution (RCE) or Denial of Service (DoS).</p>"},{"location":"ja/A11_2021-Next_Steps/","title":"A11:2021 \u2013 Next Steps","text":"<p>OWASP\u30c8\u30c3\u30d710\u306f\u3001\u5efa\u3066\u4ed8\u3051\u4e0a\u3001\u6700\u3082\u91cd\u8981\u306a10\u306e\u30ea\u30b9\u30af\u306b\u9650\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002OWASP\u30c8\u30c3\u30d710\u306b\u63b2\u8f09\u3059\u308b\u304b\u3069\u3046\u304b\u3001\u9577\u6642\u9593\u306e\u691c\u8a0e\u3092\u8981\u3057\u305f\u300c\u304e\u308a\u304e\u308a\u5883\u754c\u7dda\u300d\u306e\u30ea\u30b9\u30af\u3067\u3001\u6700\u7d42\u7684\u306b\u306f\u63b2\u8f09\u3055\u308c\u306a\u304b\u3063\u305f\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002 \u30c7\u30fc\u30bf\u3092\u3055\u307e\u3056\u307e\u306a\u65b9\u6cd5\u3067\u89e3\u91c8\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u3067\u3082\u4ed6\u306e\u30ea\u30b9\u30af\u306e\u65b9\u304c\u3088\u308a\u5927\u304d\u306a\u5f71\u97ff\u304c\u3042\u3063\u305f\u304b\u3089\u3067\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6210\u719f\u3055\u305b\u308b\u3079\u304f\u53d6\u308a\u7d44\u3093\u3067\u3044\u308b\u4f01\u696d\u3084\u3001\u9069\u7528\u7bc4\u56f2\u3092\u5e83\u3052\u305f\u3044\u3068\u8003\u3048\u3066\u3044\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b3\u30f3\u30b5\u30eb\u30bf\u30f3\u30c8\u4f1a\u793e\u3042\u308b\u3044\u306f\u88fd\u54c1\u30c4\u30fc\u30eb\u30d9\u30f3\u30c0\u30fc\u306f\u3001\u4ee5\u4e0b\u306e4\u3064\u306e\u554f\u984c\u306b\u3064\u3044\u3066\u306f\u3001\u8b58\u5225\u3057\u305f\u308a\u4fee\u6b63\u3057\u305f\u308a\u3059\u308b\u52aa\u529b\u3092\u50be\u3051\u308b\u4fa1\u5024\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/A11_2021-Next_Steps/#_1","title":"\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u54c1\u8cea\u306b\u304b\u304b\u308f\u308b\u554f\u984c","text":"\u5bfe\u5fdc\u3059\u308b CWE \u6570 \u6700\u5927\u767a\u751f\u7387 \u5e73\u5747\u767a\u751f\u7387 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306e\u96e3\u6613\u5ea6\uff09 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306b\u3088\u308b\u5f71\u97ff\uff09 \u6700\u5927\u7db2\u7f85\u7387 \u5e73\u5747\u7db2\u7f85\u7387 \u7dcf\u767a\u751f\u6570 CVE \u5408\u8a08\u4ef6\u6570 38 49.46% 2.22% 7.1 6.7 60.85% 23.42% 101736 7564 <ul> <li> <p>\u6982\u8981 \u30b3\u30fc\u30c9\u54c1\u8cea\u306e\u554f\u984c\u306b\u306f\u3001\u65e2\u77e5\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e0a\u306e\u6b20\u9665\u3084\u30d1\u30bf\u30fc\u30f3\u3001\u5909\u6570\u306e\u591a\u76ee\u7684\u518d\u5229\u7528\u3001\u30c7\u30d0\u30c3\u30b0\u51fa\u529b\u3067\u306e\u6a5f\u5bc6\u60c5\u5831\u306e\u9732\u51fa\u3001\u4e00\u3064\u9055\u3044\u306e\u30a8\u30e9\u30fc\u3001TOCTOU\uff08time of check/time of use\uff09\u30ec\u30fc\u30b9\u30b3\u30f3\u30c7\u30a3\u30b7\u30e7\u30f3(\u7af6\u5408\u72b6\u614b)\u3001\u7b26\u53f7\u306a\u3057\u307e\u305f\u306f\u7b26\u53f7\u3042\u308a\u306e\u5909\u63db\u30a8\u30e9\u30fc\u3001free\u5f8c\u306e\u9818\u57df\u306e\u4f7f\u7528\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u7279\u5fb4\u306f\u3001\u901a\u5e38\u3001\u53b3\u3057\u3044\u30b3\u30f3\u30d1\u30a4\u30e9\u30d5\u30e9\u30b0\u3001\u9759\u7684\u30b3\u30fc\u30c9\u89e3\u6790\u30c4\u30fc\u30eb\u3001Linter IDE\u30d7\u30e9\u30b0\u30a4\u30f3\u306a\u3069\u3067\u7279\u5b9a\u3067\u304d\u308b\u3053\u3068\u3067\u3059\u3002  \u30e2\u30c0\u30f3\u306a\u958b\u767a\u73fe\u4ee3\u306e\u8a00\u8a9e\u306f\u3001\u8a2d\u8a08\u4e0a\u3001\u305f\u3068\u3048\u3070Rust\u306e\u30e1\u30e2\u30ea\u6240\u6709\u6a29\u3068\u501f\u7528\u306e\u6982\u5ff5\u3001Rust\u306e\u30b9\u30ec\u30c3\u30c9\u8a2d\u8a08\u3001Go\u306e\u53b3\u683c\u306a\u578b\u4ed8\u3051\u3068\u5883\u754c\u30c1\u30a7\u30c3\u30af\u306e\u3088\u3046\u306b\u3001\u3053\u308c\u3089\u306e\u554f\u984c\u306e\u591a\u304f\u3092\u6392\u9664\u3057\u3066\u3044\u307e\u3059\u3002</p> </li> <li> <p>\u9632\u5fa1\u624b\u6bb5 \u5229\u7528\u3057\u3066\u3044\u308b\u30a8\u30c7\u30a3\u30bf\u3084\u8a00\u8a9e\u306e\u9759\u7684\u30b3\u30fc\u30c9\u89e3\u6790\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3057\u3066\u4f7f\u7528\u3059\u308b\u3002\u9759\u7684\u30b3\u30fc\u30c9\u89e3\u6790\u30c4\u30fc\u30eb\u306e\u4f7f\u7528\u3092\u691c\u8a0e\u3059\u308b\u3002Rust\u3084Go\u306a\u3069\u3001\u30d0\u30b0\u30af\u30e9\u30b9\u3092\u6392\u9664\u3057\u305f\u8a00\u8a9e\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u4f7f\u7528\u3084\u79fb\u884c\u304c\u53ef\u80fd\u304b\u3069\u3046\u304b\u3092\u691c\u8a0e\u3059\u308b\u3002</p> </li> <li> <p>\u653b\u6483\u30b7\u30ca\u30ea\u30aa\u4f8b \u653b\u6483\u8005\u306f\u3001\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u9593\u3067\u9759\u7684\u306b\u5171\u6709\u3055\u308c\u305f\u5909\u6570\u3092\u4f7f\u7528\u3059\u308b\u30ec\u30fc\u30b9\u30b3\u30f3\u30c7\u30a3\u30b7\u30e7\u30f3\u3092\u60aa\u7528\u3057\u3066\u3001\u6a5f\u5bc6\u60c5\u5831\u3092\u53d6\u5f97\u307e\u305f\u306f\u66f4\u65b0\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> </li> <li> <p>\u53c2\u8003\u6587\u732e</p> <ul> <li> <p>OWASP Code Review Guide</p> </li> <li> <p>Google Code Review Guide</p> </li> </ul> </li> </ul>"},{"location":"ja/A11_2021-Next_Steps/#dos","title":"\u30b5\u30fc\u30d3\u30b9\u62d2\u5426\u653b\u6483(DoS)","text":"\u5bfe\u5fdc\u3059\u308b CWE \u6570 \u6700\u5927\u767a\u751f\u7387 \u5e73\u5747\u767a\u751f\u7387 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306e\u96e3\u6613\u5ea6\uff09 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306b\u3088\u308b\u5f71\u97ff\uff09 \u6700\u5927\u7db2\u7f85\u7387 \u5e73\u5747\u7db2\u7f85\u7387 \u7dcf\u767a\u751f\u6570 CVE \u5408\u8a08\u4ef6\u6570 8 17.54% 4.89% 8.3 5.9 79.58% 33.26% 66985 973 <ul> <li> <p>\u6982\u8981 \u5341\u5206\u306a\u30ea\u30bd\u30fc\u30b9\u304c\u3042\u308c\u3070\u3001\u30b5\u30fc\u30d3\u30b9\u62d2\u5426\u306f\u5e38\u306b\u53ef\u80fd\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u8a2d\u8a08\u3084\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u624b\u6cd5\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u62d2\u5426\u653b\u6483\u306e\u88ab\u5bb3\u306e\u5927\u304d\u3055\u306b\u5f71\u97ff\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30ea\u30f3\u30af\u3072\u3068\u3064\u3042\u308c\u3070\u8ab0\u3067\u3082\u5927\u5bb9\u91cf\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u308a\u3001\u3042\u3089\u3086\u308b\u30da\u30fc\u30b8\u3067\u8a08\u7b97\u91cf\u306e\u591a\u3044\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u3046\u3044\u3046\u30b1\u30fc\u30b9\u3067\u306f\u3001\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u62d2\u5426\u306e\u6319\u52d5\u306f\u3001\u5c11\u306a\u3044\u52b4\u529b\u3067\u3082\u6210\u7acb\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u3069\u306e\u3088\u3046\u306b\u9632\u3050\u304b \u30b3\u30fc\u30c9\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30c6\u30b9\u30c8\u3092\u3001CPU\u3001I/O\u3001\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u306b\u3064\u3044\u3066\u5b9f\u65bd\u3057\u3001\u518d\u8a2d\u8a08\u3001\u6700\u9069\u5316\u3001\u307e\u305f\u306f\u30b3\u30b9\u30c8\u306e\u9ad8\u3044\u64cd\u4f5c\u306b\u3064\u3044\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u884c\u3046\u3002\u5de8\u5927\u306a\u30d5\u30a1\u30a4\u30eb\u3084\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u306f\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u3057\u3001\u8a31\u53ef\u3055\u308c\u305f\u500b\u4eba\u306e\u307f\u304c\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u5236\u5fa1\u3057\u305f\u308a\u3001\u30a8\u30c3\u30b8\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u691c\u8a0e\u3059\u308b\u3002</p> </li> <li> <p>\u653b\u6483\u30b7\u30ca\u30ea\u30aa\u4f8b \u653b\u6483\u8005\u306f\u3001\u3042\u308b\u64cd\u4f5c\u304c\u5b8c\u4e86\u3059\u308b\u306e\u306b5\uff5e10\u79d2\u304b\u304b\u308b\u3068\u5224\u65ad\u3057\u305f\u3068\u3057\u307e\u3059\u30024\u3064\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u540c\u6642\u306b\u5b9f\u884c\u3059\u308b\u3068\u30b5\u30fc\u30d0\u30fc\u304c\u5fdc\u7b54\u3057\u306a\u304f\u306a\u308b\u3088\u3046\u306b\u898b\u3048\u308b\u3068\u3001\u653b\u6483\u8005\u306f1000\u500b\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3001\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u3092\u30aa\u30d5\u30e9\u30a4\u30f3\u306b\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u53c2\u8003\u6587\u732e</p> <ul> <li> <p>OWASP Cheat Sheet: Denial of Service</p> </li> <li> <p>OWASP Attacks: Denial of Service</p> </li> </ul> </li> </ul>"},{"location":"ja/A11_2021-Next_Steps/#_2","title":"\u30e1\u30e2\u30ea\u7ba1\u7406\u30a8\u30e9\u30fc","text":"\u5bfe\u5fdc\u3059\u308b CWE \u6570 \u6700\u5927\u767a\u751f\u7387 \u5e73\u5747\u767a\u751f\u7387 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306e\u96e3\u6613\u5ea6\uff09 \u52a0\u91cd\u5e73\u5747\uff08\u653b\u6483\u306b\u3088\u308b\u5f71\u97ff\uff09 \u6700\u5927\u7db2\u7f85\u7387 \u5e73\u5747\u7db2\u7f85\u7387 \u7dcf\u767a\u751f\u6570 CVE \u5408\u8a08\u4ef6\u6570 14 7.03% 1.16% 6.7 8.1 56.06% 31.74% 26576 16184 <ul> <li> <p>\u6982\u8981 Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001Java\u3001.NET\u3001node.js\uff08JavaScript\u307e\u305f\u306fTypeScript\uff09\u306a\u3069\u306e\u30e1\u30e2\u30ea\u7ba1\u7406\u306e\u3067\u304d\u308b\u8a00\u8a9e\u3067\u66f8\u304b\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u3053\u308c\u3089\u306e\u8a00\u8a9e\u306f\u3001\u30d0\u30c3\u30d5\u30a1\u3084\u30d2\u30fc\u30d7\u306e\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3001free\u5f8c\u30e1\u30e2\u30ea\u30fc\u306e\u5229\u7528\u3001\u6574\u6570\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306a\u3069\u3001\u30e1\u30e2\u30ea\u7ba1\u7406\u306e\u554f\u984c\u3092\u62b1\u3048\u308b\u30b7\u30b9\u30c6\u30e0\u8a00\u8a9e\u3067\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8a00\u8a9e\u304c\u540d\u76ee\u4e0a\u300c\u30e1\u30e2\u30ea\u30bb\u30fc\u30d5\u300d\u3060\u3068\u3057\u3066\u3082\u3001\u5b9f\u969b\u306e\u57fa\u76e4\u306f\u305d\u3046\u3067\u306f\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u8a3c\u62e0\u3092\u793a\u3059\u30b5\u30f3\u30c9\u30dc\u30c3\u30af\u30b9\u74b0\u5883\u304b\u3089\u306e\u8131\u51fa\u306f\u3001\u679a\u6319\u306b\u3044\u3068\u307e\u304c\u3042\u308a\u307e\u305b\u3093\u3002</p> </li> <li> <p>\u9632\u5fa1\u624b \u6700\u8fd1\u306eAPI\u306e\u591a\u304f\u306f\u3001Rust\u3084Go\u306a\u3069\u306e\u30e1\u30e2\u30ea\u30bb\u30fc\u30d5\u306a\u8a00\u8a9e\u3067\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002Rust\u306e\u5834\u5408\u3001\u30e1\u30e2\u30ea\u30bb\u30fc\u30d5\u306f\u8a00\u8a9e\u306e\u91cd\u8981\u306a\u6a5f\u80fd\u3067\u3059\u3002\u65e2\u5b58\u306e\u30b3\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u306f\u3001\u53b3\u5bc6\u306a\u30b3\u30f3\u30d1\u30a4\u30e9\u30d5\u30e9\u30b0\u3001\u5f37\u529b\u306a\u578b\u4ed8\u3051\u3001\u9759\u7684\u30b3\u30fc\u30c9\u89e3\u6790\u3001\u30d5\u30a1\u30ba\u30c6\u30b9\u30c8\u306a\u3069\u3092\u4f7f\u7528\u3059\u308b\u306a\u3089\u3001\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3001\u30e1\u30e2\u30ea\u3001\u914d\u5217\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30f3\u306a\u3069\u3092\u7279\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002</p> </li> <li> <p>\u653b\u6483\u30b7\u30ca\u30ea\u30aa\u4f8b \u30d0\u30c3\u30d5\u30a1\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3084\u30d2\u30fc\u30d7\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306f\u3001\u9577\u5e74\u306b\u308f\u305f\u308a\u653b\u6483\u8005\u306e\u4e3b\u8981\u306a\u65b9\u6cd5\u3068\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u653b\u6483\u8005\u306f\u30c7\u30fc\u30bf\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u9001\u308a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u305d\u308c\u3092\u30b9\u30bf\u30c3\u30af\u30d0\u30c3\u30d5\u30a1(\u30b5\u30a4\u30ba\u304c\u8db3\u308a\u3066\u3044\u306a\u3044\u306b\u3082\u304b\u304b\u308f\u3089\u305a)\u306b\u683c\u7d0d\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002\u305d\u306e\u7d50\u679c\u3068\u3057\u3066\u3001\u30b3\u30fc\u30eb\u30b9\u30bf\u30c3\u30af\u4e0a\u306e\u60c5\u5831(\u95a2\u6570\u306e\u30ea\u30bf\u30fc\u30f3\u30dd\u30a4\u30f3\u30bf\u3092\u542b\u3080)\u304c\u4e0a\u66f8\u304d\u3055\u308c\u307e\u3059\u3002\u653b\u6483\u8005\u306e\u9001\u3063\u305f\u30c7\u30fc\u30bf\u306b\u3088\u308a\u3001\u95a2\u6570\u306e\u30ea\u30bf\u30fc\u30f3\u30dd\u30a4\u30f3\u30bf\u304c\u4e0a\u66f8\u304d\u3055\u308c\u3001\u95a2\u6570\u304c\u30ea\u30bf\u30fc\u30f3\u30dd\u30a4\u30f3\u30bf\u3092\u8fd4\u3057\u305f\u3068\u304d\u3001\u653b\u6483\u8005\u306e\u30c7\u30fc\u30bf\u306b\u542b\u307e\u308c\u308b\u60aa\u610f\u306e\u3042\u308b\u30b3\u30fc\u30c9\u3078\u5236\u5fa1\u304c\u79fb\u3055\u308c\u307e\u3059\u3002</p> </li> <li> <p>\u53c2\u8003\u6587\u732e</p> <ul> <li> <p>OWASP Vulnerabilities: Buffer Overflow</p> </li> <li> <p>OWASP Attacks: Buffer Overflow</p> </li> <li> <p>Science Direct: Integer Overflow</p> </li> </ul> </li> </ul>"},{"location":"ja/A11_2021-Next_Steps/#a112021-next-steps_1","title":"A11:2021 \u2013 Next Steps","text":"<p>By design, the OWASP Top 10 is innately limited to the ten most significant risks. Every OWASP Top 10 has \u201con the cusp\u201d risks considered at length for inclusion, but in the end, they didn\u2019t make it. No matter how we tried to interpret or twist the data, the other risks were more prevalent and impactful.</p> <p>Organizations working towards a mature appsec program or security consultancies or tool vendors wishing to expand coverage for their offerings, the following four issues are well worth the effort to identify and remediate.</p>"},{"location":"pt-BR/","title":"Introdu\u00e7\u00e3o","text":""},{"location":"pt-BR/#bem-vindo-ao-owasp-top-10-2021","title":"Bem-vindo ao OWASP Top 10 - 2021","text":"<p>Bem-vindo \u00e0 \u00faltima edi\u00e7\u00e3o do OWASP Top 10! O OWASP Top 10 2021 \u00e9 totalmente novo, com um novo design gr\u00e1fico e um infogr\u00e1fico  dispon\u00edvel que voc\u00ea pode imprimir ou obter em nossa p\u00e1gina inicial.</p> <p>Um grande obrigado a todos que contribu\u00edram com seu tempo e dados para esta itera\u00e7\u00e3o. Sem voc\u00ea, esta parcela n\u00e3o aconteceria. OBRIGADO.</p>"},{"location":"pt-BR/#o-que-mudou-no-top-10-para-2021","title":"O que mudou no Top 10 para 2021","text":"<p>Existem tr\u00eas novas categorias, quatro categorias com altera\u00e7\u00f5es em nomenclaturas e escopo, e alguma consolida\u00e7\u00e3o no Top 10 para 2021.</p> <p></p> <ul> <li>A01:2021-Quebra de Controle de Acesso sobe da quinta posi\u00e7\u00e3o; 94% das aplica\u00e7\u00e3o foram testados para alguma forma de controle de acesso quebrado. O 34 CWEs mapeados para Quebra de Controle de Acesso tiveram mais ocorr\u00eancias em aplica\u00e7\u00f5es do que qualquer outra categoria.</li> <li>A02:2021-Falhas Criptogr\u00e1ficas sobe uma posi\u00e7\u00e3o para #2, anteriormente conhecido como Exposi\u00e7\u00e3o de Dados Sens\u00edveis, que era um sintoma amplo em vez de uma causa raiz. O foco renovado aqui est\u00e1 nas falhas relacionadas \u00e0 criptografia, que muitas vezes leva \u00e0 exposi\u00e7\u00e3o de dados confidenciais ou sistema comprometido.</li> <li>A03:2021-Inje\u00e7\u00e3o foi rebaixado para terceira posi\u00e7\u00e3o. 94% das aplica\u00e7\u00f5es foram testadas para alguma forma de inje\u00e7\u00e3o com uma taxa de incid\u00eancia m\u00e1xima de 19%, uma taxa de incid\u00eancia m\u00e9dia de 3,37% e os 33 CWEs mapeados nesta categoria t\u00eam o segundo maior n\u00famero de ocorr\u00eancias em aplica\u00e7\u00f5es, com 274k ocorr\u00eancias. Cross-site Scripting (Scripts Inter-site) agora faz parte desta categoria nesta edi\u00e7\u00e3o.</li> <li>A04:2021-Design Inseguro \u00e9 uma nova categoria para 2021, com foco em riscos relacionados a falhas de projeto. Se quisermos genuinamente \"mover para a esquerda (shift left)\" como setor, precisamos de mais modelagem de amea\u00e7as, padr\u00f5es e princ\u00edpios de design seguros e arquiteturas de refer\u00eancia. Um design inseguro n\u00e3o pode ser corrigido por uma implementa\u00e7\u00e3o perfeita, pois, por defini\u00e7\u00e3o, os controles de seguran\u00e7a necess\u00e1rios nunca foram criados para a defesa contra ataques espec\u00edficos.</li> <li>A05:2021-Configura\u00e7\u00e3o Insegura subiu para sexta posi\u00e7\u00e3o em compara\u00e7\u00e3o a edi\u00e7\u00e3o anterior. 90% dos aplicativos foram testados para alguma conforma de configura\u00e7\u00e3o insegura, com uma taxa de incid\u00eancia m\u00e9dia de 4,5% e mais de 208 mil ocorr\u00eancias de CWEs mapeados para esta categoria de risco. Com mais mudan\u00e7as em software altamente configur\u00e1vel, n\u00e3o \u00e9 surpreendente ver essa categoria subir.</li> <li>A06:2021-Componente Desatualizado e Vulner\u00e1vel foi anteriormente intitulado \"Usar componente com vulnerabilidade conhecida\" e \u00e9 o n\u00famero 2 na pesquisa da comunidade Top 10, mas tamb\u00e9m tinha dados suficientes para chegar ao Top 10 por meio de an\u00e1lise de dados. Esta categoria subiu da 9\u00aa posi\u00e7\u00e3o em 2017 e \u00e9 um problema conhecido que temos dificuldade em testar e avaliar o risco. \u00c9 a \u00fanica categoria a n\u00e3o ter nenhuma Vulnerabilidade e Exposi\u00e7\u00f5es Comuns (CVEs) mapeada para os CWEs inclu\u00eddos, portanto, uma explora\u00e7\u00e3o padr\u00e3o e pesos de impacto de 5,0 s\u00e3o considerados em suas pontua\u00e7\u00f5es.</li> <li>A07:2021-Falha de Identifica\u00e7\u00e3o e Autentica\u00e7\u00e3o era conhecida anteriormente como Falha de Autentica\u00e7\u00e3o e caiu da terceira posi\u00e7\u00e3o para essa, e foram inclu\u00eddas as CWEs que mais se relacionam com as falhas na identifica\u00e7\u00e3o. Essa categoria ainda \u00e9 parte integrante do Top 10, mas a maior disponibilidade de estruturas (frameworks) padronizadas parece estar ajudando a reduzir.</li> <li>A08:2021-Falha na Integridade de Dados e Software \u00e9 uma nova categoria em 2021, focadas em fazer premissas relacionadas a atualiza\u00e7\u00e3o de software, dados cr\u00edticos, e linhas de CI/CD que n\u00e3o verificam a integridade. Um dos maiores pesos dos dados nessa categoria s\u00e3o CVE/CVSS mapeados para os 10 CWEs nesta categoria. A categoria A8:2017-Desserializa\u00e7\u00e3o Insegura agora faz parte dessa categoria.</li> <li>A09:2021-Monitoramento de Falhas e Registros de Seguran\u00e7a anteriormente chamado de A10:2017-Registro e Monitoramentos Insuficientes e foi adicionado pela pesquisa da comunidade de Top 10, ficando em terceiro lugar, passando da 10\u00b0 posi\u00e7\u00e3o anterior. Essa categoria foi expandida para incluir um maior n\u00famero de falhas, sendo um desafio para testar e n\u00e3o est\u00e1 bem representada nos dados de CVE/CVSS. No entanto falhas nessa categoria podem impactar diretamente a visibilidade, o alerta de incidente e a per\u00edcia.</li> <li>A10:2021-Falsifica\u00e7\u00e3o de Solicita\u00e7\u00e3o do Lado do Servidor foi adicionada a partir da pesquisa da comunidade, sendo a primeira da classifica\u00e7\u00e3o. Os dados mostram uma taxa de incid\u00eancia relativamente baixa com cobertura de teste acima da m\u00e9dia, junto com classifica\u00e7\u00f5es acima da m\u00e9dia para potencial de explora\u00e7\u00e3o e impacto. Esta categoria representa o cen\u00e1rio em que os membros da comunidade de seguran\u00e7a est\u00e3o nos dizendo que isso \u00e9 importante, embora n\u00e3o esteja ilustrado nos dados neste momento.</li> </ul>"},{"location":"pt-BR/#metodologia","title":"Metodologia","text":"<p>Esta edi\u00e7\u00e3o do Top 10 \u00e9 mais baseada em dados do que nunca, mas n\u00e3o cegamente baseada em dados. Selecionamos oito das dez categorias de dados fornecidos e duas categorias da pesquisa da comunidade Top 10 em um alto n\u00edvel. Fazemos isso por uma raz\u00e3o fundamental: olhar para os dados de contribui\u00e7\u00e3o \u00e9 olhar para o passado. Os pesquisadores do seguran\u00e7a de aplica\u00e7\u00e3o levam tempo para encontrar novas vulnerabilidades e novas maneiras de test\u00e1-las. Leva tempo para integrar esses testes em ferramentas e processos. No momento em que podemos testar com seguran\u00e7a uma fraqueza em escala, provavelmente j\u00e1 se passaram anos. Para equilibrar essa vis\u00e3o, usamos uma pesquisa da comunidade para perguntar a especialistas em seguran\u00e7a e desenvolvimento de aplicativos na linha de frente o que eles veem como fraquezas essenciais que os dados podem n\u00e3o mostrar ainda.</p> <p>Existem algumas mudan\u00e7as cr\u00edticas que adotamos para continuar a amadurecer o Top 10.</p>"},{"location":"pt-BR/#como-as-categorias-sao-estruturadas","title":"Como as categorias s\u00e3o estruturadas","text":"<p>Os esfor\u00e7os anteriores de coleta de dados concentraram-se em um subconjunto prescrito de aproximadamente 30 CWEs com um campo solicitando descobertas adicionais. Aprendemos que as organiza\u00e7\u00f5es se concentrariam principalmente nesses 30 CWEs e raramente acrescentariam outros CWEs que vissem. Nesta itera\u00e7\u00e3o, n\u00f3s abrimos e apenas pedimos os dados, sem restri\u00e7\u00e3o de CWEs. Pedimos o n\u00famero de aplicativos testados para um determinado ano (come\u00e7ando em 2017) e o n\u00famero de aplicativos com pelo menos uma inst\u00e2ncia de um CWE encontrado em teste. Esse formato nos permite rastrear a preval\u00eancia de cada CWE na popula\u00e7\u00e3o de aplicativos. Ignoramos a frequ\u00eancia para nossos prop\u00f3sitos; embora possa ser necess\u00e1rio para outras situa\u00e7\u00f5es, ele apenas oculta a preval\u00eancia real na popula\u00e7\u00e3o de aplica\u00e7\u00e3o. Se um aplicativo tem quatro inst\u00e2ncias de um CWE ou 4.000 inst\u00e2ncias n\u00e3o faz parte do c\u00e1lculo para os 10 principais. Passamos de aproximadamente 30 CWEs para quase 400 CWEs para analisar no conjunto de dados. Planejamos fazer an\u00e1lises de dados adicionais como um suplemento no futuro. Este aumento significativo no n\u00famero de CWEs exige mudan\u00e7as na forma como as categorias s\u00e3o estruturadas.</p> <p>Passamos v\u00e1rios meses agrupando e categorizando os CWEs e poder\u00edamos ter continuado por mais tempo. Tivemos que parar em algum ponto. Existem os tipos de causa raiz e sintoma dos CWEs, em que os tipos de causa raiz s\u00e3o como \"Falha criptogr\u00e1fica\" e \"Configura\u00e7\u00e3o incorreta\" em contraste com os tipos sintoma como \"Exposi\u00e7\u00e3o de dados confidenciais\" e \"Nega\u00e7\u00e3o de servi\u00e7o\". Decidimos nos concentrar na causa raiz sempre que poss\u00edvel, pois \u00e9 mais l\u00f3gico para fornecer orienta\u00e7\u00e3o de identifica\u00e7\u00e3o e corre\u00e7\u00e3o. Focar na causa raiz em vez do sintoma n\u00e3o \u00e9 um conceito novo; o Top 10 foi uma mistura de sintoma e causa raiz. Os CWEs tamb\u00e9m s\u00e3o uma mistura de sintoma e causa raiz; estamos simplesmente sendo mais deliberados sobre isso e convocando-o. H\u00e1 uma m\u00e9dia de 19,6 CWEs por categoria nesta parcela, com os limites inferiores e superiores em 1 CWE para A10: 2021-Server-Side Request Forgery (SSRF) a 40 CWEs em A04: 2021-Design inseguro. Essa estrutura de categorias atualizada oferece benef\u00edcios adicionais de treinamento, pois as empresas podem se concentrar em CWEs que fa\u00e7am sentido para uma linguagem/estrutura.</p>"},{"location":"pt-BR/#como-os-dados-sao-usados-para-selecionar-categorias","title":"Como os dados s\u00e3o usados para selecionar categorias","text":"<p>Em 2017, selecionamos categorias por taxa de incid\u00eancia para determinar a probabilidade e, em seguida, as classificamos em discuss\u00f5es de equipe com base em d\u00e9cadas de experi\u00eancia em Explorabilidade, Detectabilidade (tamb\u00e9m probabilidade) e Impacto t\u00e9cnico. Para 2021, queremos usar os dados para Explorabilidade e Impacto (t\u00e9cnico), se poss\u00edvel.</p> <p>Baixamos o OWASP Dependency Check e extra\u00edmos a pontua\u00e7\u00e3o de explora\u00e7\u00e3o do CVSS e as pontua\u00e7\u00f5es de impacto agrupadas por CWEs relacionados. Foi necess\u00e1rio um pouco de pesquisa e esfor\u00e7o, pois todos os CVEs t\u00eam pontua\u00e7\u00f5es CVSSv2, mas h\u00e1 falhas no CVSSv2 que o CVSSv3 deve corrigir. Ap\u00f3s um determinado momento, todos os CVEs tamb\u00e9m recebem uma pontua\u00e7\u00e3o CVSSv3. Al\u00e9m disso, os intervalos de pontua\u00e7\u00e3o e f\u00f3rmulas foram atualizados entre CVSSv2 e CVSSv3.</p> <p>Em CVSSv2, Explora\u00e7\u00e3o e Impacto (T\u00e9cnico) podem ser at\u00e9 10,0, mas a f\u00f3rmula os derrubaria para 60% para Explora\u00e7\u00e3o e 40% para Impacto. No CVSSv3, o m\u00e1ximo te\u00f3rico foi limitado a 6,0 para Explora\u00e7\u00e3o e 4,0 para Impacto. Com a pondera\u00e7\u00e3o considerada, a pontua\u00e7\u00e3o de impacto aumentou, quase um ponto e meio em m\u00e9dia no CVSSv3, e a explorabilidade caiu quase meio ponto abaixo em m\u00e9dia.</p> <p>Existem 125k registros de um CVE mapeado para um CWE nos dados do National Vulnerability Database (NVD) extra\u00eddos do OWASP Dependency Check, e h\u00e1 241 CWEs exclusivos mapeados para um CVE. 62k dos CWEs t\u00eam uma pontua\u00e7\u00e3o CVSSv3, que \u00e9 aproximadamente metade da popula\u00e7\u00e3o do conjunto de dados.</p> <p>Para os dez primeiros 2021, calculamos as pontua\u00e7\u00f5es m\u00e9dias de explora\u00e7\u00e3o e impacto da seguinte maneira. Agrupamos todos os CVEs com pontua\u00e7\u00f5es CVSS por CWE e ponderamos explora\u00e7\u00e3o e impacto marcados pela porcentagem da popula\u00e7\u00e3o que tinha CVSSv3 + a popula\u00e7\u00e3o restante de pontua\u00e7\u00f5es CVSSv2 para obter uma m\u00e9dia geral. Mapeamos essas m\u00e9dias para os CWEs no conjunto de dados para usar como pontua\u00e7\u00e3o Explora\u00e7\u00e3o e Impacto (T\u00e9cnico) para a outra metade da equa\u00e7\u00e3o de risco.</p>"},{"location":"pt-BR/#por-que-nao-apenas-dados-puramente-estatisticos","title":"Por que n\u00e3o apenas dados puramente estat\u00edsticos?","text":"<p>Os resultados nos dados s\u00e3o limitados principalmente ao que podemos testar de maneira automatizada. Fale com um profissional experiente da seguran\u00e7a de aplica\u00e7\u00f5es, e ele lhe contar\u00e1 sobre as coisas que encontrou e as tend\u00eancias que viu e que ainda n\u00e3o constaram dos dados. Leva tempo para as pessoas desenvolverem metodologias de teste para certos tipos de vulnerabilidade e mais tempo para que esses testes sejam automatizados e executados em uma grande quantidade de aplicativos. Tudo o que encontramos \u00e9 uma retrospectiva e pode estar faltando tend\u00eancias do ano passado, que n\u00e3o est\u00e3o presentes nos dados.</p> <p>Portanto, escolhemos apenas oito das dez categorias dos dados porque est\u00e3o incompletos. As outras duas categorias s\u00e3o da pesquisa da comunidade Top 10. Ele permite que os profissionais nas linhas de frente votem naquilo que consideram os maiores riscos que podem n\u00e3o estar nos dados (e podem nunca ser expressos nos dados).</p>"},{"location":"pt-BR/#por-que-taxa-de-incidencia-em-vez-de-frequencia","title":"Por que taxa de incid\u00eancia em vez de frequ\u00eancia?","text":"<p>Existem tr\u00eas fontes principais de dados. N\u00f3s os identificamos como Ferramentas Assistidas por Humanos (HaT), Humanos Assistidos por Ferramentas (TaH) e Ferramentas.</p> <p>Ferramentas e HaT s\u00e3o geradores de alta-frequ\u00eancia. As ferramentas procurar\u00e3o vulnerabilidades espec\u00edficas e tentar\u00e3o incansavelmente encontrar todas as inst\u00e2ncias dessa vulnerabilidade, gerando contagens de descobertas altas para alguns tipos de vulnerabilidade. Observe o Cross-Site Scripting, que normalmente \u00e9 um de dois tipos: \u00e9 um erro menor e isolado ou um problema sist\u00eamico. Quando \u00e9 um problema sist\u00eamico, a contagem de descobertas pode chegar \u00e0 casa dos milhares para um \u00fanico aplicativo. Essa alta frequ\u00eancia abafa a maioria das outras vulnerabilidades encontradas em relat\u00f3rios ou dados.</p> <p>TaH, por outro lado, encontrar\u00e1 uma gama mais ampla de tipos de vulnerabilidade, mas em uma frequ\u00eancia muito menor devido a restri\u00e7\u00f5es de tempo. Quando os humanos testam um aplicativo e veem algo como Cross-Site Scripting, eles normalmente encontram tr\u00eas ou quatro inst\u00e2ncias e param. Eles podem determinar um achado sist\u00eamico e escrev\u00ea-lo com uma recomenda\u00e7\u00e3o para corrigir em uma escala de aplicativo. N\u00e3o h\u00e1 necessidade (ou tempo) para encontrar todas as inst\u00e2ncias.</p> <p>Suponha que pegemos esses dois conjuntos de dados distintos e tentemos mescl\u00e1-los na frequ\u00eancia. Nesse caso, os dados de Ferramentas e HaT ir\u00e3o afogar os dados TaH mais precisos (mas amplos) e \u00e9 uma boa parte do motivo pelo qual algo como Cross-Site Scripting foi t\u00e3o bem classificado em muitas listas quando o impacto \u00e9 geralmente de baixo a moderado. \u00c9 por causa do grande volume de descobertas. (Cross-Site Scripting tamb\u00e9m \u00e9 razoavelmente f\u00e1cil de testar, portanto, h\u00e1 muitos outros testes para ele tamb\u00e9m).</p> <p>Em 2017, introduzimos o uso da taxa de incid\u00eancia para dar uma nova olhada nos dados e mesclar os dados de Ferramentas e HaT com os dados TaH. A taxa de incid\u00eancia pergunta qual porcentagem da popula\u00e7\u00e3o do aplicativo tinha pelo menos uma inst\u00e2ncia de um tipo de vulnerabilidade. N\u00e3o nos importamos se foi pontual ou sist\u00eamico. Isso \u00e9 irrelevante para nossos prop\u00f3sitos; s\u00f3 precisamos saber quantos aplicativos tiveram pelo menos uma inst\u00e2ncia, o que ajuda a fornecer uma vis\u00e3o mais clara dos resultados de teste em v\u00e1rios tipos de teste, sem afogar os dados em resultados de alta frequ\u00eancia. Isso corresponde a uma vis\u00e3o relacionada ao risco, pois um invasor precisa de apenas uma inst\u00e2ncia para atacar um aplicativo com \u00eaxito por meio da categoria.</p>"},{"location":"pt-BR/#qual-e-o-processo-de-coleta-e-analise-de-dados","title":"Qual \u00e9 o processo de coleta e an\u00e1lise de dados?","text":"<p>Formalizamos o processo de coleta de dados OWASP Top 10 no Open Security Summit em 2017. No OWASP Top 10 l\u00edderes e a comunidade passaram dois dias trabalhando na formaliza\u00e7\u00e3o de um processo transparente de coleta de dados. A edi\u00e7\u00e3o de 2021 \u00e9 a segunda vez que usamos essa metodologia.</p> <p>Publicamos uma chamada de dados atrav\u00e9s dos canais de m\u00eddia social dispon\u00edveis para n\u00f3s. Na p\u00e1gina do Projeto OWASP, listamos os elementos de dados e a estrutura que estamos procurando e como envi\u00e1-los. No projeto GitHub, temos arquivos de exemplo que servem como modelos. Trabalhamos com as organiza\u00e7\u00f5es conforme necess\u00e1rio para ajudar a descobrir a estrutura e o mapeamento para os CWEs.</p> <p>Obtemos dados de organiza\u00e7\u00f5es que est\u00e3o no neg\u00f3cio de ferramentas de teste, programas de recompen\u00e7as de erros (Bug Bounty) e organiza\u00e7\u00f5es que contribuem com dados de teste internos. Assim que tivermos os dados, n\u00f3s os carregamos juntos e executamos uma an\u00e1lise fundamental do que os CWEs mapeiam para as categorias de risco. H\u00e1 sobreposi\u00e7\u00e3o entre alguns CWEs e outros est\u00e3o intimamente relacionados (por exemplo, vulnerabilidades criptogr\u00e1ficas). Quaisquer decis\u00f5es relacionadas aos dados brutos enviados s\u00e3o documentadas e publicadas para serem abertas e transparentes com a forma como normalizamos os dados.</p> <p>Examinamos as oito categorias com as taxas de incid\u00eancia mais altas para inclus\u00e3o no Top 10. Tamb\u00e9m olhamos os resultados da pesquisa da comunidade Top 10 para ver quais j\u00e1 podem estar presentes nos dados. Os dois primeiros votos que ainda n\u00e3o est\u00e3o presentes nos dados ser\u00e3o selecionados para os outros dois lugares no Top 10. Uma vez que todos os dez foram selecionados, aplicamos fatores generalizados para explorabilidade e impacto; para ajudar a classificar os Top 10 2021 em uma ordem baseada no risco.</p>"},{"location":"pt-BR/#fatores-dos-dados","title":"Fatores dos Dados","text":"<p>Existem fatores nos dados listados para cada uma das 10 principais categorias, eis o que eles significam: - CWEs mapeados: o n\u00famero de CWEs mapeados para uma categoria pela equipe dos 10 principais. - Taxa de incid\u00eancia: a taxa de incid\u00eancia \u00e9 a porcentagem de aplicativos vulner\u00e1veis a esse CWE da popula\u00e7\u00e3o testada por essa organiza\u00e7\u00e3o naquele ano. - (Teste) Cobertura: a porcentagem de aplicativos testados por todas as organiza\u00e7\u00f5es para um determinado CWE. - Peso de explora\u00e7\u00e3o: a sub-pontua\u00e7\u00e3o do Explora\u00e7\u00e3o das pontua\u00e7\u00f5es CVSSv2 e CVSSv3 atribu\u00eddas aos CVEs mapeados para CWEs, normalizados e colocados em uma escala de 10 pontos. - Impacto ponderado: a sub-pontua\u00e7\u00e3o de impacto das pontua\u00e7\u00f5es CVSSv2 e CVSSv3 atribu\u00eddas aos CVEs mapeados para CWEs, normalizados e colocados em uma escala de 10 pontos. - Total de ocorr\u00eancias: n\u00famero total de aplicativos encontrados com os CWEs mapeados para uma categoria. - Total de CVEs: n\u00famero total de CVEs no banco de dados NVD que foram mapeados para os CWEs mapeados para uma categoria.</p>"},{"location":"pt-BR/#parabens-aos-fornecedores-de-dados","title":"Parab\u00e9ns aos fornecedores de dados","text":"<p>As organiza\u00e7\u00f5es a seguir (junto com alguns doadores an\u00f4nimos) gentilmente doaram dados para mais de 500.000 aplicativos para tornar este o maior e mais abrangente conjunto de dados de seguran\u00e7a de aplicativos. Sem voc\u00eas, isso n\u00e3o seria poss\u00edvel.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"pt-BR/#obrigado-aos-nossos-patrocinadores","title":"Obrigado aos nossos patrocinadores","text":"<p>A equipe OWASP Top 10 2021 agradece o apoio financeiro do Secure Code Warrior e Just Eat.</p> <p> </p> <p></p>"},{"location":"pt-BR/0x00_2021-notice/","title":"Lan\u00e7amento","text":"<p>Lan\u00e7ado em 24 de setembro de 2021 </p>"},{"location":"pt-BR/0x00_2021-notice/#status-atual","title":"Status atual","text":"<p>Esta vers\u00e3o ser\u00e1 lan\u00e7ada na celebra\u00e7\u00e3o do 20\u00ba anivers\u00e1rio da OWASP. </p>"},{"location":"pt-BR/0x00_2021-notice/#autores-principais","title":"Autores Principais","text":"<ul> <li>Andrew van der Stock (twitter: @vanderaj)</li> <li>Brian Glas (twitter: @infosecdad)</li> <li>Neil Smithline (twitter: @appsecneil)</li> <li>Torsten Gigler (twitter: @torsten_tweet)</li> </ul>"},{"location":"pt-BR/0x00_2021-notice/#contribuidores","title":"Contribuidores","text":"<ul> <li>Orange Tsai - @orange_8361, Autor de A10-2021: Server Side Request Forgery</li> <li>Jim Manico @manicode e Jakub Ma\u0107kowski @kubamackowski  - OWASP CheatSheets Coordination</li> </ul>"},{"location":"pt-BR/0x00_2021-notice/#como-voce-pode-ajudar","title":"Como voc\u00ea pode ajudar","text":"<p>Nesta fase, estamos pedindo</p> <ul> <li>Cientistas de dados - por favor revise por pares nossas an\u00e1lises</li> <li>Web designers - precisamos fazer uma vers\u00e3o amig\u00e1vel para celular</li> <li>Tradutores - reveja o texto em ingl\u00eas para se certificar de que \u00e9 traduz\u00edvel</li> <li>ASVS, Guia de Teste e Lideran\u00e7a do Guia de Revis\u00e3o de C\u00f3digo - utilize nossos dados e nos ajudar a conectar os nossos documentos e padr\u00f5es juntos</li> </ul>"},{"location":"pt-BR/0x00_2021-notice/#registre-issues-e-pull-requests","title":"Registre issues e pull requests","text":"<p>Por favor registra qualquer corre\u00e7\u00e3o ou issues:</p> <ul> <li>https://github.com/OWASP/Top10/issues</li> </ul>"},{"location":"pt-BR/0x01_2021-about-owasp/","title":"Sobre OWASP","text":"<p>O Open Worldwide Application Security Project (OWASP) \u00e9 uma comunidade aberta dedicada a capacitar as organiza\u00e7\u00f5es a desenvolver, adquirir e manter aplica\u00e7\u00f5es e APIs que podem ser confi\u00e1veis.</p> <p>No OWASP, voc\u00ea encontrar\u00e1:</p> <ul> <li>Ferramentas e padr\u00f5es de seguran\u00e7a de aplica\u00e7\u00f5es</li> <li>Pesquisa de ponta</li> <li>Bibliotecas e controles de seguran\u00e7a padr\u00e3o</li> <li>Livros completos sobre testes de seguran\u00e7a de aplica\u00e7\u00f5es, desenvolvimento de c\u00f3digo seguro e revis\u00e3o de c\u00f3digo seguro</li> <li>Apresenta\u00e7\u00f5es e v\u00eddeos</li> <li>Cheat sheets em muitos t\u00f3picos comuns</li> <li>Chapters meetings</li> <li>Eventos, trainamentos e confer\u00eancias.</li> <li>Google Groups</li> </ul> <p>Saiba mais em: https://owasp.org.</p> <p>Todas as ferramentas, documentos, v\u00eddeos, apresenta\u00e7\u00f5es e cap\u00edtulos do OWASP s\u00e3o gratuitos e abertos a qualquer pessoa interessada em melhorar a seguran\u00e7a de aplica\u00e7\u00f5es.</p> <p>N\u00f3s defendemos a abordagem da seguran\u00e7a de sistemas como um problema de pessoas, processos e tecnologia, porque as abordagens mais eficazes para a seguran\u00e7a de aplicativos requerem melhorias nessas \u00e1reas.</p> <p>OWASP \u00e9 um novo tipo de organiza\u00e7\u00e3o. Nossa liberdade de press\u00f5es comerciais nos permite fornecer informa\u00e7\u00f5es imparciais, pr\u00e1ticas e econ\u00f4micas sobre a seguran\u00e7a de aplica\u00e7\u00f5es.</p> <p>OWASP n\u00e3o \u00e9 afiliado a nenhuma empresa de tecnologia, embora apoie o uso informado de tecnologia de seguran\u00e7a comercial. OWASP produz muitos tipos de materiais de forma colaborativa, transparente e aberta.</p> <p>A Funda\u00e7\u00e3o OWASP \u00e9 a entidade sem fins lucrativos que garante o sucesso do projeto a longo prazo. Quase todos os associados ao OWASP s\u00e3o volunt\u00e1rios, incluindo o conselho do OWASP, l\u00edderes de cap\u00edtulo, l\u00edderes de projeto e membros do projeto. Apoiamos pesquisas inovadoras de seguran\u00e7a com subs\u00eddios e infraestrutura.</p> <p>Junte-se a n\u00f3s!</p>"},{"location":"pt-BR/0x01_2021-about-owasp/#copyright-e-licenca","title":"Copyright e Licen\u00e7a","text":"<p>Copyright \u00a9 2003-2025 The OWASP\u00ae Foundation. Este documento foi lan\u00e7ado sob o Creative Commons Attribution Share-Alike 4.0 license. Para qualquer reutiliza\u00e7\u00e3o ou distribui\u00e7\u00e3o, voc\u00ea deve deixar claro para os outros os termos de licen\u00e7a desta obra.</p>"},{"location":"pt-BR/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/","title":"Como iniciar um programa AppSec com o OWASP Top 10","text":"<p>Antes, o OWASP Top 10 nunca foi projetado para ser a base de um programa AppSec. No entanto, \u00e9 essencial come\u00e7ar de algum lugar para muitas organiza\u00e7\u00f5es que est\u00e3o apenas come\u00e7ando em sua jornada de seguran\u00e7a de aplica\u00e7\u00f5es. O OWASP Top 10 2021 \u00e9 um bom come\u00e7o como base para listas de verifica\u00e7\u00e3o de seguran\u00e7a e assim por diante, mas n\u00e3o \u00e9 suficiente por si s\u00f3.</p>"},{"location":"pt-BR/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etapa-1-identifique-as-lacunas-e-os-objetivos-de-seu-programa-appsec","title":"Etapa 1. Identifique as lacunas e os objetivos de seu programa appsec","text":"<p>Muitos programas de Aplica\u00e7\u00f5es de Seguran\u00e7a (AppSec) tentam correr antes  que possam engatinhar ou andar. Esses esfor\u00e7os est\u00e3o fadados ao fracasso.  Incentivamos fortemente os CISOs e a lideran\u00e7a de AppSec a usar o Modelo de Maturidade de Garantia de Software OWASP  (Software Assurance Maturity Model - SAMM)[https://owaspsamm.org] para identificar  pontos fracos e \u00e1reas de melhoria em um per\u00edodo de 1-3 anos. A primeira etapa \u00e9 avaliar onde voc\u00ea est\u00e1 agora, identificar as lacunas na governan\u00e7a, design, implementa\u00e7\u00e3o, verifica\u00e7\u00e3o e opera\u00e7\u00f5es que voc\u00ea precisa resolver imediatamente em compara\u00e7\u00e3o com aquelas que podem esperar, e priorizar a implementa\u00e7\u00e3o ou melhoria das quinze pr\u00e1ticas de seguran\u00e7a OWASP SAMM. O OWASP SAMM pode ajud\u00e1-lo a construir e medir melhorias em seus esfor\u00e7os de garantia de software.</p>"},{"location":"pt-BR/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etapa-2-plano-para-um-ciclo-de-vida-de-desenvolvimento-de-um-paved-road-seguro","title":"Etapa 2. Plano para um ciclo de vida de desenvolvimento de um Paved Road seguro","text":"<p>Tradicionalmente, a preserva\u00e7\u00e3o dos chamados \"unic\u00f3rnios\", o conceito de paved road \u00e9 a maneira mais f\u00e1cil de causar o m\u00e1ximo impacto e dimensionar os recursos do AppSec com a velocidade da equipe de desenvolvimento, que s\u00f3 aumenta a cada ano.</p> <p>O conceito de paved road \u00e9 \"o caminho mais f\u00e1cil \u00e9 tamb\u00e9m o mais seguro\" e deve envolver uma cultura de parcerias profundas entre a equipe de desenvolvimento e a equipe de seguran\u00e7a, de prefer\u00eancia de forma que sejam uma s\u00f3 equipe. O paved road visa melhorar, medir, detectar e substituir continuamente alternativas inseguras por meio de uma biblioteca corporativa de redu\u00e7\u00f5es de substitui\u00e7\u00f5es seguras, com ferramentas para ajudar a ver onde melhorias podem ser feitas ao adotar o paved road. Isso permite que as ferramentas de desenvolvimento existentes relatem compila\u00e7\u00f5es inseguras e ajudem as equipes de desenvolvimento a se autocorrigirem, evitando alternativas inseguras.</p> <p>O paved road pode parecer muito a fazer, mas deve ser constru\u00edda gradativamente ao longo do tempo. Existem outras formas de programas appsec, notavelmente o  Microsoft Agile Secure Development Lifecycle. Nem toda metodologia de programa appsec se adapta a todas as empresas.</p>"},{"location":"pt-BR/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etapa-3-implemente-o-paved-road-com-suas-equipes-de-desenvolvimento","title":"Etapa 3. Implemente o Paved Road com suas equipes de desenvolvimento","text":"<p>Paved roads s\u00e3o constru\u00eddos com o consentimento e envolvimento direto das equipes de desenvolvimento e opera\u00e7\u00f5es relevantes. O paved road deve estar estrategicamente alinhado com os neg\u00f3cios e ajudar a entregar aplicativos mais seguros com mais rapidez. O desenvolvimento do paved road deve ser um exerc\u00edcio hol\u00edstico cobrindo toda a empresa ou ecossistema de aplicativos, n\u00e3o um band-aid por aplicativo, como nos velhos tempos.</p>"},{"location":"pt-BR/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etapa-4-migre-todos-os-aplicativos-futuros-e-existentes-para-o-paved-road","title":"Etapa 4. Migre todos os aplicativos futuros e existentes para o Paved Road","text":"<p>Adicione ferramentas de detec\u00e7\u00e3o de paved road conforme voc\u00ea as desenvolve e fornece informa\u00e7\u00f5es para equipes de desenvolvimento para melhorar a seguran\u00e7a de seus aplicativos por meio de como eles podem adotar diretamente elementos do paved road. Uma vez que um aspecto do paved road tenha sido adotado, as organiza\u00e7\u00f5es devem implementar verifica\u00e7\u00f5es de integra\u00e7\u00e3o cont\u00ednua que inspecionam o c\u00f3digo existente e check-ins que usam alternativas proibidas e avisam ou rejeitam a compila\u00e7\u00e3o ou check-in. Isso evita que op\u00e7\u00f5es inseguras entrem no c\u00f3digo ao longo do tempo, evitando d\u00edvidas t\u00e9cnicas e um aplicativo inseguro com defeito. Esses avisos devem ser vinculados \u00e0 alternativa segura, para que a equipe de desenvolvimento receba a resposta correta imediatamente. Eles podem refatorar e adotar o componente do paved road rapidamente.</p>"},{"location":"pt-BR/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etapa-5-teste-se-o-paved-road-mitigou-os-problemas-encontrados-no-owasp-top-10","title":"Etapa 5. Teste se o Paved Road mitigou os problemas encontrados no OWASP Top 10","text":"<p>Os componentes do paved road devem abordar um problema significativo do OWASP Top 10, por exemplo, como detectar ou consertar componentes vulner\u00e1veis automaticamente ou um plug-in IDE de an\u00e1lise de c\u00f3digo est\u00e1tico para detectar inje\u00e7\u00f5es ou, melhor ainda, uma biblioteca que \u00e9 sabidamente segura contra inje\u00e7\u00e3o, como React ou Vue. Quanto mais dessas substitui\u00e7\u00f5es seguras forem fornecidas \u00e0s equipes, melhor. Uma tarefa vital da equipe do appsec \u00e9 garantir que a seguran\u00e7a desses componentes seja continuamente avaliada e aprimorada. Depois de aprimoradas, alguma forma de via de comunica\u00e7\u00e3o com os consumidores do componente deve indicar que uma atualiza\u00e7\u00e3o deve ocorrer, de prefer\u00eancia automaticamente, mas se n\u00e3o, pelo menos destacada em um painel ou similar.</p>"},{"location":"pt-BR/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#etapa-6-construa-o-seu-programa-em-um-programa-appsec-maduro","title":"Etapa 6. Construa o seu programa em um programa AppSec maduro","text":"<p>Voc\u00ea n\u00e3o deve parar no OWASP Top 10. Ele cobre apenas 10 categorias de riscos. Recomendamos fortemente que as organiza\u00e7\u00f5es adotem o Padr\u00e3o de Verifica\u00e7\u00e3o de Seguran\u00e7a de Aplicativos (ASVS) e adicionem progressivamente componentes de paved road e testes para os N\u00edveis 1, 2 e 3, dependendo do n\u00edvel de risco dos aplicativos desenvolvidos.</p>"},{"location":"pt-BR/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#indo-alem","title":"Indo al\u00e9m","text":"<p>Todos os grandes programas AppSec v\u00e3o al\u00e9m do m\u00ednimo. Todos devem continuar se quisermos superar as vulnerabilidades do appsec.</p> <ul> <li> <p>Integridade conceitual. Os programas AppSec maduros devem conter     algum conceito de arquitetura de seguran\u00e7a, seja uma nuvem formal     ou arquitetura de seguran\u00e7a corporativa ou modelagem de amea\u00e7as.</p> </li> <li> <p>Automa\u00e7\u00e3o e escala. Programas maduros de AppSec tentam automatizar     o m\u00e1ximo poss\u00edvel de seus resultados, usando scripts para emular     etapas de teste de penetra\u00e7\u00e3o complexas, ferramentas de an\u00e1lise     de c\u00f3digo est\u00e1tico dispon\u00edveis diretamente para as equipes de     desenvolvimento, auxiliando as equipes de desenvolvimento na constru\u00e7\u00e3o     de unidades de appsec e testes de integra\u00e7\u00e3o e muito mais.</p> </li> <li> <p>Cultura. Programas maduros de AppSec tentam construir o design     inseguro e eliminar a d\u00edvida t\u00e9cnica do c\u00f3digo existente, sendo     parte da equipe de desenvolvimento e n\u00e3o \u00e0 margem. As equipes da      AppSec que veem as equipes de desenvolvimento como \"n\u00f3s\" e \"eles\"     est\u00e3o fadadas ao fracasso.</p> </li> <li> <p>Melhoria continua. Programas maduros de AppSec procuram melhorar     constantemente. Se algo n\u00e3o estiver funcionando, pare de fazer isso.     Se algo \u00e9 desajeitado ou n\u00e3o escal\u00e1vel, trabalhe para melhor\u00e1-lo.     Se algo n\u00e3o est\u00e1 sendo usado pelas equipes de desenvolvimento e n\u00e3o     tem impacto ou tem impacto limitado, fa\u00e7a algo diferente. S\u00f3 porque     temos feito testes como deskcheck desde os anos 1970, n\u00e3o significa     que seja uma boa ideia. Me\u00e7a, avalie e depois construa ou melhore.</p> </li> </ul>"},{"location":"pt-BR/A00_2021_How_to_use_the_OWASP_Top_10_as_a_standard/","title":"Como usar o OWASP Top 10 como padr\u00e3o","text":"<p>O OWASP Top 10 \u00e9 principalmente um documento de conscientiza\u00e7\u00e3o. No entanto,  isso n\u00e3o impediu as organiza\u00e7\u00f5es de us\u00e1-lo de fato como um padr\u00e3o AppSec na ind\u00fastria desde seu in\u00edcio em 2003. Se voc\u00ea deseja usar o OWASP Top 10 como um padr\u00e3o de codifica\u00e7\u00e3o ou teste, saiba que \u00e9 apenas o m\u00ednimo e um ponto de partida.</p> <p>Uma das dificuldades de usar o OWASP Top 10 como padr\u00e3o \u00e9 que documentamos os riscos do appsec, e n\u00e3o necessariamente problemas test\u00e1veis com facilidade. Por exemplo, A04:2021-Insecure Design est\u00e1 al\u00e9m do escopo da maioria das  formas de teste. Outro exemplo s\u00e3o os testes no local, em uso, e o registro e  monitoramento eficazes s\u00f3 podem ser feitos com entrevistas e requisi\u00e7\u00f5es de uma amostra de respostas eficazes de incidentes. Uma ferramenta de an\u00e1lise est\u00e1tica  de c\u00f3digo pode procurar a aus\u00eancia de registro, mas pode ser imposs\u00edvel determinar se a l\u00f3gica de neg\u00f3cios ou o controle de acesso est\u00e1 registrando viola\u00e7\u00f5es de seguran\u00e7a cr\u00edticas. Os testadores de penetra\u00e7\u00e3o podem apenas determinar se  eles chamaram a resposta a incidentes em um ambiente de teste, que raramente \u00e9 monitorado da mesma maneira que a produ\u00e7\u00e3o.</p> <p>Aqui est\u00e3o nossas recomenda\u00e7\u00f5es para quando \u00e9 apropriado usar o OWASP Top 10:</p> Caso de Uso OWASP Top 10 2021 OWASP Padr\u00e3o de verifica\u00e7\u00e3o de seguran\u00e7a de aplica\u00e7\u00f5es Conscientiza\u00e7\u00e3o Sim Treinamento N\u00edvel de entrada Compreensivo Design e arquitetura Ocasionalmente Sim Padr\u00e3o de codifica\u00e7\u00e3o M\u00ednimo Sim Revis\u00e3o de C\u00f3digo Seguro M\u00ednimo Sim Lista de verifica\u00e7\u00e3o de revis\u00e3o por pares M\u00ednimo Sim Teste de unidade Ocasionalmente Sim Teste de integra\u00e7\u00e3o Ocasionalmente Sim Teste de penetra\u00e7\u00e3o M\u00ednimo Sim Suporte de ferramenta M\u00ednimo Sim Cadeia de abastecimento segura Ocasionalmente Sim <p>N\u00f3s encorajamos qualquer pessoa que queira adotar uma seguran\u00e7a de aplica\u00e7\u00e3o padr\u00e3o para usar o OWASP Application Security Verification Standard (ASVS), pois \u00e9 projetado para ser verific\u00e1vel e testado, e pode ser usado em todas as partes de um ciclo de vida de desenvolvimento seguro.</p> <p>O ASVS \u00e9 a \u00fanica escolha aceit\u00e1vel para fornecedores de ferramentas. Ferramentas n\u00e3o podem detectar, testar ou proteger de forma abrangente contra o OWASP Top 10 devido a a natureza de v\u00e1rios dos 10 principais riscos OWASP, com refer\u00eancia a A04: 2021-Design inseguro. OWASP desencoraja qualquer reivindica\u00e7\u00f5es de cobertura total do OWASP Top 10 porque simplesmente n\u00e3o \u00e9 verdadeiro.</p>"},{"location":"pt-BR/A00_2021_Introduction/","title":"Introdu\u00e7\u00e3o","text":""},{"location":"pt-BR/A00_2021_Introduction/#bem-vindo-ao-owasp-top-10-2021","title":"Bem-vindo ao OWASP Top 10 - 2021","text":"<p>Bem-vindo \u00e0 \u00faltima edi\u00e7\u00e3o do OWASP Top 10! O OWASP Top 10 2021 \u00e9 totalmente novo, com um novo design gr\u00e1fico e um infogr\u00e1fico  dispon\u00edvel que voc\u00ea pode imprimir ou obter em nossa p\u00e1gina inicial.</p> <p>Um grande obrigado a todos que contribu\u00edram com seu tempo e dados para esta itera\u00e7\u00e3o. Sem voc\u00ea, esta parcela n\u00e3o aconteceria. OBRIGADO.</p>"},{"location":"pt-BR/A00_2021_Introduction/#o-que-mudou-no-top-10-para-2021","title":"O que mudou no Top 10 para 2021","text":"<p>Existem tr\u00eas novas categorias, quatro categorias com altera\u00e7\u00f5es em nomenclaturas e escopo, e alguma consolida\u00e7\u00e3o no Top 10 para 2021.</p> <p></p> <ul> <li>A01:2021-Quebra de Controle de Acesso sobe da quinta posi\u00e7\u00e3o; 94% das aplica\u00e7\u00e3o foram testados para alguma forma de controle de acesso quebrado. O 34 CWEs mapeados para Quebra de Controle de Acesso tiveram mais ocorr\u00eancias em aplica\u00e7\u00f5es do que qualquer outra categoria.</li> <li>A02:2021-Falhas Criptogr\u00e1ficas sobe uma posi\u00e7\u00e3o para #2, anteriormente conhecido como Exposi\u00e7\u00e3o de Dados Sens\u00edveis, que era um sintoma amplo em vez de uma causa raiz. O foco renovado aqui est\u00e1 nas falhas relacionadas \u00e0 criptografia, que muitas vezes leva \u00e0 exposi\u00e7\u00e3o de dados confidenciais ou sistema comprometido.</li> <li>A03:2021-Inje\u00e7\u00e3o foi rebaixado para terceira posi\u00e7\u00e3o. 94% das aplica\u00e7\u00f5es foram testadas para alguma forma de inje\u00e7\u00e3o com uma taxa de incid\u00eancia m\u00e1xima de 19%, uma taxa de incid\u00eancia m\u00e9dia de 3,37% e os 33 CWEs mapeados nesta categoria t\u00eam o segundo maior n\u00famero de ocorr\u00eancias em aplica\u00e7\u00f5es, com 274k ocorr\u00eancias. Cross-site Scripting (Scripts Inter-site) agora faz parte desta categoria nesta edi\u00e7\u00e3o.</li> <li>A04:2021-Design Inseguro \u00e9 uma nova categoria para 2021, com foco em riscos relacionados a falhas de projeto. Se quisermos genuinamente \"mover para a esquerda (shift left)\" como setor, precisamos de mais modelagem de amea\u00e7as, padr\u00f5es e princ\u00edpios de design seguros e arquiteturas de refer\u00eancia. Um design inseguro n\u00e3o pode ser corrigido por uma implementa\u00e7\u00e3o perfeita, pois, por defini\u00e7\u00e3o, os controles de seguran\u00e7a necess\u00e1rios nunca foram criados para a defesa contra ataques espec\u00edficos.</li> <li>A05:2021-Configura\u00e7\u00e3o Insegura subiu para sexta posi\u00e7\u00e3o em compara\u00e7\u00e3o a edi\u00e7\u00e3o anterior. 90% dos aplicativos foram testados para alguma conforma de configura\u00e7\u00e3o insegura, com uma taxa de incid\u00eancia m\u00e9dia de 4,5% e mais de 208 mil ocorr\u00eancias de CWEs mapeados para esta categoria de risco. Com mais mudan\u00e7as em software altamente configur\u00e1vel, n\u00e3o \u00e9 surpreendente ver essa categoria subir.</li> <li>A06:2021-Componente Desatualizado e Vulner\u00e1vel foi anteriormente intitulado \"Usar componente com vulnerabilidade conhecida\" e \u00e9 o n\u00famero 2 na pesquisa da comunidade Top 10, mas tamb\u00e9m tinha dados suficientes para chegar ao Top 10 por meio de an\u00e1lise de dados. Esta categoria subiu da 9\u00aa posi\u00e7\u00e3o em 2017 e \u00e9 um problema conhecido que temos dificuldade em testar e avaliar o risco. \u00c9 a \u00fanica categoria a n\u00e3o ter nenhuma Vulnerabilidade e Exposi\u00e7\u00f5es Comuns (CVEs) mapeada para os CWEs inclu\u00eddos, portanto, uma explora\u00e7\u00e3o padr\u00e3o e pesos de impacto de 5,0 s\u00e3o considerados em suas pontua\u00e7\u00f5es.</li> <li>A07:2021-Falha de Identifica\u00e7\u00e3o e Autentica\u00e7\u00e3o era conhecida anteriormente como Falha de Autentica\u00e7\u00e3o e caiu da terceira posi\u00e7\u00e3o para essa, e foram inclu\u00eddas as CWEs que mais se relacionam com as falhas na identifica\u00e7\u00e3o. Essa categoria ainda \u00e9 parte integrante do Top 10, mas a maior disponibilidade de estruturas (frameworks) padronizadas parece estar ajudando a reduzir.</li> <li>A08:2021-Falha na Integridade de Dados e Software \u00e9 uma nova categoria em 2021, focadas em fazer premissas relacionadas a atualiza\u00e7\u00e3o de software, dados cr\u00edticos, e linhas de CI/CD que n\u00e3o verificam a integridade. Um dos maiores pesos dos dados nessa categoria s\u00e3o CVE/CVSS mapeados para os 10 CWEs nesta categoria. A categoria A8:2017-Desserializa\u00e7\u00e3o Insegura agora faz parte dessa categoria.</li> <li>A09:2021-Monitoramento de Falhas e Registros de Seguran\u00e7a anteriormente chamado de A10:2017-Registro e Monitoramentos Insuficientes e foi adicionado pela pesquisa da comunidade de Top 10, ficando em terceiro lugar, passando da 10\u00b0 posi\u00e7\u00e3o anterior. Essa categoria foi expandida para incluir um maior n\u00famero de falhas, sendo um desafio para testar e n\u00e3o est\u00e1 bem representada nos dados de CVE/CVSS. No entanto falhas nessa categoria podem impactar diretamente a visibilidade, o alerta de incidente e a per\u00edcia.</li> <li>A10:2021-Falsifica\u00e7\u00e3o de Solicita\u00e7\u00e3o do Lado do Servidor foi adicionada a partir da pesquisa da comunidade, sendo a primeira da classifica\u00e7\u00e3o. Os dados mostram uma taxa de incid\u00eancia relativamente baixa com cobertura de teste acima da m\u00e9dia, junto com classifica\u00e7\u00f5es acima da m\u00e9dia para potencial de explora\u00e7\u00e3o e impacto. Esta categoria representa o cen\u00e1rio em que os membros da comunidade de seguran\u00e7a est\u00e3o nos dizendo que isso \u00e9 importante, embora n\u00e3o esteja ilustrado nos dados neste momento.</li> </ul>"},{"location":"pt-BR/A00_2021_Introduction/#metodologia","title":"Metodologia","text":"<p>Esta edi\u00e7\u00e3o do Top 10 \u00e9 mais baseada em dados do que nunca, mas n\u00e3o cegamente baseada em dados. Selecionamos oito das dez categorias de dados fornecidos e duas categorias da pesquisa da comunidade Top 10 em um alto n\u00edvel. Fazemos isso por uma raz\u00e3o fundamental: olhar para os dados de contribui\u00e7\u00e3o \u00e9 olhar para o passado. Os pesquisadores do seguran\u00e7a de aplica\u00e7\u00e3o levam tempo para encontrar novas vulnerabilidades e novas maneiras de test\u00e1-las. Leva tempo para integrar esses testes em ferramentas e processos. No momento em que podemos testar com seguran\u00e7a uma fraqueza em escala, provavelmente j\u00e1 se passaram anos. Para equilibrar essa vis\u00e3o, usamos uma pesquisa da comunidade para perguntar a especialistas em seguran\u00e7a e desenvolvimento de aplicativos na linha de frente o que eles veem como fraquezas essenciais que os dados podem n\u00e3o mostrar ainda.</p> <p>Existem algumas mudan\u00e7as cr\u00edticas que adotamos para continuar a amadurecer o Top 10.</p>"},{"location":"pt-BR/A00_2021_Introduction/#como-as-categorias-sao-estruturadas","title":"Como as categorias s\u00e3o estruturadas","text":"<p>Os esfor\u00e7os anteriores de coleta de dados concentraram-se em um subconjunto prescrito de aproximadamente 30 CWEs com um campo solicitando descobertas adicionais. Aprendemos que as organiza\u00e7\u00f5es se concentrariam principalmente nesses 30 CWEs e raramente acrescentariam outros CWEs que vissem. Nesta itera\u00e7\u00e3o, n\u00f3s abrimos e apenas pedimos os dados, sem restri\u00e7\u00e3o de CWEs. Pedimos o n\u00famero de aplicativos testados para um determinado ano (come\u00e7ando em 2017) e o n\u00famero de aplicativos com pelo menos uma inst\u00e2ncia de um CWE encontrado em teste. Esse formato nos permite rastrear a preval\u00eancia de cada CWE na popula\u00e7\u00e3o de aplicativos. Ignoramos a frequ\u00eancia para nossos prop\u00f3sitos; embora possa ser necess\u00e1rio para outras situa\u00e7\u00f5es, ele apenas oculta a preval\u00eancia real na popula\u00e7\u00e3o de aplica\u00e7\u00e3o. Se um aplicativo tem quatro inst\u00e2ncias de um CWE ou 4.000 inst\u00e2ncias n\u00e3o faz parte do c\u00e1lculo para os 10 principais. Passamos de aproximadamente 30 CWEs para quase 400 CWEs para analisar no conjunto de dados. Planejamos fazer an\u00e1lises de dados adicionais como um suplemento no futuro. Este aumento significativo no n\u00famero de CWEs exige mudan\u00e7as na forma como as categorias s\u00e3o estruturadas.</p> <p>Passamos v\u00e1rios meses agrupando e categorizando os CWEs e poder\u00edamos ter continuado por mais tempo. Tivemos que parar em algum ponto. Existem os tipos de causa raiz e sintoma dos CWEs, em que os tipos de causa raiz s\u00e3o como \"Falha criptogr\u00e1fica\" e \"Configura\u00e7\u00e3o incorreta\" em contraste com os tipos sintoma como \"Exposi\u00e7\u00e3o de dados confidenciais\" e \"Nega\u00e7\u00e3o de servi\u00e7o\". Decidimos nos concentrar na causa raiz sempre que poss\u00edvel, pois \u00e9 mais l\u00f3gico para fornecer orienta\u00e7\u00e3o de identifica\u00e7\u00e3o e corre\u00e7\u00e3o. Focar na causa raiz em vez do sintoma n\u00e3o \u00e9 um conceito novo; o Top 10 foi uma mistura de sintoma e causa raiz. Os CWEs tamb\u00e9m s\u00e3o uma mistura de sintoma e causa raiz; estamos simplesmente sendo mais deliberados sobre isso e convocando-o. H\u00e1 uma m\u00e9dia de 19,6 CWEs por categoria nesta parcela, com os limites inferiores e superiores em 1 CWE para A10: 2021-Server-Side Request Forgery (SSRF) a 40 CWEs em A04: 2021-Design inseguro. Essa estrutura de categorias atualizada oferece benef\u00edcios adicionais de treinamento, pois as empresas podem se concentrar em CWEs que fa\u00e7am sentido para uma linguagem/estrutura.</p>"},{"location":"pt-BR/A00_2021_Introduction/#como-os-dados-sao-usados-para-selecionar-categorias","title":"Como os dados s\u00e3o usados para selecionar categorias","text":"<p>Em 2017, selecionamos categorias por taxa de incid\u00eancia para determinar a probabilidade e, em seguida, as classificamos em discuss\u00f5es de equipe com base em d\u00e9cadas de experi\u00eancia em Explorabilidade, Detectabilidade (tamb\u00e9m probabilidade) e Impacto t\u00e9cnico. Para 2021, queremos usar os dados para Explorabilidade e Impacto (t\u00e9cnico), se poss\u00edvel.</p> <p>Baixamos o OWASP Dependency Check e extra\u00edmos a pontua\u00e7\u00e3o de explora\u00e7\u00e3o do CVSS e as pontua\u00e7\u00f5es de impacto agrupadas por CWEs relacionados. Foi necess\u00e1rio um pouco de pesquisa e esfor\u00e7o, pois todos os CVEs t\u00eam pontua\u00e7\u00f5es CVSSv2, mas h\u00e1 falhas no CVSSv2 que o CVSSv3 deve corrigir. Ap\u00f3s um determinado momento, todos os CVEs tamb\u00e9m recebem uma pontua\u00e7\u00e3o CVSSv3. Al\u00e9m disso, os intervalos de pontua\u00e7\u00e3o e f\u00f3rmulas foram atualizados entre CVSSv2 e CVSSv3.</p> <p>Em CVSSv2, Explora\u00e7\u00e3o e Impacto (T\u00e9cnico) podem ser at\u00e9 10,0, mas a f\u00f3rmula os derrubaria para 60% para Explora\u00e7\u00e3o e 40% para Impacto. No CVSSv3, o m\u00e1ximo te\u00f3rico foi limitado a 6,0 para Explora\u00e7\u00e3o e 4,0 para Impacto. Com a pondera\u00e7\u00e3o considerada, a pontua\u00e7\u00e3o de impacto aumentou, quase um ponto e meio em m\u00e9dia no CVSSv3, e a explorabilidade caiu quase meio ponto abaixo em m\u00e9dia.</p> <p>Existem 125k registros de um CVE mapeado para um CWE nos dados do National Vulnerability Database (NVD) extra\u00eddos do OWASP Dependency Check, e h\u00e1 241 CWEs exclusivos mapeados para um CVE. 62k dos CWEs t\u00eam uma pontua\u00e7\u00e3o CVSSv3, que \u00e9 aproximadamente metade da popula\u00e7\u00e3o do conjunto de dados.</p> <p>Para os dez primeiros 2021, calculamos as pontua\u00e7\u00f5es m\u00e9dias de explora\u00e7\u00e3o e impacto da seguinte maneira. Agrupamos todos os CVEs com pontua\u00e7\u00f5es CVSS por CWE e ponderamos explora\u00e7\u00e3o e impacto marcados pela porcentagem da popula\u00e7\u00e3o que tinha CVSSv3 + a popula\u00e7\u00e3o restante de pontua\u00e7\u00f5es CVSSv2 para obter uma m\u00e9dia geral. Mapeamos essas m\u00e9dias para os CWEs no conjunto de dados para usar como pontua\u00e7\u00e3o Explora\u00e7\u00e3o e Impacto (T\u00e9cnico) para a outra metade da equa\u00e7\u00e3o de risco.</p>"},{"location":"pt-BR/A00_2021_Introduction/#por-que-nao-apenas-dados-puramente-estatisticos","title":"Por que n\u00e3o apenas dados puramente estat\u00edsticos?","text":"<p>Os resultados nos dados s\u00e3o limitados principalmente ao que podemos testar de maneira automatizada. Fale com um profissional experiente da seguran\u00e7a de aplica\u00e7\u00f5es, e ele lhe contar\u00e1 sobre as coisas que encontrou e as tend\u00eancias que viu e que ainda n\u00e3o constaram dos dados. Leva tempo para as pessoas desenvolverem metodologias de teste para certos tipos de vulnerabilidade e mais tempo para que esses testes sejam automatizados e executados em uma grande quantidade de aplicativos. Tudo o que encontramos \u00e9 uma retrospectiva e pode estar faltando tend\u00eancias do ano passado, que n\u00e3o est\u00e3o presentes nos dados.</p> <p>Portanto, escolhemos apenas oito das dez categorias dos dados porque est\u00e3o incompletos. As outras duas categorias s\u00e3o da pesquisa da comunidade Top 10. Ele permite que os profissionais nas linhas de frente votem naquilo que consideram os maiores riscos que podem n\u00e3o estar nos dados (e podem nunca ser expressos nos dados).</p>"},{"location":"pt-BR/A00_2021_Introduction/#por-que-taxa-de-incidencia-em-vez-de-frequencia","title":"Por que taxa de incid\u00eancia em vez de frequ\u00eancia?","text":"<p>Existem tr\u00eas fontes principais de dados. N\u00f3s os identificamos como Ferramentas Assistidas por Humanos (HaT), Humanos Assistidos por Ferramentas (TaH) e Ferramentas.</p> <p>Ferramentas e HaT s\u00e3o geradores de alta-frequ\u00eancia. As ferramentas procurar\u00e3o vulnerabilidades espec\u00edficas e tentar\u00e3o incansavelmente encontrar todas as inst\u00e2ncias dessa vulnerabilidade, gerando contagens de descobertas altas para alguns tipos de vulnerabilidade. Observe o Cross-Site Scripting, que normalmente \u00e9 um de dois tipos: \u00e9 um erro menor e isolado ou um problema sist\u00eamico. Quando \u00e9 um problema sist\u00eamico, a contagem de descobertas pode chegar \u00e0 casa dos milhares para um \u00fanico aplicativo. Essa alta frequ\u00eancia abafa a maioria das outras vulnerabilidades encontradas em relat\u00f3rios ou dados.</p> <p>TaH, por outro lado, encontrar\u00e1 uma gama mais ampla de tipos de vulnerabilidade, mas em uma frequ\u00eancia muito menor devido a restri\u00e7\u00f5es de tempo. Quando os humanos testam um aplicativo e veem algo como Cross-Site Scripting, eles normalmente encontram tr\u00eas ou quatro inst\u00e2ncias e param. Eles podem determinar um achado sist\u00eamico e escrev\u00ea-lo com uma recomenda\u00e7\u00e3o para corrigir em uma escala de aplicativo. N\u00e3o h\u00e1 necessidade (ou tempo) para encontrar todas as inst\u00e2ncias.</p> <p>Suponha que pegemos esses dois conjuntos de dados distintos e tentemos mescl\u00e1-los na frequ\u00eancia. Nesse caso, os dados de Ferramentas e HaT ir\u00e3o afogar os dados TaH mais precisos (mas amplos) e \u00e9 uma boa parte do motivo pelo qual algo como Cross-Site Scripting foi t\u00e3o bem classificado em muitas listas quando o impacto \u00e9 geralmente de baixo a moderado. \u00c9 por causa do grande volume de descobertas. (Cross-Site Scripting tamb\u00e9m \u00e9 razoavelmente f\u00e1cil de testar, portanto, h\u00e1 muitos outros testes para ele tamb\u00e9m).</p> <p>Em 2017, introduzimos o uso da taxa de incid\u00eancia para dar uma nova olhada nos dados e mesclar os dados de Ferramentas e HaT com os dados TaH. A taxa de incid\u00eancia pergunta qual porcentagem da popula\u00e7\u00e3o do aplicativo tinha pelo menos uma inst\u00e2ncia de um tipo de vulnerabilidade. N\u00e3o nos importamos se foi pontual ou sist\u00eamico. Isso \u00e9 irrelevante para nossos prop\u00f3sitos; s\u00f3 precisamos saber quantos aplicativos tiveram pelo menos uma inst\u00e2ncia, o que ajuda a fornecer uma vis\u00e3o mais clara dos resultados de teste em v\u00e1rios tipos de teste, sem afogar os dados em resultados de alta frequ\u00eancia. Isso corresponde a uma vis\u00e3o relacionada ao risco, pois um invasor precisa de apenas uma inst\u00e2ncia para atacar um aplicativo com \u00eaxito por meio da categoria.</p>"},{"location":"pt-BR/A00_2021_Introduction/#qual-e-o-processo-de-coleta-e-analise-de-dados","title":"Qual \u00e9 o processo de coleta e an\u00e1lise de dados?","text":"<p>Formalizamos o processo de coleta de dados OWASP Top 10 no Open Security Summit em 2017. No OWASP Top 10 l\u00edderes e a comunidade passaram dois dias trabalhando na formaliza\u00e7\u00e3o de um processo transparente de coleta de dados. A edi\u00e7\u00e3o de 2021 \u00e9 a segunda vez que usamos essa metodologia.</p> <p>Publicamos uma chamada de dados atrav\u00e9s dos canais de m\u00eddia social dispon\u00edveis para n\u00f3s. Na p\u00e1gina do Projeto OWASP, listamos os elementos de dados e a estrutura que estamos procurando e como envi\u00e1-los. No projeto GitHub, temos arquivos de exemplo que servem como modelos. Trabalhamos com as organiza\u00e7\u00f5es conforme necess\u00e1rio para ajudar a descobrir a estrutura e o mapeamento para os CWEs.</p> <p>Obtemos dados de organiza\u00e7\u00f5es que est\u00e3o no neg\u00f3cio de ferramentas de teste, programas de recompen\u00e7as de erros (Bug Bounty) e organiza\u00e7\u00f5es que contribuem com dados de teste internos. Assim que tivermos os dados, n\u00f3s os carregamos juntos e executamos uma an\u00e1lise fundamental do que os CWEs mapeiam para as categorias de risco. H\u00e1 sobreposi\u00e7\u00e3o entre alguns CWEs e outros est\u00e3o intimamente relacionados (por exemplo, vulnerabilidades criptogr\u00e1ficas). Quaisquer decis\u00f5es relacionadas aos dados brutos enviados s\u00e3o documentadas e publicadas para serem abertas e transparentes com a forma como normalizamos os dados.</p> <p>Examinamos as oito categorias com as taxas de incid\u00eancia mais altas para inclus\u00e3o no Top 10. Tamb\u00e9m olhamos os resultados da pesquisa da comunidade Top 10 para ver quais j\u00e1 podem estar presentes nos dados. Os dois primeiros votos que ainda n\u00e3o est\u00e3o presentes nos dados ser\u00e3o selecionados para os outros dois lugares no Top 10. Uma vez que todos os dez foram selecionados, aplicamos fatores generalizados para explorabilidade e impacto; para ajudar a classificar os Top 10 2021 em uma ordem baseada no risco.</p>"},{"location":"pt-BR/A00_2021_Introduction/#fatores-dos-dados","title":"Fatores dos Dados","text":"<p>Existem fatores nos dados listados para cada uma das 10 principais categorias, eis o que eles significam: - CWEs mapeados: o n\u00famero de CWEs mapeados para uma categoria pela equipe dos 10 principais. - Taxa de incid\u00eancia: a taxa de incid\u00eancia \u00e9 a porcentagem de aplicativos vulner\u00e1veis a esse CWE da popula\u00e7\u00e3o testada por essa organiza\u00e7\u00e3o naquele ano. - (Teste) Cobertura: a porcentagem de aplicativos testados por todas as organiza\u00e7\u00f5es para um determinado CWE. - Peso de explora\u00e7\u00e3o: a sub-pontua\u00e7\u00e3o do Explora\u00e7\u00e3o das pontua\u00e7\u00f5es CVSSv2 e CVSSv3 atribu\u00eddas aos CVEs mapeados para CWEs, normalizados e colocados em uma escala de 10 pontos. - Impacto ponderado: a sub-pontua\u00e7\u00e3o de impacto das pontua\u00e7\u00f5es CVSSv2 e CVSSv3 atribu\u00eddas aos CVEs mapeados para CWEs, normalizados e colocados em uma escala de 10 pontos. - Total de ocorr\u00eancias: n\u00famero total de aplicativos encontrados com os CWEs mapeados para uma categoria. - Total de CVEs: n\u00famero total de CVEs no banco de dados NVD que foram mapeados para os CWEs mapeados para uma categoria.</p>"},{"location":"pt-BR/A00_2021_Introduction/#parabens-aos-fornecedores-de-dados","title":"Parab\u00e9ns aos fornecedores de dados","text":"<p>As organiza\u00e7\u00f5es a seguir (junto com alguns doadores an\u00f4nimos) gentilmente doaram dados para mais de 500.000 aplicativos para tornar este o maior e mais abrangente conjunto de dados de seguran\u00e7a de aplicativos. Sem voc\u00eas, isso n\u00e3o seria poss\u00edvel.</p> <ul> <li>AppSec Labs</li> <li>Cobalt.io</li> <li>Contrast Security</li> <li>GitLab</li> <li>HackerOne</li> <li>HCL Technologies</li> <li>Micro Focus</li> <li>PenTest-Tools</li> <li>Probely</li> <li>Sqreen</li> <li>Veracode</li> <li>WhiteHat (NTT)</li> </ul>"},{"location":"pt-BR/A00_2021_Introduction/#obrigado-aos-nossos-patrocinadores","title":"Obrigado aos nossos patrocinadores","text":"<p>A equipe OWASP Top 10 2021 agradece o apoio financeiro do Secure Code Warrior e Just Eat.</p> <p> </p> <p></p>"},{"location":"pt-BR/A01_2021-Broken_Access_Control/","title":"A01:2021 \u2013 Quebra de Controle de Acesso","text":""},{"location":"pt-BR/A01_2021-Broken_Access_Control/#fatores","title":"Fatores","text":"CWEs Mapeados Taxa de Incid\u00eancia M\u00e1xima Taxa de Incid\u00eancia M\u00e9dia Explora\u00e7\u00e3o M\u00e9dia Ponderada Impacto M\u00e9dio Ponderado Cobertura M\u00e1xima Cobertura M\u00e9dia Total de ocorr\u00eancias Total de CVEs 34 55.97% 3.81% 6.92 5.93 94.55% 47.72% 318,487 19,013"},{"location":"pt-BR/A01_2021-Broken_Access_Control/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Saindo da quinta posi\u00e7\u00e3o, 94% dos aplicativos foram testados para alguma forma de controle de acesso quebrado com a taxa de incid\u00eancia m\u00e9dia de 3,81% e tem o maior n\u00famero de ocorr\u00eancias no conjunto de dados contribu\u00eddo com mais de 318 mil. Not\u00e1vel Common Weakness Enumerations (CWEs) inclu\u00eddas s\u00e3o CWE-200: Exposi\u00e7\u00e3o de Informa\u00e7\u00f5es Confidenciais a um Ator N\u00e3o Autorizado, CWE-201: Exposi\u00e7\u00e3o de Informa\u00e7\u00f5es Confidenciais por meio de Dados Enviados e CWE-352: requisi\u00e7\u00f5es forjadas entre sites.</p>"},{"location":"pt-BR/A01_2021-Broken_Access_Control/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>O controle de acesso imp\u00f5e a pol\u00edtica de modo que os usu\u00e1rios n\u00e3o possam agir fora de suas permiss\u00f5es pretendidas. As falhas normalmente levam \u00e0 divulga\u00e7\u00e3o, modifica\u00e7\u00e3o ou destrui\u00e7\u00e3o de informa\u00e7\u00f5es n\u00e3o autorizadas de todos os dados ou ao desempenho de uma fun\u00e7\u00e3o comercial fora dos limites do usu\u00e1rio. Vulnerabilidades comuns de controle de acesso incluem:</p> <ul> <li> <p>Viola\u00e7\u00e3o do princ\u00edpio de privil\u00e9gio m\u00ednimo ou nega\u00e7\u00e3o por padr\u00e3o,     onde o acesso deve ser concedido apenas para determinados recursos,     fun\u00e7\u00f5es ou usu\u00e1rios, mas est\u00e1 dispon\u00edvel para qualquer pessoa.</p> </li> <li> <p>Ignorar verifica\u00e7\u00f5es de controle de acesso modificando a URL     (adultera\u00e7\u00e3o de par\u00e2metros ou navega\u00e7\u00e3o for\u00e7ada), o estado interno     do aplicativo, a p\u00e1gina HTML ou usando uma ferramenta de ataque que     modifica as requisi\u00e7\u00f5es de API.</p> </li> <li> <p>Permitir a visualiza\u00e7\u00e3o ou edi\u00e7\u00e3o da conta de outrem, mediante a     disponibiliza\u00e7\u00e3o do seu identificador \u00fanico (refer\u00eancias diretas     n\u00e3o seguras a objetos).</p> </li> <li> <p>Acessando API sem controles de acesso para POST, PUT e DELETE.</p> </li> <li> <p>Eleva\u00e7\u00e3o de privil\u00e9gio. Agir como um usu\u00e1rio sem estar logado     ou agir como um administrador quando logado como um usu\u00e1rio.</p> </li> <li> <p>Manipula\u00e7\u00e3o de metadados, como reproduzir ou adulterar um token     de controle de acesso JSON Web Token (JWT), um cookie ou campo     oculto manipulado para elevar privil\u00e9gios ou abusar da invalida\u00e7\u00e3o de JWT.</p> </li> <li> <p>A configura\u00e7\u00e3o incorreta do CORS permite o acesso \u00e0 API de origens     n\u00e3o autorizadas / n\u00e3o confi\u00e1veis.</p> </li> <li> <p>For\u00e7a a navega\u00e7\u00e3o para p\u00e1ginas autenticadas como um usu\u00e1rio n\u00e3o     autenticado ou para p\u00e1ginas privilegiadas como um usu\u00e1rio padr\u00e3o.</p> </li> </ul>"},{"location":"pt-BR/A01_2021-Broken_Access_Control/#como-prevenir","title":"Como Prevenir","text":"<p>O controle de acesso s\u00f3 \u00e9 eficaz em c\u00f3digo confi\u00e1vel do lado do servidor ou API sem servidor, em que o invasor n\u00e3o pode modificar a verifica\u00e7\u00e3o de controle de acesso ou metadados.</p> <ul> <li> <p>Exceto para recursos p\u00fablicos, negar por padr\u00e3o.</p> </li> <li> <p>Implemente mecanismos de controle de acesso uma vez e reutilize-os em todo o aplicativo,     incluindo a minimiza\u00e7\u00e3o do uso de Cross-Origin Resource Sharing (CORS).</p> </li> <li> <p>Os controles de acesso ao modelo devem impor a propriedade do registro em vez de     aceitar que o usu\u00e1rio possa criar, ler, atualizar ou excluir qualquer registro.</p> </li> <li> <p>Os requisitos de limite de neg\u00f3cios de aplicativos exclusivos devem ser     impostos por modelos de dom\u00ednio.</p> </li> <li> <p>Desative a lista de diret\u00f3rios do servidor da web e certifique-se de que os     metadados do arquivo (por exemplo, o .git) e os arquivos de backup n\u00e3o     estejam presentes nas ra\u00edzes da web (web roots).</p> </li> <li> <p>Registrar falhas de controle de acesso e alertar os administradores quando     apropriado (por exemplo, falhas repetidas).</p> </li> <li> <p>Limite de taxa o acesso da API e do controlador para minimizar os danos     do conjunto de ferramentas de ataque automatizado.</p> </li> <li> <p>Os identificadores de sess\u00e3o com estado devem ser invalidados no servidor     ap\u00f3s o logout. Os tokens JWT sem estado devem ter vida curta, para que a     janela de oportunidade para um invasor seja minimizada. Para JWTs de     longa dura\u00e7\u00e3o, \u00e9 altamente recomend\u00e1vel seguir os padr\u00f5es OAuth para revogar o acesso.</p> </li> </ul> <p>Os desenvolvedores e a equipe de QA devem incluir uma unidade de controle de acesso funcional e testes de integra\u00e7\u00e3o.</p>"},{"location":"pt-BR/A01_2021-Broken_Access_Control/#exemplos-de-cenarios-de-ataque","title":"Exemplos de Cen\u00e1rios de Ataque","text":"<p>Cen\u00e1rio #1: O aplicativo usa dados n\u00e3o verificados em uma chamada SQL que est\u00e1 acessando informa\u00e7\u00f5es da conta:</p> <pre><code> pstmt.setString(1, request.getParameter(\"acct\"));\n ResultSet results = pstmt.executeQuery( );\n</code></pre> <p>Um invasor simplesmente modifica o par\u00e2metro 'acct' do navegador para enviar o n\u00famero de conta que desejar. Se n\u00e3o for verificado corretamente, o invasor pode acessar a conta de qualquer usu\u00e1rio.</p> <pre><code> https://example.com/app/accountInfo?acct=notmyacct\n</code></pre> <p>Cen\u00e1rio #2: Um invasor simplesmente for\u00e7a a navega\u00e7\u00e3o para URLs de destino. Direitos de administrador s\u00e3o necess\u00e1rios para acessar a p\u00e1gina de administrador.</p> <pre><code> https://example.com/app/getappInfo\n https://example.com/app/admin_getappInfo\n</code></pre> <p>Se um usu\u00e1rio n\u00e3o autenticado pode acessar qualquer p\u00e1gina, \u00e9 uma falha. Se um n\u00e3o administrador pode acessar a p\u00e1gina de administra\u00e7\u00e3o, isso \u00e9 uma falha.</p>"},{"location":"pt-BR/A01_2021-Broken_Access_Control/#referencias","title":"Refer\u00eancias","text":"<ul> <li> <p>OWASP Proactive Controls: Enforce Access     Controls</p> </li> <li> <p>OWASP Application Security Verification Standard: V4 Access     Control</p> </li> <li> <p>OWASP Testing Guide: Authorization     Testing</p> </li> <li> <p>OWASP Cheat Sheet: Authorization</p> </li> <li> <p>PortSwigger: Exploiting CORS     misconfiguration</p> </li> <li> <p>OAuth: Revoking Access</p> </li> </ul>"},{"location":"pt-BR/A01_2021-Broken_Access_Control/#lista-dos-cwes-mapeados","title":"Lista dos CWEs Mapeados","text":"<p>CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</p> <p>CWE-23 Relative Path Traversal</p> <p>CWE-35 Path Traversal: '.../...//'</p> <p>CWE-59 Improper Link Resolution Before File Access ('Link Following')</p> <p>CWE-200 Exposure of Sensitive Information to an Unauthorized Actor</p> <p>CWE-201 Exposure of Sensitive Information Through Sent Data</p> <p>CWE-219 Storage of File with Sensitive Data Under Web Root</p> <p>CWE-264 Permissions, Privileges, and Access Controls (should no longer be used)</p> <p>CWE-275 Permission Issues</p> <p>CWE-276 Incorrect Default Permissions</p> <p>CWE-284 Improper Access Control</p> <p>CWE-285 Improper Authorization</p> <p>CWE-352 Cross-Site Request Forgery (CSRF)</p> <p>CWE-359 Exposure of Private Personal Information to an Unauthorized Actor</p> <p>CWE-377 Insecure Temporary File</p> <p>CWE-402 Transmission of Private Resources into a New Sphere ('Resource Leak')</p> <p>CWE-425 Direct Request ('Forced Browsing')</p> <p>CWE-441 Unintended Proxy or Intermediary ('Confused Deputy')</p> <p>CWE-497 Exposure of Sensitive System Information to an Unauthorized Control Sphere</p> <p>CWE-538 Insertion of Sensitive Information into Externally-Accessible File or Directory</p> <p>CWE-540 Inclusion of Sensitive Information in Source Code</p> <p>CWE-548 Exposure of Information Through Directory Listing</p> <p>CWE-552 Files or Directories Accessible to External Parties</p> <p>CWE-566 Authorization Bypass Through User-Controlled SQL Primary Key</p> <p>CWE-601 URL Redirection to Untrusted Site ('Open Redirect')</p> <p>CWE-639 Authorization Bypass Through User-Controlled Key</p> <p>CWE-651 Exposure of WSDL File Containing Sensitive Information</p> <p>CWE-668 Exposure of Resource to Wrong Sphere</p> <p>CWE-706 Use of Incorrectly-Resolved Name or Reference</p> <p>CWE-862 Missing Authorization</p> <p>CWE-863 Incorrect Authorization</p> <p>CWE-913 Improper Control of Dynamically-Managed Code Resources</p> <p>CWE-922 Insecure Storage of Sensitive Information</p> <p>CWE-1275 Sensitive Cookie with Improper SameSite Attribute</p>"},{"location":"pt-BR/A02_2021-Cryptographic_Failures/","title":"A02:2021 \u2013 Falhas Criptogr\u00e1ficas","text":""},{"location":"pt-BR/A02_2021-Cryptographic_Failures/#fatores","title":"Fatores","text":"CWEs Mapeados Taxa de Incid\u00eancia M\u00e1xima Taxa de Incid\u00eancia M\u00e9dia Explora\u00e7\u00e3o M\u00e9dia Ponderada Impacto M\u00e9dio Ponderado Cobertura M\u00e1xima Cobertura M\u00e9dia Total de ocorr\u00eancias Total de CVEs 29 46.44% 4.49% 7.29 6.81 79.33% 34.85% 233,788 3,075"},{"location":"pt-BR/A02_2021-Cryptographic_Failures/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Subindo uma posi\u00e7\u00e3o para #2, anteriormente conhecido como Exposi\u00e7\u00e3o de Dados Sens\u00edveis, que \u00e9 mais um sintoma amplo do que uma causa raiz, o foco est\u00e1 nas falhas relacionadas \u00e0 criptografia (ou falta dela). O que muitas vezes leva \u00e0 exposi\u00e7\u00e3o de dados confidenciais. Not\u00e1vel Common Weakness Enumerations (CWEs) inclu\u00eddas s\u00e3o CWE-259: Uso de Senha no C\u00f3digo, CWE-327: Algoritmo Criptogr\u00e1fico Quebrado ou Arriscado e CWE-331 Entropia Insuficiente.</p>"},{"location":"pt-BR/A02_2021-Cryptographic_Failures/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>A primeira coisa \u00e9 determinar as necessidades de prote\u00e7\u00e3o dos dados em tr\u00e2nsito e armazenados. Por exemplo, senhas, n\u00famero de cart\u00e3o de cr\u00e9dito, registros de sa\u00fade, informa\u00e7\u00f5es pessoas e segredos de neg\u00f3cios que requerem prote\u00e7\u00e3o extra, principalmente se esses dados se enquadrarem nas leis de privacidade, alguns exemplos s\u00e3o a da Europa General Data Protection Regulation (GDPR) ou regulamentos de prote\u00e7\u00e3o de dados financeiros, como PCI Data Security Standard (PCI DSS). Para todos esses dados:</p> <ul> <li> <p>Todos os dados s\u00e3o transmitidos em texto n\u00e3o criptografado? Isso diz respeito a     protocolos como HTTP, SMTP, FTP tamb\u00e9m usando atualiza\u00e7\u00f5es TLS como STARTTLS.     O tr\u00e1fego externo da Internet \u00e9 perigoso. Verifique todo o tr\u00e1fego interno,     por exemplo, entre balanceadores de carga, servidores da web ou sistemas back-end.</p> </li> <li> <p>Algum algoritmo ou protocolo criptogr\u00e1fico antigo ou fraco \u00e9 usado por padr\u00e3o ou     em c\u00f3digo mais antigo?</p> </li> <li> <p>As chaves criptogr\u00e1ficas padr\u00e3o em uso, s\u00e3o chaves criptogr\u00e1ficas geradas fracas     ou reutilizadas, faltando o gerenciamento ou rota\u00e7\u00e3o de chaves adequado?     As chaves criptogr\u00e1ficas s\u00e3o verificadas nos reposit\u00f3rios de c\u00f3digo-fonte?</p> </li> <li> <p>A criptografia n\u00e3o \u00e9 aplicada, por exemplo, h\u00e1 alguma diretiva de seguran\u00e7a     de cabe\u00e7alhos HTTP (navegador) ou cabe\u00e7alhos ausentes?</p> </li> <li> <p>O certificado do servidor recebido e a cadeia de confian\u00e7a est\u00e3o devidamente validados? </p> </li> <li> <p>Os vetores de inicializa\u00e7\u00e3o s\u00e3o ignorados, reutilizados ou n\u00e3o gerados     suficientemente seguros para o modo criptogr\u00e1fico de opera\u00e7\u00e3o? Est\u00e1 em uso um modo     de opera\u00e7\u00e3o inseguro, como o ECB? A criptografia \u00e9 usada quando a criptografia     autenticada \u00e9 a mais apropriada?</p> </li> <li> <p>As senhas est\u00e3o sendo usadas como chaves criptogr\u00e1ficas na aus\u00eancia de uma fun\u00e7\u00e3o     de deriva\u00e7\u00e3o de chave de base de senha?</p> </li> <li> <p>A aleatoriedade \u00e9 usada para fins criptogr\u00e1ficos que n\u00e3o foram projetados para atender     aos requisitos criptogr\u00e1ficos? Mesmo se a fun\u00e7\u00e3o correta for escolhida, ela precisa     ser propagada pelo desenvolvedor e, se n\u00e3o, o desenvolvedor sobrescreveu a forte     funcionalidade de propaga\u00e7\u00e3o incorporada a ela com uma semente que carece de     entropia/imprevisibilidade suficiente?</p> </li> <li> <p>Est\u00e3o em uso fun\u00e7\u00f5es hash obsoletas, como MD5 ou SHA1, ou fun\u00e7\u00f5es hash n\u00e3o criptogr\u00e1ficas     usadas quando fun\u00e7\u00f5es hash criptogr\u00e1ficas s\u00e3o necess\u00e1rias?</p> </li> <li> <p>Est\u00e3o em uso m\u00e9todos de preenchimento criptogr\u00e1fico obsoletos, como PKCS n\u00famero 1 v1.5?</p> </li> <li> <p>As mensagens de erro criptogr\u00e1ficas ou as informa\u00e7\u00f5es do canal lateral podem ser exploradas,     por exemplo, na forma de ataques oracle de preenchimento?</p> </li> </ul> <p>Consulte ASVS Crypto (V7), Data Protection (V9) e SSL/TLS (V10)</p>"},{"location":"pt-BR/A02_2021-Cryptographic_Failures/#como-prevenir","title":"Como Prevenir","text":"<p>Fa\u00e7a o seguinte, no m\u00ednimo, e consulte as refer\u00eancias:</p> <ul> <li> <p>Classifique os dados processados, armazenados ou transmitidos por um aplicativo.     Identifique quais dados s\u00e3o confidenciais de acordo com as leis de privacidade, requisitos     regulamentares ou necessidades de neg\u00f3cios.</p> </li> <li> <p>N\u00e3o armazene dados confidenciais desnecessariamente. Descarte-o o mais r\u00e1pido poss\u00edvel ou use     tokeniza\u00e7\u00e3o compat\u00edvel com PCI DSS ou mesmo truncamento. Os dados n\u00e3o retidos n\u00e3o podem ser roubados.</p> </li> <li> <p>Certifique-se de criptografar todos os dados confidenciais armazenados.</p> </li> <li> <p>Certifique-se de que algoritmos, protocolos e senhas de padr\u00e3o forte e atualizados estejam     em vigor; use o gerenciamento de senhas adequado.</p> </li> <li> <p>Criptografe todos os dados em tr\u00e2nsito com protocolos seguros, como TLS com cifras de sigilo     de encaminhamento (FS), prioriza\u00e7\u00e3o de cifras pelo servidor e par\u00e2metros seguros. Aplique     a criptografia usando diretivas como HTTP Strict Transport Security (HSTS).</p> </li> <li> <p>Desative o armazenamento em cache para respostas que contenham dados confidenciais.</p> </li> <li> <p>Aplique os controles de seguran\u00e7a necess\u00e1rios de acordo com a classifica\u00e7\u00e3o de dados.</p> </li> <li> <p>N\u00e3o use protocolos legados, como FTP e SMTP, para transportar dados confidenciais.</p> </li> <li> <p>Armazene senhas usando fortes fun\u00e7\u00f5es de hash adapt\u00e1veis e saltadas com um fator de     trabalho (fator de atraso), como Argon2, scrypt, bcrypt ou PBKDF2.</p> </li> <li> <p>Os vetores de inicializa\u00e7\u00e3o devem ser escolhidos de acordo com o modo de     opera\u00e7\u00e3o. Para muitos modos, isso significa usar um CSPRNG (gerador de     n\u00fameros pseudo-aleat\u00f3rios criptograficamente seguro). Para modos que requerem     um nonce, o vetor de inicializa\u00e7\u00e3o (IV) n\u00e3o precisa de um CSPRNG. Em todos os     casos, o IV nunca deve ser usado duas vezes para uma chave fixa.</p> </li> <li> <p>Sempre use criptografia autenticada em vez de apenas criptografia.</p> </li> <li> <p>As chaves devem ser geradas de forma criptograficamente aleat\u00f3ria e armazenadas     na mem\u00f3ria como um array de bytes. Se uma senha for usada, ela deve ser     convertida em uma chave por meio de uma fun\u00e7\u00e3o de deriva\u00e7\u00e3o de chave de     base de senha apropriada.</p> </li> <li> <p>Certifique-se de que a aleatoriedade criptogr\u00e1fica seja usada quando apropriado     e que n\u00e3o tenha sido usada uma semente de uma forma previs\u00edvel ou com baixa entropia.     A maioria das APIs modernas n\u00e3o exige que o desenvolvedor propague o CSPRNG para obter seguran\u00e7a.</p> </li> <li> <p>Evite fun\u00e7\u00f5es criptogr\u00e1ficas e esquemas de preenchimento obsoletos, como MD5, SHA1, PKCS n\u00famero 1 v1.5.</p> </li> <li> <p>Verifique de forma independente a efic\u00e1cia das configura\u00e7\u00f5es.</p> </li> </ul>"},{"location":"pt-BR/A02_2021-Cryptographic_Failures/#exemplos-de-cenarios-de-ataque","title":"Exemplos de Cen\u00e1rios de Ataque","text":"<p>Cen\u00e1rio #1: Um aplicativo criptografa n\u00fameros de cart\u00e3o de cr\u00e9dito em um banco de dados usando criptografia autom\u00e1tica de banco de dados. No entanto, esses dados s\u00e3o automaticamente descriptografados quando recuperados, permitindo que uma falha de inje\u00e7\u00e3o de SQL recupere n\u00fameros de cart\u00e3o de cr\u00e9dito em texto n\u00e3o criptografado.</p> <p>Cen\u00e1rio #2: Um site n\u00e3o usa ou imp\u00f5e TLS para todas as p\u00e1ginas ou oferece suporte a criptografia fraca. Um invasor monitora o tr\u00e1fego de rede (por exemplo, em uma rede sem fio insegura), faz o downgrade de conex\u00f5es de HTTPS para HTTP, intercepta solicita\u00e7\u00f5es e rouba o cookie de sess\u00e3o do usu\u00e1rio. O invasor ent\u00e3o reproduz esse cookie e sequestra a sess\u00e3o (autenticada) do usu\u00e1rio, acessando ou modificando os dados privados do usu\u00e1rio. Em vez do acima, eles podem alterar todos os dados transportados, por exemplo, o destinat\u00e1rio de uma transfer\u00eancia de dinheiro.</p> <p>Cen\u00e1rio #3: O banco de dados de senha usa hashes sem saltos ou simples para armazenar as senhas de todos. Uma falha de upload de arquivo permite que um invasor recupere o banco de dados de senhas. Todos os hashes sem saltos podem ser expostos com uma rainbow table de hashes pr\u00e9-calculados. Hashes geradas por fun\u00e7\u00f5es de hash simples ou r\u00e1pidas podem ser quebrados por GPUs, mesmo se forem saltadas.</p>"},{"location":"pt-BR/A02_2021-Cryptographic_Failures/#referencias","title":"Refer\u00eancias","text":"<ul> <li> <p>OWASP Proactive Controls: Protect Data     Everywhere</p> </li> <li> <p>OWASP Application Security Verification Standard (V7,     9, 10)</p> </li> <li> <p>OWASP Cheat Sheet: Transport Layer     Protection</p> </li> <li> <p>OWASP Cheat Sheet: User Privacy     Protection</p> </li> <li> <p>OWASP Cheat Sheet: Password and Cryptographic Storage</p> </li> <li> <p>OWASP Cheat Sheet:     HSTS</p> </li> <li> <p>OWASP Testing Guide: Testing for weak cryptography</p> </li> </ul>"},{"location":"pt-BR/A02_2021-Cryptographic_Failures/#lista-dos-cwes-mapeados","title":"Lista dos CWEs Mapeados","text":"<p>CWE-261 Weak Encoding for Password</p> <p>CWE-296 Improper Following of a Certificate's Chain of Trust</p> <p>CWE-310 Cryptographic Issues</p> <p>CWE-319 Cleartext Transmission of Sensitive Information</p> <p>CWE-321 Use of Hard-coded Cryptographic Key</p> <p>CWE-322 Key Exchange without Entity Authentication</p> <p>CWE-323 Reusing a Nonce, Key Pair in Encryption</p> <p>CWE-324 Use of a Key Past its Expiration Date</p> <p>CWE-325 Missing Required Cryptographic Step</p> <p>CWE-326 Inadequate Encryption Strength</p> <p>CWE-327 Use of a Broken or Risky Cryptographic Algorithm</p> <p>CWE-328 Reversible One-Way Hash</p> <p>CWE-329 Not Using a Random IV with CBC Mode</p> <p>CWE-330 Use of Insufficiently Random Values</p> <p>CWE-331 Insufficient Entropy</p> <p>CWE-335 Incorrect Usage of Seeds in Pseudo-Random Number Generator(PRNG)</p> <p>CWE-336 Same Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-337 Predictable Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-338 Use of Cryptographically Weak Pseudo-Random Number Generator(PRNG)</p> <p>CWE-340 Generation of Predictable Numbers or Identifiers</p> <p>CWE-347 Improper Verification of Cryptographic Signature</p> <p>CWE-523 Unprotected Transport of Credentials</p> <p>CWE-720 OWASP Top Ten 2007 Category A9 - Insecure Communications</p> <p>CWE-757 Selection of Less-Secure Algorithm During Negotiation('Algorithm Downgrade')</p> <p>CWE-759 Use of a One-Way Hash without a Salt</p> <p>CWE-760 Use of a One-Way Hash with a Predictable Salt</p> <p>CWE-780 Use of RSA Algorithm without OAEP</p> <p>CWE-818 Insufficient Transport Layer Protection</p> <p>CWE-916 Use of Password Hash With Insufficient Computational Effort</p>"},{"location":"pt-BR/A03_2021-Injection/","title":"A03:2021 \u2013 Inje\u00e7\u00e3o","text":""},{"location":"pt-BR/A03_2021-Injection/#fatores","title":"Fatores","text":"CWEs Mapeados Taxa de Incid\u00eancia M\u00e1xima Taxa de Incid\u00eancia M\u00e9dia Explora\u00e7\u00e3o M\u00e9dia Ponderada Impacto M\u00e9dio Ponderado Cobertura M\u00e1xima Cobertura M\u00e9dia Total de ocorr\u00eancias Total de CVEs 33 19.09% 3.37% 7.25 7.15 94.04% 47.90% 274,228 32,078"},{"location":"pt-BR/A03_2021-Injection/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>A Inje\u00e7\u00e3o desliza para a terceira posi\u00e7\u00e3o. 94% das aplica\u00e7\u00f5es foram testadas para alguma forma de inje\u00e7\u00e3o com uma taxa de incid\u00eancia m\u00e1xima de 19%, uma taxa de incid\u00eancia m\u00e9dia de 3% e 274k ocorr\u00eancias. Not\u00e1vel Common Weakness Enumerations (CWEs) inclu\u00eddas s\u00e3o CWE-79: Cross-site Scripting, CWE-89: Inje\u00e7\u00e3o de SQL e CWE-73: Controle Externo do Nome do Arquivo ou Caminho.</p>"},{"location":"pt-BR/A03_2021-Injection/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>Uma aplica\u00e7\u00e3o \u00e9 vulner\u00e1vel a ataques quando:</p> <ul> <li> <p>Os dados fornecidos pelo usu\u00e1rio n\u00e3o s\u00e3o validados, filtrados     ou higienizados pelo aplicativo.</p> </li> <li> <p>Consultas din\u00e2micas ou chamadas n\u00e3o parametrizadas sem escape     ciente do contexto s\u00e3o usadas diretamente no interpretador.</p> </li> <li> <p>Dados hostis s\u00e3o usados nos par\u00e2metros de pesquisa de mapeamento     relacional de objeto (ORM) para extrair registros confidenciais     adicionais.</p> </li> <li> <p>Dados hostis s\u00e3o usados diretamente ou concatenados. O SQL ou comando     cont\u00e9m a estrutura e os dados maliciosos em consultas din\u00e2micas, comandos     ou procedimentos armazenados.</p> </li> </ul> <p>Algumas das inje\u00e7\u00f5es mais comuns s\u00e3o SQL, NoSQL, comando OS, Mapeamento Relacional de Objeto (ORM), LDAP e Linguagem de Express\u00e3o (EL) ou inje\u00e7\u00e3o de Biblioteca de Navega\u00e7\u00e3o de Gr\u00e1fico de Objeto (OGNL). O conceito \u00e9 id\u00eantico entre todos os int\u00e9rpretes. A revis\u00e3o do c\u00f3digo-fonte \u00e9 o melhor m\u00e9todo para detectar se os aplicativos s\u00e3o vulner\u00e1veis a inje\u00e7\u00f5es. O teste automatizado de todos os par\u00e2metros, cabe\u00e7alhos, URL, cookies, JSON, SOAP e entradas de dados XML s\u00e3o fortemente encorajados. As organiza\u00e7\u00f5es podem incluir ferramentas de teste de seguran\u00e7a de aplica\u00e7\u00f5es est\u00e1ticos (SAST), din\u00e2micos (DAST) e interativos (IAST) no pipeline de CI/CD para identificar as falhas de inje\u00e7\u00e3o introduzidas antes da implanta\u00e7\u00e3o da produ\u00e7\u00e3o.</p>"},{"location":"pt-BR/A03_2021-Injection/#como-prevenir","title":"Como Prevenir","text":"<p>Prevenir a inje\u00e7\u00e3o requer manter os dados separados dos comandos e consultas:</p> <ul> <li> <p>A op\u00e7\u00e3o preferida \u00e9 usar uma API segura, que evita usar o interpretador     inteiramente, fornece uma interface parametrizada ou migra para uma     ferramenta de Mapeamento Relacional de Objeto (ORMs). Nota: Mesmo quando parametrizados, os procedimentos armazenados     ainda podem introduzir inje\u00e7\u00e3o de SQL se PL/SQL ou T-SQL concatenar     consultas e dados ou executar dados hostis com EXECUTE IMMEDIATE ou exec().</p> </li> <li> <p>Use valida\u00e7\u00e3o de entrada positiva ou \"safelist\" do lado do servidor. Esta n\u00e3o     \u00e9 uma defesa completa, pois muitos aplicativos requerem caracteres especiais,     como \u00e1reas de texto ou APIs para aplicativos m\u00f3veis.</p> </li> <li> <p>Para quaisquer consultas din\u00e2micas residuais, escape os caracteres especiais     usando a sintaxe de escape espec\u00edfica para esse interpretador.. Nota: Estruturas SQL, como nomes de tabelas, nomes de colunas e assim     por diante, n\u00e3o podem ter escape e, portanto, nomes de estruturas fornecidos     pelo usu\u00e1rio s\u00e3o perigosos. Este \u00e9 um problema comum em software de     elabora\u00e7\u00e3o de relat\u00f3rios.</p> </li> <li> <p>Use LIMIT e outros SQL de controle em consultas para evitar a divulga\u00e7\u00e3o em     massa de registros no caso de inje\u00e7\u00e3o de SQL.</p> </li> </ul>"},{"location":"pt-BR/A03_2021-Injection/#exemplos-de-cenarios-de-ataque","title":"Exemplos de Cen\u00e1rios de Ataque","text":"<p>Cen\u00e1rio #1: Um aplicativo usa dados n\u00e3o confi\u00e1veis na constru\u00e7\u00e3o da seguinte chamada SQL vulner\u00e1vel:</p> <pre><code>String query = \"SELECT \\* FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\";\n</code></pre> <p>Cen\u00e1rio #2: Da mesma forma, a confian\u00e7a cega em frameworks de aplica\u00e7\u00e3os pode resultar em consultas que ainda s\u00e3o vulner\u00e1veis (por exemplo, Hibernate Query Language (HQL)):</p> <pre><code> Query HQLQuery = session.createQuery(\"FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\");\n</code></pre> <p>Em ambos os casos, o invasor modifica o valor do par\u00e2metro \u2018id\u2019 em seu navegador para enviar: ' UNION SLEEP(10);--. Por exemplo:</p> <pre><code> http://example.com/app/accountView?id=' UNION SELECT SLEEP(10);--\n</code></pre> <p>Isso muda o significado de ambas as consultas para retornar todos os registros da tabela de contas. Ataques mais perigosos podem modificar ou excluir dados ou at\u00e9 mesmo invocar procedimentos armazenados.</p>"},{"location":"pt-BR/A03_2021-Injection/#referencias","title":"Refer\u00eancias","text":"<ul> <li> <p>OWASP Proactive Controls: Secure Database Access</p> </li> <li> <p>OWASP ASVS: V5 Input Validation and Encoding</p> </li> <li> <p>OWASP Testing Guide: SQL Injection, Command Injection     e\u00a0ORM Injection</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: SQL Injection Prevention</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention in Java</p> </li> <li> <p>OWASP Cheat Sheet: Query Parameterization</p> </li> <li> <p>OWASP Automated Threats to Web Applications \u2013 OAT-014</p> </li> <li> <p>PortSwigger: Server-side template injection</p> </li> </ul>"},{"location":"pt-BR/A03_2021-Injection/#lista-dos-cwes-mapeados","title":"Lista dos CWEs Mapeados","text":"<p>CWE-20 Improper Input Validation</p> <p>CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')</p> <p>CWE-75 Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)</p> <p>CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection')</p> <p>CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</p> <p>CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</p> <p>CWE-80 Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</p> <p>CWE-83 Improper Neutralization of Script in Attributes in a Web Page</p> <p>CWE-87 Improper Neutralization of Alternate XSS Syntax</p> <p>CWE-88 Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')</p> <p>CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</p> <p>CWE-90 Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</p> <p>CWE-91 XML Injection (aka Blind XPath Injection)</p> <p>CWE-93 Improper Neutralization of CRLF Sequences ('CRLF Injection')</p> <p>CWE-94 Improper Control of Generation of Code ('Code Injection')</p> <p>CWE-95 Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</p> <p>CWE-96 Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')</p> <p>CWE-97 Improper Neutralization of Server-Side Includes (SSI) Within a Web Page</p> <p>CWE-98 Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')</p> <p>CWE-99 Improper Control of Resource Identifiers ('Resource Injection')</p> <p>CWE-100 Deprecated: Was catch-all for input validation issues</p> <p>CWE-113 Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')</p> <p>CWE-116 Improper Encoding or Escaping of Output</p> <p>CWE-138 Improper Neutralization of Special Elements</p> <p>CWE-184 Incomplete List of Disallowed Inputs</p> <p>CWE-470 Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')</p> <p>CWE-471 Modification of Assumed-Immutable Data (MAID)</p> <p>CWE-564 SQL Injection: Hibernate</p> <p>CWE-610 Externally Controlled Reference to a Resource in Another Sphere</p> <p>CWE-643 Improper Neutralization of Data within XPath Expressions ('XPath Injection')</p> <p>CWE-644 Improper Neutralization of HTTP Headers for Scripting Syntax</p> <p>CWE-652 Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')</p> <p>CWE-917 Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')</p>"},{"location":"pt-BR/A04_2021-Insecure_Design/","title":"A04:2021 \u2013 Design Inseguro","text":""},{"location":"pt-BR/A04_2021-Insecure_Design/#fatores","title":"Fatores","text":"CWEs Mapeados Taxa de Incid\u00eancia M\u00e1xima Taxa de Incid\u00eancia M\u00e9dia Explora\u00e7\u00e3o M\u00e9dia Ponderada Impacto M\u00e9dio Ponderado Cobertura M\u00e1xima Cobertura M\u00e9dia Total de ocorr\u00eancias Total de CVEs 40 24.19% 3.00% 6.46 6.78 77.25% 42.51% 262,407 2,691"},{"location":"pt-BR/A04_2021-Insecure_Design/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Uma nova categoria para 2021 concentra-se nos riscos relacionados a falhas de design e arquitetura, com uma chamada para mais uso de modelagem de amea\u00e7as (threat modeling), padr\u00f5es de design seguros e arquiteturas de refer\u00eancia. Como uma comunidade, precisamos ir al\u00e9m de \"shift-left\" no espa\u00e7o de codifica\u00e7\u00e3o para atividades antes da codifica\u00e7\u00e3o que s\u00e3o cr\u00edticas para os princ\u00edpios de Secure by Design. Not\u00e1veis Common Weakness Enumerations (CWEs) inclu\u00eddas s\u00e3o CWE-209: Gera\u00e7\u00e3o de Mensagem de Erro Contendo Informa\u00e7\u00f5es Confidenciais, CWE-256: Armazenamento Desprotegido de Credenciais, CWE-501: Viola\u00e7\u00e3o de Limites de Confian\u00e7a e CWE-522: Credenciais Insuficientemente Protegidas.</p>"},{"location":"pt-BR/A04_2021-Insecure_Design/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>O design inseguro \u00e9 uma categoria ampla que representa diferentes pontos fracos, expressos como \"design de controle ausente ou ineficaz\". O design inseguro n\u00e3o \u00e9 a fonte de todas as outras 10 categorias principais de risco de seguran\u00e7a. H\u00e1 uma diferen\u00e7a entre design inseguro e implementa\u00e7\u00e3o insegura. N\u00f3s diferenciamos entre falhas de design e defeitos de implementa\u00e7\u00e3o por um motivo, eles t\u00eam diferentes causas ra\u00edzes e remedia\u00e7\u00e3o. Um design seguro ainda pode ter defeitos de implementa\u00e7\u00e3o que levam a vulnerabilidades que podem ser exploradas. Um design inseguro n\u00e3o pode ser corrigido por uma implementa\u00e7\u00e3o perfeita, pois, por defini\u00e7\u00e3o, os controles de seguran\u00e7a necess\u00e1rios nunca foram criados para a defesa contra ataques espec\u00edficos. Um dos fatores que contribuem para um design inseguro \u00e9 a falta de perfis de risco de neg\u00f3cios inerentes ao software ou sistema que est\u00e1 sendo desenvolvido e, portanto, a falha em determinar o n\u00edvel de design de seguran\u00e7a necess\u00e1rio.</p>"},{"location":"pt-BR/A04_2021-Insecure_Design/#gerenciamento-de-requisitos-e-recursos","title":"Gerenciamento de Requisitos e Recursos","text":"<p>Colete e negocie os requisitos de neg\u00f3cios para uma aplica\u00e7\u00e3o com a empresa, incluindo os requisitos de prote\u00e7\u00e3o relativos \u00e0 confidencialidade, integridade, disponibilidade e autenticidade de todos os ativos de dados e a l\u00f3gica de neg\u00f3cios esperada. Leve em considera\u00e7\u00e3o a exposi\u00e7\u00e3o da sua aplica\u00e7\u00e3o e se voc\u00ea precisa de segrega\u00e7\u00e3o de tenants (al\u00e9m do controle de acesso). Compile os requisitos t\u00e9cnicos, incluindo requisitos de seguran\u00e7a funcionais e n\u00e3o funcionais. Planeje e negocie o or\u00e7amento cobrindo todo o projeto, constru\u00e7\u00e3o, teste e opera\u00e7\u00e3o, incluindo atividades de seguran\u00e7a.</p>"},{"location":"pt-BR/A04_2021-Insecure_Design/#design-seguro","title":"Design Seguro","text":"<p>O design seguro \u00e9 uma cultura e metodologia que avalia constantemente as amea\u00e7as e garante que o c\u00f3digo seja desenvolvido e testado de forma robusta para evitar m\u00e9todos de ataque conhecidos. A Modelagem de Amea\u00e7as deve ser integrada \u00e0s sess\u00f5es de refinamento (ou atividades semelhantes); procure por mudan\u00e7as nos fluxos de dados e controle de acesso ou outros controles de seguran\u00e7a. No desenvolvimento da hist\u00f3ria do usu\u00e1rio, determine o fluxo correto e os estados de falha, certifique-se de que sejam bem compreendidos e aceitos pelas partes respons\u00e1veis e afetadas. Analise suposi\u00e7\u00f5es e condi\u00e7\u00f5es para fluxos esperados e de falha, assegure-se de que eles ainda sejam precisos e desej\u00e1veis. Determine como validar as suposi\u00e7\u00f5es e fazer cumprir as condi\u00e7\u00f5es necess\u00e1rias para comportamentos adequados. Certifique-se de que os resultados sejam documentados na hist\u00f3ria do usu\u00e1rio. Aprenda com os erros e ofere\u00e7a incentivos positivos para promover melhorias. O design seguro n\u00e3o \u00e9 um add-on nem uma ferramenta que voc\u00ea pode adicionar ao software.</p>"},{"location":"pt-BR/A04_2021-Insecure_Design/#ciclo-de-vida-de-desenvolvimento-seguro","title":"Ciclo de Vida de Desenvolvimento Seguro","text":"<p>O software seguro requer um ciclo de vida de desenvolvimento seguro, alguma forma de padr\u00e3o de projeto seguro, metodologia de paved road, bibliotecas de componentes protegidos, ferramentas e modelagem de amea\u00e7as. Procure seus especialistas em seguran\u00e7a no in\u00edcio de um projeto de software, durante todo o projeto e durante a manuten\u00e7\u00e3o de seu software. Considere aproveitar o OWASP Software Assurance Maturity Model (SAMM) para ajudar a estruturar seus esfor\u00e7os de desenvolvimento de software seguro.</p>"},{"location":"pt-BR/A04_2021-Insecure_Design/#como-prevenir","title":"Como Prevenir","text":"<ul> <li> <p>Estabele\u00e7a e use um ciclo de vida de desenvolvimento seguro     com profissionais de AppSec para ajudar a avaliar e projetar     controles relacionados \u00e0 seguran\u00e7a e privacidade.</p> </li> <li> <p>Estabele\u00e7a e use bibliotecas de padr\u00f5es de projeto seguros ou     componentes de paved road prontos para usar.</p> </li> <li> <p>Use Modelagem de Amea\u00e7as para autentica\u00e7\u00e3o cr\u00edtica, controle de acesso,     l\u00f3gica de neg\u00f3cios e fluxos de chaves.</p> </li> <li> <p>Integre a linguagem e os controles de seguran\u00e7a \u00e0s hist\u00f3rias de usu\u00e1rios.</p> </li> <li> <p>Integre verifica\u00e7\u00f5es de plausibilidade em cada camada da sua     aplica\u00e7\u00e3o (do front-end ao back-end).</p> </li> <li> <p>Escreva testes de unidade e integra\u00e7\u00e3o para validar se todos os fluxos cr\u00edticos     s\u00e3o resistentes ao modelo de amea\u00e7a. Compile casos de uso de sucesso e casos de uso     indevido para cada camada da sua aplica\u00e7\u00e3o.</p> </li> <li> <p>Separe as camadas de n\u00edvel no sistema e nas camadas de rede, dependendo     das necessidades de exposi\u00e7\u00e3o e prote\u00e7\u00e3o.</p> </li> <li> <p>Separe os tenants de maneira robusta por design em todas as camadas.</p> </li> <li> <p>Limite o consumo de recursos por usu\u00e1rio ou servi\u00e7o.</p> </li> </ul>"},{"location":"pt-BR/A04_2021-Insecure_Design/#exemplos-de-cenarios-de-ataque","title":"Exemplos de Cen\u00e1rios de Ataque","text":"<p>Cen\u00e1rio #1: Um fluxo de trabalho de recupera\u00e7\u00e3o de credencial pode incluir \"perguntas e respostas\" (confirma\u00e7\u00e3o positiva), o que \u00e9 proibido pelo NIST 800-63b, o OWASP ASVS e o OWASP Top 10. Perguntas e respostas n\u00e3o podem ser consideradas evid\u00eancias de identidade, pois mais de uma pessoa pode saber as respostas, \u00e9 por isso que eles s\u00e3o proibidos. Esse c\u00f3digo deve ser removido e substitu\u00eddo por um design mais seguro.</p> <p>Cen\u00e1rio #2: Uma rede de cinemas permite descontos para reservas de grupos e tem um m\u00e1ximo de quinze participantes antes de exigir um dep\u00f3sito. Os invasores podem modelar esse fluxo e testar se conseguem reservar seiscentos lugares e todos os cinemas de uma s\u00f3 vez em algumas solicita\u00e7\u00f5es, causando uma enorme perda de receita.</p> <p>Cen\u00e1rio #3: O site de com\u00e9rcio eletr\u00f4nico de uma rede de varejo n\u00e3o tem prote\u00e7\u00e3o contra bots executados por cambistas que compram placas de v\u00eddeo de \u00faltima gera\u00e7\u00e3o para revender sites de leil\u00e3o. Isso cria uma publicidade terr\u00edvel para os fabricantes de placas de v\u00eddeo e propriet\u00e1rios de redes de varejo, al\u00e9m de sofrer com os entusiastas que n\u00e3o podem obter essas placas a qualquer pre\u00e7o. O design anti-bot cuidadoso e as regras de l\u00f3gica de dom\u00ednio, como compras feitas dentro de alguns segundos de disponibilidade, podem identificar compras n\u00e3o aut\u00eanticas e rejeitar tais transa\u00e7\u00f5es.</p>"},{"location":"pt-BR/A04_2021-Insecure_Design/#referencias","title":"Refer\u00eancias","text":"<ul> <li> <p>OWASP Cheat Sheet: Secure Design Principles</p> </li> <li> <p>OWASP SAMM: Design:Security Architecture</p> </li> <li> <p>OWASP SAMM: Design:Threat Assessment </p> </li> <li> <p>NIST \u2013 Guidelines on Minimum Standards for Developer Verification of Software</p> </li> <li> <p>The Threat Modeling Manifesto</p> </li> <li> <p>Awesome Threat Modeling</p> </li> </ul>"},{"location":"pt-BR/A04_2021-Insecure_Design/#lista-dos-cwes-mapeados","title":"Lista dos CWEs Mapeados","text":"<p>CWE-73 External Control of File Name or Path</p> <p>CWE-183 Permissive List of Allowed Inputs</p> <p>CWE-209 Generation of Error Message Containing Sensitive Information</p> <p>CWE-213 Exposure of Sensitive Information Due to Incompatible Policies</p> <p>CWE-235 Improper Handling of Extra Parameters</p> <p>CWE-256 Unprotected Storage of Credentials</p> <p>CWE-257 Storing Passwords in a Recoverable Format</p> <p>CWE-266 Incorrect Privilege Assignment</p> <p>CWE-269 Improper Privilege Management</p> <p>CWE-280 Improper Handling of Insufficient Permissions or Privileges</p> <p>CWE-311 Missing Encryption of Sensitive Data</p> <p>CWE-312 Cleartext Storage of Sensitive Information</p> <p>CWE-313 Cleartext Storage in a File or on Disk</p> <p>CWE-316 Cleartext Storage of Sensitive Information in Memory</p> <p>CWE-419 Unprotected Primary Channel</p> <p>CWE-430 Deployment of Wrong Handler</p> <p>CWE-434 Unrestricted Upload of File with Dangerous Type</p> <p>CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')</p> <p>CWE-451 User Interface (UI) Misrepresentation of Critical Information</p> <p>CWE-472 External Control of Assumed-Immutable Web Parameter</p> <p>CWE-501 Trust Boundary Violation</p> <p>CWE-522 Insufficiently Protected Credentials</p> <p>CWE-525 Use of Web Browser Cache Containing Sensitive Information</p> <p>CWE-539 Use of Persistent Cookies Containing Sensitive Information</p> <p>CWE-579 J2EE Bad Practices: Non-serializable Object Stored in Session</p> <p>CWE-598 Use of GET Request Method With Sensitive Query Strings</p> <p>CWE-602 Client-Side Enforcement of Server-Side Security</p> <p>CWE-642 External Control of Critical State Data</p> <p>CWE-646 Reliance on File Name or Extension of Externally-Supplied File</p> <p>CWE-650 Trusting HTTP Permission Methods on the Server Side</p> <p>CWE-653 Insufficient Compartmentalization</p> <p>CWE-656 Reliance on Security Through Obscurity</p> <p>CWE-657 Violation of Secure Design Principles</p> <p>CWE-799 Improper Control of Interaction Frequency</p> <p>CWE-807 Reliance on Untrusted Inputs in a Security Decision</p> <p>CWE-840 Business Logic Errors</p> <p>CWE-841 Improper Enforcement of Behavioral Workflow</p> <p>CWE-927 Use of Implicit Intent for Sensitive Communication</p> <p>CWE-1021 Improper Restriction of Rendered UI Layers or Frames</p> <p>CWE-1173 Improper Use of Validation Framework</p>"},{"location":"pt-BR/A05_2021-Security_Misconfiguration/","title":"A05:2021 \u2013 Configura\u00e7\u00e3o Incorreta de Seguran\u00e7a","text":""},{"location":"pt-BR/A05_2021-Security_Misconfiguration/#fatores","title":"Fatores","text":"CWEs Mapeados Taxa de Incid\u00eancia M\u00e1xima Taxa de Incid\u00eancia M\u00e9dia Explora\u00e7\u00e3o M\u00e9dia Ponderada Impacto M\u00e9dio Ponderado Cobertura M\u00e1xima Cobertura M\u00e9dia Total de ocorr\u00eancias Total de CVEs 20 19.84% 4.51% 8.12 6.56 89.58% 44.84% 208,387 789"},{"location":"pt-BR/A05_2021-Security_Misconfiguration/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Saindo da #6 posi\u00e7\u00e3o na edi\u00e7\u00e3o anterior, 90% das aplica\u00e7\u00f5es foram testados para alguma forma de configura\u00e7\u00e3o incorreta, com uma taxa de incid\u00eancia m\u00e9dia de 4% e mais de 208 mil ocorr\u00eancias de Common Weakness Enumeration (CWE) nesta categoria de risco. Com mais mudan\u00e7as em software altamente configur\u00e1vel, n\u00e3o \u00e9 surpreendente ver essa categoria subir. CWEs not\u00e1veis inclu\u00eddos s\u00e3o CWE-16 Configura\u00e7\u00e3o e CWE-611 Restri\u00e7\u00e3o Impr\u00f3pria de Refer\u00eancia de Entidade Externa XML.</p>"},{"location":"pt-BR/A05_2021-Security_Misconfiguration/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>A aplica\u00e7\u00e3o pode ser vulner\u00e1vel se for:</p> <ul> <li> <p>Falta de prote\u00e7\u00e3o de seguran\u00e7a apropriada em qualquer parte     da stack das aplica\u00e7\u00f5es ou permiss\u00f5es configuradas incorretamente     em servi\u00e7os em nuvem.</p> </li> <li> <p>Recursos desnecess\u00e1rios s\u00e3o ativados ou instalados (por exemplo,     portas, servi\u00e7os, p\u00e1ginas, contas ou privil\u00e9gios desnecess\u00e1rios).</p> </li> <li> <p>As contas padr\u00e3o e suas senhas ainda est\u00e3o ativadas e inalteradas.</p> </li> <li> <p>O tratamento de erros revela stack traces ou outras     mensagens de erro excessivamente informativas aos usu\u00e1rios.</p> </li> <li> <p>Para sistemas atualizados, os recursos de seguran\u00e7a mais recentes     est\u00e3o desabilitados ou n\u00e3o est\u00e3o configurados com seguran\u00e7a.</p> </li> <li> <p>As configura\u00e7\u00f5es de seguran\u00e7a nos servidores das aplica\u00e7\u00f5es, nos     frameworks (por exemplo, Struts, Spring, ASP.NET), bibliotecas,     bancos de dados, etc., n\u00e3o est\u00e3o definidas para proteger os valores.</p> </li> <li> <p>O servidor n\u00e3o envia cabe\u00e7alhos ou diretivas de seguran\u00e7a, ou eles     n\u00e3o est\u00e3o configurados para proteger os valores.</p> </li> <li> <p>O software est\u00e1 desatualizado ou vulner\u00e1vel (consulte   A06: 2021-Componentes Vulner\u00e1veis e Desatualizados).</p> </li> </ul> <p>Sem um processo de configura\u00e7\u00e3o de seguran\u00e7a de aplica\u00e7\u00f5es que seja integrado e repet\u00edvel, os sistemas correm um risco maior.</p>"},{"location":"pt-BR/A05_2021-Security_Misconfiguration/#como-prevenir","title":"Como Prevenir","text":"<p>Devem ser implementados processos de instala\u00e7\u00e3o segura, incluindo:</p> <ul> <li> <p>Um processo de prote\u00e7\u00e3o repet\u00edvel torna mais r\u00e1pido e f\u00e1cil implantar     outro ambiente que esteja devidamente bloqueado. Os ambientes de     desenvolvimento, controle de qualidade e produ\u00e7\u00e3o devem ser todos     configurados de forma id\u00eantica, com credenciais diferentes usadas     em cada ambiente. Este processo deve ser automatizado para minimizar     o esfor\u00e7o necess\u00e1rio para configurar um novo ambiente seguro.</p> </li> <li> <p>Uma plataforma m\u00ednima sem recursos, componentes, documenta\u00e7\u00e3o e outros     desnecess\u00e1rios. Remova ou n\u00e3o instale recursos e estruturas n\u00e3o utilizados.</p> </li> <li> <p>Uma tarefa para revisar e atualizar as configura\u00e7\u00f5es apropriadas para todas     as notas de seguran\u00e7a, atualiza\u00e7\u00f5es e patches como parte do processo de     gerenciamento de patch (consulte     A06: 2021-Componentes Vulner\u00e1veis e Desatualizados).     Revise as permiss\u00f5es de armazenamento em nuvem (por exemplo, S3 bucket permissions).</p> </li> <li> <p>Uma arquitetura de aplica\u00e7\u00e3o segmentada fornece separa\u00e7\u00e3o eficaz e     segura entre componentes ou tenants, com segmenta\u00e7\u00e3o,     conteineriza\u00e7\u00e3o ou grupos de seguran\u00e7a em nuvem (ACLs).</p> </li> <li> <p>Envio de diretivas de seguran\u00e7a para clientes, por exemplo, Security Headers.</p> </li> <li> <p>Um processo automatizado para verificar a efic\u00e1cia das configura\u00e7\u00f5es     em todos os ambientes.</p> </li> </ul>"},{"location":"pt-BR/A05_2021-Security_Misconfiguration/#exemplos-de-cenarios-de-ataque","title":"Exemplos de Cen\u00e1rios de Ataque","text":"<p>Cen\u00e1rio #1: O servidor da aplica\u00e7\u00e3o \u00e9 fornecido com os sistemas de amostra n\u00e3o removidos do servidor de produ\u00e7\u00e3o. Esses aplicativos de amostra t\u00eam falhas de seguran\u00e7a conhecidas que os invasores usam para comprometer o servidor. Suponha que um desses aplicativos seja o console de administra\u00e7\u00e3o e as contas padr\u00e3o n\u00e3o tenham sido alteradas. Nesse caso, o invasor efetua login com as senhas padr\u00e3o e assume o controle.</p> <p>Cen\u00e1rio #2: A listagem do diret\u00f3rio n\u00e3o est\u00e1 desabilitada no servidor. Um invasor descobre que pode simplesmente listar diret\u00f3rios. O invasor encontra e baixa as classes Java compiladas, que ele descompila e faz engenharia reversa para visualizar o c\u00f3digo. O invasor ent\u00e3o encontra uma falha grave de controle de acesso no aplicativo.</p> <p>Cen\u00e1rio #3: A configura\u00e7\u00e3o do servidor de aplica\u00e7\u00f5es permite que os detalhes das mensagens de erro, por exemplo, stack trace, sejam retornadas aos usu\u00e1rios. Isso potencialmente exp\u00f5e informa\u00e7\u00f5es confidenciais ou falhas subjacentes, como vers\u00f5es de componentes que s\u00e3o conhecidas por serem vulner\u00e1veis.</p> <p>Cen\u00e1rio #4: Um provedor de servi\u00e7os de nuvem tem permiss\u00f5es de compartilhamento padr\u00e3o abertas para a Internet por outros usu\u00e1rios de Content Security Policy header (CSP). Isso permite que dados confidenciais armazenados no armazenamento em nuvem sejam acessados.</p>"},{"location":"pt-BR/A05_2021-Security_Misconfiguration/#referencias","title":"Refer\u00eancias","text":"<ul> <li> <p>OWASP Testing Guide: Configuration     Management</p> </li> <li> <p>OWASP Testing Guide: Testing for Error Codes</p> </li> <li> <p>Application Security Verification Standard V19 Configuration</p> </li> <li> <p>NIST Guide to General Server     Hardening</p> </li> <li> <p>CIS Security Configuration     Guides/Benchmarks</p> </li> <li> <p>Amazon S3 Bucket Discovery and     Enumeration</p> </li> </ul>"},{"location":"pt-BR/A05_2021-Security_Misconfiguration/#lista-dos-cwes-mapeados","title":"Lista dos CWEs Mapeados","text":"<p>CWE-2 7PK - Environment</p> <p>CWE-11 ASP.NET Misconfiguration: Creating Debug Binary</p> <p>CWE-13 ASP.NET Misconfiguration: Password in Configuration File</p> <p>CWE-15 External Control of System or Configuration Setting</p> <p>CWE-16 Configuration</p> <p>CWE-260 Password in Configuration File</p> <p>CWE-315 Cleartext Storage of Sensitive Information in a Cookie</p> <p>CWE-520 .NET Misconfiguration: Use of Impersonation</p> <p>CWE-526 Exposure of Sensitive Information Through Environmental Variables</p> <p>CWE-537 Java Runtime Error Message Containing Sensitive Information</p> <p>CWE-541 Inclusion of Sensitive Information in an Include File</p> <p>CWE-547 Use of Hard-coded, Security-relevant Constants</p> <p>CWE-611 Improper Restriction of XML External Entity Reference</p> <p>CWE-614 Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</p> <p>CWE-756 Missing Custom Error Page</p> <p>CWE-776 Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')</p> <p>CWE-942 Permissive Cross-domain Policy with Untrusted Domains</p> <p>CWE-1004 Sensitive Cookie Without 'HttpOnly' Flag</p> <p>CWE-1032 OWASP Top Ten 2017 Category A6 - Security Misconfiguration</p> <p>CWE-1174 ASP.NET Misconfiguration: Improper Model Validation</p>"},{"location":"pt-BR/A06_2021-Vulnerable_and_Outdated_Components/","title":"A06:2021 \u2013 Componentes Vulner\u00e1veis e Desatualizados","text":""},{"location":"pt-BR/A06_2021-Vulnerable_and_Outdated_Components/#fatores","title":"Fatores","text":"CWEs Mapeados Taxa de Incid\u00eancia M\u00e1xima Taxa de Incid\u00eancia M\u00e9dia Explora\u00e7\u00e3o M\u00e9dia Ponderada Impacto M\u00e9dio Ponderado Cobertura M\u00e1xima Cobertura M\u00e9dia Total de ocorr\u00eancias Total de CVEs 3 27.96% 8.77% 51.78% 22.47% 5.00 5.00 30,457 0"},{"location":"pt-BR/A06_2021-Vulnerable_and_Outdated_Components/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Foi o segundo colocado na pesquisa da comunidade do Top 10, mas tamb\u00e9m tinha dados suficientes para chegar ao Top 10 por meio da an\u00e1lise de dados. Componentes vulner\u00e1veis s\u00e3o um problema conhecido que n\u00f3s lutamos para testar e avaliar o risco e \u00e9 a \u00fanica categoria que n\u00e3o tem nenhuma Common Weakness Enumerations (CWEs) mapeada para os CWEs inclu\u00eddos, ent\u00e3o um exploits/impacto padr\u00e3o de 5.0 \u00e9 usado. Os CWEs not\u00e1veis inclu\u00eddos s\u00e3o CWE-1104: Uso de Componentes de Terceiros n\u00e3o Mantidos e os dois CWEs dos Top 10 de 2013 e 2017.</p>"},{"location":"pt-BR/A06_2021-Vulnerable_and_Outdated_Components/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>Voc\u00ea provavelmente est\u00e1 vulner\u00e1vel:</p> <ul> <li> <p>Se voc\u00ea n\u00e3o souber as vers\u00f5es de todos os componentes que usa     (tanto do lado do cliente quanto do lado do servidor). Isso     inclui componentes que voc\u00ea usa diretamente, bem como     depend\u00eancias aninhadas.</p> </li> <li> <p>Se o software for vulner\u00e1vel, sem suporte ou desatualizado.     Isso inclui o sistema operacional, servidor web/application,     sistema de gerenciamento de banco de dados (DBMS), aplica\u00e7\u00f5es,     APIs e todos os componentes, ambientes de tempo de execu\u00e7\u00e3o e bibliotecas.</p> </li> <li> <p>Se voc\u00ea n\u00e3o faz a varredura de vulnerabilidades regularmente e     n\u00e3o assina os boletins de seguran\u00e7a relacionados aos componentes que voc\u00ea usa.</p> </li> <li> <p>Se voc\u00ea n\u00e3o corrigir ou atualizar a plataforma, as estruturas e as depend\u00eancias     subjacentes de maneira oportuna e baseada em riscos. Isso geralmente acontece     em ambientes em que a corre\u00e7\u00e3o \u00e9 uma tarefa mensal ou trimestral sob controle     de altera\u00e7\u00f5es, deixando as organiza\u00e7\u00f5es abertas a dias ou meses de exposi\u00e7\u00e3o     desnecess\u00e1ria a vulnerabilidades corrigidas.</p> </li> <li> <p>Se os desenvolvedores de software n\u00e3o testarem a compatibilidade de    bibliotecas atualizadas, atualiza\u00e7\u00f5es ou com patches.</p> </li> <li> <p>Se voc\u00ea n\u00e3o proteger as configura\u00e7\u00f5es dos componentes     (consulte A05: 2021-Configura\u00e7\u00e3o Incorreta de Seguran\u00e7a).</p> </li> </ul>"},{"location":"pt-BR/A06_2021-Vulnerable_and_Outdated_Components/#como-prevenir","title":"Como Prevenir","text":"<p>Deve haver um processo de gerenciamento de depend\u00eancias para:</p> <ul> <li> <p>Remova depend\u00eancias n\u00e3o utilizadas, recursos, componentes, arquivos     e documenta\u00e7\u00e3o desnecess\u00e1rios.</p> </li> <li> <p>Atualizar continuamente um invent\u00e1rio com as vers\u00f5es dos componentes     do lado do cliente e do lado do servidor (por exemplo, estruturas,     bibliotecas) e suas depend\u00eancias usando ferramentas como versions,     OWASP Dependency Check, retire.js, etc. Monitore continuamente fontes     como Common Vulnerability and Exposures (CVE) e National Vulnerability     Database (NVD) para vulnerabilidades nos componentes. Use ferramentas     de an\u00e1lise de composi\u00e7\u00e3o de software para automatizar o processo.     Inscreva-se para receber alertas de e-mail sobre vulnerabilidades de     seguran\u00e7a relacionadas aos componentes que voc\u00ea usa.</p> </li> <li> <p>Obtenha componentes apenas de fontes oficiais por meio de links seguros.     Prefira pacotes assinados para reduzir a chance de incluir um componente     malicioso modificado (consulte     A08: 2021-Software e Falhas de Integridade de Dados).</p> </li> <li> <p>Monitore bibliotecas e componentes sem manuten\u00e7\u00e3o ou que n\u00e3o criem patches     de seguran\u00e7a para vers\u00f5es anteriores. Se o patch n\u00e3o for poss\u00edvel,     considere implantar um patch virtual para monitorar, detectar ou proteger     contra o problema descoberto.</p> </li> </ul> <p>Cada organiza\u00e7\u00e3o deve garantir um plano cont\u00ednuo de monitoramento, triagem e aplica\u00e7\u00e3o de atualiza\u00e7\u00f5es ou altera\u00e7\u00f5es de configura\u00e7\u00e3o durante a vida \u00fatil da aplica\u00e7\u00e3o ou portf\u00f3lio.</p>"},{"location":"pt-BR/A06_2021-Vulnerable_and_Outdated_Components/#exemplos-de-cenarios-de-ataque","title":"Exemplos de Cen\u00e1rios de Ataque","text":"<p>Cen\u00e1rio #1: Os componentes normalmente s\u00e3o executados com os mesmos privil\u00e9gios da pr\u00f3pria aplica\u00e7\u00e3o, portanto, as falhas em qualquer componente podem resultar em s\u00e9rio impacto. Essas falhas podem ser acidentais (por exemplo, erro de codifica\u00e7\u00e3o) ou intencionais (por exemplo, uma backdoor em um componente). Alguns exemplos de vulnerabilidades de componentes explor\u00e1veis descobertos s\u00e3o:</p> <ul> <li> <p>CVE-2017-5638, uma vulnerabilidade de execu\u00e7\u00e3o remota de c\u00f3digo     do Struts 2 que permite a execu\u00e7\u00e3o de c\u00f3digo arbitr\u00e1rio no servidor,     foi responsabilizada por viola\u00e7\u00f5es significativas.</p> </li> <li> <p>Embora a Internet das Coisas (IoT) seja frequentemente dif\u00edcil ou     imposs\u00edvel de corrigir, a import\u00e2ncia de corrigi-los pode ser     grande (por exemplo, dispositivos biom\u00e9dicos).</p> </li> </ul> <p>Existem ferramentas automatizadas para ajudar os invasores a encontrar sistemas n\u00e3o corrigidos ou configurados incorretamente. Por exemplo, o mecanismo de pesquisa Shodan IoT pode ajud\u00e1-lo a encontrar dispositivos que ainda sofrem com a vulnerabilidade Heartbleed corrigida em abril de 2014.</p>"},{"location":"pt-BR/A06_2021-Vulnerable_and_Outdated_Components/#referencias","title":"Refer\u00eancias","text":"<ul> <li> <p>OWASP Application Security Verification Standard: V1 Architecture,     design and threat modelling</p> </li> <li> <p>OWASP Dependency Check (for Java and .NET libraries)</p> </li> <li> <p>OWASP Testing Guide - Map Application Architecture (OTG-INFO-010)</p> </li> <li> <p>OWASP Virtual Patching Best Practices</p> </li> <li> <p>The Unfortunate Reality of Insecure Libraries</p> </li> <li> <p>MITRE Common Vulnerabilities and Exposures (CVE) search</p> </li> <li> <p>National Vulnerability Database (NVD)</p> </li> <li> <p>Retire.js for detecting known vulnerable JavaScript libraries</p> </li> <li> <p>Node Libraries Security Advisories</p> </li> <li> <p>Ruby Libraries Security Advisory Database and Tools</p> </li> <li> <p>https://safecode.org/publication/SAFECode_Software_Integrity_Controls0610.pdf</p> </li> </ul>"},{"location":"pt-BR/A06_2021-Vulnerable_and_Outdated_Components/#lista-dos-cwes-mapeados","title":"Lista dos CWEs Mapeados","text":"<p>CWE-937 OWASP Top 10 2013: Using Components with Known Vulnerabilities</p> <p>CWE-1035 2017 Top 10 A9: Using Components with Known Vulnerabilities</p> <p>CWE-1104 Use of Unmaintained Third Party Components</p>"},{"location":"pt-BR/A07_2021-Identification_and_Authentication_Failures/","title":"A07:2021 \u2013 Falhas de identifica\u00e7\u00e3o e autentica\u00e7\u00e3o","text":""},{"location":"pt-BR/A07_2021-Identification_and_Authentication_Failures/#fatores","title":"Fatores","text":"CWEs Mapeados Taxa de Incid\u00eancia M\u00e1xima Taxa de Incid\u00eancia M\u00e9dia Explora\u00e7\u00e3o M\u00e9dia Ponderada Impacto M\u00e9dio Ponderado Cobertura M\u00e1xima Cobertura M\u00e9dia Total de ocorr\u00eancias Total de CVEs 22 14.84% 2.55% 7.40 6.50 79.51% 45.72% 132,195 3,897"},{"location":"pt-BR/A07_2021-Identification_and_Authentication_Failures/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Anteriormente conhecida como Quebra de Autentica\u00e7\u00e3o, esta categoria caiu da segunda posi\u00e7\u00e3o e agora inclui Fraquezas e Enumera\u00e7\u00f5es Comuns (CWEs) relacionadas \u00e0 identifica\u00e7\u00e3o de falhas.  CWEs not\u00e1veis inclu\u00eddos s\u00e3o:  CWE-297: Valida\u00e7\u00e3o inadequada de certificado com inconsist\u00eancia de host, CWE-287: Autentica\u00e7\u00e3o inadequada, e CWE-384: Fixa\u00e7\u00e3o de sess\u00e3o.</p>"},{"location":"pt-BR/A07_2021-Identification_and_Authentication_Failures/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>Confirma\u00e7\u00e3o da identidade, autentica\u00e7\u00e3o e sess\u00e3o do usu\u00e1rio gerenciamento \u00e9 fundamental para proteger contra autentica\u00e7\u00e3o relacionada ataques. Pode haver pontos fracos de autentica\u00e7\u00e3o se o aplicativo:</p> <ul> <li> <p>Permite ataques automatizados, como preenchimento de credenciais, onde o      invasor tem uma lista de nomes de usu\u00e1rios e senhas v\u00e1lidos.</p> </li> <li> <p>Permite for\u00e7a bruta ou outros ataques automatizados.</p> </li> <li> <p>Permite senhas padr\u00e3o, fracas ou conhecidas, como \"Senha1\" ou \"admin/admin\".</p> </li> <li> <p>Usa recupera\u00e7\u00e3o de credenciais fraca ou ineficaz e esqueci a senha      processos, como \"respostas baseadas em conhecimento\", que n\u00e3o podem ser feitas      de modo seguro.</p> </li> <li> <p>Usa armazenamento de dados e senhas em texto simples, criptografadas ou com hash fraco (consulte     A02:2021-Falhas Criptogr\u00e1ficas).</p> </li> <li> <p>Possui multifator de autentica\u00e7\u00e3o ausente ou ineficaz.</p> </li> <li> <p>Exp\u00f5e o identificador de sess\u00e3o na URL.</p> </li> <li> <p>Reutiliza o identificador de sess\u00e3o ap\u00f3s o login bem-sucedido.</p> </li> <li> <p>N\u00e3o invalida corretamente IDs de sess\u00e3o. Sess\u00f5es de usu\u00e1rio ou      tokens de autentica\u00e7\u00e3o (principalmente tokens de logon \u00fanico (SSO)) n\u00e3o s\u00e3o      devidamente invalidado durante o logout ou um per\u00edodo de inatividade.</p> </li> </ul>"},{"location":"pt-BR/A07_2021-Identification_and_Authentication_Failures/#como-prevenir","title":"Como Prevenir","text":"<ul> <li> <p>Sempre que poss\u00edvel, implemente a autentica\u00e7\u00e3o multifator para evitar      preenchimento automatizado de credenciais, for\u00e7a bruta e credenciais roubadas</p> </li> <li> <p>N\u00e3o permita ou implante nenhuma credencial padr\u00e3o, especialmente para      usu\u00e1rios administradores.</p> </li> <li> <p>Implementar verifica\u00e7\u00f5es de senha fraca, como testar novas ou alteradas      contra a lista das 10.000 piores senhas.</p> </li> <li> <p>Alinhe o comprimento da senha, a complexidade e as pol\u00edticas de rota\u00e7\u00e3o com      Instituto Nacional de Padr\u00f5es e Tecnologia (NIST)      as diretrizes do 800-63b na se\u00e7\u00e3o 5.1.1 para segredos memorizados ou outras      pol\u00edticas de senha modernas e baseadas em evid\u00eancias.</p> </li> <li> <p>Certifique-se de que o registro, a recupera\u00e7\u00e3o de credenciais e os caminhos da API sejam      protegido contra ataques de enumera\u00e7\u00e3o de contas usando a mesma mensagens para todos os resultados.</p> </li> <li> <p>Limite ou atrase cada vez mais as tentativas de login com falha, mas tome cuidado para n\u00e3o criar um cen\u00e1rio de nega\u00e7\u00e3o de servi\u00e7o. Registrar todas as falhas e alertar os administradores quando o preenchimento de credenciais,       for\u00e7a bruta ou outros ataques s\u00e3o detectados.</p> </li> <li> <p>Use um gerenciador de sess\u00e3o integrado, seguro do lado do servidor que gere um      novo ID de sess\u00e3o aleat\u00f3ria com alta entropia ap\u00f3s o login. Identificador de sess\u00e3o      n\u00e3o deve estar na URL, deve ser armazenado com seguran\u00e7a e invalidado ap\u00f3s o logout.</p> </li> </ul>"},{"location":"pt-BR/A07_2021-Identification_and_Authentication_Failures/#exemplos-de-cenarios-de-ataque","title":"Exemplos de Cen\u00e1rios de Ataque","text":"<p>Cen\u00e1rio 1: O preenchimento de credenciais, que consiste no uso de listas de senhas conhecidas, \u00e9 um ataque comum.  Suponha que um aplicativo n\u00e3o implemente prote\u00e7\u00e3o automatizada contra amea\u00e7as ou preenchimento de credenciais.  Nesse caso, o aplicativo pode ser usado como um or\u00e1culo de senhas para determinar se as credenciais s\u00e3o v\u00e1lidas.</p> <p>Cen\u00e1rio 2: A maioria dos ataques de autentica\u00e7\u00e3o ocorre devido ao uso cont\u00ednuo de senhas como \u00fanico fator.  Antes considerada uma boa pr\u00e1tica, a rota\u00e7\u00e3o de senhas e os requisitos de complexidade encorajam os usu\u00e1rios a usar e reutilizar senhas fracas. As organiza\u00e7\u00f5es s\u00e3o recomendadas a interromper essas pr\u00e1ticas conforme a norma NIST 800-63 e usar autentica\u00e7\u00e3o de m\u00faltiplos fatores.</p> <p>Cen\u00e1rio 3: Os tempos limite da sess\u00e3o do aplicativo n\u00e3o est\u00e3o definidos corretamente.  Um usu\u00e1rio usa um computador p\u00fablico para acessar um aplicativo.  Em vez de selecionar \"sair\", o usu\u00e1rio simplesmente fecha a aba do navegador e sai.  Uma hora depois, um atacante usa o mesmo navegador, e o usu\u00e1rio ainda est\u00e1 autenticado.</p>"},{"location":"pt-BR/A07_2021-Identification_and_Authentication_Failures/#referencias","title":"Refer\u00eancias","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Digital Identity</p> </li> <li> <p>OWASP Application Security Verification Standard: V2 authentication</p> </li> <li> <p>OWASP Application Security Verification Standard: V3 Session Management</p> </li> <li> <p>OWASP Testing Guide: Identity,\u00a0Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Credential Stuffing</p> </li> <li> <p>OWASP Cheat Sheet: Forgot Password</p> </li> <li> <p>OWASP Cheat Sheet: Session Management</p> </li> <li> <p>OWASP Automated Threats Handbook</p> </li> <li> <p>NIST 800-63b: 5.1.1 Memorized Secrets</p> </li> </ul>"},{"location":"pt-BR/A07_2021-Identification_and_Authentication_Failures/#lista-dos-cwes-mapeados","title":"Lista dos CWEs Mapeados","text":"<p>CWE-255 Credentials Management Errors</p> <p>CWE-259 Use of Hard-coded Password</p> <p>CWE-287 Improper Authentication</p> <p>CWE-288 Authentication Bypass Using an Alternate Path or Channel</p> <p>CWE-290 Authentication Bypass by Spoofing</p> <p>CWE-294 Authentication Bypass by Capture-replay</p> <p>CWE-295 Improper Certificate Validation</p> <p>CWE-297 Improper Validation of Certificate with Host Mismatch</p> <p>CWE-300 Channel Accessible by Non-Endpoint</p> <p>CWE-302 Authentication Bypass by Assumed-Immutable Data</p> <p>CWE-304 Missing Critical Step in Authentication</p> <p>CWE-306 Missing Authentication for Critical Function</p> <p>CWE-307 Improper Restriction of Excessive Authentication Attempts</p> <p>CWE-346 Origin Validation Error</p> <p>CWE-384 Session Fixation</p> <p>CWE-521 Weak Password Requirements</p> <p>CWE-613 Insufficient Session Expiration</p> <p>CWE-620 Unverified Password Change</p> <p>CWE-640 Weak Password Recovery Mechanism for Forgotten Password</p> <p>CWE-798 Use of Hard-coded Credentials</p> <p>CWE-940 Improper Verification of Source of a Communication Channel</p> <p>CWE-1216 Lockout Mechanism Errors</p>"},{"location":"pt-BR/A08_2021-Software_and_Data_Integrity_Failures/","title":"A08:2021 \u2013 Falhas de Software e Integridade de Dados","text":""},{"location":"pt-BR/A08_2021-Software_and_Data_Integrity_Failures/#fatores","title":"Fatores","text":"CWEs Mapeados Taxa de Incid\u00eancia M\u00e1xima Taxa de Incid\u00eancia M\u00e9dia Explora\u00e7\u00e3o M\u00e9dia Ponderada Impacto M\u00e9dio Ponderado Cobertura M\u00e1xima Cobertura M\u00e9dia Total de ocorr\u00eancias Total de CVEs 10 16.67% 2.05% 6.94 7.94 75.04% 45.35% 47,972 1,152"},{"location":"pt-BR/A08_2021-Software_and_Data_Integrity_Failures/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Uma nova categoria para 2021 se concentra em fazer suposi\u00e7\u00f5es relacionadas a atualiza\u00e7\u00f5es de software,  dados cr\u00edticos e pipelines de CI/CD sem verificar a integridade.  Um dos impactos mais importantes ponderados pelos dados do  Common Vulnerability and Exposures/Common Vulnerability Scoring System (CVE/CVSS).  As Not\u00e1veis Enumera\u00e7\u00f5es de Fraquezas Comuns (CWEs) incluem: CWE-829: Inclus\u00e3o de funcionalidade de esfera de controle n\u00e3o confi\u00e1vel, CWE-494: Download de c\u00f3digo sem verifica\u00e7\u00e3o de integridade, e CWE-502: Desserializa\u00e7\u00e3o de dados n\u00e3o confi\u00e1veis.</p>"},{"location":"pt-BR/A08_2021-Software_and_Data_Integrity_Failures/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>Falhas na integridade de software e dados est\u00e3o relacionadas a c\u00f3digo e infraestrutura que n\u00e3o protegem contra viola\u00e7\u00f5es de integridade. Um exemplo disso \u00e9 quando um aplicativo depende de plugins, bibliotecas ou m\u00f3dulos de fontes, reposit\u00f3rios e redes de entrega de conte\u00fado (CDNs) n\u00e3o confi\u00e1veis.  Um pipeline de CI/CD inseguro pode introduzir a possibilidade de acesso n\u00e3o autorizado, c\u00f3digo malicioso ou comprometimento do sistema. Por \u00faltimo, muitos aplicativos agora incluem funcionalidade de atualiza\u00e7\u00e3o autom\u00e1tica, onde as atualiza\u00e7\u00f5es s\u00e3o baixadas sem verifica\u00e7\u00e3o de integridade suficiente e aplicadas ao aplicativo previamente confi\u00e1vel.  Atacantes podem potencialmente fazer upload de suas pr\u00f3prias atualiza\u00e7\u00f5es para serem distribu\u00eddas e executadas em todas as instala\u00e7\u00f5es. Outro exemplo \u00e9 quando objetos ou dados s\u00e3o codificados ou serializados em uma estrutura que um atacante pode ver e modificar, o que torna a deserializa\u00e7\u00e3o insegura.</p>"},{"location":"pt-BR/A08_2021-Software_and_Data_Integrity_Failures/#como-prevenir","title":"Como Prevenir","text":"<ul> <li> <p>Use assinaturas digitais ou mecanismos similares para verificar se o software ou os dados s\u00e3o provenientes da fonte esperada e n\u00e3o foram alterados.</p> </li> <li> <p>Certifique-se de que as bibliotecas e depend\u00eancias, como npm ou Maven, est\u00e3o consumindo reposit\u00f3rios confi\u00e1veis. Se voc\u00ea tiver um perfil de risco mais alto, considere hospedar um reposit\u00f3rio interno conhecido como bom que foi examinado.</p> </li> <li> <p>Certifique-se de que uma ferramenta de seguran\u00e7a da cadeia de suprimentos de software, como OWASP Dependency Check ou OWASP CycloneDX, \u00e9 usada para verificar se os componentes n\u00e3o cont\u00eam vulnerabilidades conhecidas.</p> </li> <li> <p>Certifique-se de que haja um processo de revis\u00e3o para mudan\u00e7as de c\u00f3digo e configura\u00e7\u00e3o para minimizar a chance de que c\u00f3digo ou configura\u00e7\u00e3o maliciosos possam ser introduzidos no seu pipeline de software.</p> </li> <li> <p>Certifique-se de que seu pipeline de CI/CD tenha uma segrega\u00e7\u00e3o adequada, configura\u00e7\u00e3o e controle de acesso para garantir a integridade do c\u00f3digo que flui atrav\u00e9s dos processos de constru\u00e7\u00e3o e implanta\u00e7\u00e3o.</p> </li> <li> <p>Certifique-se de que dados serializados n\u00e3o assinados ou n\u00e3o criptografados n\u00e3o sejam enviados a clientes n\u00e3o confi\u00e1veis sem algum tipo de verifica\u00e7\u00e3o de integridade ou assinatura digital para detectar adultera\u00e7\u00e3o ou retransmiss\u00e3o dos dados serializados.</p> </li> </ul>"},{"location":"pt-BR/A08_2021-Software_and_Data_Integrity_Failures/#exemplos-de-cenarios-de-ataque","title":"Exemplos de Cen\u00e1rios de Ataque","text":"<p>Cen\u00e1rio n\u00ba 1 Atualiza\u00e7\u00e3o sem assinatura: Muitos roteadores dom\u00e9sticos, set-top boxes, firmware de dispositivos e outros n\u00e3o verificam as atualiza\u00e7\u00f5es por meio de firmware assinado. Firmware n\u00e3o assinado \u00e9 um alvo crescente para ataques e espera-se que piore ainda mais. Isso \u00e9 uma grande preocupa\u00e7\u00e3o, pois muitas vezes n\u00e3o h\u00e1 mecanismo de remedia\u00e7\u00e3o a n\u00e3o ser corrigir em uma vers\u00e3o futura e esperar que as vers\u00f5es anteriores sejam descontinuadas.</p> <p>Cen\u00e1rio #2 Atualiza\u00e7\u00e3o maliciosa do SolarWinds: Estados-na\u00e7\u00f5es s\u00e3o conhecidos por atacar mecanismos de atualiza\u00e7\u00e3o, com um recente ataque not\u00e1vel sendo o ataque SolarWinds Orion. A empresa que desenvolve o software tinha processos de integridade de constru\u00e7\u00e3o e atualiza\u00e7\u00e3o seguros. Ainda assim, eles foram subvertidos, e por v\u00e1rios meses, a empresa distribuiu uma atualiza\u00e7\u00e3o maliciosa altamente direcionada para mais de 18.000 organiza\u00e7\u00f5es, das quais cerca de 100 foram afetadas. Esse \u00e9 um dos mais amplos e significativos viola\u00e7\u00f5es desse tipo na hist\u00f3ria.</p> <p>Cen\u00e1rio #3 Desserializa\u00e7\u00e3o Insegura: Uma aplica\u00e7\u00e3o React chama um conjunto de microsservi\u00e7os Spring Boot. Sendo programadores funcionais, eles tentaram garantir que seu c\u00f3digo seja imut\u00e1vel. A solu\u00e7\u00e3o que encontraram \u00e9 serializar o estado do usu\u00e1rio e pass\u00e1-lo de volta e para frente em cada solicita\u00e7\u00e3o. Um atacante percebe a assinatura do objeto Java \"rO0\" (em base64) e usa a ferramenta Java Serial Killer para obter execu\u00e7\u00e3o remota de c\u00f3digo no servidor de aplica\u00e7\u00e3o.</p>"},{"location":"pt-BR/A08_2021-Software_and_Data_Integrity_Failures/#referencias","title":"Refer\u00eancias","text":"<ul> <li> <p>[OWASP Cheat Sheet: Software Supply Chain Security](Em breve)</p> </li> <li> <p>[OWASP Cheat Sheet: Secure build and deployment](Em breve)</p> </li> <li> <p>OWASP Cheat Sheet: Infrastructure as Code </p> </li> <li> <p>OWASP Cheat Sheet: Deserialization</p> </li> <li> <p>SAFECode Software Integrity Controls</p> </li> <li> <p>A 'Worst Nightmare' Cyberattack: The Untold Story Of The SolarWinds Hack</p> </li> <li> <p>CodeCov Bash Uploader Compromise</p> </li> <li> <p>Securing DevOps by Julien Vehent</p> </li> </ul>"},{"location":"pt-BR/A08_2021-Software_and_Data_Integrity_Failures/#lista-dos-cwes-mapeados","title":"Lista dos CWEs Mapeados","text":"<p>CWE-345 Insufficient Verification of Data Authenticity</p> <p>CWE-353 Missing Support for Integrity Check</p> <p>CWE-426 Untrusted Search Path</p> <p>CWE-494 Download of Code Without Integrity Check</p> <p>CWE-502 Deserialization of Untrusted Data</p> <p>CWE-565 Reliance on Cookies without Validation and Integrity Checking</p> <p>CWE-784 Reliance on Cookies without Validation and Integrity Checking in a Security Decision</p> <p>CWE-829 Inclusion of Functionality from Untrusted Control Sphere</p> <p>CWE-830 Inclusion of Web Functionality from an Untrusted Source</p> <p>CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes</p>"},{"location":"pt-BR/A09_2021-Security_Logging_and_Monitoring_Failures/","title":"A09:2021 \u2013 Falhas de registro e monitoramento de seguran\u00e7a","text":""},{"location":"pt-BR/A09_2021-Security_Logging_and_Monitoring_Failures/#fatores","title":"Fatores","text":"CWEs Mapeados Taxa de Incid\u00eancia M\u00e1xima Taxa de Incid\u00eancia M\u00e9dia Explora\u00e7\u00e3o M\u00e9dia Ponderada Impacto M\u00e9dio Ponderado Cobertura M\u00e1xima Cobertura M\u00e9dia Total de ocorr\u00eancias Total de CVEs 4 19.23% 6.51% 6.87 4.99 53.67% 39.97% 53,615 242"},{"location":"pt-BR/A09_2021-Security_Logging_and_Monitoring_Failures/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O monitoramento e registro de seguran\u00e7a subiram da d\u00e9cima posi\u00e7\u00e3o na lista OWASP Top 10 de 2017 para a terceira posi\u00e7\u00e3o na pesquisa da comunidade Top 10. \u00c9 desafiador testar o monitoramento e registro, muitas vezes envolvendo entrevistas ou perguntando se ataques foram detectados durante um teste de penetra\u00e7\u00e3o. N\u00e3o h\u00e1 muitos dados CVE/CVSS para essa categoria, mas detectar e responder a viola\u00e7\u00f5es \u00e9 cr\u00edtico. Ainda assim, pode ser muito impactante para responsabilidade, visibilidade, alerta de incidentes e forense. Essa categoria se expande al\u00e9m da CWE-117 Neutraliza\u00e7\u00e3o inadequada de sa\u00edda para logs para incluir a CWE-223 Omiss\u00e3o de informa\u00e7\u00f5es relevantes para seguran\u00e7a, CWE-532 Inser\u00e7\u00e3o de informa\u00e7\u00f5es sens\u00edveis em arquivo de log e CWE-778 Registro insuficiente.</p>"},{"location":"pt-BR/A09_2021-Security_Logging_and_Monitoring_Failures/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>Retornando \u00e0 lista OWASP Top 10 de 2021, essa categoria ajuda a detectar, escalonar e responder a viola\u00e7\u00f5es ativas. Sem o monitoramento e registro, as viola\u00e7\u00f5es n\u00e3o podem ser detectadas. A falta de registro, detec\u00e7\u00e3o, monitoramento e resposta ativa ocorre sempre que:</p> <ul> <li> <p>Eventos audit\u00e1veis, como logins, logins falhos e transa\u00e7\u00f5es de alto valor, n\u00e3o s\u00e3o registrados.</p> </li> <li> <p>Avisos e erros geram mensagens de log inexistentes, inadequadas ou confusas.</p> </li> <li> <p>Logs de aplicativos e APIs n\u00e3o s\u00e3o monitorados quanto a atividades suspeitas.</p> </li> <li> <p>Logs s\u00e3o armazenados apenas localmente.</p> </li> <li> <p>Limiares de alerta apropriados e processos de escalonamento de resposta n\u00e3o est\u00e3o em vigor ou s\u00e3o eficazes.</p> </li> <li> <p>Testes de penetra\u00e7\u00e3o e varreduras por ferramentas de teste de seguran\u00e7a de aplicativos din\u00e2micos (DAST), como OWASP ZAP, n\u00e3o acionam alertas.</p> </li> <li> <p>A aplica\u00e7\u00e3o n\u00e3o pode detectar, escalonar ou alertar para ataques ativos em tempo real ou quase em tempo real.</p> </li> </ul> <p>Voc\u00ea est\u00e1 vulner\u00e1vel a vazamento de informa\u00e7\u00f5es tornando eventos de registro e alerta vis\u00edveis para um usu\u00e1rio ou um atacante  (veja A01:2021-Quebra de Controle de Acesso).</p>"},{"location":"pt-BR/A09_2021-Security_Logging_and_Monitoring_Failures/#como-prevenir","title":"Como Prevenir","text":"<p>Os desenvolvedores devem implementar alguns ou todos os controles a seguir, dependendo do risco da aplica\u00e7\u00e3o:</p> <ul> <li> <p>Garantir que todas as falhas de login, controle de acesso e valida\u00e7\u00e3o de entrada no lado do servidor possam ser registradas com contexto de usu\u00e1rio suficiente para identificar contas suspeitas ou maliciosas e mantidas por tempo suficiente para permitir an\u00e1lise forense atrasada.</p> </li> <li> <p>Garantir que os logs sejam gerados em um formato que as solu\u00e7\u00f5es de gerenciamento de logs possam facilmente consumir.</p> </li> <li> <p>Garantir que os dados de log sejam codificados corretamente para evitar inje\u00e7\u00f5es ou ataques nos sistemas de registro ou monitoramento.</p> </li> <li> <p>Garantir que transa\u00e7\u00f5es de alto valor tenham uma trilha de auditoria com controles de integridade para evitar adultera\u00e7\u00e3o ou exclus\u00e3o, como tabelas de banco de dados somente para adi\u00e7\u00e3o ou similares.</p> </li> <li> <p>As equipes de DevSecOps devem estabelecer monitoramento e alerta efetivos para que atividades suspeitas sejam detectadas e respondidas rapidamente.</p> </li> <li> <p>Estabelecer ou adotar um plano de resposta e recupera\u00e7\u00e3o de incidentes, como o National Institute of Standards and Technology (NIST) 800-61r2 ou posterior.</p> </li> </ul> <p>Existem estruturas de prote\u00e7\u00e3o de aplicativos comerciais e de c\u00f3digo aberto, como o OWASP ModSecurity Core Rule Set, e software de correla\u00e7\u00e3o de logs de c\u00f3digo aberto, como o Elasticsearch, Logstash, Kibana (ELK) stack, que possuem pain\u00e9is personalizados e alertas.</p>"},{"location":"pt-BR/A09_2021-Security_Logging_and_Monitoring_Failures/#exemplos-de-cenarios-de-ataque","title":"Exemplos de Cen\u00e1rios de Ataque","text":"<p>Cen\u00e1rio 1: O operador do site do provedor de plano de sa\u00fade infantil n\u00e3o conseguiu detectar uma viola\u00e7\u00e3o devido \u00e0 falta de monitoramento e registro. Uma parte externa informou ao provedor do plano de sa\u00fade que um invasor havia acessado e modificado milhares de registros de sa\u00fade sens\u00edveis de mais de 3,5 milh\u00f5es de crian\u00e7as. Uma revis\u00e3o p\u00f3s-incidente descobriu que os desenvolvedores do site n\u00e3o haviam abordado vulnerabilidades significativas. Como n\u00e3o houve registro ou monitoramento do sistema, a viola\u00e7\u00e3o de dados pode ter estado em andamento desde 2013, um per\u00edodo de mais de sete anos.</p> <p>Cen\u00e1rio 2: Uma grande companhia a\u00e9rea indiana teve uma viola\u00e7\u00e3o de dados envolvendo dados pessoais de milh\u00f5es de passageiros por mais de dez anos, incluindo dados de passaporte e cart\u00e3o de cr\u00e9dito. A viola\u00e7\u00e3o de dados ocorreu em um provedor de hospedagem em nuvem de terceiros, que notificou a companhia a\u00e9rea da viola\u00e7\u00e3o depois de algum tempo.</p> <p>Cen\u00e1rio n\u00ba 3: Uma grande companhia a\u00e9rea europeia sofreu uma viola\u00e7\u00e3o relat\u00e1vel do GDPR. A viola\u00e7\u00e3o foi supostamente causada por vulnerabilidades de seguran\u00e7a do aplicativo de pagamento exploradas por invasores, que colheram mais de 400.000 registros de pagamento de clientes. A companhia a\u00e9rea foi multada em 20 milh\u00f5es de libras como resultado pelo regulador de privacidade.</p>"},{"location":"pt-BR/A09_2021-Security_Logging_and_Monitoring_Failures/#referencias","title":"Refer\u00eancias","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Logging and Monitoring</p> </li> <li> <p>OWASP Application Security Verification Standard: V7 Logging and Monitoring</p> </li> <li> <p>OWASP Testing Guide: Testing for Detailed Error Code</p> </li> <li> <p>OWASP Cheat Sheet: Application Logging Vocabulary</p> </li> <li> <p>OWASP Cheat Sheet: Logging</p> </li> <li> <p>Data Integrity: Recovering from Ransomware and Other Destructive Events</p> </li> <li> <p>Data Integrity: Identifying and Protecting Assets Against Ransomware and Other Destructive Events</p> </li> <li> <p>Data Integrity: Detecting and Responding to Ransomware and Other Destructive Events</p> </li> </ul>"},{"location":"pt-BR/A09_2021-Security_Logging_and_Monitoring_Failures/#lista-dos-cwes-mapeados","title":"Lista dos CWEs Mapeados","text":"<p>CWE-117 Improper Output Neutralization for Logs</p> <p>CWE-223 Omission of Security-relevant Information</p> <p>CWE-532 Insertion of Sensitive Information into Log File</p> <p>CWE-778 Insufficient Logging</p>"},{"location":"pt-BR/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/","title":"A10:2021 \u2013 Falsifica\u00e7\u00e3o de Solicita\u00e7\u00e3o do Lado do Servidor (SSRF)","text":""},{"location":"pt-BR/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#fatores","title":"Fatores","text":"CWEs Mapeadas Taxa de Incid\u00eancia M\u00e1xima Taxa M\u00e9dia de Incid\u00eancia Explora\u00e7\u00e3o M\u00e9dia Ponderada Impacto M\u00e9dio Ponderado Cobertura M\u00e1xima M\u00e9dia de Cobertura Total de Ocorr\u00eancias Total de CVEs 1 2.72% 2.72% 8.28 6.72 67.72% 67.72% 9,503 385"},{"location":"pt-BR/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Esta categoria foi adicionada a partir de uma pesquisa com a comunidade levando o primeiro lugar no Top 10. Os dados mostram uma taxa de incid\u00eancia relativamente baixa com cobertura de teste acima da m\u00e9dia e classifica\u00e7\u00f5es de potencial de explora\u00e7\u00e3o e impacto acima da m\u00e9dia. Como acontece com novas entradas, provavelmente seja um \u00fanico ou pequeno grupo de CWEs para aten\u00e7\u00e3o e conscientiza\u00e7\u00e3o, a esperan\u00e7a \u00e9 que eles estejam sujeitos ao foco de estudo da comunidade e possamos incluir em uma categoria maior em uma edi\u00e7\u00e3o futura.</p>"},{"location":"pt-BR/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>As falhas de SSRF ocorrem sempre que um aplicativo da web busca um recurso remoto sem validar a URL fornecida pelo usu\u00e1rio. Ele permite que um invasor force o aplicativo a enviar uma solicita\u00e7\u00e3o criada para um destino inesperado, mesmo quando protegido por um firewall, VPN ou outro tipo de lista de controle de acesso \u00e0 rede (ACL).</p> <p>Como os aplicativos da web modernos fornecem aos usu\u00e1rios finais recursos convenientes, buscar uma URL se torna um cen\u00e1rio comum. Como resultado, a incid\u00eancia de SSRF est\u00e1 aumentando. Al\u00e9m disso, a gravidade do SSRF est\u00e1 se tornando mais alta devido aos servi\u00e7os em nuvem e \u00e0 complexidade crescente das arquiteturas.</p>"},{"location":"pt-BR/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#como-previnir","title":"Como Previnir","text":"<p>Os desenvolvedores podem evitar o SSRF implementando alguns ou todos os seguintes controles de defesa em profundidade:</p>"},{"location":"pt-BR/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#para-a-camada-de-rede","title":"Para a Camada de Rede","text":"<ul> <li>Segmente a funcionalidade de acesso a recursos remotos em redes separadas para reduzir o impacto de SSRF;</li> <li>Imponha pol\u00edticas de firewall para \u201cnegar por padr\u00e3o\u201d ou regras de controle de acesso \u00e0 rede para bloquear todo o tr\u00e1fego da intranet, exceto o essencial.</li> <li>Dicas: ~ Estabele\u00e7a uma propriedade e um ciclo de vida para regras de firewall baseadas em aplicativos. ~ Registrar todos os fluxos de rede aceitos e bloqueados em firewalls. (veja A09:2021-Monitoramento de Falhas e Registros de Seguran\u00e7a).</li> </ul>"},{"location":"pt-BR/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#para-a-camada-de-aplicacao","title":"Para a Camada de Aplica\u00e7\u00e3o:","text":"<ul> <li>Higienize e valide todos os dados de entrada fornecidos pelo cliente;</li> <li>Aplique o esquema de URL, porta e destino com uma lista de permiss\u00f5es positiva;</li> <li>N\u00e3o envie a resposta crua ao cliente</li> <li>Desabilite redirecionamentos de HTTP;</li> <li>Tenha cuidado com a consist\u00eancia URL contra ataques que mirem a resolu\u00e7\u00e3o de nomes atrav\u00e9s do DNS e CWE-367.</li> </ul> <p>N\u00e3o reduza o SSRF por meio do uso de uma lista de nega\u00e7\u00e3o ou express\u00e3o regular. Os invasores t\u00eam listas gigantes de poss\u00edveis entradas, ferramentas e habilidades para contornar as listas de nega\u00e7\u00e3o.</p>"},{"location":"pt-BR/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#medidas-adicionais-a-considerar","title":"Medidas Adicionais a Considerar:","text":"<ul> <li>N\u00e3o implemente outros servi\u00e7os de seguran\u00e7a relevantes em sistemas frontais (por exemplo, OpenID). Controle o tr\u00e1fego local nesses sistemas (por exemplo, localhost)</li> <li>Para frontends com grupos de usu\u00e1rios dedicados e gerenci\u00e1veis, use criptografia de rede (por exemplo, VPNs) em sistemas independentes para as necessidades de prote\u00e7\u00e3o muito altas.</li> </ul>"},{"location":"pt-BR/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#cenario-de-exemplo-de-um-ataque","title":"Cen\u00e1rio de exemplo de um ataque","text":"<p>Os invasores podem usar SSRF para atacar sistemas protegidos por firewalls de aplicativos da web, firewalls ou ACLs de rede, usando cen\u00e1rios como:</p> <p>Cen\u00e1rio #1: Varredura de portas em servidores internos - se a arquitetura de rede n\u00e3o for segmentada, os invasores podem mapear as redes internas e determinar se as portas est\u00e3o abertas ou fechadas em servidores internos a partir dos resultados da conex\u00e3o ou do tempo decorrido para conectar ou rejeitar as conex\u00f5es de carga SSRF.</p> <p>Cen\u00e1rio #2: Exposi\u00e7\u00e3o de dados confidenciais - os invasores podem acessar arquivos locais, como ou servi\u00e7os internos, para obter informa\u00e7\u00f5es confidenciais, como <code>file:///etc/passwd</code> e <code>http://localhost:28017/</code>.</p> <p>Cen\u00e1rio #3: Acesse o armazenamento de metadados de servi\u00e7os em nuvem - a maioria dos provedores de nuvem possui armazenamento de metadados, como <code>http://169.254.169.254/</code>. Um invasor pode ler os metadados para obter informa\u00e7\u00f5es confidenciais.</p> <p>Cen\u00e1rio #4: Comprometimento dos servi\u00e7os internos - O invasor pode abusar dos servi\u00e7os internos para conduzir outros ataques, como Execu\u00e7\u00e3o Remota de C\u00f3digo/Remote Code Execution (RCE) ou Nega\u00e7\u00e3o de Servi\u00e7o/Denial of Service (DoS). </p>"},{"location":"pt-BR/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#referencias","title":"Refer\u00eancias","text":"<ul> <li> <p>OWASP - Server-Side Request Forgery Prevention Cheat     Sheet</p> </li> <li> <p>PortSwigger - Server-side request forgery     (SSRF)</p> </li> <li> <p>Acunetix - What is Server-Side Request Forgery     (SSRF)?</p> </li> <li> <p>SSRF     bible</p> </li> <li> <p>A New Era of SSRF - Exploiting URL Parser in Trending Programming     Languages!</p> </li> </ul>"},{"location":"pt-BR/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#lista-de-cwes-mapeadas","title":"Lista de CWEs mapeadas","text":"<p>CWE-918 Server-Side Request Forgery (SSRF)</p>"},{"location":"pt-BR/A11_2021-Next_Steps/","title":"A11:2021 - Pr\u00f3ximos Passos","text":"<p>Por padr\u00e3o, o OWASP Top 10 \u00e9 essencialmente limitado aos dez riscos mais significativos. Cada OWASP Top 10 tem riscos \"prestes\" \u00e0 serem considerados para inclus\u00e3o, mas no final, eles n\u00e3o entraram na lista. N\u00e3o importa como tentamos interpretar ou manipular os dados, os outros riscos eram mais prevalentes e impactantes.</p> <p>Organiza\u00e7\u00f5es que trabalham em dire\u00e7\u00e3o a um programa maduro de appsec, consultorias de seguran\u00e7a ou fornecedores de ferramentas que desejam expandir a cobertura de suas ofertas, os tr\u00eas problemas seguintes valem bem o esfor\u00e7o para identificar e remediar.</p>"},{"location":"pt-BR/A11_2021-Next_Steps/#problemas-de-qualidade-do-codigo","title":"Problemas de qualidade do c\u00f3digo","text":"CWEs Mapeadas\u00a0 Taxa de Incid\u00eancia M\u00e1xima\u00a0 Taxa M\u00e9dia de Incid\u00eancia\u00a0 Explora\u00e7\u00e3o M\u00e9dia Ponderada\u00a0 Impacto M\u00e9dio Ponderado\u00a0 Cobertura M\u00e1xima\u00a0 M\u00e9dia de Cobertura\u00a0 Total de Ocorr\u00eancias\u00a0 Total de CVEs 38 49.46% 2.22% 7.1 6.7 60.85% 23.42% 101736 7564 <ul> <li> <p>Descri\u00e7\u00e3o. Quest\u00f5es de qualidade de c\u00f3digo incluem problemas conhecidos ou padr\u00f5es de seguran\u00e7a, reutiliza\u00e7\u00e3o de vari\u00e1veis para m\u00faltiplos prop\u00f3sitos, exposi\u00e7\u00e3o de informa\u00e7\u00f5es confidenciais na sa\u00edda de depura\u00e7\u00e3o, erros de soma por desvios, tempo de verifica\u00e7\u00e3o/tempo de uso (TOCTOU), erros de convers\u00e3o assinados ou n\u00e3o assinados, user after free e mais. A marca desta se\u00e7\u00e3o \u00e9 que eles normalmente podem ser identificados com sinalizadores de compilador rigorosos, ferramentas de an\u00e1lise de c\u00f3digo est\u00e1tico e plugins de linter em sua IDE. As linguagens modernas, por padr\u00e3o, eliminaram muitos destes problemas, como o conceito de propriedade e empr\u00e9stimo de mem\u00f3ria do Rust, o padr\u00e3o de processos do Rust e o tipo r\u00edgido de verifica\u00e7\u00e3o de limites do Go.</p> </li> <li> <p>Como previnir. Habilite e use as op\u00e7\u00f5es de an\u00e1lise de c\u00f3digo est\u00e1tico do seu editor de c\u00f3digo. Considere usar uma ferramenta de an\u00e1lise de c\u00f3digo est\u00e1tico. Considere se seria poss\u00edvel usar ou migrar para uma linguagem ou framework que elimina algumas classes de erros, como Rust ou Go.</p> </li> <li> <p>Exemplo de cen\u00e1rio de ataque. Um atacante pode obter ou atualizar informa\u00e7\u00f5es realizando uma condi\u00e7\u00e3o de corrida usando uma vari\u00e1vel estaticamente compartilhada em v\u00e1rios t\u00f3picos.</p> </li> <li> <p>Refer\u00eancias</p> <ul> <li> <p>OWASP Code Review Guide</p> </li> <li> <p>Google Code Review Guide</p> </li> </ul> </li> </ul>"},{"location":"pt-BR/A11_2021-Next_Steps/#negacao-de-servico","title":"Nega\u00e7\u00e3o de servi\u00e7o","text":"CWEs Mapeadas\u00a0 Taxa de Incid\u00eancia M\u00e1xima\u00a0 Taxa M\u00e9dia de Incid\u00eancia\u00a0 Explora\u00e7\u00e3o M\u00e9dia Ponderada\u00a0 Impacto M\u00e9dio Ponderado\u00a0 Cobertura M\u00e1xima\u00a0 M\u00e9dia de Cobertura\u00a0 Total de Ocorr\u00eancias\u00a0 Total de CVEs 8 17.54% 4.89% 8.3 5.9 79.58% 33.26% 66985 973 <ul> <li> <p>Descri\u00e7\u00e3o. Nega\u00e7\u00e3o de servi\u00e7o \u00e9 sempre poss\u00edvel dado      recursos suficientes. No entanto, as pr\u00e1ticas de projeto e codifica\u00e7\u00e3o t\u00eam um      impacto significativo na magnitude da nega\u00e7\u00e3o de servi\u00e7o.      Suponha que qualquer pessoa com o link possa acessar um arquivo grande ou uma      transa\u00e7\u00e3o que utilize muitos recursos computacionais em cada p\u00e1gina. Neste      caso, a nega\u00e7\u00e3o de servi\u00e7o requer menos esfor\u00e7o para se concretizar.</p> </li> <li> <p>Como prevenir. C\u00f3digo de teste de desempenho para CPU, E/S e utiliza\u00e7\u00e3o de mem\u00f3ria,      re-arquitetar, otimizar ou armazenar em cache opera\u00e7\u00f5es que exigem muito processamento.      Considere os controles de acesso para objetos maiores para garantir que apenas      indiv\u00edduos autorizados podem acessar arquivos ou objetos enormes ou servir      eles por uma rede de cache de borda.</p> </li> <li> <p>Exemplos de cen\u00e1rios de ataque. Um invasor pode determinar que uma      opera\u00e7\u00e3o leva de 5 a 10 segundos para ser conclu\u00edda. Ao executar quatro      opera\u00e7\u00f5es simult\u00e2neas, o servidor parece parar de responder.      O invasor realiza ent\u00e3o 1.000 requisi\u00e7\u00f5es e coloca todo o sistema offline.</p> </li> <li> <p>Refer\u00eancias</p> <ul> <li> <p>OWASP Cheet Sheet: Denial of Service</p> </li> <li> <p>OWASP Attacks: Denial of Service</p> </li> </ul> </li> </ul>"},{"location":"pt-BR/A11_2021-Next_Steps/#erro-de-gerenciamento-de-memoria","title":"Erro de gerenciamento de mem\u00f3ria","text":"CWEs Mapeadas\u00a0 Taxa de Incid\u00eancia M\u00e1xima\u00a0 Taxa M\u00e9dia de Incid\u00eancia\u00a0 Explora\u00e7\u00e3o M\u00e9dia Ponderada\u00a0 Impacto M\u00e9dio Ponderado\u00a0 Cobertura M\u00e1xima\u00a0 M\u00e9dia de Cobertura\u00a0 Total de Ocorr\u00eancias\u00a0 Total de CVEs 14 7.03% 1.16% 6.7 8.1 56.06% 31.74% 26576 16184 <ul> <li> <p>Descri\u00e7\u00e3o. As aplica\u00e7\u00f5es web tendem a ser escritas em linguagens de mem\u00f3ria gerenciada,     como Java, .NET ou nodejs (JavaScript ou TypeScript). No entanto,      essas linguagens s\u00e3o escritas em linguagens de sistema que apresentam problemas de gerenciamento de mem\u00f3ria,     como estouros de buffers ou de heap, user after free, estouro de inteiros e muito mais.     Ao longo dos anos, houve muitas fugas de sandbox que provam que,     apenas porque a linguagem da aplica\u00e7\u00e3o web \u00e9 nominalmente \"segura\" para a mem\u00f3ria, as suas bases n\u00e3o s\u00e3o.</p> </li> <li> <p>Como prevenir. Muitas APIs modernas agora s\u00e3o escritas em linguagens seguras de mem\u00f3ria,     como Rust ou Go. No caso do Rust, a seguran\u00e7a da mem\u00f3ria \u00e9 um recurso crucial da linguagem.     Para c\u00f3digos existentes, o uso de flags de compilador estritas, tipagem forte,     an\u00e1lise de c\u00f3digo est\u00e1tica e testes de muta\u00e7\u00e3o podem ser ben\u00e9ficos para identificar vazamentos de mem\u00f3ria,     sobrecargas de matriz e muito mais.</p> </li> <li> <p>Exemplos de cen\u00e1rios de ataque. Os estouros de buffer e heap t\u00eam sido um recurso favorito dos invasores ao longo dos anos.     O invasor envia dados para um programa, que armazena em um buffer de pilha subdimensionado.     Como resultado, as informa\u00e7\u00f5es da pilha de chamadas s\u00e3o substitu\u00eddas, incluindo o ponteiro de retorno da fun\u00e7\u00e3o.     Os dados definem o valor do ponteiro de retorno de modo que, quando a fun\u00e7\u00e3o retorna, transfere o controle.</p> </li> <li> <p>Refer\u00eancias</p> <ul> <li> <p>OWASP Vulnerabilities: Buffer Overflow</p> </li> <li> <p>OWASP Attacks: Buffer Overflow</p> </li> <li> <p>Science Direct: Integer Overflow</p> </li> </ul> </li> </ul>"},{"location":"zh-Hant/","title":"OWASP Top 10 2021 \u4ecb\u7d39","text":"<p>\u6b22\u8fce\u4f86\u5230\u6700\u65b0\u7248\u672c\u7684 OWASP Top 10\uff01! OWASP Top 10 2021 \u662f\u4e00\u4e2a\u5168\u65b0\u7684\u540d\u5355\uff0c\u5305\u542b\u4e86\u4f60\u53ef\u4ee5\u6253\u5370\u4e0b\u4f86\u7684\u65b0\u56fe\u793a\u8bf4\u660e\uff0c\u82e5\u6709\u9700\u8981\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u4ece\u6211\u4eec\u7684\u7f51\u9875\u4e0a\u9762\u4e0b\u8f7d\u3002</p> <p>\u5728\u6b64\u6211\u4eec\u60f3\u5bf9\u6240\u6709\u8d21\u732e\u4e86\u4ed6\u4eec\u65f6\u95f4\u548c\u8d44\u6599\u7684\u4eba\u7d66\u4e88\u6781\u5927\u7684\u611f\u8c22\u3002\u6ca1\u6709\u4f60\u4eec\uff0c\u8fd9\u4e00\u4e2a\u65b0\u7248\u672c\u4e0d\u4f1a\u4ea7\u751f\u3002\u8c22\u8c22\u3002</p>"},{"location":"zh-Hant/#top-10-for-2021","title":"Top 10 for 2021 \u6709\u4ec0\u4e48\u65b0\u7684\u53d8\u5316\uff1f","text":"<p>\u8fd9\u6b21\u5728 OWASP Top 10 for 2021 \u6709\u4e09\u4e2a\u5168\u65b0\u7684\u5206\u7c7b\uff0c\u6709\u56db\u4e2a\u5206\u7c7b\u6709\u505a\u540d\u79f0\u548c\u8303\u56f4\u7684\u4fee\u6b63\uff0c\u5e76\u6709\u5c06\u4e00\u4e9b\u7c7b\u522b\u505a\u5408\u5e76\u3002</p> <p></p> <p>A01:2021-\u6743\u9650\u63a7\u5236\u5931\u6548 \u4ece\u7b2c\u4e94\u540d\u79fb\u4e0a\u4f86; 94% \u88ab\u6d4b\u8bd5\u7684\u5e94\u7528\u7a0b\u5f0f\u90fd\u6709\u9a8c\u8bc1\u5230\u67d0\u79cd\u7c7b\u522b\u6743\u9650\u63a7\u5236\u5931\u6548\u7684\u95ee\u9898\u3002\u5728\u6743\u9650\u63a7\u5236\u5931\u6548\u8fd9\u4e2a\u7c7b\u522b\u4e2d\u88ab\u5bf9\u5e94\u5230\u7684 34 \u4e2a CWEs \u5728\u9a8c\u6d4b\u8d44\u6599\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u90fd\u9ad8\u4e8e\u5176\u4ed6\u7684\u5f31\u70b9\u7c7b\u522b\u3002</p> <p>A02:2021-\u52a0\u5bc6\u673a\u5236\u5931\u6548 \u63d0\u5347\u4e00\u540d\u5230\u7b2c\u4e8c\u540d\uff0c\u5728\u4e4b\u524d\u4e3a \u654f\u611f\u8d44\u6599\u5916\u66dd\uff0c\u5728\u6b64\u5b9a\u4e49\u4e0b\u6bd4\u8f83\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u5e7f\u6cdb\u7684\u95ee\u9898\u800c\u975e\u6839\u672c\u539f\u56e0\u3002\u5728\u6b64\u91cd\u65b0\u5b9a\u4e49\u5e76\u5c06\u95ee\u9898\u6838\u5fc3\u5b9a\u4e49\u5728\u52a0\u5bc6\u673a\u5236\u7684\u5931\u8d25\uff0c\u5e76\u56e0\u6b64\u9020\u6210\u654f\u611f\u6027\u8d44\u6599\u5916\u6cc4\u6216\u662f\u7cfb\u7d71\u88ab\u7834\u574f\u3002</p> <p>A03:2021-\u6ce8\u5165\u5f0f\u653b\u51fb \u4e0b\u6ed1\u5230\u7b2c\u4e09\u540d\u300294% \u88ab\u6d4b\u8bd5\u7684\u5e94\u7528\u7a0b\u5f0f\u90fd\u6709\u9a8c\u6d4b\u5230\u67d0\u79cd\u7c7b\u5225\u6ce8\u5165\u5f0f\u653b\u51fb\u7684\u95ee\u9898\u3002\u5728\u6ce8\u5165\u5f0f\u653b\u51fb\u8fd9\u4e2a\u7c7b\u5225\u4e2d\u88ab\u5bf9\u5e94\u5230\u7684 33 \u4e2a CWEs \u5728\u9a8c\u6d4b\u8d44\u6599\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e3a\u5f31\u70b9\u95ee\u9898\u7684\u7b2c\u4e8c\u9ad8\u3002\u8de8\u7ad9\u811a\u672c\u653b\u51fb\u73b0\u5728\u5728\u65b0\u7248\u672c\u5c5e\u4e8e\u8fd9\u4e2a\u7c7b\u5225\u3002</p> <p>A04:2021-\u4e0d\u5b89\u5168\u8bbe\u8ba1 \u8fd9\u662f 2021 \u5e74\u7248\u672c\u7684\u65b0\u7c7b\u5225\uff0c\u5e76\u7279\u5225\u805a\u7126\u5728\u8bbe\u8ba1\u76f8\u5173\u7684\u7f3a\u9677\u3002\u5982\u679c\u6211\u4eec\u771f\u7684\u5e0c\u671b\u8ba9\u6574\u4e2a\u4ea7\u4e1a\"\u5411\u5de6\u79fb\u52a8\"\uff0a\u6ce8\u4e00\uff0a\uff0c\u90a3\u6211\u4eec\u5fc5\u987b\u8fdb\u4e00\u6b65\u7684\u5f80\u5a01\u80c1\u5efa\u6a21\uff0c\u5b89\u5168\u8bbe\u8ba1\u6a21\u5757\u7684\u89c2\u5ff5\uff0c\u548c\u5b89\u5168\u53c3\u8003\u67b6\u6784\u524d\u8fdb\u3002</p> <p>\uff0a\u6ce8\u4e00: Move Left \u4e8e\u82f1\u6587\u539f\u6587\u4e2d\u4ee3\u8868\u5728\u8f6f\u4ef6\u5f00\u53d1\u53ca\u4ea4\u4ed8\u8fc7\u7a0b\u4e2d\uff0c\u5728\u65e9\u671f\u627e\u51fa\u53ca\u5904\u7406\u76f8\u5173\u95ee\u9898\uff0c\u540c Shift Left Testing\u3002\uff0a</p> <p>A05:2021-\u5b89\u5168\u8bbe\u5b9a\u7f3a\u9677 \u4ece\u4e0a\u4e00\u7248\u672c\u7684\u7b2c\u516d\u540d\u79fb\u52a8\u4e0a\u4f86\u300290% \u88ab\u6d4b\u8bd5\u7684\u5e94\u7528\u7a0b\u5f0f\u90fd\u6709\u9a8c\u6d4b\u5230\u67d0\u79cd\u7c7b\u5225\u7684\u5b89\u5168\u8bbe\u5b9a\u7f3a\u9677\u3002\u5728\u66f4\u591a\u7684\u8f6f\u4ef6\u5f80\u66f4\u9ad8\u5ea6\u548c\u6709\u5f39\u6027\u7684\u8bbe\u5b9a\u79fb\u52a8\uff0c\u6211\u4eec\u5e76\u4e0d\u610f\u5916\u8fd9\u4e2a\u7c7b\u5225\u7684\u95ee\u9898\u5f80\u4e0a\u79fb\u52a8\u3002\u5728\u524d\u7248\u672c\u4e2d\u7684 XML \u5916\u90e8\u5b9e\u4f53\u6ce8\u5165\u653b\u51fb \uff08XML External Entities\uff09\u73b0\u5728\u5c5e\u4e8e\u8fd9\u4e2a\u7c7b\u5225\u3002</p> <p>A06:2021-\u5371\u9669\u6216\u8fc7\u65e7\u7684\u7ec4\u4ef6 \u5728\u4e4b\u524d\u6807\u9898\u4e3a \u4f7f\u7528\u6709\u5df2\u77e5\u5f31\u70b9\u7684\u7ec4\u4ef6\u3002\u5728\u672c\u6b21\u7248\u672c\u4e2d\u4e8e\u4e1a\u754c\u95ee\u5377\u4e2d\u6392\u540d\u7b2c\u4e8c\uff0c\u4f46\u4e5f\u6709\u8db3\u591f\u7684\u7edf\u8ba1\u8d44\u6599\u8ba9\u5b83\u53ef\u4ee5\u8fdb\u5165 Top 10\u3002\u8fd9\u4e2a\u7c7b\u5225\u4ece 2017 \u7248\u672c\u7684\u7b2c\u4e5d\u540d\u722c\u5347\u5230\u7b2c\u516d\uff0c\u4e5f\u662f\u6211\u4eec\u6301\u7eed\u6323\u624e\u505a\u6d4b\u8bd5\u548c\u8bc4\u4f30\u98ce\u9669\u7684\u7c7b\u5225\u3002\u8fd9\u4e5f\u662f\u552f\u4e00\u4e00\u4e2a\u6c92\u6709\u4efb\u4f55 CVE \u80fd\u88ab\u5bf9\u5e94\u5230 CWE \u5167\u7684\u7c7b\u5225\uff0c\u6240\u4ee5\u9884\u8bbe\u7684\u5a01\u80c1\u53ca\u5f71\u54cd\u6743\u91cd\u5728\u8fd9\u7c7b\u5225\u7684\u5206\u6570\u4e0a\u88ab\u9884\u8bbe\u4e3a 5.0\u3002</p> <p>A07:2021-\u8ba4\u8bc1\u53ca\u9a8c\u8bc1\u673a\u5236\u5931\u6548 \u5728\u4e4b\u524d\u6807\u9898\u4e3a \u9519\u8bef\u7684\u8ba4\u8bc1\u673a\u5236\u3002\u5728\u672c\u6b21\u7248\u672c\u4e2d\u7531\u7b2c\u4e8c\u540d\u4e0b\u6ed1\u81f3\u6b64\uff0c\u5e76\u540c\u65f6\u5305\u542b\u4e86\u5c06\u8ba4\u8bc1\u76f8\u5173\u7f3a\u5931\u7684 CWE \u5305\u542b\u5728\u5167\u3002\u8fd9\u4e2a\u7c7b\u5225\u4ecd\u662f Top 10 \u4e0d\u53ef\u7f3a\u5c11\u7684\u4e00\u73af\uff0c\u4f46\u540c\u65f6\u4e5f\u6709\u53d1\u73b0\u73b0\u5728\u6807\u51c6\u5316\u7684\u67b6\u6784\u6709\u534f\u52a9\u964d\u4f4e\u6b21\u98ce\u9669\u53d1\u751f\u673a\u7387\u3002</p> <p>A08:2021-\u8f6f\u4ef6\u53ca\u8d44\u6599\u5b8c\u6574\u6027\u5931\u6548 \u8fd9\u662f 2021 \u5e74\u7248\u672c\u5168\u65b0\u7684\u7c7b\u5225\uff0c\u5e76\u5728\u8f6f\u4ef6\u66f4\u65b0\uff0c\u654f\u611f\u53ca\u91cd\u8981\u8d44\u6599\uff0c\u548c CI/CD \u7ba1\u9053\u4e2d\u5e76\u6c92\u6709\u505a\u5b8c\u6574\u6027\u7684\u786e\u8ba4\u4e3a\u524d\u63d0\u505a\u5047\u8bbe\u5e76\u8fdb\u884c\u8bc4\u4f30\u3002\u5728\u8bc4\u4f30\u4e2d\u5f71\u54cd\u6743\u91cd\u6700\u9ad8\u5206\u7684 CVE/CVSS \u8d44\u6599\u90fd\u4e0e\u8fd9\u7c7b\u5225\u4e2d\u7684 10 \u4e2a CWE \u5bf9\u5e94\u5230\u30022017 \u5e74\u7248\u672c\u4e2d\u4e0d\u5b89\u5168\u7684\u53cd\u5e8f\u5217\u5316\u73b0\u5728\u88ab\u5408\u5e76\u81f3\u6b64\u7c7b\u5225\u3002</p> <p>A09:2021-\u5b89\u5168\u8bb0\u5f55\u53ca\u76d1\u63a7\u5931\u6548 \u5728\u4e4b\u524d\u4e3a\u4e0d\u5b8c\u6574\u7684\u8bb0\u5f55\u53ca\u76d1\u63a7\u5e76\u7eb3\u5165\u5728\u4e1a\u754c\u95ee\u5377\u4e2d\u5728\u672c\u6b21\u5217\u540d\u4e3a\u7b2c\u4e09\u540d\u5e76\u4ece\u4e4b\u524d\u7684\u7b2c\u5341\u540d\u4e0a\u79fb\u3002\u8fd9\u4e2a\u7c7b\u5225\u5c06\u6269\u5145\u53bb\u7eb3\u5165\u66f4\u591a\u76f8\u5173\u7684\u7f3a\u5931\uff0c\u4f46\u8fd9\u4e5f\u662f\u76f8\u5f53\u96be\u53bb\u9a8c\u8bc1\uff0c\u5e76\u6c92\u6709\u76f8\u5f53\u591a\u7684 CVE/CVSS \u8d44\u6599\u53ef\u4ee5\u4f50\u8bc1\u3002\u4f46\u662f\u5728\u8fd9\u4e2a\u7c7b\u5225\u4e2d\u7684\u7f3a\u5931\u4f1a\u76f4\u63a5\u5f71\u54cd\u5230\u6574\u4f53\u5b89\u5168\u7684\u53ef\u89c6\u6027\uff0c\u4e8b\u4ef6\u544a\u8b66\u53ca\u53d6\u8bc1\u3002</p> <p>A10:2021-\u670d\u52a1\u5668\u7aef\u8bf7\u6c42\u4f2a\u9020 \u8fd9\u4e2a\u7c7b\u5225\u662f\u5728\u4e1a\u754c\u95ee\u5377\u6392\u540d\u7b2c\u4e00\u540d\uff0c\u5e76\u5728\u6b64\u7248\u672c\u5167\u7eb3\u5165\u3002\u7531\u8d44\u6599\u663e\u793a\u6b64\u95ee\u9898\u6709\u8f83\u4f4e\u88ab\u9a8c\u6d4b\u6b21\u6570\u548c\u8303\u56f4\uff0c\u4f46\u6709\u9ad8\u4e8e\u5e73\u5747\u7684\u5a01\u80c1\u53ca\u5f71\u54cd\u6743\u91cd\u6bd4\u7387\u3002\u8fd9\u4e2a\u7c7b\u5225\u7684\u51fa\u73b0\u4e5f\u662f\u56e0\u4e3a\u4e1a\u754c\u4e13\u5bb6\u91cd\u590d\u7533\u660e\u8fd9\u7c7b\u5225\u7684\u95ee\u9898\u76f8\u5f53\u91cd\u8981\uff0c\u5373\u4f7f\u5728\u672c\u6b21\u8d44\u6599\u4e2d\u5e76\u6c92\u6709\u8db3\u591f\u7684\u8d44\u6599\u53bb\u663e\u793a\u8fd9\u4e2a\u95ee\u9898\u3002</p>"},{"location":"zh-Hant/#_1","title":"\u5206\u6790\u65b9\u6cd5","text":"<p>\u672c\u6b21 Top 10 \u7684\u9009\u62e9\u65b9\u5f0f\u6bd4\u4ee5\u5f80\u66f4\u91cd\u89c6\u8d44\u6599\u5206\u6790\uff0c\u4f46\u5e76\u4e0d\u662f\u5b8c\u5168\u4ee5\u8d44\u6599\u5206\u6790\u4e3a\u4e3b\u3002\u6211\u4eec\u4ece\u8d44\u6599\u5206\u6790\u4e2d\u6311\u9009\u4e86\u516b\u4e2a\u98ce\u9669\u7c7b\u5225\uff0c\u7136\u540e\u7531\u4e1a\u754c\u95ee\u5377\u4e2d\u6311\u9009\u4e24\u4e2a\u98ce\u9669\u7c7b\u5225\u3002\u6211\u4eec\u4ece\u8fc7\u5f80\u7684\u5206\u4eab\u8d44\u6599\u4e2d\u53bb\u4e86\u89e3\uff0c\u5e76\u6709\u6211\u4eec\u4e00\u4e2a\u57fa\u672c\u7684\u7406\u7531\u3002\u539f\u56e0\u662f\u6240\u6709\u7684\u8d44\u5b89\u7814\u7a76\u4eba\u5458\u90fd\u4e0d\u65ad\u7684\u5728\u627e\u65b0\u7684\u5f31\u70b9\u5e76\u627e\u51fa\u65b9\u6cd5\u53bb\u9a8c\u8bc1\u5f31\u70b9\uff0c\u4f46\u4f1a\u9700\u8981\u65f6\u95f4\u624d\u80fd\u5c06\u8fd9\u4e9b\u9a8c\u6d4b\u65b9\u6cd5\u7eb3\u5165\u5230\u65e2\u6709\u7684\u5de5\u5177\u548c\u6d4b\u8bd5\u6d41\u7a0b\u4e2d\u3002\u5f53\u6211\u4eec\u80fd\u6709\u6548\u7684\u5927\u91cf\u6d4b\u8bd5\u8fd9\u4e2a\u5f31\u70b9\u65f6\uff0c\u6709\u53ef\u80fd\u5df2\u7ecf\u8fc7\u4e86\u591a\u5e74\u7684\u65f6\u95f4\u3002\u4e3a\u4e86\u8981\u8ba9\u4e24\u8005\u4e4b\u95f4\u6709\u5e73\u8861\uff0c\u6211\u4eec\u4f7f\u7528\u4e1a\u754c\u95ee\u5377\u8bf7\u6559\u5728\u524d\u7ebf\u7684\u8d44\u5b89\u7814\u7a76\u4e13\u5bb6\u4eec\u5e76\u4e86\u89e3\u4ed6\u4eec\u89c9\u5f97\u6709\u54ea\u4e9b\u662f\u4ed6\u4eec\u89c9\u5f97\u4e25\u91cd\u4f46\u5c1a\u672a\u51fa\u73b0\u5728\u6d4b\u8bd5\u8d44\u6599\u4e2d\u7684\u6f0f\u6d1e\u53ca\u95ee\u9898\u3002</p> <p>\u8fd9\u662f\u51e0\u4e2a\u6211\u4eec\u4e3a\u4e86\u8981\u8ba9 OWASP Top 10 \u66f4\u52a0\u6210\u719f\u7684\u91cd\u8981\u6539\u53d8\u3002</p>"},{"location":"zh-Hant/#_2","title":"\u5982\u4f55\u5efa\u6784\u98ce\u9669\u7c7b\u5225","text":"<p>\u6709\u5225\u4e8e\u4e0a\u4e00\u4e2a\u7248\u672c\uff0c\u5728\u8fd9\u6b21\u7684 OWASP Top 10 \u6709\u4e00\u4e9b\u98ce\u9669\u7c7b\u5225\u7684\u4fee\u6539\u3002\u6211\u4eec\u5728\u6b64\u4ee5\u6bd4\u8f83\u9ad8\u7684\u89d2\u5ea6\u8bf4\u660e\u4e00\u4e0b\u8fd9\u6b21\u7684\u7c7b\u5225\u4fee\u6539\u3002</p> <p>\u5728\u4e0a\u4e00\u6b21\u7684\u8d44\u6599\u6536\u96c6\u5f53\u4e2d\uff0c\u6211\u4eec\u5c06\u8d44\u6599\u6536\u96c6\u7684\u91cd\u5fc3\u653e\u5728\u9884\u5148\u5b9a\u4e49\u597d\u7684\u7ea6 30 \u4e2a CWEs \u5e76\u7eb3\u5165\u4e00\u4e2a\u9886\u57df\u4ee5\u6c42\u5176\u4ed6\u7684\u53d1\u73b0\u3002\u4ece\u8fd9\u91cc\u6211\u4eec\u770b\u5230\u7edd\u5927\u591a\u6570\u7684\u7ec4\u7ec7\u90fd\u53ea\u4f1a\u4e13\u6ce8\u5728\u8fd9 30 \u4e2a CWEs \u800c\u4e0d\u5e38\u52a0\u5165\u5176\u4ed6\u4ed6\u4eec\u53ef\u80fd\u53d1\u73b0\u7684 CWEs\u3002\u5728\u8fd9\u6b21\u7684\u6539\u7248\u4e2d\uff0c\u6211\u4eec\u5c06\u6240\u6709\u7684\u95ee\u9898\u90fd\u4ee5\u5f00\u653e\u5f0f\u7684\u65b9\u6cd5\u5904\u7406\uff0c\u5e76\u6c92\u6709\u9650\u5236\u5728\u4efb\u4f55\u4e00\u4e2a CWEs\u3002\u6211\u4eec\u8bf7\u6559\u4e86\u4ece 2017 \u5e74\u5f00\u59cb\u6240\u6d4b\u8bd5\u7684\u7f51\u9875\u5e94\u7528\u7a0b\u5f0f\u6570\u91cf\uff0c\u7136\u540e\u5728\u8fd9\u4e9b\u7a0b\u5f0f\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a CWE \u88ab\u53d1\u73b0\u7684\u6570\u91cf\u3002\u8fd9\u4e2a\u683c\u5f0f\u8ba9\u6211\u4eec\u80fd\u591f\u8ffd\u8e2a\u6bcf\u4e2a CWE \u8ddf\u6240\u6709\u88ab\u9a8c\u6d4b\u53ca\u7edf\u8ba1\u7684\u5e94\u7528\u7a0b\u5f0f\u7684\u6570\u91cf\u8ddf\u5173\u7cfb\u3002\u6211\u4eec\u4e5f\u5ffd\u7565\u4e86 CWE \u51fa\u73b0\u7684\u9891\u7387\uff0c\u867d\u7136\u5728\u67d0\u4e9b\u72b6\u51b5\u4e0b\u8fd9\u4e5f\u8bb8\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u8fd9\u5374\u9690\u85cf\u4e86\u98ce\u9669\u7c7b\u5225\u672c\u8eab\u4e0e\u5e94\u7528\u7a0b\u5f0f\u6570\u91cf\u6574\u4f53\u7684\u5173\u7cfb\u3002\u6240\u4ee5\u4e00\u4e2a\u5e94\u7528\u7a0b\u5f0f\u6709 4 \u4e2a\u6216\u662f 4,000 \u4e2a\u5f31\u70b9\u5e76\u4e0d\u662f\u88ab\u8ba1\u7b97\u5728 Top 10 \u7684\u57fa\u7840\u3002\u4f46\u540c\u65f6\u6211\u4eec\u4e5f\u4ece\u539f\u672c\u7684 30 \u591a\u4e2a CWEs \u589e\u957f\u5230\u5feb 400 \u591a\u4e2a CWEs \u53bb\u8fdb\u884c\u5206\u6790\u3002\u6211\u4eec\u56e0\u6b64\u4e5f\u8ba1\u5212\u672a\u4f86\u505a\u66f4\u591a\u7684\u8d44\u6599\u5206\u6790\uff0c\u5e76\u5728\u5bf9\u6b64\u7248\u672c\u8fdb\u884c\u8865\u5145\u8bf4\u660e\u3002\u800c\u8fd9\u4e9b\u589e\u52a0\u7684 CWEs \u4e5f\u540c\u65f6\u5f71\u54cd\u4e86\u8fd9\u6b21\u98ce\u9669\u7c7b\u5225\u7684\u89c4\u5212\u3002</p> <p>\u6211\u4eec\u82b1\u4e86\u597d\u51e0\u4e2a\u6708\u5c06 CWEs \u8fdb\u884c\u5206\u7ec4\u8ddf\u5206\u7c7b\uff0c\u800c\u4e14\u5176\u5b9e\u53ef\u4ee5\u4e00\u76f4\u82b1\u66f4\u591a\u65f6\u95f4\u53bb\u505a\u8fd9\u4ef6\u4e8b\u60c5\u3002\u4f46\u6211\u4eec\u5fc5\u987b\u5728\u67d0\u4e00\u4e2a\u65f6\u95f4\u70b9\u505c\u4f4f\u3002\u5728 CWEs \u5f53\u4e2d\uff0c\u540c\u65f6\u6709 \u6839\u672c\u539f\u56e0 \u4ee5\u53ca \u75c7\u72b6 \u7684\u95ee\u9898\uff0c\u800c\u50cf\u662f \"\u52a0\u5bc6\u673a\u5236\u5931\u6548\" \u548c \"\u8bbe\u5b9a\u95ee\u9898\" \u8fd9\u7c7b\u578b\u7684 \u539f\u56e0 \u4e0e \"\u654f\u611f\u8d44\u6599\u5916\u6cc4\" \u548c \"\u963b\u65ad\u670d\u52a1\" \u8fd9\u7c7b\u578b\u7684 \u75c7\u72b6 \u662f\u5bf9\u7acb\u7684\u3002\u56e0\u6b64\u6211\u4eec\u51b3\u5b9a\u5728\u53ef\u4ee5\u7684\u65f6\u5019\u8981\u66f4\u4e13\u6ce8\u4e8e\u5e95\u5c42\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u8fd9\u662f\u53ef\u4ee5\u6709\u6548\u6307\u51fa\u95ee\u9898\u7684\u672c\u4f53\u8ddf\u540c\u65f6\u63d0\u4f9b\u95ee\u9898\u7684\u89e3\u51b3\u5927\u65b9\u5411\u3002\u4e13\u6ce8\u5728\u95ee\u9898\u6838\u5fc3\u800c\u4e0d\u5c06\u91cd\u5fc3\u653e\u5728\u75c7\u72b6\u5e76\u4e0d\u662f\u4e00\u4e2a\u65b0\u7684\u6982\u5ff5 \b\b\uff0cTop Ten \u6709\u53f2\u4ee5\u4f86\u4e00\u76f4\u662f\u75c7\u72b6\u8ddf\u95ee\u9898\u6838\u5fc3\u7684\u7d9c\u5408\u4f53\uff0c\u53ea\u662f\u8fd9\u6b21\u6211\u4eec\u66f4\u523b\u610f\u7684\u5c06\u4ed6\u7a81\u663e\u51fa\u4f86\u3002\u5728\u8fd9\u6b21\u7684\u65b0\u7248\u672c\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u7c7b\u5225\u5167\u7684\u5e73\u5747\u6709 19.6 \u4e2a CWE\uff0c\u800c\u6700\u4f4e\u7684 A10:2021-\u670d\u52a1\u5668\u7aef\u8bf7\u6c42\u4f2a\u9020 \u6709\u4e00\u4e2a CWE \u5230 A04:2021-\u4e0d\u5b89\u5168\u8bbe\u8ba1 \u6709\u56db\u5341\u4e2a CWE\u3002\u8fd9\u4e2a\u65b0\u7684\u7c7b\u5225\u67b6\u6784\u80fd\u63d0\u4f9b\u4f01\u4e1a\u66f4\u591a\u7684\u8d44\u5b89\u8bad\u7ec3\u7684\u597d\u5904\uff0c\u56e0\u4e3a\u5728\u65b0\u7684\u67b6\u6784\u4e0b\u53ef\u4ee5\u66f4\u4e13\u6ce8\u5728\u67d0\u4e2a\u8bed\u7cfb\u6216\u5e73\u53f0\u4e0a\u7684 CWE\u3002</p>"},{"location":"zh-Hant/#_3","title":"\u9009\u62e9\u7c7b\u5225\u65f6\u8d44\u6599\u7684\u4f7f\u7528\u65b9\u5f0f","text":"<p>\u5728 2017 \u5e74\uff0c\u6211\u4eec\u7528\u4e8b\u4ef6\u53d1\u751f\u6b21\u6570\u53bb\u5224\u65ad\u53ef\u80fd\u53d1\u751f\u7684\u673a\u7387\u53bb\u9009\u62e9\u7c7b\u5225\uff0c\u7136\u540e\u900f\u8fc7\u4e00\u7fa4\u5728\u4e1a\u754c\u62e5\u6709\u6570\u5341\u5e74\u7ecf\u9a8c\u7684\u4e13\u5bb6\u56e2\u5bf9\u8ba8\u8bba\u5e76\u4f9d\u7167 \u53ef\u53d1\u751f\u6027\uff0c\u53ef\u53d1\u73b0\u6027\uff08\u540c\u53ef\u80fd\u6027\uff09\uff0c\u548c \u6280\u672f\u5f71\u54cd\u529b \u53bb\u505a\u6392\u540d\u3002\u5728 2021 \u5e74\uff0c\u6211\u4eec\u5e0c\u671b\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\u7528\u8d44\u6599\u8bc1\u660e\u53ef\u53d1\u751f\u6027\u548c\u6280\u672f\u5f71\u54cd\u6027\u3002</p> <p>\u6211\u4eec\u4e0b\u8f7d\u4e86 OWASP Depndency Check \u5e76\u53d6\u51fa\u4e86 CVSS \u6f0f\u6d1e\uff0c\u5e76\u5c06\u76f8\u5173\u7684 CWE \u7528\u5f71\u54cd\u529b\u5206\u6570\u5206\u7fa4\u3002\u8fd9\u82b1\u4e86\u4e00\u4e9b\u65f6\u95f4\u548c\u529b\u6c14\u53bb\u7814\u7a76\u56e0\u4e3a\u6240\u6709\u7684 CVEs \u90fd\u6709 CVSSv2 \u5206\u6570\uff0c\u4f46\u662f\u5728\u5176\u4e2d\u56e0\u4e3a CVSSv2 \u8ddf CVSSv3 \u4e4b\u95f4\u6709\u4e00\u4e9b\u7f3a\u5931\u662f\u5fc5\u987b\u88ab\u4fee\u6b63\u7684\u3002\u7ecf\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u6240\u6709\u7684 CVEs \u90fd\u4f1a\u6709\u5bf9\u5e94\u7684 CVSSv3 \u7684\u5206\u6570\u3002\u518d\u8005\uff0c\u5206\u6570\u7684\u8303\u56f4\u548c\u8ba1\u7b97\u7684\u516c\u5f0f\u5728 CVSSv2 \u548c CVSSv3 \u4e4b\u95f4\u4e5f\u505a\u4e86\u66f4\u65b0\u3002</p> <p>\u5728 CVSSv2 \u4e2d\uff0c\u6f0f\u6d1e\u548c\u5f71\u54cd\u529b\u4e24\u8005\u90fd\u53ef\u8fbe\u5230 10.0 \u5206\uff0c\u4f46\u662f\u516c\u5f0f\u672c\u8eab\u4f1a\u5c06\u4e24\u8005\u8c03\u6574\u4e3a\u6f0f\u6d1e\u5360 60%\uff0c\u7136\u540e\u5f71\u54cd\u529b\u5360 40%\u3002\u5728 CVSSv3 \u4e2d\uff0c\u7406\u8bba\u4e0a\u7684\u6700\u9ad8\u503c\u5c06\u6f0f\u6d1e\u9650\u5236\u5728 6.0 \u5206\u800c\u5f71\u54cd\u529b\u5728 4.0 \u5206\u3002\u5f53\u8003\u7387\u5230\u6743\u91cd\u6bd4\u7387\u65f6\uff0c\u5f71\u54cd\u529b\u7684\u5206\u6570\u4f1a\u504f\u9ad8\uff0c\u5728 CVSSv3 \u4e2d\u51e0\u4e4e\u5e73\u5747\u4f1a\u591a\u51fa 1.5 \u5206\uff0c\u800c\u6f0f\u6d1e\u5206\u6570\u5374\u4f1a\u5e73\u5747\u5c11 0.5 \u5206\u3002</p> <p>\u4ece OWASP Dependcy Check \u7fe0\u53d6\u51fa\u7684 NVD \u8d44\u6599\u5f53\u4e2d\u6709\u5c06\u8fd1 12.5 \u4e07\u7b14 CVE \u8d44\u6599\u6709\u5bf9\u5e94\u5230 CWE\uff0c\u800c\u6709 241 \u7b14\u72ec\u7279\u7684 CWEs \u6709\u5bf9\u5e94\u5230 CVE\u30026.2 \u4e07\u7b14 CWE \u6709\u5bf9\u5e94\u5230 CVSSv3 \u5206\u6570\uff0c\u6240\u4ee5\u5927\u7ea6\u662f\u6574\u4f53\u8d44\u6599\u4e2d\u4e00\u534a\u7684\u90e8\u5206\u3002</p> <p>\u800c\u5728 Top Ten\uff0c\u6211\u4eec\u8ba1\u7b97\u6f0f\u6d1e\u548c\u5f71\u54cd\u529b\u7684\u5e73\u5747\u5206\u6570\u7684\u65b9\u5f0f\u5982\u4e0b\u3002\u6211\u4eec\u5c06\u6240\u6709\u6709 CVSS \u5206\u6570\u7684 CVE \u4f9d\u7167 CWE \u5206\u7ec4\uff0c\u7136\u540e\u4f9d\u7167\u6709 CVSSv3 \u7684\u6f0f\u6d1e\u548c\u5f71\u54cd\u529b\u5728\u6240\u6709\u8d44\u6599\u4e2d\u7684\u767e\u5206\u6bd4\u4f5c\u6743\u91cd\uff0c\u5728\u52a0\u4e0a\u8d44\u6599\u4e2d\u6709 CVSSv2 \u7684\u8d44\u6599\u53bb\u505a\u5e73\u5747\u3002\u6211\u4eec\u5c06\u8fd9\u4e9b\u5e73\u5747\u540e\u7684 CWEs \u5bf9\u5e94\u5230\u8d44\u6599\u4e2d\uff0c\u7136\u540e\u5c06\u4ed6\u7684\u6f0f\u6d1e\u548c\u5f15\u60f3\u529b\u5206\u6570\u4f7f\u7528\u5728\u53e6\u4e00\u534a\u7684\u98ce\u9669\u516c\u5f0f\u4e2d\u3002</p>"},{"location":"zh-Hant/#_4","title":"\u4e3a\u4ec0\u4e48\u5c31\u4e0d\u7eaf\u7cb9\u505a\u7edf\u8ba1\u5206\u6790\uff1f","text":"<p>\u8fd9\u4e9b\u8d44\u6599\u7684\u7d50\u679c\u6700\u4e3b\u8981\u662f\u88ab\u9650\u5236\u5728\u80fd\u4f7f\u7528\u81ea\u52a8\u5de5\u5177\u6d4b\u8bd5\u51fa\u4f86\u7684\u7d50\u679c\u3002\u53ef\u662f\u5f53\u4f60\u8ddf\u4e00\u4f4d\u6709\u7ecf\u9a8c\u7684\u5e94\u7528\u7a0b\u5f0f\u5b89\u5168\u4e13\u5bb6\u804a\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u4f1a\u8ddf\u4f60\u8bf4\u7edd\u5927\u591a\u6570\u4ed6\u4eec\u627e\u5230\u7684\u95ee\u9898\u90fd\u4e0d\u5728\u8fd9\u4e9b\u8d44\u6599\u91cc\u9762\u3002\u539f\u56e0\u662f\u4e00\u4e2a\u6d4b\u8bd5\u8981\u88ab\u81ea\u52a8\u5316\u7684\u65f6\u5019\uff0c\u9700\u8981\u82b1\u65f6\u95f4\u53bb\u5f00\u53d1\u8fd9\u4e9b\u5f31\u70b9\u6d4b\u8bd5\u7684\u65b9\u6cd5\u8bba\uff0c\u5f53\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u6d4b\u8bd5\u81ea\u52a8\u5316\u5e76\u80fd\u5bf9\u5927\u91cf\u7684\u5e94\u7528\u7a0b\u5f0f\u53bb\u9a8c\u8bc1\u65f6\uff0c\u53c8\u4f1a\u82b1\u4e0a\u66f4\u591a\u7684\u65f6\u95f4\u3002\u5f53\u6211\u4eec\u56de\u5934\u770b\u53bb\u5e74\u6216\u4ee5\u524d\u6709\u53ef\u80fd\u6c92\u51fa\u73b0\u7684\u4e00\u4e9b\u95ee\u9898\u7684\u8d8b\u52bf\uff0c\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u90fd\u6c92\u6709\u5728\u8fd9\u4e9b\u8d44\u6599\u5f53\u4e2d\u3002</p> <p>\u56e0\u6b64\uff0c\u7531\u4e8e\u8d44\u6599\u4e0d\u5b8c\u5168\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u53ea\u6709\u4ece\u8d44\u6599\u4e2d\u9009\u51fa 8 \u4e2a\u7c7b\u5225\uff0c\u800c\u5e76\u4e0d\u662f 10 \u4e2a\u3002\u5269\u4e0b\u7684\u4e24\u4e2a\u7c7b\u5225\u662f\u4ece\u4e1a\u754c\u95ee\u5377\u4e2d\u6240\u9009\u51fa\u7684\u3002\u8fd9\u4f1a\u5141\u8bb8\u5728\u524d\u7ebf\u7684\u53c3\u4e0e\u8005\u53bb\u9009\u51fa\u4ed6\u4eec\u8ba4\u4e3a\u7684\u9ad8\u98ce\u9669\uff0c\u800c\u4e0d\u662f\u7eaf\u7cb9\u4f9d\u636e\u8d44\u6599\u53bb\u5224\u65ad\uff08\u751a\u81f3\u53ef\u80fd\u8d44\u6599\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u6709\u51fa\u73b0\u7684\u8e2a\u8de1\uff09\u3002</p>"},{"location":"zh-Hant/#_5","title":"\u4e3a\u4ec0\u4e48\u7528\u4e8b\u6545\u7387\u800c\u4e0d\u662f\u7528\u53d1\u751f\u6b21\u6570","text":"<p>There are three primary sources of data. We identify them as Human-assisted Tooling (HaT), Tool-assisted Human (TaH), and raw Tooling.</p> <p>Tooling and HaT are high-frequency finding generators. Tools will look for specific vulnerabilities and tirelessly attempt to find every instance of that vulnerability and will generate high finding counts for some vulnerability types. Look at Cross-Site Scripting, which is typically one of two flavors: it's either a more minor, isolated mistake or a systemic issue. When it's a systemic issue, the finding counts can be in the thousands for an application. This high frequency drowns out most other vulnerabilities found in reports or data.</p> <p>TaH, on the other hand, will find a broader range of vulnerability types but at a much lower frequency due to time constraints. When humans test an application and see something like Cross-Site Scripting, they will typically find three or four instances and stop. They can determine a systemic finding and write it up with a recommendation to fix on an application-wide scale. There is no need (or time) to find every instance.</p> <p>Suppose we take these two distinct data sets and try to merge them on frequency. In that case, the Tooling and HaT data will drown the more accurate (but broad) TaH data and is a good part of why something like Cross-Site Scripting has been so highly ranked in many lists when the impact is generally low to moderate. It's because of the sheer volume of findings. (Cross-Site Scripting is also reasonably easy to test for, so there are many more tests for it as well).</p> <p>In 2017, we introduced using incidence rate instead to take a fresh look at the data and cleanly merge Tooling and HaT data with TaH data. The incidence rate asks what percentage of the application population had at least one instance of a vulnerability type. We don't care if it was one-off or systemic. That's irrelevant for our purposes; we just need to know how many applications had at least one instance, which helps provide a clearer view of the testing is findings across multiple testing types without drowning the data in high-frequency results.</p>"},{"location":"zh-Hant/#what-is-your-data-collection-and-analysis-process","title":"What is your data collection and analysis process?","text":"<p>We formalized the OWASP Top 10 data collection process at the Open Security Summit in 2017. OWASP Top 10 leaders and the community spent two days working out formalizing a transparent data collection process. The 2021 edition is the second time we have used this methodology.</p> <p>We publish a call for data through social media channels available to us, both project and OWASP. On the OWASP Project page, we list the data elements and structure we are looking for and how to submit them. In the GitHub project, we have example files that serve as templates. We work with organizations as needed to help figure out the structure and mapping to CWEs.</p> <p>We get data from organizations that are testing vendors by trade, bug bounty vendors, and organizations that contribute internal testing data. Once we have the data, we load it together and run a fundamental analysis of what CWEs map to risk categories. There is overlap between some CWEs, and others are very closely related (ex. Cryptographic vulnerabilities). Any decisions related to the raw data submitted are documented and published to be open and transparent with how we normalized the data.</p> <p>We look at the eight categories with the highest incidence rates for inclusion in the Top 10. We also look at the industry survey results to see which ones may already be present in the data. The top two votes that aren't already present in the data will be selected for the other two places in the Top 10. Once all ten were selected, we applied generalized factors for exploitability and impact; to help rank the Top 10 in order.</p>"},{"location":"zh-Hant/#data-factors","title":"Data Factors","text":"<p>There are data factors that are listed for each of the Top 10 Categories, here is what they mean:</p> <ul> <li> <p>CWEs Mapped: The number of CWEs mapped to a category by the Top 10   team.</p> </li> <li> <p>Incidence Rate: Incidence rate is the percentage of applications   vulnerable to that CWE from the population tested by that org for   that year.</p> </li> <li> <p>(Testing) Coverage: The percentage of applications tested by all   organizations for a given CWE.</p> </li> <li> <p>Weighted Exploit: The Exploit sub-score from CVSSv2 and CVSSv3   scores assigned to CVEs mapped to CWEs, normalized, and placed on a   10pt scale.</p> </li> <li> <p>Weighted Impact: The Impact sub-score from CVSSv2 and CVSSv3   scores assigned to CVEs mapped to CWEs, normalized, and placed on a   10pt scale.</p> </li> <li> <p>Total Occurrences: Total number of applications found to have the   CWEs mapped to a category.</p> </li> <li> <p>Total CVEs: Total number of CVEs in the NVD DB that were mapped to   the CWEs mapped to a category.</p> </li> </ul>"},{"location":"zh-Hant/#category-relationships-from-2017","title":"Category Relationships from 2017","text":"<p>There has been a lot of talk about the overlap between the Top Ten risks. By the definition of each (list of CWEs included), there really isn't any overlap. However, conceptually, there can be overlap or interactions based on the higher-level naming. Venn diagrams are many times used to show overlap like this.</p> <p></p> <p>The Venn diagram above represents the interactions between the Top Ten 2017 risk categories. While doing so, a couple of essential points became obvious:</p> <ol> <li> <p>One could argue that Cross-Site Scripting ultimately belongs within     Injection as it's essentially Content Injection. Looking at the 2021     data, it became even more evident that XSS needed to move into     Injection.</p> </li> <li> <p>The overlap is only in one direction. We will often classify a     vulnerability by the end manifestation or \"symptom,\" not the     (potentially deep) root cause. For instance, \"Sensitive Data     Exposure\" may have been the result of a \"Security Misconfiguration\";     however, you won't see it in the other direction. As a result,     arrows are drawn in the interaction zones to indicate which     direction it occurs.</p> </li> <li> <p>Sometimes these diagrams are drawn with everything in A06:2021     Using Components with Known Vulnerabilities. While some of these     risk categories may be the root cause of third-party     vulnerabilities, they are generally managed differently and with     different responsibilities. The other types are typically     representing first-party risks.</p> </li> </ol>"},{"location":"zh-Hant/#thank-you-to-our-data-contributors","title":"Thank you to our data contributors","text":"<p>The following organizations (along with some anonymous donors) kindly donated data for over 500,000 applications to make this the largest and most comprehensive application security data set. Without you, this would not be possible.</p> AppSec Labs GitLab Micro Focus Sqreen Cobalt.io HackerOne PenTest-Tools Veracode Contrast Security HCL Technologies Probely WhiteHat (NTT)"},{"location":"zh-Hant/#thank-you-to-our-sponsors","title":"Thank you to our sponsors","text":"<p>The OWASP Top 10 2021 team gratefully acknowledge the financial support of Secure Code Warrior and Just Eat.</p> <p></p> <p></p>"},{"location":"zh-Hant/0x00_2021-notice/","title":"\u53d1\u8868\u7248\u672c","text":"<p>\u4e8e 2021 \u5e74 9 \u6708 24 \u65e5\u6b63\u5f0f\u53d1\u8868</p>"},{"location":"zh-Hant/0x00_2021-notice/#_2","title":"\u4e13\u6848\u4e3b\u5bfc\u8005","text":"<ul> <li>Andrew van der Stock (twitter: @vanderaj)</li> <li>Brian Glas (twitter: @infosecdad)</li> <li>Neil Smithline (twitter: @appsecneil)</li> <li>Torsten Gigler (twitter: @torsten_tweet)</li> </ul>"},{"location":"zh-Hant/0x00_2021-notice/#_3","title":"\u5171\u4eab\u4e13\u5bb6","text":"<ul> <li>Orange Tsai, @orange_8361 A10-2021: \u670d\u52a1\u7aef\u8bf7\u6c42\u4f2a\u9020 \u7684\u4f5c\u8005</li> <li>Jim Manico @manicode \u548c Jakub Ma\u0107kowski @kubamackowski</li> </ul>"},{"location":"zh-Hant/0x00_2021-notice/#_4","title":"\u4f60\u80fd\u5982\u4f55\u5e2e\u52a9","text":"<p>\u5728\u76ee\u524d\u9636\u6bb5\uff0c\u6211\u5011\u9700\u8981</p> <ul> <li>\u8d44\u6599\u79d1\u5b66\u5bb6 - \u534f\u52a9\u786e\u8ba4\u6211\u5011\u7684\u8d44\u6599\u5206\u6790\u7d50\u679c</li> <li>\u7f51\u9875\u8bbe\u8ba1\u5e08 - \u6211\u5011\u9700\u8981\u505a\u4e00\u500b\u4ea4\u4e92\u53cb\u5584\u7684\u7248\u672c</li> <li>\u7ffb\u8bd1\u4eba\u5458 - \u8bf7\u534f\u52a9\u786e\u8ba4\u82f1\u6587\u7248\u672c\u6587\u5b57\u4e26\u786e\u8ba4\u53ef\u88ab\u7ffb\u8bd1\u5230\u5176\u4ed6\u8bed\u8a00\u7248\u672c</li> <li>ASVS, Testing Guide, \u548c Code Review Guide \u4e13\u6848\u9886\u8896 - \u8bf7\u4f7f\u7528\u6211\u5011\u7684\u8d44\u6599\u5e76\u534f\u52a9\u6211\u5011\u628a\u5176\u4ed6\u7684\u6587\u4ef6\u548c\u6807\u51c6\u8fde\u63a5\u8d77\u4f86</li> </ul>"},{"location":"zh-Hant/0x00_2021-notice/#pull-request","title":"\u95ee\u9898\u53ca Pull Request","text":"<p>\u8bf7\u5c06\u4efb\u4f55\u95ee\u9898\u6216\u662f\u9700\u88ab\u4fee\u6539\u7684\u5730\u65b9\u8bb0\u5f55\u5230\u6b64:</p> <ul> <li>https://github.com/OWASP/Top10/issues</li> </ul>"},{"location":"zh-Hant/0x01_2021-about-owasp/","title":"\u5173\u4e8e OWASP","text":"<p>The Open Worldwide Application Security Project (OWASP) is an open community dedicated to enabling organizations to develop, purchase, and maintain applications and APIs that can be trusted.</p> <p>At OWASP, you'll find free and open:</p> <ul> <li>Application security tools and standards</li> <li>Cutting edge research</li> <li>Standard security controls and libraries</li> <li>Complete books on application security testing, secure code development, and secure code review</li> <li>Presentations and videos</li> <li>Cheat sheets on many common topics</li> <li>Chapters meetings</li> <li>Events, training, and conferences.</li> <li>Google Groups</li> </ul> <p>Learn more at: https://owasp.org.</p> <p>All OWASP tools, documents, videos, presentations, and chapters are free and open to anyone interested in improving application security.</p> <p>We advocate approaching application security as a people, process, and technology problem, because the most effective approaches to application security require improvements in these areas.</p> <p>OWASP is a new kind of organization. Our freedom from commercial pressures allows us to provide unbiased, practical, and cost-effective information about application security.</p> <p>OWASP is not affiliated with any technology company, although we support the informed use of commercial security technology. OWASP produces many types of materials in a collaborative, transparent, and open way.</p> <p>The OWASP Foundation is the non-profit entity that ensures the project's long-term success. Almost everyone associated with OWASP is a volunteer, including the OWASP board, chapter leaders, project leaders, and project members. We support innovative security research with grants and infrastructure.</p> <p>Come join us!</p>"},{"location":"zh-Hant/0x01_2021-about-owasp/#copyright-and-license","title":"Copyright and License","text":"<p>Copyright \u00a9 2003-2025 The OWASP\u00ae Foundation. This document is released under the Creative Commons Attribution Share-Alike 4.0 license. For any reuse or distribution, you must make it clear to others the license terms of this work.</p>"},{"location":"zh-Hant/A00_2021_How_to_use_the_OWASP_Top_10_as_a_standard/","title":"\u5982\u4f55\u5c06 OWASP Top 10 2021 \u505a\u4e3a\u6807\u51c6\u4f7f\u7528","text":"<p>OWASP Top 10 \u6700\u4e3b\u8981\u662f\u4e00\u4e2a\u63d0\u5347\u610f\u8bc6\u53ca\u8d44\u5b89\u8ba4\u77e5\u5f62\u6001\u7684\u6587\u4ef6\u3002\u4f46\u662f\uff0c\u4ece 2003 \u5e74\u5f00\u59cb\uff0c\u8fd9\u5e76\u6c92\u6709\u8ba9\u4efb\u4f55\u7684\u4f01\u4e1a\u6216\u7ec4\u7ec7\u505c\u6b62\u4f7f\u7528\u5b83\u5f53\u4f5c\u9884\u8bbe\u7684\u5e94\u7528\u5b89\u5168\u6807\u51c6\u3002\u5982\u679c\u4f60\u60f3\u8981\u7528\u4f7f\u7528 OWASP Top 10 \u5f53\u4f5c\u7a0b\u5f0f\u8bbe\u8ba1\u6216\u662f\u9a8c\u8bc1\u6d4b\u8bd5\u7684\u4e00\u4e2a\u6807\u51c6\uff0c\u8981\u5148\u77e5\u9053\u8fd9\u53ea\u662f\u4e00\u4e2a\u6700\u4f4e\u9650\u5ea6\u7684\u6307\u6807\u5e76\u4e14\u4e5f\u53ea\u662f\u4e00\u4e2a\u5f00\u59cb\u3002</p> <p>\u4f7f\u7528 OWASP Top 10 \u4f5c\u4e3a\u6807\u51c6\u7684\u56f0\u96be\u4e4b\u4e00\u662f\u6211\u4eec\u8bb0\u5f55\u4e86\u5e94\u7528\u5b89\u5168\u98ce\u9669\uff0c\u800c\u4e0d\u4e00\u5b9a\u662f\u5bb9\u6613\u6d4b\u8bd5\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0cA04:2021-Insecure Design \u8d85\u51fa\u4e86\u5927\u591a\u6570\u80fd\u591f\u88ab\u6d4b\u8bd5\u53ca\u88ab\u9a8c\u8bc1\u7684\u8303\u56f4\u3002 \u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u8981\u6d4b\u8bd5\u6709\u6548\u7684\u5c31\u5730\u3001\u88ab\u4f7f\u7528\u4e2d\u7684\u6d4b\u8bd5\u8bb0\u5f55\u548c\u76d1\u63a7\u673a\u5236\u53ea\u80fd\u900f\u8fc7\u9762\u8c08\u548c\u8981\u6c42\u62bd\u6837\u6709\u6548\u7684\u8d44\u5b89\u4e8b\u4ef6\u9274\u8bc6\u6848\u4f8b\u3002 \u4e00\u4e2a\u975c\u6001\u539f\u59cb\u7801\u5206\u6790\u5de5\u5177\u53ef\u4ee5\u627e\u51fa\u65e5\u5fd7\u8bb0\u5f55\u7684\u7f3a\u5931\uff0c\u4f46\u53ef\u80fd\u65e0\u6cd5\u786e\u5b9a\u4e1a\u52a1\u903b\u8f91\u6216\u5b58\u53d6\u63a7\u5236\u662f\u5426\u5728\u65e5\u5fd7\u8bb0\u5f55\u4e2d\u8bb0\u5f55\u4e86\u6709\u5173\u91cd\u8981\u5b89\u5168\u6f0f\u6d1e\u7684\u65e5\u5fd7\u3002 \u6ef2\u900f\u6d4b\u8bd5\u4eba\u5458\u53ef\u80fd\u53ea\u80fd\u786e\u5b9a\u4ed6\u4eec\u5728\u6d4b\u8bd5\u73af\u5883\u4e2d\u6d4b\u8bd5\u65f6\u6709\u786e\u5b9e\u7684\u6267\u884c\u4e86\u8d44\u5b89\u4e8b\u4ef6\u9274\u8bc6\uff0c\u5728\u5b9e\u9645\u7684\u5b9e\u4f53\u73af\u5883\u4e2d\u5374\u6709\u53ef\u80fd\u6c92\u6709\u505a\u5230\u76f8\u540c\u7684\u6807\u51c6\u3002</p> <p>\u4ee5\u4e0b\u662f\u6211\u4eec\u5efa\u8bae\u5728\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 OWASP Top 10:</p> \u4f7f\u7528\u6848\u4f8b OWASP Top 10 2021 OWASP \u5e94\u7528\u5b89\u5168\u9a8c\u8bc1\u6807\u51c6 (ASVS) \u8ba4\u77e5\u6027 \u662f \u6559\u80b2\u8bad\u7ec3 \u57fa\u7840 \u5b8c\u6574 \u8bbe\u8ba1\u53ca\u67b6\u6784 \u5076\u5c14 \u53ef\u4ee5 \u7a0b\u5f0f\u6807\u51c6 \u6700\u4f4e\u9650\u5ea6 \u53ef\u4ee5 \u5b89\u5168\u7a0b\u5f0f\u9a8c\u8bc1 \u6700\u4f4e\u9650\u5ea6 \u53ef\u4ee5 \u540c\u884c\u8bc4\u5ba1\u6e05\u5355 \u6700\u4f4e\u9650\u5ea6 \u53ef\u4ee5 \u5355\u5143\u6d4b\u8bd5 \u5076\u800c\u53ef\u4ee5 \u53ef\u4ee5 \u6574\u5408\u6d4b\u8bd5 \u5076\u800c\u53ef\u4ee5 \u53ef\u4ee5 \u6ef2\u900f\u6d4b\u8bd5 \u6700\u4f4e\u9650\u5ea6 \u53ef\u4ee5 \u652f\u63f4\u5de5\u5177 \u6700\u4f4e\u9650\u5ea6 \u53ef\u4ee5 \u5b89\u5168\u4f9b\u5e94\u94fe \u5076\u800c\u53ef\u4ee5 \u53ef\u4ee5 <p>\u6211\u4eec\u9f13\u52b1\u4efb\u4f55\u5e0c\u671b\u80fd\u5957\u7528\u5e94\u7528\u5b89\u5168\u6807\u51c6\u7684\u4eba\u53ef\u4ee5\u5229\u7528 OWASP \u5e94\u7528\u5b89\u5168\u9a8c\u8bc1\u6807\u51c6\uff08ASVS\uff09\uff0c\u56e0\u4e3a\u5b83\u672c\u8eab\u7684\u8bbe\u8ba1\u5c31\u662f\u53ef\u88ab\u6d4b\u8bd5\u53ca\u9a8c\u8bc1\u7684\uff0c\u5e76\u53ef\u4ee5\u5728\u5b89\u5168\u8f6f\u4f53\u5f00\u53d1\u751f\u547d\u5468\u671f\u7684\u6240\u6709\u9636\u6bb5\u90fd\u53ef\u88ab\u8fd0\u7528\u3002</p> <p>ASVS \u4e5f\u662f\u552f\u4e00\u5de5\u5177\u63d0\u4f9b\u8005\u80fd\u88ab\u63a5\u53d7\u7684\u9009\u62e9\u3002\u6d4b\u8bd5\u5de5\u5177\u6c92\u529e\u6cd5\u5168\u9762\u7684\u4fa6\u6d4b\uff0c\u6d4b\u8bd5\uff0c\u6216\u4fdd\u62a4 OWASP Top 10 \u5f53\u4e2d\u7684\u4e00\u4e9b\u9805\u76ee\u3002\u662f\u56e0\u4e3a OWASP Top 10 \u7684\u98ce\u9669\u7c7b\u5225\u7684\u533a\u5206\u6709\u4e00\u90e8\u5206\u4e5f\u662f\u8ddf A04:2021-\u4e0d\u5b89\u5168\u7684\u8bbe\u8ba1\u6709\u6240\u76f8\u5173\u3002OWASP \u5f37\u70c8\u4e0d\u5efa\u8bae\u7528 OWASP Top 10 \u53bb\u6db5\u76d6\u6240\u6709\u7684\u5b89\u5168\u89c4\u8303\u53ca\u9700\u6c42\uff0c\u56e0\u4e3a\u8fd9\u672c\u8eab\u5c31\u4e0d\u662f\u771f\u7684\u3002</p>"},{"location":"zh-Hant/A00_2021_Introduction/","title":"OWASP Top 10 2021 \u4ecb\u7d39","text":"<p>\u6b22\u8fce\u4f86\u5230\u6700\u65b0\u7248\u672c\u7684 OWASP Top 10\uff01! OWASP Top 10 2021 \u662f\u4e00\u4e2a\u5168\u65b0\u7684\u540d\u5355\uff0c\u5305\u542b\u4e86\u4f60\u53ef\u4ee5\u6253\u5370\u4e0b\u4f86\u7684\u65b0\u56fe\u793a\u8bf4\u660e\uff0c\u82e5\u6709\u9700\u8981\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u4ece\u6211\u4eec\u7684\u7f51\u9875\u4e0a\u9762\u4e0b\u8f7d\u3002</p> <p>\u5728\u6b64\u6211\u4eec\u60f3\u5bf9\u6240\u6709\u8d21\u732e\u4e86\u4ed6\u4eec\u65f6\u95f4\u548c\u8d44\u6599\u7684\u4eba\u7d66\u4e88\u6781\u5927\u7684\u611f\u8c22\u3002\u6ca1\u6709\u4f60\u4eec\uff0c\u8fd9\u4e00\u4e2a\u65b0\u7248\u672c\u4e0d\u4f1a\u4ea7\u751f\u3002\u8c22\u8c22\u3002</p>"},{"location":"zh-Hant/A00_2021_Introduction/#top-10-for-2021","title":"Top 10 for 2021 \u6709\u4ec0\u4e48\u65b0\u7684\u53d8\u5316\uff1f","text":"<p>\u8fd9\u6b21\u5728 OWASP Top 10 for 2021 \u6709\u4e09\u4e2a\u5168\u65b0\u7684\u5206\u7c7b\uff0c\u6709\u56db\u4e2a\u5206\u7c7b\u6709\u505a\u540d\u79f0\u548c\u8303\u56f4\u7684\u4fee\u6b63\uff0c\u5e76\u6709\u5c06\u4e00\u4e9b\u7c7b\u522b\u505a\u5408\u5e76\u3002</p> <p></p> <p>A01:2021-\u6743\u9650\u63a7\u5236\u5931\u6548 \u4ece\u7b2c\u4e94\u540d\u79fb\u4e0a\u4f86; 94% \u88ab\u6d4b\u8bd5\u7684\u5e94\u7528\u7a0b\u5f0f\u90fd\u6709\u9a8c\u8bc1\u5230\u67d0\u79cd\u7c7b\u522b\u6743\u9650\u63a7\u5236\u5931\u6548\u7684\u95ee\u9898\u3002\u5728\u6743\u9650\u63a7\u5236\u5931\u6548\u8fd9\u4e2a\u7c7b\u522b\u4e2d\u88ab\u5bf9\u5e94\u5230\u7684 34 \u4e2a CWEs \u5728\u9a8c\u6d4b\u8d44\u6599\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u90fd\u9ad8\u4e8e\u5176\u4ed6\u7684\u5f31\u70b9\u7c7b\u522b\u3002</p> <p>A02:2021-\u52a0\u5bc6\u673a\u5236\u5931\u6548 \u63d0\u5347\u4e00\u540d\u5230\u7b2c\u4e8c\u540d\uff0c\u5728\u4e4b\u524d\u4e3a \u654f\u611f\u8d44\u6599\u5916\u66dd\uff0c\u5728\u6b64\u5b9a\u4e49\u4e0b\u6bd4\u8f83\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u5e7f\u6cdb\u7684\u95ee\u9898\u800c\u975e\u6839\u672c\u539f\u56e0\u3002\u5728\u6b64\u91cd\u65b0\u5b9a\u4e49\u5e76\u5c06\u95ee\u9898\u6838\u5fc3\u5b9a\u4e49\u5728\u52a0\u5bc6\u673a\u5236\u7684\u5931\u8d25\uff0c\u5e76\u56e0\u6b64\u9020\u6210\u654f\u611f\u6027\u8d44\u6599\u5916\u6cc4\u6216\u662f\u7cfb\u7d71\u88ab\u7834\u574f\u3002</p> <p>A03:2021-\u6ce8\u5165\u5f0f\u653b\u51fb \u4e0b\u6ed1\u5230\u7b2c\u4e09\u540d\u300294% \u88ab\u6d4b\u8bd5\u7684\u5e94\u7528\u7a0b\u5f0f\u90fd\u6709\u9a8c\u6d4b\u5230\u67d0\u79cd\u7c7b\u5225\u6ce8\u5165\u5f0f\u653b\u51fb\u7684\u95ee\u9898\u3002\u5728\u6ce8\u5165\u5f0f\u653b\u51fb\u8fd9\u4e2a\u7c7b\u5225\u4e2d\u88ab\u5bf9\u5e94\u5230\u7684 33 \u4e2a CWEs \u5728\u9a8c\u6d4b\u8d44\u6599\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e3a\u5f31\u70b9\u95ee\u9898\u7684\u7b2c\u4e8c\u9ad8\u3002\u8de8\u7ad9\u811a\u672c\u653b\u51fb\u73b0\u5728\u5728\u65b0\u7248\u672c\u5c5e\u4e8e\u8fd9\u4e2a\u7c7b\u5225\u3002</p> <p>A04:2021-\u4e0d\u5b89\u5168\u8bbe\u8ba1 \u8fd9\u662f 2021 \u5e74\u7248\u672c\u7684\u65b0\u7c7b\u5225\uff0c\u5e76\u7279\u5225\u805a\u7126\u5728\u8bbe\u8ba1\u76f8\u5173\u7684\u7f3a\u9677\u3002\u5982\u679c\u6211\u4eec\u771f\u7684\u5e0c\u671b\u8ba9\u6574\u4e2a\u4ea7\u4e1a\"\u5411\u5de6\u79fb\u52a8\"\uff0a\u6ce8\u4e00\uff0a\uff0c\u90a3\u6211\u4eec\u5fc5\u987b\u8fdb\u4e00\u6b65\u7684\u5f80\u5a01\u80c1\u5efa\u6a21\uff0c\u5b89\u5168\u8bbe\u8ba1\u6a21\u5757\u7684\u89c2\u5ff5\uff0c\u548c\u5b89\u5168\u53c3\u8003\u67b6\u6784\u524d\u8fdb\u3002</p> <p>\uff0a\u6ce8\u4e00: Move Left \u4e8e\u82f1\u6587\u539f\u6587\u4e2d\u4ee3\u8868\u5728\u8f6f\u4ef6\u5f00\u53d1\u53ca\u4ea4\u4ed8\u8fc7\u7a0b\u4e2d\uff0c\u5728\u65e9\u671f\u627e\u51fa\u53ca\u5904\u7406\u76f8\u5173\u95ee\u9898\uff0c\u540c Shift Left Testing\u3002\uff0a</p> <p>A05:2021-\u5b89\u5168\u8bbe\u5b9a\u7f3a\u9677 \u4ece\u4e0a\u4e00\u7248\u672c\u7684\u7b2c\u516d\u540d\u79fb\u52a8\u4e0a\u4f86\u300290% \u88ab\u6d4b\u8bd5\u7684\u5e94\u7528\u7a0b\u5f0f\u90fd\u6709\u9a8c\u6d4b\u5230\u67d0\u79cd\u7c7b\u5225\u7684\u5b89\u5168\u8bbe\u5b9a\u7f3a\u9677\u3002\u5728\u66f4\u591a\u7684\u8f6f\u4ef6\u5f80\u66f4\u9ad8\u5ea6\u548c\u6709\u5f39\u6027\u7684\u8bbe\u5b9a\u79fb\u52a8\uff0c\u6211\u4eec\u5e76\u4e0d\u610f\u5916\u8fd9\u4e2a\u7c7b\u5225\u7684\u95ee\u9898\u5f80\u4e0a\u79fb\u52a8\u3002\u5728\u524d\u7248\u672c\u4e2d\u7684 XML \u5916\u90e8\u5b9e\u4f53\u6ce8\u5165\u653b\u51fb \uff08XML External Entities\uff09\u73b0\u5728\u5c5e\u4e8e\u8fd9\u4e2a\u7c7b\u5225\u3002</p> <p>A06:2021-\u5371\u9669\u6216\u8fc7\u65e7\u7684\u7ec4\u4ef6 \u5728\u4e4b\u524d\u6807\u9898\u4e3a \u4f7f\u7528\u6709\u5df2\u77e5\u5f31\u70b9\u7684\u7ec4\u4ef6\u3002\u5728\u672c\u6b21\u7248\u672c\u4e2d\u4e8e\u4e1a\u754c\u95ee\u5377\u4e2d\u6392\u540d\u7b2c\u4e8c\uff0c\u4f46\u4e5f\u6709\u8db3\u591f\u7684\u7edf\u8ba1\u8d44\u6599\u8ba9\u5b83\u53ef\u4ee5\u8fdb\u5165 Top 10\u3002\u8fd9\u4e2a\u7c7b\u5225\u4ece 2017 \u7248\u672c\u7684\u7b2c\u4e5d\u540d\u722c\u5347\u5230\u7b2c\u516d\uff0c\u4e5f\u662f\u6211\u4eec\u6301\u7eed\u6323\u624e\u505a\u6d4b\u8bd5\u548c\u8bc4\u4f30\u98ce\u9669\u7684\u7c7b\u5225\u3002\u8fd9\u4e5f\u662f\u552f\u4e00\u4e00\u4e2a\u6c92\u6709\u4efb\u4f55 CVE \u80fd\u88ab\u5bf9\u5e94\u5230 CWE \u5167\u7684\u7c7b\u5225\uff0c\u6240\u4ee5\u9884\u8bbe\u7684\u5a01\u80c1\u53ca\u5f71\u54cd\u6743\u91cd\u5728\u8fd9\u7c7b\u5225\u7684\u5206\u6570\u4e0a\u88ab\u9884\u8bbe\u4e3a 5.0\u3002</p> <p>A07:2021-\u8ba4\u8bc1\u53ca\u9a8c\u8bc1\u673a\u5236\u5931\u6548 \u5728\u4e4b\u524d\u6807\u9898\u4e3a \u9519\u8bef\u7684\u8ba4\u8bc1\u673a\u5236\u3002\u5728\u672c\u6b21\u7248\u672c\u4e2d\u7531\u7b2c\u4e8c\u540d\u4e0b\u6ed1\u81f3\u6b64\uff0c\u5e76\u540c\u65f6\u5305\u542b\u4e86\u5c06\u8ba4\u8bc1\u76f8\u5173\u7f3a\u5931\u7684 CWE \u5305\u542b\u5728\u5167\u3002\u8fd9\u4e2a\u7c7b\u5225\u4ecd\u662f Top 10 \u4e0d\u53ef\u7f3a\u5c11\u7684\u4e00\u73af\uff0c\u4f46\u540c\u65f6\u4e5f\u6709\u53d1\u73b0\u73b0\u5728\u6807\u51c6\u5316\u7684\u67b6\u6784\u6709\u534f\u52a9\u964d\u4f4e\u6b21\u98ce\u9669\u53d1\u751f\u673a\u7387\u3002</p> <p>A08:2021-\u8f6f\u4ef6\u53ca\u8d44\u6599\u5b8c\u6574\u6027\u5931\u6548 \u8fd9\u662f 2021 \u5e74\u7248\u672c\u5168\u65b0\u7684\u7c7b\u5225\uff0c\u5e76\u5728\u8f6f\u4ef6\u66f4\u65b0\uff0c\u654f\u611f\u53ca\u91cd\u8981\u8d44\u6599\uff0c\u548c CI/CD \u7ba1\u9053\u4e2d\u5e76\u6c92\u6709\u505a\u5b8c\u6574\u6027\u7684\u786e\u8ba4\u4e3a\u524d\u63d0\u505a\u5047\u8bbe\u5e76\u8fdb\u884c\u8bc4\u4f30\u3002\u5728\u8bc4\u4f30\u4e2d\u5f71\u54cd\u6743\u91cd\u6700\u9ad8\u5206\u7684 CVE/CVSS \u8d44\u6599\u90fd\u4e0e\u8fd9\u7c7b\u5225\u4e2d\u7684 10 \u4e2a CWE \u5bf9\u5e94\u5230\u30022017 \u5e74\u7248\u672c\u4e2d\u4e0d\u5b89\u5168\u7684\u53cd\u5e8f\u5217\u5316\u73b0\u5728\u88ab\u5408\u5e76\u81f3\u6b64\u7c7b\u5225\u3002</p> <p>A09:2021-\u5b89\u5168\u8bb0\u5f55\u53ca\u76d1\u63a7\u5931\u6548 \u5728\u4e4b\u524d\u4e3a\u4e0d\u5b8c\u6574\u7684\u8bb0\u5f55\u53ca\u76d1\u63a7\u5e76\u7eb3\u5165\u5728\u4e1a\u754c\u95ee\u5377\u4e2d\u5728\u672c\u6b21\u5217\u540d\u4e3a\u7b2c\u4e09\u540d\u5e76\u4ece\u4e4b\u524d\u7684\u7b2c\u5341\u540d\u4e0a\u79fb\u3002\u8fd9\u4e2a\u7c7b\u5225\u5c06\u6269\u5145\u53bb\u7eb3\u5165\u66f4\u591a\u76f8\u5173\u7684\u7f3a\u5931\uff0c\u4f46\u8fd9\u4e5f\u662f\u76f8\u5f53\u96be\u53bb\u9a8c\u8bc1\uff0c\u5e76\u6c92\u6709\u76f8\u5f53\u591a\u7684 CVE/CVSS \u8d44\u6599\u53ef\u4ee5\u4f50\u8bc1\u3002\u4f46\u662f\u5728\u8fd9\u4e2a\u7c7b\u5225\u4e2d\u7684\u7f3a\u5931\u4f1a\u76f4\u63a5\u5f71\u54cd\u5230\u6574\u4f53\u5b89\u5168\u7684\u53ef\u89c6\u6027\uff0c\u4e8b\u4ef6\u544a\u8b66\u53ca\u53d6\u8bc1\u3002</p> <p>A10:2021-\u670d\u52a1\u5668\u7aef\u8bf7\u6c42\u4f2a\u9020 \u8fd9\u4e2a\u7c7b\u5225\u662f\u5728\u4e1a\u754c\u95ee\u5377\u6392\u540d\u7b2c\u4e00\u540d\uff0c\u5e76\u5728\u6b64\u7248\u672c\u5167\u7eb3\u5165\u3002\u7531\u8d44\u6599\u663e\u793a\u6b64\u95ee\u9898\u6709\u8f83\u4f4e\u88ab\u9a8c\u6d4b\u6b21\u6570\u548c\u8303\u56f4\uff0c\u4f46\u6709\u9ad8\u4e8e\u5e73\u5747\u7684\u5a01\u80c1\u53ca\u5f71\u54cd\u6743\u91cd\u6bd4\u7387\u3002\u8fd9\u4e2a\u7c7b\u5225\u7684\u51fa\u73b0\u4e5f\u662f\u56e0\u4e3a\u4e1a\u754c\u4e13\u5bb6\u91cd\u590d\u7533\u660e\u8fd9\u7c7b\u5225\u7684\u95ee\u9898\u76f8\u5f53\u91cd\u8981\uff0c\u5373\u4f7f\u5728\u672c\u6b21\u8d44\u6599\u4e2d\u5e76\u6c92\u6709\u8db3\u591f\u7684\u8d44\u6599\u53bb\u663e\u793a\u8fd9\u4e2a\u95ee\u9898\u3002</p>"},{"location":"zh-Hant/A00_2021_Introduction/#_1","title":"\u5206\u6790\u65b9\u6cd5","text":"<p>\u672c\u6b21 Top 10 \u7684\u9009\u62e9\u65b9\u5f0f\u6bd4\u4ee5\u5f80\u66f4\u91cd\u89c6\u8d44\u6599\u5206\u6790\uff0c\u4f46\u5e76\u4e0d\u662f\u5b8c\u5168\u4ee5\u8d44\u6599\u5206\u6790\u4e3a\u4e3b\u3002\u6211\u4eec\u4ece\u8d44\u6599\u5206\u6790\u4e2d\u6311\u9009\u4e86\u516b\u4e2a\u98ce\u9669\u7c7b\u5225\uff0c\u7136\u540e\u7531\u4e1a\u754c\u95ee\u5377\u4e2d\u6311\u9009\u4e24\u4e2a\u98ce\u9669\u7c7b\u5225\u3002\u6211\u4eec\u4ece\u8fc7\u5f80\u7684\u5206\u4eab\u8d44\u6599\u4e2d\u53bb\u4e86\u89e3\uff0c\u5e76\u6709\u6211\u4eec\u4e00\u4e2a\u57fa\u672c\u7684\u7406\u7531\u3002\u539f\u56e0\u662f\u6240\u6709\u7684\u8d44\u5b89\u7814\u7a76\u4eba\u5458\u90fd\u4e0d\u65ad\u7684\u5728\u627e\u65b0\u7684\u5f31\u70b9\u5e76\u627e\u51fa\u65b9\u6cd5\u53bb\u9a8c\u8bc1\u5f31\u70b9\uff0c\u4f46\u4f1a\u9700\u8981\u65f6\u95f4\u624d\u80fd\u5c06\u8fd9\u4e9b\u9a8c\u6d4b\u65b9\u6cd5\u7eb3\u5165\u5230\u65e2\u6709\u7684\u5de5\u5177\u548c\u6d4b\u8bd5\u6d41\u7a0b\u4e2d\u3002\u5f53\u6211\u4eec\u80fd\u6709\u6548\u7684\u5927\u91cf\u6d4b\u8bd5\u8fd9\u4e2a\u5f31\u70b9\u65f6\uff0c\u6709\u53ef\u80fd\u5df2\u7ecf\u8fc7\u4e86\u591a\u5e74\u7684\u65f6\u95f4\u3002\u4e3a\u4e86\u8981\u8ba9\u4e24\u8005\u4e4b\u95f4\u6709\u5e73\u8861\uff0c\u6211\u4eec\u4f7f\u7528\u4e1a\u754c\u95ee\u5377\u8bf7\u6559\u5728\u524d\u7ebf\u7684\u8d44\u5b89\u7814\u7a76\u4e13\u5bb6\u4eec\u5e76\u4e86\u89e3\u4ed6\u4eec\u89c9\u5f97\u6709\u54ea\u4e9b\u662f\u4ed6\u4eec\u89c9\u5f97\u4e25\u91cd\u4f46\u5c1a\u672a\u51fa\u73b0\u5728\u6d4b\u8bd5\u8d44\u6599\u4e2d\u7684\u6f0f\u6d1e\u53ca\u95ee\u9898\u3002</p> <p>\u8fd9\u662f\u51e0\u4e2a\u6211\u4eec\u4e3a\u4e86\u8981\u8ba9 OWASP Top 10 \u66f4\u52a0\u6210\u719f\u7684\u91cd\u8981\u6539\u53d8\u3002</p>"},{"location":"zh-Hant/A00_2021_Introduction/#_2","title":"\u5982\u4f55\u5efa\u6784\u98ce\u9669\u7c7b\u5225","text":"<p>\u6709\u5225\u4e8e\u4e0a\u4e00\u4e2a\u7248\u672c\uff0c\u5728\u8fd9\u6b21\u7684 OWASP Top 10 \u6709\u4e00\u4e9b\u98ce\u9669\u7c7b\u5225\u7684\u4fee\u6539\u3002\u6211\u4eec\u5728\u6b64\u4ee5\u6bd4\u8f83\u9ad8\u7684\u89d2\u5ea6\u8bf4\u660e\u4e00\u4e0b\u8fd9\u6b21\u7684\u7c7b\u5225\u4fee\u6539\u3002</p> <p>\u5728\u4e0a\u4e00\u6b21\u7684\u8d44\u6599\u6536\u96c6\u5f53\u4e2d\uff0c\u6211\u4eec\u5c06\u8d44\u6599\u6536\u96c6\u7684\u91cd\u5fc3\u653e\u5728\u9884\u5148\u5b9a\u4e49\u597d\u7684\u7ea6 30 \u4e2a CWEs \u5e76\u7eb3\u5165\u4e00\u4e2a\u9886\u57df\u4ee5\u6c42\u5176\u4ed6\u7684\u53d1\u73b0\u3002\u4ece\u8fd9\u91cc\u6211\u4eec\u770b\u5230\u7edd\u5927\u591a\u6570\u7684\u7ec4\u7ec7\u90fd\u53ea\u4f1a\u4e13\u6ce8\u5728\u8fd9 30 \u4e2a CWEs \u800c\u4e0d\u5e38\u52a0\u5165\u5176\u4ed6\u4ed6\u4eec\u53ef\u80fd\u53d1\u73b0\u7684 CWEs\u3002\u5728\u8fd9\u6b21\u7684\u6539\u7248\u4e2d\uff0c\u6211\u4eec\u5c06\u6240\u6709\u7684\u95ee\u9898\u90fd\u4ee5\u5f00\u653e\u5f0f\u7684\u65b9\u6cd5\u5904\u7406\uff0c\u5e76\u6c92\u6709\u9650\u5236\u5728\u4efb\u4f55\u4e00\u4e2a CWEs\u3002\u6211\u4eec\u8bf7\u6559\u4e86\u4ece 2017 \u5e74\u5f00\u59cb\u6240\u6d4b\u8bd5\u7684\u7f51\u9875\u5e94\u7528\u7a0b\u5f0f\u6570\u91cf\uff0c\u7136\u540e\u5728\u8fd9\u4e9b\u7a0b\u5f0f\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a CWE \u88ab\u53d1\u73b0\u7684\u6570\u91cf\u3002\u8fd9\u4e2a\u683c\u5f0f\u8ba9\u6211\u4eec\u80fd\u591f\u8ffd\u8e2a\u6bcf\u4e2a CWE \u8ddf\u6240\u6709\u88ab\u9a8c\u6d4b\u53ca\u7edf\u8ba1\u7684\u5e94\u7528\u7a0b\u5f0f\u7684\u6570\u91cf\u8ddf\u5173\u7cfb\u3002\u6211\u4eec\u4e5f\u5ffd\u7565\u4e86 CWE \u51fa\u73b0\u7684\u9891\u7387\uff0c\u867d\u7136\u5728\u67d0\u4e9b\u72b6\u51b5\u4e0b\u8fd9\u4e5f\u8bb8\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u8fd9\u5374\u9690\u85cf\u4e86\u98ce\u9669\u7c7b\u5225\u672c\u8eab\u4e0e\u5e94\u7528\u7a0b\u5f0f\u6570\u91cf\u6574\u4f53\u7684\u5173\u7cfb\u3002\u6240\u4ee5\u4e00\u4e2a\u5e94\u7528\u7a0b\u5f0f\u6709 4 \u4e2a\u6216\u662f 4,000 \u4e2a\u5f31\u70b9\u5e76\u4e0d\u662f\u88ab\u8ba1\u7b97\u5728 Top 10 \u7684\u57fa\u7840\u3002\u4f46\u540c\u65f6\u6211\u4eec\u4e5f\u4ece\u539f\u672c\u7684 30 \u591a\u4e2a CWEs \u589e\u957f\u5230\u5feb 400 \u591a\u4e2a CWEs \u53bb\u8fdb\u884c\u5206\u6790\u3002\u6211\u4eec\u56e0\u6b64\u4e5f\u8ba1\u5212\u672a\u4f86\u505a\u66f4\u591a\u7684\u8d44\u6599\u5206\u6790\uff0c\u5e76\u5728\u5bf9\u6b64\u7248\u672c\u8fdb\u884c\u8865\u5145\u8bf4\u660e\u3002\u800c\u8fd9\u4e9b\u589e\u52a0\u7684 CWEs \u4e5f\u540c\u65f6\u5f71\u54cd\u4e86\u8fd9\u6b21\u98ce\u9669\u7c7b\u5225\u7684\u89c4\u5212\u3002</p> <p>\u6211\u4eec\u82b1\u4e86\u597d\u51e0\u4e2a\u6708\u5c06 CWEs \u8fdb\u884c\u5206\u7ec4\u8ddf\u5206\u7c7b\uff0c\u800c\u4e14\u5176\u5b9e\u53ef\u4ee5\u4e00\u76f4\u82b1\u66f4\u591a\u65f6\u95f4\u53bb\u505a\u8fd9\u4ef6\u4e8b\u60c5\u3002\u4f46\u6211\u4eec\u5fc5\u987b\u5728\u67d0\u4e00\u4e2a\u65f6\u95f4\u70b9\u505c\u4f4f\u3002\u5728 CWEs \u5f53\u4e2d\uff0c\u540c\u65f6\u6709 \u6839\u672c\u539f\u56e0 \u4ee5\u53ca \u75c7\u72b6 \u7684\u95ee\u9898\uff0c\u800c\u50cf\u662f \"\u52a0\u5bc6\u673a\u5236\u5931\u6548\" \u548c \"\u8bbe\u5b9a\u95ee\u9898\" \u8fd9\u7c7b\u578b\u7684 \u539f\u56e0 \u4e0e \"\u654f\u611f\u8d44\u6599\u5916\u6cc4\" \u548c \"\u963b\u65ad\u670d\u52a1\" \u8fd9\u7c7b\u578b\u7684 \u75c7\u72b6 \u662f\u5bf9\u7acb\u7684\u3002\u56e0\u6b64\u6211\u4eec\u51b3\u5b9a\u5728\u53ef\u4ee5\u7684\u65f6\u5019\u8981\u66f4\u4e13\u6ce8\u4e8e\u5e95\u5c42\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u8fd9\u662f\u53ef\u4ee5\u6709\u6548\u6307\u51fa\u95ee\u9898\u7684\u672c\u4f53\u8ddf\u540c\u65f6\u63d0\u4f9b\u95ee\u9898\u7684\u89e3\u51b3\u5927\u65b9\u5411\u3002\u4e13\u6ce8\u5728\u95ee\u9898\u6838\u5fc3\u800c\u4e0d\u5c06\u91cd\u5fc3\u653e\u5728\u75c7\u72b6\u5e76\u4e0d\u662f\u4e00\u4e2a\u65b0\u7684\u6982\u5ff5 \b\b\uff0cTop Ten \u6709\u53f2\u4ee5\u4f86\u4e00\u76f4\u662f\u75c7\u72b6\u8ddf\u95ee\u9898\u6838\u5fc3\u7684\u7d9c\u5408\u4f53\uff0c\u53ea\u662f\u8fd9\u6b21\u6211\u4eec\u66f4\u523b\u610f\u7684\u5c06\u4ed6\u7a81\u663e\u51fa\u4f86\u3002\u5728\u8fd9\u6b21\u7684\u65b0\u7248\u672c\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u7c7b\u5225\u5167\u7684\u5e73\u5747\u6709 19.6 \u4e2a CWE\uff0c\u800c\u6700\u4f4e\u7684 A10:2021-\u670d\u52a1\u5668\u7aef\u8bf7\u6c42\u4f2a\u9020 \u6709\u4e00\u4e2a CWE \u5230 A04:2021-\u4e0d\u5b89\u5168\u8bbe\u8ba1 \u6709\u56db\u5341\u4e2a CWE\u3002\u8fd9\u4e2a\u65b0\u7684\u7c7b\u5225\u67b6\u6784\u80fd\u63d0\u4f9b\u4f01\u4e1a\u66f4\u591a\u7684\u8d44\u5b89\u8bad\u7ec3\u7684\u597d\u5904\uff0c\u56e0\u4e3a\u5728\u65b0\u7684\u67b6\u6784\u4e0b\u53ef\u4ee5\u66f4\u4e13\u6ce8\u5728\u67d0\u4e2a\u8bed\u7cfb\u6216\u5e73\u53f0\u4e0a\u7684 CWE\u3002</p>"},{"location":"zh-Hant/A00_2021_Introduction/#_3","title":"\u9009\u62e9\u7c7b\u5225\u65f6\u8d44\u6599\u7684\u4f7f\u7528\u65b9\u5f0f","text":"<p>\u5728 2017 \u5e74\uff0c\u6211\u4eec\u7528\u4e8b\u4ef6\u53d1\u751f\u6b21\u6570\u53bb\u5224\u65ad\u53ef\u80fd\u53d1\u751f\u7684\u673a\u7387\u53bb\u9009\u62e9\u7c7b\u5225\uff0c\u7136\u540e\u900f\u8fc7\u4e00\u7fa4\u5728\u4e1a\u754c\u62e5\u6709\u6570\u5341\u5e74\u7ecf\u9a8c\u7684\u4e13\u5bb6\u56e2\u5bf9\u8ba8\u8bba\u5e76\u4f9d\u7167 \u53ef\u53d1\u751f\u6027\uff0c\u53ef\u53d1\u73b0\u6027\uff08\u540c\u53ef\u80fd\u6027\uff09\uff0c\u548c \u6280\u672f\u5f71\u54cd\u529b \u53bb\u505a\u6392\u540d\u3002\u5728 2021 \u5e74\uff0c\u6211\u4eec\u5e0c\u671b\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\u7528\u8d44\u6599\u8bc1\u660e\u53ef\u53d1\u751f\u6027\u548c\u6280\u672f\u5f71\u54cd\u6027\u3002</p> <p>\u6211\u4eec\u4e0b\u8f7d\u4e86 OWASP Depndency Check \u5e76\u53d6\u51fa\u4e86 CVSS \u6f0f\u6d1e\uff0c\u5e76\u5c06\u76f8\u5173\u7684 CWE \u7528\u5f71\u54cd\u529b\u5206\u6570\u5206\u7fa4\u3002\u8fd9\u82b1\u4e86\u4e00\u4e9b\u65f6\u95f4\u548c\u529b\u6c14\u53bb\u7814\u7a76\u56e0\u4e3a\u6240\u6709\u7684 CVEs \u90fd\u6709 CVSSv2 \u5206\u6570\uff0c\u4f46\u662f\u5728\u5176\u4e2d\u56e0\u4e3a CVSSv2 \u8ddf CVSSv3 \u4e4b\u95f4\u6709\u4e00\u4e9b\u7f3a\u5931\u662f\u5fc5\u987b\u88ab\u4fee\u6b63\u7684\u3002\u7ecf\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u6240\u6709\u7684 CVEs \u90fd\u4f1a\u6709\u5bf9\u5e94\u7684 CVSSv3 \u7684\u5206\u6570\u3002\u518d\u8005\uff0c\u5206\u6570\u7684\u8303\u56f4\u548c\u8ba1\u7b97\u7684\u516c\u5f0f\u5728 CVSSv2 \u548c CVSSv3 \u4e4b\u95f4\u4e5f\u505a\u4e86\u66f4\u65b0\u3002</p> <p>\u5728 CVSSv2 \u4e2d\uff0c\u6f0f\u6d1e\u548c\u5f71\u54cd\u529b\u4e24\u8005\u90fd\u53ef\u8fbe\u5230 10.0 \u5206\uff0c\u4f46\u662f\u516c\u5f0f\u672c\u8eab\u4f1a\u5c06\u4e24\u8005\u8c03\u6574\u4e3a\u6f0f\u6d1e\u5360 60%\uff0c\u7136\u540e\u5f71\u54cd\u529b\u5360 40%\u3002\u5728 CVSSv3 \u4e2d\uff0c\u7406\u8bba\u4e0a\u7684\u6700\u9ad8\u503c\u5c06\u6f0f\u6d1e\u9650\u5236\u5728 6.0 \u5206\u800c\u5f71\u54cd\u529b\u5728 4.0 \u5206\u3002\u5f53\u8003\u7387\u5230\u6743\u91cd\u6bd4\u7387\u65f6\uff0c\u5f71\u54cd\u529b\u7684\u5206\u6570\u4f1a\u504f\u9ad8\uff0c\u5728 CVSSv3 \u4e2d\u51e0\u4e4e\u5e73\u5747\u4f1a\u591a\u51fa 1.5 \u5206\uff0c\u800c\u6f0f\u6d1e\u5206\u6570\u5374\u4f1a\u5e73\u5747\u5c11 0.5 \u5206\u3002</p> <p>\u4ece OWASP Dependcy Check \u7fe0\u53d6\u51fa\u7684 NVD \u8d44\u6599\u5f53\u4e2d\u6709\u5c06\u8fd1 12.5 \u4e07\u7b14 CVE \u8d44\u6599\u6709\u5bf9\u5e94\u5230 CWE\uff0c\u800c\u6709 241 \u7b14\u72ec\u7279\u7684 CWEs \u6709\u5bf9\u5e94\u5230 CVE\u30026.2 \u4e07\u7b14 CWE \u6709\u5bf9\u5e94\u5230 CVSSv3 \u5206\u6570\uff0c\u6240\u4ee5\u5927\u7ea6\u662f\u6574\u4f53\u8d44\u6599\u4e2d\u4e00\u534a\u7684\u90e8\u5206\u3002</p> <p>\u800c\u5728 Top Ten\uff0c\u6211\u4eec\u8ba1\u7b97\u6f0f\u6d1e\u548c\u5f71\u54cd\u529b\u7684\u5e73\u5747\u5206\u6570\u7684\u65b9\u5f0f\u5982\u4e0b\u3002\u6211\u4eec\u5c06\u6240\u6709\u6709 CVSS \u5206\u6570\u7684 CVE \u4f9d\u7167 CWE \u5206\u7ec4\uff0c\u7136\u540e\u4f9d\u7167\u6709 CVSSv3 \u7684\u6f0f\u6d1e\u548c\u5f71\u54cd\u529b\u5728\u6240\u6709\u8d44\u6599\u4e2d\u7684\u767e\u5206\u6bd4\u4f5c\u6743\u91cd\uff0c\u5728\u52a0\u4e0a\u8d44\u6599\u4e2d\u6709 CVSSv2 \u7684\u8d44\u6599\u53bb\u505a\u5e73\u5747\u3002\u6211\u4eec\u5c06\u8fd9\u4e9b\u5e73\u5747\u540e\u7684 CWEs \u5bf9\u5e94\u5230\u8d44\u6599\u4e2d\uff0c\u7136\u540e\u5c06\u4ed6\u7684\u6f0f\u6d1e\u548c\u5f15\u60f3\u529b\u5206\u6570\u4f7f\u7528\u5728\u53e6\u4e00\u534a\u7684\u98ce\u9669\u516c\u5f0f\u4e2d\u3002</p>"},{"location":"zh-Hant/A00_2021_Introduction/#_4","title":"\u4e3a\u4ec0\u4e48\u5c31\u4e0d\u7eaf\u7cb9\u505a\u7edf\u8ba1\u5206\u6790\uff1f","text":"<p>\u8fd9\u4e9b\u8d44\u6599\u7684\u7d50\u679c\u6700\u4e3b\u8981\u662f\u88ab\u9650\u5236\u5728\u80fd\u4f7f\u7528\u81ea\u52a8\u5de5\u5177\u6d4b\u8bd5\u51fa\u4f86\u7684\u7d50\u679c\u3002\u53ef\u662f\u5f53\u4f60\u8ddf\u4e00\u4f4d\u6709\u7ecf\u9a8c\u7684\u5e94\u7528\u7a0b\u5f0f\u5b89\u5168\u4e13\u5bb6\u804a\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u4f1a\u8ddf\u4f60\u8bf4\u7edd\u5927\u591a\u6570\u4ed6\u4eec\u627e\u5230\u7684\u95ee\u9898\u90fd\u4e0d\u5728\u8fd9\u4e9b\u8d44\u6599\u91cc\u9762\u3002\u539f\u56e0\u662f\u4e00\u4e2a\u6d4b\u8bd5\u8981\u88ab\u81ea\u52a8\u5316\u7684\u65f6\u5019\uff0c\u9700\u8981\u82b1\u65f6\u95f4\u53bb\u5f00\u53d1\u8fd9\u4e9b\u5f31\u70b9\u6d4b\u8bd5\u7684\u65b9\u6cd5\u8bba\uff0c\u5f53\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u6d4b\u8bd5\u81ea\u52a8\u5316\u5e76\u80fd\u5bf9\u5927\u91cf\u7684\u5e94\u7528\u7a0b\u5f0f\u53bb\u9a8c\u8bc1\u65f6\uff0c\u53c8\u4f1a\u82b1\u4e0a\u66f4\u591a\u7684\u65f6\u95f4\u3002\u5f53\u6211\u4eec\u56de\u5934\u770b\u53bb\u5e74\u6216\u4ee5\u524d\u6709\u53ef\u80fd\u6c92\u51fa\u73b0\u7684\u4e00\u4e9b\u95ee\u9898\u7684\u8d8b\u52bf\uff0c\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u90fd\u6c92\u6709\u5728\u8fd9\u4e9b\u8d44\u6599\u5f53\u4e2d\u3002</p> <p>\u56e0\u6b64\uff0c\u7531\u4e8e\u8d44\u6599\u4e0d\u5b8c\u5168\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u53ea\u6709\u4ece\u8d44\u6599\u4e2d\u9009\u51fa 8 \u4e2a\u7c7b\u5225\uff0c\u800c\u5e76\u4e0d\u662f 10 \u4e2a\u3002\u5269\u4e0b\u7684\u4e24\u4e2a\u7c7b\u5225\u662f\u4ece\u4e1a\u754c\u95ee\u5377\u4e2d\u6240\u9009\u51fa\u7684\u3002\u8fd9\u4f1a\u5141\u8bb8\u5728\u524d\u7ebf\u7684\u53c3\u4e0e\u8005\u53bb\u9009\u51fa\u4ed6\u4eec\u8ba4\u4e3a\u7684\u9ad8\u98ce\u9669\uff0c\u800c\u4e0d\u662f\u7eaf\u7cb9\u4f9d\u636e\u8d44\u6599\u53bb\u5224\u65ad\uff08\u751a\u81f3\u53ef\u80fd\u8d44\u6599\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u6709\u51fa\u73b0\u7684\u8e2a\u8de1\uff09\u3002</p>"},{"location":"zh-Hant/A00_2021_Introduction/#_5","title":"\u4e3a\u4ec0\u4e48\u7528\u4e8b\u6545\u7387\u800c\u4e0d\u662f\u7528\u53d1\u751f\u6b21\u6570","text":"<p>There are three primary sources of data. We identify them as Human-assisted Tooling (HaT), Tool-assisted Human (TaH), and raw Tooling.</p> <p>Tooling and HaT are high-frequency finding generators. Tools will look for specific vulnerabilities and tirelessly attempt to find every instance of that vulnerability and will generate high finding counts for some vulnerability types. Look at Cross-Site Scripting, which is typically one of two flavors: it's either a more minor, isolated mistake or a systemic issue. When it's a systemic issue, the finding counts can be in the thousands for an application. This high frequency drowns out most other vulnerabilities found in reports or data.</p> <p>TaH, on the other hand, will find a broader range of vulnerability types but at a much lower frequency due to time constraints. When humans test an application and see something like Cross-Site Scripting, they will typically find three or four instances and stop. They can determine a systemic finding and write it up with a recommendation to fix on an application-wide scale. There is no need (or time) to find every instance.</p> <p>Suppose we take these two distinct data sets and try to merge them on frequency. In that case, the Tooling and HaT data will drown the more accurate (but broad) TaH data and is a good part of why something like Cross-Site Scripting has been so highly ranked in many lists when the impact is generally low to moderate. It's because of the sheer volume of findings. (Cross-Site Scripting is also reasonably easy to test for, so there are many more tests for it as well).</p> <p>In 2017, we introduced using incidence rate instead to take a fresh look at the data and cleanly merge Tooling and HaT data with TaH data. The incidence rate asks what percentage of the application population had at least one instance of a vulnerability type. We don't care if it was one-off or systemic. That's irrelevant for our purposes; we just need to know how many applications had at least one instance, which helps provide a clearer view of the testing is findings across multiple testing types without drowning the data in high-frequency results.</p>"},{"location":"zh-Hant/A00_2021_Introduction/#what-is-your-data-collection-and-analysis-process","title":"What is your data collection and analysis process?","text":"<p>We formalized the OWASP Top 10 data collection process at the Open Security Summit in 2017. OWASP Top 10 leaders and the community spent two days working out formalizing a transparent data collection process. The 2021 edition is the second time we have used this methodology.</p> <p>We publish a call for data through social media channels available to us, both project and OWASP. On the OWASP Project page, we list the data elements and structure we are looking for and how to submit them. In the GitHub project, we have example files that serve as templates. We work with organizations as needed to help figure out the structure and mapping to CWEs.</p> <p>We get data from organizations that are testing vendors by trade, bug bounty vendors, and organizations that contribute internal testing data. Once we have the data, we load it together and run a fundamental analysis of what CWEs map to risk categories. There is overlap between some CWEs, and others are very closely related (ex. Cryptographic vulnerabilities). Any decisions related to the raw data submitted are documented and published to be open and transparent with how we normalized the data.</p> <p>We look at the eight categories with the highest incidence rates for inclusion in the Top 10. We also look at the industry survey results to see which ones may already be present in the data. The top two votes that aren't already present in the data will be selected for the other two places in the Top 10. Once all ten were selected, we applied generalized factors for exploitability and impact; to help rank the Top 10 in order.</p>"},{"location":"zh-Hant/A00_2021_Introduction/#data-factors","title":"Data Factors","text":"<p>There are data factors that are listed for each of the Top 10 Categories, here is what they mean:</p> <ul> <li> <p>CWEs Mapped: The number of CWEs mapped to a category by the Top 10   team.</p> </li> <li> <p>Incidence Rate: Incidence rate is the percentage of applications   vulnerable to that CWE from the population tested by that org for   that year.</p> </li> <li> <p>(Testing) Coverage: The percentage of applications tested by all   organizations for a given CWE.</p> </li> <li> <p>Weighted Exploit: The Exploit sub-score from CVSSv2 and CVSSv3   scores assigned to CVEs mapped to CWEs, normalized, and placed on a   10pt scale.</p> </li> <li> <p>Weighted Impact: The Impact sub-score from CVSSv2 and CVSSv3   scores assigned to CVEs mapped to CWEs, normalized, and placed on a   10pt scale.</p> </li> <li> <p>Total Occurrences: Total number of applications found to have the   CWEs mapped to a category.</p> </li> <li> <p>Total CVEs: Total number of CVEs in the NVD DB that were mapped to   the CWEs mapped to a category.</p> </li> </ul>"},{"location":"zh-Hant/A00_2021_Introduction/#category-relationships-from-2017","title":"Category Relationships from 2017","text":"<p>There has been a lot of talk about the overlap between the Top Ten risks. By the definition of each (list of CWEs included), there really isn't any overlap. However, conceptually, there can be overlap or interactions based on the higher-level naming. Venn diagrams are many times used to show overlap like this.</p> <p></p> <p>The Venn diagram above represents the interactions between the Top Ten 2017 risk categories. While doing so, a couple of essential points became obvious:</p> <ol> <li> <p>One could argue that Cross-Site Scripting ultimately belongs within     Injection as it's essentially Content Injection. Looking at the 2021     data, it became even more evident that XSS needed to move into     Injection.</p> </li> <li> <p>The overlap is only in one direction. We will often classify a     vulnerability by the end manifestation or \"symptom,\" not the     (potentially deep) root cause. For instance, \"Sensitive Data     Exposure\" may have been the result of a \"Security Misconfiguration\";     however, you won't see it in the other direction. As a result,     arrows are drawn in the interaction zones to indicate which     direction it occurs.</p> </li> <li> <p>Sometimes these diagrams are drawn with everything in A06:2021     Using Components with Known Vulnerabilities. While some of these     risk categories may be the root cause of third-party     vulnerabilities, they are generally managed differently and with     different responsibilities. The other types are typically     representing first-party risks.</p> </li> </ol>"},{"location":"zh-Hant/A00_2021_Introduction/#thank-you-to-our-data-contributors","title":"Thank you to our data contributors","text":"<p>The following organizations (along with some anonymous donors) kindly donated data for over 500,000 applications to make this the largest and most comprehensive application security data set. Without you, this would not be possible.</p> AppSec Labs GitLab Micro Focus Sqreen Cobalt.io HackerOne PenTest-Tools Veracode Contrast Security HCL Technologies Probely WhiteHat (NTT)"},{"location":"zh-Hant/A00_2021_Introduction/#thank-you-to-our-sponsors","title":"Thank you to our sponsors","text":"<p>The OWASP Top 10 2021 team gratefully acknowledge the financial support of Secure Code Warrior and Just Eat.</p> <p></p> <p></p>"},{"location":"zh-Hant/A01_2021-Broken_Access_Control/","title":"A01:2021 \u2013 \u6743\u9650\u63a7\u5236\u5931\u6548","text":""},{"location":"zh-Hant/A01_2021-Broken_Access_Control/#_1","title":"\u5bf9\u7167\u56e0\u7d20","text":"\u53ef\u5bf9\u7167 CWEs \u6570\u91cf \u6700\u5927\u53d1\u751f\u7387 \u5e73\u5747\u53d1\u751f\u7387 \u6700\u5927\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u52a0\u6743\u6f0f\u6d1e \u5e73\u5747\u52a0\u6743\u5f71\u54cd \u51fa\u73b0\u6b21\u6570 \u6240\u6709\u76f8\u5173 CVEs \u6570\u91cf 34 55.97% 3.81% 94.55% 47.72% 6.92 5.93 318,487 19,013"},{"location":"zh-Hant/A01_2021-Broken_Access_Control/#_2","title":"\u6982\u8ff0","text":"<p>\u4ece\u7b2c\u4e94\u540d\u664b\u5347\u81f3\u7b2c\u4e00\u540d\uff0c94% \u88ab\u6d4b\u8bd5\u7684\u5e94\u7528\u7a0b\u5f0f\uff0c\u90fd\u6709\u88ab\u9a8c\u6d4b\u5230\u67d0\u79cd\u7c7b\u5225\u6743\u9650\u63a7\u5236\u5931\u6548\u7684\u95ee\u9898\u3002\u8457\u540d\u7684 CWE \u5305\u62ec CWE-200\uff1aExposure of Sensitive Information to an Unauthorized Actor\uff0cCWE-201\uff1aExposure of Sensitive Information Through Sent Data \u548c *CWE-352 Cross-Site Request Forgery\u3002</p>"},{"location":"zh-Hant/A01_2021-Broken_Access_Control/#_3","title":"\u63cf\u8ff0","text":"<p>\u5b58\u53d6\u63a7\u5236\u5f37\u5316\u653f\u7b56\uff0c\u4f7f\u7528\u6237\u4e0d\u80fd\u91c7\u53d6\u5728\u9884\u671f\u6743\u9650\u4e4b\u5916\u7684\u884c\u52a8\u3002\u63a7\u5236\u5931\u6548\u901a\u5e38\u4f1a\u5bfc\u81f4\u672a\u7ecf\u6388\u6743\u7684\u8d44\u8baf\u6cc4\u6f0f\u3001\u4fee\u6539\u6216\u635f\u574f\u6240\u6709\u8d44\u6599\uff0c\u6216\u6267\u884c\u8d85\u51fa\u7528\u6237\u6743\u9650\u7684\u4e1a\u52a1\u529f\u80fd\u3002\u5e38\u89c1\u7684\u5b58\u53d6\u63a7\u5236\u5f31\u70b9\u5305\u62ec\uff1a</p> <ul> <li> <p>\u901a\u8fc7\u4fee\u6539 URL\u3001\u5167\u90e8\u5e94\u7528\u7a0b\u5f0f\u72b6\u6001\u6216 HTML \u9875\u9762\uff0c\u6216\u4ec5\u4f7f\u7528\u81ea\u5b9a\u4e49 API \u653b\u51fb\u5de5\u5177\u4f86\u7ed5\u8fc7\u5b58\u53d6\u63a7\u5236\u68c0\u67e5\u3002</p> </li> <li> <p>\u5bb9\u8bb8\u4e3b\u952e\u88ab\u66f4\u6539\u4e3a\u5176\u4ed6\u7528\u6237\u7684\u8bb0\u5f55\uff0c\u5141\u8bb8\u67e5\u770b\u6216\u7f16\u8f91\u5176\u4ed6\u4eba\u7684\u8d26\u6237\u3002</p> </li> <li> <p>\u7279\u6743\u63d0\u5347\u3002\u672a\u767b\u5165\u5373\u6210\u4e3a\u7528\u6237\uff0c\u6216\u4ee5\u7528\u6237\u8eab\u4efd\u767b\u5165\u5373\u6210\u4e3a\u7ba1\u7406\u5458\u3002</p> </li> <li> <p>\u5143\u6570\u636e\u64cd\u4f5c\uff0c\u4f8b\u5982\u91cd\u653e\u6216\u7be1\u6539 JSON \u7f51\u7ad9\u4ee4\u724c(JWT)\u4e4b\u5b58\u53d6\u63a7\u5236\u4ee4\u724c\uff0c\u6216\u88ab\u64cd\u7eb5\u4ee5\u63d0\u5347\u7279\u6743\u6216\u6ee5\u7528 JWT \u5931\u6548\u7684 cookie \u6216\u9690\u85cf\u57df\u5185\u5bb9\u3002</p> </li> <li> <p>CORS \u9519\u8bef\u914d\u7f6e\u5141\u8bb8\u672a\u7ecf\u6388\u6743\u7684 API \u5b58\u53d6\u3002</p> </li> <li> <p>\u4ee5\u672a\u7ecf\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u8eab\u4efd\u5f37\u5236\u6d4f\u89c8\u5df2\u9a8c\u8bc1\u7684\u9875\u9762\u6216\u4ee5\u6807\u51c6\u7528\u6237\u8eab\u4efd\u5b58\u53d6\u7279\u6743\u9875\u9762\u3002\u5b58\u53d6\u7f3a\u5c11\u5b58\u53d6\u63a7\u5236\u7684 API \u4ee5\u8fdb\u884c POST\u3001PUT \u548c DELETE \u64cd\u4f5c\u3002</p> </li> </ul>"},{"location":"zh-Hant/A01_2021-Broken_Access_Control/#_4","title":"\u5982\u4f55\u9884\u9632","text":"<p>\u5b58\u53d6\u63a7\u5236\u4ec5\u5728\u53d7\u4fe1\u4efb\u7684\u670d\u52a1\u5668\u7aef\u4ee3\u7801\u6216\u65e0\u670d\u52a1\u5668\u7684 API \u6709\u6548\uff0c\u653b\u51fb\u8005\u65e0\u6cd5\u4fee\u6539\u8fd9\u91cc\u7684\u5b58\u53d6\u63a7\u5236\u68c0\u67e5\u6216\u5143\u6570\u636e\u3002</p> <ul> <li> <p>\u9664\u516c\u5f00\u7684\u8d44\u6e90\u5916\uff0c\u9ed8\u8ba4\u4e3a\u62d2\u7edd\u5b58\u53d6\u3002</p> </li> <li> <p>\u4e00\u6b21\u6027\u5730\u5efa\u7f6e\u5b58\u53d6\u63a7\u5236\u673a\u5236\uff0c\u4e4b\u540e\u5728\u6574\u4e2a\u5e94\u7528\u7a0b\u5f0f\u4e2d\u91cd\u590d\u4f7f\u7528\u5b83\u4eec\uff0c\u5305\u62ec\u6700\u5927\u9650\u5ea6\u5730\u6e1b\u5c11\u4f7f\u7528 CORS\u3002</p> </li> <li> <p>\u6a21\u578b\u7684\u5b58\u53d6\u63a7\u5236\u63aa\u65bd\u5e94\u8be5\u5f37\u5316\u8bb0\u5f55\u6240\u6709\u6743\uff0c\u800c\u4e0d\u662f\u8ba9\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u3001\u8bfb\u53d6\u3001\u66f4\u65b0\u6216\u522a\u9664\u4efb\u4f55\u8bb0\u5f55\u3002</p> </li> <li> <p>\u72ec\u7279\u7684\u5e94\u7528\u7a0b\u5f0f\u4e1a\u52a1\u9650\u5236\u8981\u6c42\u5e94\u7531\u9886\u57df\u6a21\u578b\u4e88\u4ee5\u5f37\u5316\u3002</p> </li> <li> <p>\u505c\u7528 Web \u670d\u52a1\u5668\u76ee\u5f55\u5217\u8868\uff0c\u5e76\u786e\u4fdd\u6863\u6848\u5143\u6570\u636e\uff08\u4f8b\u5982\uff0c.git)\u548c\u5907\u4efd\u6863\u6848\u4e0d\u5728 web \u6839\u76ee\u5f55\u4e2d\u3002</p> </li> <li> <p>\u8bb0\u5f55\u5b58\u53d6\u63a7\u5236\u5931\u6548\uff0c\u5e76\u5728\u9002\u5f53\u7684\u65f6\u95f4\u8b66\u793a\u7ba1\u7406\u5458\uff08\u4f8b\u5982\uff0c\u91cd\u8986\u6027\u5931\u6548\uff09\u3002</p> </li> <li> <p>\u5bf9 API \u548c\u63a7\u5236\u5668\u5b58\u53d6\u8fdb\u884c\u6d41\u91cf\u9650\u5236\uff0c\u4ee5\u6700\u5c0f\u5316\u81ea\u52a8\u653b\u51fb\u5de5\u5177\u6240\u5e36\u4f86\u7684\u635f\u5bb3\u3002</p> </li> <li> <p>JWT \u4ee4\u724c\u4e8e\u767b\u51fa\u540e\uff0c\u5728\u670d\u52a1\u5668\u7aef\u5e94\u4f7f\u5176\u5931\u6548\u3002</p> </li> </ul> <p>\u5f00\u53d1\u4eba\u5458\u548c QA \u54c1\u4fdd\u4eba\u5458\u5e94\u7eb3\u5165\u4e0e\u529f\u80fd\u6709\u5173\u4e4b\u5b58\u53d6\u63a7\u5236\u7684\u5355\u5143\u548c\u6574\u5408\u6d4b\u8bd5\u3002</p>"},{"location":"zh-Hant/A01_2021-Broken_Access_Control/#_5","title":"\u653b\u51fb\u60c5\u5883\u8303\u4f8b","text":"<p>\u60c5\u5883 #1\uff1a \u5e94\u7528\u7a0b\u5f0f\u5728\u5b58\u53d6\u8d26\u6237\u8d44\u8baf\u7684 SQL \u547c\u53eb\u4e2d\u4f7f\u7528\u672a\u7ecf\u9a8c\u8bc1\u7684\u8d44\u6599\uff1a</p> <p>pstmt.setString(1, request.getParameter(\"acct\"));</p> <p>ResultSet results = pstmt.executeQuery( );</p> <p>\u653b\u51fb\u8005\u53ea\u9700\u4fee\u6539\u6d4f\u89c8\u5668\u7684\u201cacct\u201d\u53c3\u6570\u5373\u53ef\u53d1\u9001\u4ed6\u4eec\u60f3\u8981\u7684\u4efb\u4f55\u8d26\u53f7\u3002\u5982\u679c\u6c92\u6709\u6b63\u786e\u9a8c\u8bc1\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5b58\u53d6\u4efb\u4f55\u7528\u6237\u7684\u8d26\u6237\u3002</p> <p>https://example.com/app/accountInfo?acct=notmyacct</p> <p>\u60c5\u5883#2\uff1a \u653b\u51fb\u8005\u4ec5\u5f37\u8feb\u6d4f\u89c8\u67d0\u4e9b\u76ee\u6807\u7f51\u5740\u3002\u5b58\u53d6\u7ba1\u7406\u9875\u9762\u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\u3002</p> <p>https://example.com/app/getappInfo</p> <p>https://example.com/app/admin_getappInfo</p> <p>\u5982\u679c\u672a\u7ecf\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u53ef\u4ee5\u5b58\u53d6\u4efb\u4e00\u9875\u9762\uff0c\u90a3\u5c31\u662f\u4e00\u4e2a\u7f3a\u9677\u3002 \u5982\u679c\u4e00\u4e2a\u975e\u7ba1\u7406\u5458\u53ef\u4ee5\u5b58\u53d6\u7ba1\u7406\u9875\u9762\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e2a\u7f3a\u9677\u3002</p>"},{"location":"zh-Hant/A01_2021-Broken_Access_Control/#_6","title":"\u53c3\u8003","text":"<ul> <li> <p>OWASP Proactive Controls: Enforce Access   Controls</p> </li> <li> <p>OWASP Application Security Verification Standard: V4 Access   Control</p> </li> <li> <p>OWASP Testing Guide: Authorization   Testing</p> </li> <li> <p>OWASP Cheat Sheet: Access Control</p> </li> <li> <p>OWASP Cheat Sheet: Authorization</p> </li> <li> <p>PortSwigger: Exploiting CORS   misconfiguration</p> </li> <li>OAuth: Revoking Access</li> </ul>"},{"location":"zh-Hant/A01_2021-Broken_Access_Control/#cwe","title":"\u5bf9\u5e94\u7684 CWE \u5217\u8868","text":"<p>CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</p> <p>CWE-23 Relative Path Traversal</p> <p>CWE-35 Path Traversal: '.../...//'</p> <p>CWE-59 Improper Link Resolution Before File Access ('Link Following')</p> <p>CWE-200 Exposure of Sensitive Information to an Unauthorized Actor</p> <p>CWE-201 Exposure of Sensitive Information Through Sent Data</p> <p>CWE-219 Storage of File with Sensitive Data Under Web Root</p> <p>CWE-264 Permissions, Privileges, and Access Controls (should no longer be used)</p> <p>CWE-275 Permission Issues</p> <p>CWE-276 Incorrect Default Permissions</p> <p>CWE-284 Improper Access Control</p> <p>CWE-285 Improper Authorization</p> <p>CWE-352 Cross-Site Request Forgery (CSRF)</p> <p>CWE-359 Exposure of Private Personal Information to an Unauthorized Actor</p> <p>CWE-377 Insecure Temporary File</p> <p>CWE-402 Transmission of Private Resources into a New Sphere ('Resource Leak')</p> <p>CWE-425 Direct Request ('Forced Browsing')</p> <p>CWE-441 Unintended Proxy or Intermediary ('Confused Deputy')</p> <p>CWE-497 Exposure of Sensitive System Information to an Unauthorized Control Sphere</p> <p>CWE-538 Insertion of Sensitive Information into Externally-Accessible File or Directory</p> <p>CWE-540 Inclusion of Sensitive Information in Source Code</p> <p>CWE-548 Exposure of Information Through Directory Listing</p> <p>CWE-552 Files or Directories Accessible to External Parties</p> <p>CWE-566 Authorization Bypass Through User-Controlled SQL Primary Key</p> <p>CWE-601 URL Redirection to Untrusted Site ('Open Redirect')</p> <p>CWE-639 Authorization Bypass Through User-Controlled Key</p> <p>CWE-651 Exposure of WSDL File Containing Sensitive Information</p> <p>CWE-668 Exposure of Resource to Wrong Sphere</p> <p>CWE-706 Use of Incorrectly-Resolved Name or Reference</p> <p>CWE-862 Missing Authorization</p> <p>CWE-863 Incorrect Authorization</p> <p>CWE-913 Improper Control of Dynamically-Managed Code Resources</p> <p>CWE-922 Insecure Storage of Sensitive Information</p> <p>CWE-1275 Sensitive Cookie with Improper SameSite Attribute</p>"},{"location":"zh-Hant/A02_2021-Cryptographic_Failures/","title":"A02:2021 \u2013 \u52a0\u5bc6\u6a5f\u5236\u5931\u6548","text":""},{"location":"zh-Hant/A02_2021-Cryptographic_Failures/#_1","title":"\u5f31\u70b9\u56e0\u7d20","text":"\u53ef\u5bf9\u7167 CWEs \u6570\u91cf \u6700\u5927\u53d1\u751f\u7387 \u5e73\u5747\u53d1\u751f\u7387 \u6700\u5927\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u52a0\u6743\u6f0f\u6d1e \u5e73\u5747\u52a0\u6743\u5f71\u54cd \u51fa\u73b0\u6b21\u6570 \u6240\u6709\u76f8\u5173 CVEs \u6570\u91cf 29 46.44% 4.49% 79.33% 34.85% 7.29 6.81 233,788 3,075"},{"location":"zh-Hant/A02_2021-Cryptographic_Failures/#_2","title":"\u5f31\u70b9\u7c21\u4ecb","text":"<p>\u4e0a\u5347\u4e00\u4e2a\u540d\u6b21\u4f86\u5230\u7b2c\u4e8c\u540d\uff0c\u4e4b\u524d\u7248\u672c\u79f0\u4e3a\"\u654f\u611f\u6027\u8d44\u6599\u6cc4\u6f0f\"\uff0c\u66f4\u50cf\u662f\u4e00\u79cd\u5e7f\u6cdb\u7684\u75c7\u72b6\u800c\u975e\u6839\u56e0\uff0c\u672c\u7248\u672c\u805a\u7126\u4e8e\u5bc6\u7801\u5b66\u76f8\u5173\u7684\u5931\u6548(\u6216\u7f3a\u4e4f\u52a0\u5bc6)\uff0c\u5e76\u56e0\u6b64\u5e38\u5e38\u5bfc\u81f4\u654f\u611f\u8d44\u6599\u7684\u6cc4\u6f0f\u3002\u8457\u540d\u7684 CWE \u5305\u542b\"CWE259: Use of Hard-coded Password\", \"CWE-327: Broken or Risky Crypto Algorithm\", \u4ee5\u53ca\"CWE-331: Insufficient Entropy\"\u3002</p>"},{"location":"zh-Hant/A02_2021-Cryptographic_Failures/#_3","title":"\u5f31\u70b9\u63cf\u8ff0","text":"<p>\u9996\u5148\u786e\u5b9a\u975c\u6001\u8d44\u6599\u53ca\u8d44\u6599\u4f20\u8f93\u7684\u9632\u62a4\u9700\u6c42\uff0c\u4e3e\u4f8b\u4f86\u8bf4\uff0c\u5bc6\u7801\u3001\u4fe1\u7528\u5361\u5361\u53f7\u3001\u5065\u5eb7\u8bb0\u5f55\u3001\u4e2a\u8d44\u3001\u4ee5\u53ca\u9700\u8981\u989d\u5916\u4fdd\u62a4\u7684\u8425\u4e1a\u7955\u5bc6...\u7b49\u7b49\u4e3b\u8981\u88ab\u9690\u79c1\u6cd5\u6240\u4fdd\u62a4\u7684\u8d44\u6599\uff0c\u5982\u6b27\u76df GDPR \u6216 PCIDSS \u7b49\u7b49\u91d1\u878d\u4e1a\u76f8\u5173\u7684\u8d44\u6599\u4fdd\u62a4\u6cd5\u6216\u6807\u51c6\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u8d44\u6599\u9700\u8003\u91cf:</p> <ul> <li> <p>\u662f\u5426\u4ee5\u660e\u6587\u5f62\u5f0f\u4f20\u8f93\u4efb\u4f55\u6570\u636e? \u50cf\u662f HTTP, SMTP, FTP \u7b49\u7b49\u534f\u5b9a\uff0c\u4f7f\u7528\u4e8e\u5bf9\u5916\u7f51\u9645\u7f51\u7edc\u7684\u6d41\u91cf\u662f\u5371\u9669\u7684\u3002\u5fc5\u987b\u9a8c\u8bc1\u6240\u6709\u7684\u5167\u90e8\u6d41\u91cf\uff0c\u5982\u5728\u8d1f\u8f7d\u5e73\u8861\u5668\u3001\u7f51\u7ad9\u670d\u52a1\u5668\u3001\u6216\u540e\u7aef\u7cfb\u7edf\u4e4b\u95f4 \u3002</p> </li> <li> <p>\u662f\u5426\u6709\u4efb\u4f55\u8001\u65e7\u6216\u8106\u5f31\u7684\u52a0\u5bc6\u6f14\u7b97\u6cd5\u88ab\u9884\u8bbe\u4f7f\u7528\u6216\u5b58\u5728\u4e8e\u8f83\u65e7\u7684\u7a0b\u5f0f\u7801?</p> </li> <li> <p>\u662f\u5426\u6b63\u5728\u4f7f\u7528\u9ed8\u8ba4\u7684\u52a0\u5bc6\u5bc6\u94a5\u3001\u662f\u5426\u751f\u6210\u4e86\u5f31\u52a0\u5bc6\u5bc6\u94a5\u5e76\u91cd\u590d\u4f7f\u7528\uff0c\u662f\u5426\u6709\u9002\u5f53\u7684\u5bc6\u94a5\u7ba1\u7406\u6216\u8f6e\u6362?\u52a0\u5bc6\u5bc6\u94a5\u662f\u5426\u88ab\u5199\u5165\u6e90\u4ee3\u7801\u4e2d\uff1f</p> </li> <li> <p>\u662f\u5426\u672a\u5f3a\u5236\u6267\u884c\u52a0\u5bc6? \u4e3e\u4f8b: HTTP headers(\u6d4f\u89c8\u5668)\u662f\u5426\u6709\u9057\u5931\u5b89\u5168\u76f8\u5173\u7684\u6307\u4ee4\u6216\u5934\u4fe1\u606f?</p> </li> <li> <p>\u6536\u5230\u7684\u670d\u52a1\u5668\u8bc1\u4e66\u548c\u4fe1\u4efb\u94fe\u662f\u5426\u6b63\u786e\u9a8c\u8bc1\uff1f</p> </li> </ul> <p>\u8bf7\u53c3\u8003 ASVS \u52a0\u5bc6(V7), \u8d44\u6599\u4fdd\u62a4(V9), \u53ca SSL/TLS(V10)\u3002</p>"},{"location":"zh-Hant/A02_2021-Cryptographic_Failures/#_4","title":"\u5982\u4f55\u9884\u9632","text":"<p>\u81f3\u5c11\u6267\u884c\u4ee5\u4e0b\u63aa\u65bd\uff0c\u5e76\u53c2\u8003\u76f8\u5173\u8d44\u6599:</p> <ul> <li> <p>\u5bf9\u5e94\u7528\u7a0b\u5f0f\u5904\u7406\u3001\u5b58\u50a8\u3001\u4f20\u8f93\u7684\u8d44\u6599\u8fdb\u884c\u5206\u7c7b\uff0c\u6839\u636e\u9690\u79c1\u6cd5\u3001\u6cd5\u4ee4\u6cd5\u89c4\u3001\u6216\u5546\u4e1a\u9700\u6c42\u8fa8\u8ba4\u54ea\u4e9b\u4e3a\u654f\u611f\u6027\u8d44\u6599\u3002</p> </li> <li> <p>\u4f9d\u7167\u5206\u7c7b\u6267\u884c\u5bf9\u5e94\u7684\u63a7\u5236\u63aa\u65bd\u3002</p> </li> <li> <p>\u975e\u5fc5\u8981\u4e0d\u50a8\u5b58\u654f\u611f\u6027\u8d44\u6599\uff0c\u5c3d\u5feb\u820d\u5f03\u6216\u4f7f\u7528\u7b26\u5408 PCIDSS \u7684\u8d44\u6599\u8bb0\u53f7\u5316(tokenization)\u751a\u81f3\u622a\u65ad(truncation)\u3002 \u6c92\u6709\u88ab\u4fdd\u5b58\u7684\u6570\u636e\u662f\u4e0d\u4f1a\u88ab\u7a83\u53d6\u7684\u3002</p> </li> <li> <p>\u786e\u4fdd\u5c06\u6240\u6709\u975c\u6001\u7684\u654f\u611f\u6027\u8d44\u6599\u52a0\u5bc6\u3002</p> </li> <li> <p>\u786e\u8ba4\u4f7f\u7528\u6700\u65b0\u7248\u4e14\u6807\u51c6\u7684\u5f37\u6f14\u7b97\u6cd5\u3001\u534f\u5b9a\u53ca\u5bc6\u94a5; \u4f7f\u7528\u9002\u5f53\u7684\u5bc6\u94a5\u7ba1\u7406\u3002</p> </li> <li> <p>\u4f7f\u7528\u5b89\u5168\u7684\u534f\u5b9a\u52a0\u5bc6\u4f20\u8f93\u4e2d\u7684\u8d44\u6599\uff0c\u50cf\u662f\u6709\u5b8c\u5168\u524d\u5411\u4fdd\u5bc6(PFS)\u3001\u670d\u52a1\u5668\u52a0\u5bc6\u4f18\u5148\u987a\u5e8f(cipher prioritization by the server)\u53ca\u5b89\u5168\u53c3\u6570\u7684 TLS\u3002 \u4f7f\u7528\u5982 HTTP \u5f37\u5236\u5b89\u5168\u4f20\u8f93\u6280\u672f(HSTS)\u7684\u6307\u4ee4\u5f37\u5316\u52a0\u5bc6\u3002</p> </li> <li> <p>\u9488\u5bf9\u5305\u542b\u654f\u611f\u8d44\u6599\u7684\u56de\u5e94\u505c\u7528\u7f13\u5b58\u3002</p> </li> <li> <p>\u4f7f\u7528\u5177\u6709\u6563\u5217/\u5ef6\u8fdf\u56e0\u7d20(work factor/delay factor)\uff0c\u5982 Argon2, scrypt, bcrypt \u6216 PBKDF2 \u7684\u5f37\u81ea\u9002\u5e94\u6027\u52a0\u76d0\u6563\u5217\u51fd\u6570\u4f86\u50a8\u5b58\u5bc6\u7801\u3002</p> </li> <li> <p>\u72ec\u7acb\u9a8c\u8bc1\u8bbe\u5b9a\u7684\u6709\u6548\u6027\u3002</p> </li> </ul>"},{"location":"zh-Hant/A02_2021-Cryptographic_Failures/#_5","title":"\u653b\u51fb\u60c5\u5883\u8303\u4f8b","text":"<p>\u60c5\u5883 #1: \u6709\u4e00\u4e2a\u5e94\u7528\u7a0b\u5f0f\u4f7f\u7528\u81ea\u52a8\u5316\u8d44\u6599\u5e93\u52a0\u5bc6\u4f86\u52a0\u5bc6\u8d44\u6599\u5e93\u4e2d\u7684\u4fe1\u7528\u5361\u5361\u53f7\uff0c\u4f46\u662f\u8d44\u6599\u88ab\u68c0\u7d22\u65f6\u662f\u88ab\u81ea\u52a8\u89e3\u5bc6\u7684\uff0c\u8fdb\u800c\u5141\u8bb8\u900f\u8fc7 SQL \u6ce8\u5165\u7f3a\u9677\u4f86\u68c0\u7d22\u4fe1\u7528\u5361\u5361\u53f7\u660e\u6587\u3002</p> <p>\u60c5\u5883 #2: \u6709\u4e00\u4e2a\u7ad9\u53f0\u6c92\u6709\u5bf9\u6240\u6709\u9875\u9762\u5f37\u5236\u4f7f\u7528 TLS \u6216\u652f\u63f4\u8106\u5f31\u7684\u52a0\u5bc6\uff0c\u653b\u51fb\u8005\u76d1\u63a7\u7f51\u7edc\u6d41\u91cf(\u5982\u5728\u4e0d\u5b89\u5168\u7684\u65e0\u7ebf\u7f51\u7edc), \u5c06\u8fde\u7ebf\u4ece HTTPS \u964d\u7ea7\u6210 HTTP\uff0c\u5e76\u62e6\u622a\u8bf7\u6c42\u7a83\u53d6\u4f7f\u7528\u8005\u7684\u4f1a\u8bdd(session) cookies\uff0c\u4e4b\u540e\u653b\u51fb\u8005\u91cd\u9001\u7a83\u53d6\u5230\u7684\u4f1a\u8bdd(session) cookies \u5e76\u52ab\u6301\u7528\u6237(\u8ba4\u8bc1\u8fc7\u7684)\u7684\u4f1a\u8bdd\uff0c\u8fdb\u800c\u68c0\u7d22\u6216\u4fee\u6539\u4f7f\u7528\u8005\u7684\u9690\u79c1\u8d44\u6599\u3002 \u9664\u4e86\u4e0a\u8ff0\u4ee5\u5916\uff0c\u653b\u51fb\u8005\u4e5f\u80fd\u4fee\u6539\u4f20\u8f93\u7684\u8d44\u6599\uff0c\u5982\u6c47\u6b3e\u6536\u6b3e\u4eba\u3002</p> <p>\u60c5\u5883 #3: \u5bc6\u7801\u8d44\u6599\u5e93\u4f7f\u7528\u672a\u88ab\u52a0\u76d0\u6216\u7b80\u5355\u7684\u6563\u5217\u51fd\u6570\u4f86\u50a8\u5b58\u6bcf\u4e2a\u4eba\u7684\u5bc6\u7801\uff0c\u4e00\u4e2a\u6863\u6848\u4e0a\u4f20\u7684\u7f3a\u9677\u53ef\u4ee5\u8ba9\u653b\u51fb\u8005\u5b58\u53d6\u5bc6\u7801\u8d44\u6599\u5e93\uff0c\u6240\u6709\u672a\u88ab\u52a0\u76d0\u7684\u54c8\u5e0c\u53ef\u4ee5\u88ab\u9884\u5148\u8ba1\u7b97\u597d\u7684\u5f69\u8679\u8868\u89e3\u5bc6\u3002\u5373\u4f7f\u52a0\u76d0\uff0c\u7531\u7b80\u5355\u6216\u5feb\u901f\u7684\u54c8\u5e0c\u4ecd\u80fd\u88ab GPU \u7834\u89e3\u3002</p>"},{"location":"zh-Hant/A02_2021-Cryptographic_Failures/#_6","title":"\u53c3\u8003\u6587\u737b","text":"<ul> <li> <p>OWASP Proactive Controls: Protect Data   Everywhere</p> </li> <li> <p>OWASP Application Security Verification Standard (V7,   9, 10)</p> </li> <li> <p>OWASP Cheat Sheet: Transport Layer   Protection</p> </li> <li> <p>OWASP Cheat Sheet: User Privacy   Protection</p> </li> <li> <p>OWASP Cheat Sheet: Password and Cryptographic Storage</p> </li> <li> <p>OWASP Cheat Sheet:   HSTS</p> </li> <li> <p>OWASP Testing Guide: Testing for weak cryptography</p> </li> </ul>"},{"location":"zh-Hant/A02_2021-Cryptographic_Failures/#cwes","title":"\u5bf9\u5e94\u7684 CWEs \u6e05\u55ae","text":"<p>CWE-261 Weak Encoding for Password</p> <p>CWE-296 Improper Following of a Certificate's Chain of Trust</p> <p>CWE-310 Cryptographic Issues</p> <p>CWE-319 Cleartext Transmission of Sensitive Information</p> <p>CWE-321 Use of Hard-coded Cryptographic Key</p> <p>CWE-322 Key Exchange without Entity Authentication</p> <p>CWE-323 Reusing a Nonce, Key Pair in Encryption</p> <p>CWE-324 Use of a Key Past its Expiration Date</p> <p>CWE-325 Missing Required Cryptographic Step</p> <p>CWE-326 Inadequate Encryption Strength</p> <p>CWE-327 Use of a Broken or Risky Cryptographic Algorithm</p> <p>CWE-328 Reversible One-Way Hash</p> <p>CWE-329 Not Using a Random IV with CBC Mode</p> <p>CWE-330 Use of Insufficiently Random Values</p> <p>CWE-331 Insufficient Entropy</p> <p>CWE-335 Incorrect Usage of Seeds in Pseudo-Random Number Generator(PRNG)</p> <p>CWE-336 Same Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-337 Predictable Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-338 Use of Cryptographically Weak Pseudo-Random Number Generator(PRNG)</p> <p>CWE-340 Generation of Predictable Numbers or Identifiers</p> <p>CWE-347 Improper Verification of Cryptographic Signature</p> <p>CWE-523 Unprotected Transport of Credentials</p> <p>CWE-720 OWASP Top Ten 2007 Category A9 - Insecure Communications</p> <p>CWE-757 Selection of Less-Secure Algorithm During Negotiation('Algorithm Downgrade')</p> <p>CWE-759 Use of a One-Way Hash without a Salt</p> <p>CWE-760 Use of a One-Way Hash with a Predictable Salt</p> <p>CWE-780 Use of RSA Algorithm without OAEP</p> <p>CWE-818 Insufficient Transport Layer Protection</p> <p>CWE-916 Use of Password Hash With Insufficient Computational Effort</p>"},{"location":"zh-Hant/A03_2021-Injection/","title":"A03:2021 \u2013 \u6ce8\u5165\u5f0f\u653b\u51fb","text":""},{"location":"zh-Hant/A03_2021-Injection/#_1","title":"\u5bf9\u7167\u56e0\u7d20","text":"\u53ef\u5bf9\u7167 CWEs \u6570\u91cf \u6700\u5927\u53d1\u751f\u7387 \u5e73\u5747\u53d1\u751f\u7387 \u6700\u5927\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u52a0\u6743\u5f31\u70b9 \u5e73\u5747\u52a0\u6743\u5f71\u70b9 \u51fa\u73b0\u6b21\u6570 \u6240\u6709\u6709\u5173 CVEs \u6570\u91cf 33 19.09% 3.37% 94.04% 47.90% 7.25 7.15 274,228 32,078"},{"location":"zh-Hant/A03_2021-Injection/#_2","title":"\u6982\u8ff0","text":"<p>\u690d\u5165\u5f0f\u653b\u51fb\u4e0b\u6ed1\u5230\u4e86\u7b2c\u4e09\u540d\u3002 94% \u88ab\u6d4b\u8bd5\u7684\u5e94\u7528\u7a0b\u5f0f\u90fd\u6709\u9a8c\u6d4b\u5230\u67d0\u79cd\u7c7b\u578b\u7684\u6ce8\u5165\u5f0f\u653b\u51fb\u95ee\u9898\u3002\u503c\u5f97\u6ce8\u610f\u7684 CWEs \u5305\u62ec\u4e86 CWE-79\uff1a\u8de8\u7f51\u7ad9\u653b\u51fb\u3001CWE-89\uff1aSQL \u6ce8\u5165\u5f0f\u653b\u51fb\u4ee5\u53ca CWE-73\uff1a\u5728\u5916\u90e8\u63a7\u5236\u6863\u6848\u540d\u79f0\u6216\u8def\u5f84</p>"},{"location":"zh-Hant/A03_2021-Injection/#_3","title":"\u63cf\u8ff0","text":"<p>\u5e94\u7528\u7a0b\u5f0f\u5728\u4ee5\u4e0b\u60c5\u51b5\u5bb9\u6613\u906d\u53d7\u653b\u51fb\uff1a</p> <ul> <li> <p>\u5e94\u7528\u7a0b\u5f0f\u672a\u9a8c\u8bc1\u3001\u8fc7\u6ee4\u6216\u6e05\u7406\u4f7f\u7528\u8005\u63d0\u4f9b\u7684\u8d44\u6599\u3002</p> </li> <li> <p>\u5728\u76f4\u8bd1\u5668\u4e2d\u672a\u4f7f\u7528\u4e0a\u4e0b\u6587\u611f\u77e5\u8f6c\u4e49\u7684\u52a8\u6001\u67e5\u8be2\u6216\u65e0\u53c2\u6570\u547c\u53eb\u3002</p> </li> <li> <p>\u5728\u7269\u4ef6\u5173\u7cfb\u5bf9\u6620 (ORM) \u7684\u641c\u5bfb\u53c2\u6570\u4e2d\uff0c\u4f7f\u7528\u6076\u610f\u7684\u8d44\u6599\u6765\u63d0\u53d6\u989d\u5916\u7684\u654f\u611f\u7eaa\u5f55\u3002</p> </li> <li> <p>\u5728\u52a8\u6001\u67e5\u8be2\u3001\u547d\u4ee4\u6216\u50a8\u5b58\u7684\u7a0b\u5e8f\uff0cSQL\u3001\u6307\u4ee4\u6216\u50a8\u5b58\u7684\u7a0b\u5e8f\u4e2d\uff0c\u76f4\u63a5\u4f7f\u7528\u6216\u8fde\u7ed3\u4e86\u6076\u610f\u8d44\u6599\u3002</p> </li> </ul> <p>\u4e00\u4e9b\u5e38\u89c1\u7684\u6ce8\u5165\u5f0f\u653b\u51fb\u662f SQL\u3001NoSQL\u3001OS \u6307\u4ee4\u3001\u7269\u4ef6\u5173\u7cfb\u5bf9\u6620 (ORM)\u3001LDAP \u4ee5\u53ca\u8868\u8fbe\u5f0f\u8bed\u8a00 (EL) \u6216\u5bf9\u8c61\u5bfc\u822a\u56fe\u8bed\u8a00 (OGNL) \u6ce8\u5165\u3002\u8fd9\u4e2a\u6982\u5ff5\u5728\u6240\u6709\u7684\u76f4\u8bd1\u5668\u90fd\u662f\u76f8\u540c\u7684\u3002\u5047\u82e5\u5e94\u7528\u7a0b\u5f0f\u5b58\u5728\u6ce8\u5165\u5f0f\u653b\u51fb\u7684\u5f31\u70b9\uff0c\u6e90\u7801\u68c0\u6d4b\u662f\u6700\u597d\u7684\u65b9\u5f0f\u3002\u5f3a\u70c8\u5efa\u8bae\u5bf9\u6240\u6709\u8f93\u5165\u7684\u53c2\u6570\u3001\u6807\u5934\u3001URL\u3001cookies\u3001JSON\u3001SOAP \u4ee5\u53ca XML \u7684\u8d44\u6599\u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002\u7ec4\u7ec7\u53ef\u4ee5\u5c06\u9759\u6001\u6e90\u7801\u6d4b\u8bd5 (SAST) \u4ee5\u53ca\u52a8\u6001\u5e94\u7528\u7a0b\u5f0f\u68c0\u6d4b (DAST) \u5de5\u5177\uff0c\u5305\u542b\u5230\u6301\u7eed\u6574\u5408\u4e0e\u6301\u7eed\u90e8\u7f72 (CI/CD)\u7ba1\u9053\u4e2d\uff0c\u4ee5\u8fbe\u6210\u5728\u4e0a\u7ebf\u90e8\u7f72\u524d\u80fd\u8bc6\u522b\u6ce8\u5165\u653b\u51fb\u7684\u7f3a\u9677\u3002</p>"},{"location":"zh-Hant/A03_2021-Injection/#_4","title":"\u5982\u4f55\u9884\u9632","text":"<ul> <li> <p>\u9700\u8981\u5c06\u547d\u4ee4\u4e0e\u67e5\u8be2\u8d44\u6599\u5206\u5f00\uff0c\u4ee5\u9632\u6b62\u6ce8\u5165\u5f0f\u653b\u51fb\u3002</p> </li> <li> <p>\u9996\u8981\u7684\u9009\u9879\u662f\u4f7f\u7528\u5b89\u5168\u7684\u5e94\u7528\u7a0b\u5f0f\u754c\u9762 (API)\uff0c\u5b8c\u5168\u907f\u514d\u4f7f\u7528\u76f4\u8bd1\u5668\uff0c\u4ee5\u63d0\u4f9b\u53c2\u6570\u5316\u7684\u754c\u9762\u6216\u6574\u5408\u5230\u7269\u4ef6\u5173\u7cfb\u5bf9\u6620 (ORMs) \u5de5\u5177\u4e2d\u3002</p> </li> <li> <p>\u6ce8\u610f\uff1a\u5373\u4f7f\u5df2\u7ecf\u53c2\u6570\u5316\u4e86\uff0c\u5728\u50a8\u5b58\u7684\u7a0b\u5e8f\u4e2d\u4ecd\u7136\u53ef\u4ee5\u5f15\u5165 SQL \u6ce8\u5165\u653b\u51fb\uff0c\u5982\u679c\u900f\u8fc7 PL/SQL \u6216 T-SQL \u8fde\u63a5\u67e5\u8be2\u4e0e\u8d44\u6599\uff0c\u5e76\u4f7f\u7528 EXECUTE IMMEDIATE \u6216 exec() \u6267\u884c\u6076\u610f\u8d44\u6599\u3002</p> </li> <li> <p>\u4f7f\u7528\u6b63\u9762\u6216\u767d\u540d\u5355\u5728\u670d\u52a1\u5668\u7aef\u9a8c\u8bc1\u8f93\u5165\u7684\u8d44\u6599\u3002\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u9632\u5fa1\u673a\u5236\uff0c\u56e0\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4f7f\u7528\u7279\u6b8a\u7684\u5b57\u7b26\uff0c\u4f8b\u5982\uff1a\u5e94\u7528\u7a0b\u5f0f\u7684\u6587\u672c\u533a\u57df\u6216\u5e94\u7528\u7a0b\u5f0f\u754c\u9762 (API)\u5e94\u7528\u4e8e\u884c\u52a8\u88c5\u7f6e\u4e0a\u7684\u5e94\u7528\u7a0b\u5f0f\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u4efb\u4f55\u5269\u4f59\u7684\u52a8\u6001\u67e5\u8be2\uff0c\u5728\u8f6c\u8bd1\u4e2d\u4f7f\u7528\u7279\u6b8a\u7b26\u53f7\u8fdb\u884c\u67e5\u8be2\u5c06\u5bf9\u67e5\u8be2\u8bed\u6cd5\u5e26\u6765\u4e0d\u540c\u7684\u6db5\u4e49\u3002</p> </li> <li> <p>\u6ce8\u610f\uff1a\u5728 SQL \u7ed3\u6784\u4e2d\uff0c\u4f8b\u5982\uff1a\u8d44\u6599\u8868\u540d\u79f0\u3001\u680f\u4f4d\u540d\u79f0\u662f\u65e0\u6cd5\u88ab\u8f6c\u8bd1\u7684\uff0c\u56e0\u6b64\u4f7f\u7528\u8005\u63d0\u4f9b\u8d44\u6599\u7ed3\u6784\u7684\u540d\u79f0\u662f\u5371\u9669\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5728\u7f16\u5199\u8f6f\u4f53\u65f6\u5e38\u89c1\u7684\u95ee\u9898\u3002</p> </li> <li> <p>\u5728\u67e5\u8be2\u4e2d\u4f7f\u7528 LIMIT \u4ee5\u53ca\u5176\u5b83\u7684 SQL \u63a7\u5236\u5668\uff0c\u53ef\u4ee5\u9632\u6b62\u5f53\u906d\u53d7 SQL \u6ce8\u5165\u5f0f\u653b\u51fb\u65f6\u88ab\u5927\u91cf\u6cc4\u9732\u7eaa\u5f55\u3002</p> </li> </ul>"},{"location":"zh-Hant/A03_2021-Injection/#_5","title":"\u653b\u51fb\u60c5\u5883\u8303\u4f8b","text":"<p>\u60c5\u5883 #1: \u5e94\u7528\u7a0b\u5f0f\u4f7f\u7528\u4e86\u4e0d\u88ab\u4fe1\u4efb\u7684\u8d44\u6599\u5728\u8106\u5f31\u7684 SQL \u547c\u53eb\u4e2d\uff1a</p> <p>String query = \"SELECT * FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\";</p> <p>\u60c5\u5883 #2: \u7c7b\u4f3c\u5730\uff0c\u5e94\u7528\u7a0b\u5f0f\u5bf9\u6846\u67b6\u7684\u76f2\u76ee\u4fe1\u4efb\uff0c\u53ef\u80fd\u5bfc\u81f4\u4ecd\u7136\u5728\u6f0f\u6d1e\u7684\u67e5\u8be2\uff0c(\u4f8b\u5982\uff1aHibernate \u67e5\u8be2\u8bed\u8a00 (HQL))\uff1a</p> <p>Query HQLQuery = session.createQuery(\"FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\");</p> <p>\u5728\u8fd9\u4e24\u4e2a\u60c5\u5883\u4e2d\uff0c\u653b\u51fb\u8005\u5728\u4ed6\u4eec\u7684\u6d4f\u89c8\u5668\u4fee\u6539\u4e86 \"id\" \u53c2\u6570\u503c\uff0c\u9001\u51fa \u2018 or \u20181\u2019=\u20191\uff0c\u4f8b\u5982\uff1a</p> <p>http://example.com/app/accountView?id=' UNION SELECT SLEEP(10);--</p> <p>\u8fd9\u4e24\u4e2a\u67e5\u8be2\u7684\u542b\u4e49\u5c06\u4ea7\u751f\u6539\u53d8\uff0c\u800c\u56de\u5e94\u6240\u6709\u5e10\u6237\u8d44\u6599\u8868\u4e2d\u7684\u7eaa\u5f55\uff0c\u66f4\u5371\u9669\u7684\u653b\u51fb\u5c06\u53ef\u80fd\u4fee\u6539\u6216\u5220\u9664\u8d44\u6599\uff0c\u4ee5\u53ca\u5f71\u70b9\u8d44\u6599\u7684\u50a8\u5b58\u8fc7\u7a0b\u3002</p>"},{"location":"zh-Hant/A03_2021-Injection/#_6","title":"\u53c3\u8003","text":"<ul> <li> <p>OWASP Proactive Controls: Secure Database   Access</p> </li> <li> <p>OWASP ASVS: V5 Input Validation and   Encoding</p> </li> <li> <p>OWASP Testing Guide: SQL   Injection, Command   Injection,   and\u00a0ORM   Injection</p> </li> <li> <p>OWASP Cheat Sheet: Injection   Prevention</p> </li> <li> <p>OWASP Cheat Sheet: SQL Injection   Prevention</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention in   Java</p> </li> <li> <p>OWASP Cheat Sheet: Query   Parameterization</p> </li> <li> <p>OWASP Automated Threats to Web Applications \u2013   OAT-014</p> </li> <li> <p>PortSwigger: Server-side template   injection</p> </li> </ul>"},{"location":"zh-Hant/A03_2021-Injection/#cwe","title":"\u5bf9\u61c9\u7684 CWE \u5217\u8868","text":"<p>CWE-20 Improper Input Validation</p> <p>CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')</p> <p>CWE-75 Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)</p> <p>CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection')</p> <p>CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</p> <p>CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</p> <p>CWE-80 Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</p> <p>CWE-83 Improper Neutralization of Script in Attributes in a Web Page</p> <p>CWE-87 Improper Neutralization of Alternate XSS Syntax</p> <p>CWE-88 Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')</p> <p>CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</p> <p>CWE-90 Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</p> <p>CWE-91 XML Injection (aka Blind XPath Injection)</p> <p>CWE-93 Improper Neutralization of CRLF Sequences ('CRLF Injection')</p> <p>CWE-94 Improper Control of Generation of Code ('Code Injection')</p> <p>CWE-95 Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</p> <p>CWE-96 Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')</p> <p>CWE-97 Improper Neutralization of Server-Side Includes (SSI) Within a Web Page</p> <p>CWE-98 Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')</p> <p>CWE-99 Improper Control of Resource Identifiers ('Resource Injection')</p> <p>CWE-100 Deprecated: Was catch-all for input validation issues</p> <p>CWE-113 Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')</p> <p>CWE-116 Improper Encoding or Escaping of Output</p> <p>CWE-138 Improper Neutralization of Special Elements</p> <p>CWE-184 Incomplete List of Disallowed Inputs</p> <p>CWE-470 Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')</p> <p>CWE-471 Modification of Assumed-Immutable Data (MAID)</p> <p>CWE-564 SQL Injection: Hibernate</p> <p>CWE-610 Externally Controlled Reference to a Resource in Another Sphere</p> <p>CWE-643 Improper Neutralization of Data within XPath Expressions ('XPath Injection')</p> <p>CWE-644 Improper Neutralization of HTTP Headers for Scripting Syntax</p> <p>CWE-652 Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')</p> <p>CWE-917 Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')</p>"},{"location":"zh-Hant/A04_2021-Insecure_Design/","title":"A04:2021 \u2013 \u4e0d\u5b89\u5168\u8bbe\u8ba1","text":""},{"location":"zh-Hant/A04_2021-Insecure_Design/#_1","title":"\u5f31\u70b9\u56e0\u7d20","text":"\u53ef\u5bf9\u7167 CWEs \u6570\u91cf \u6700\u5927\u53d1\u751f\u7387 \u5e73\u5747\u53d1\u751f\u7387 \u6700\u5927\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u52a0\u6743\u6f0f\u6d1e \u5e73\u5747\u52a0\u6743\u5f71\u54cd \u51fa\u73b0\u6b21\u6570 \u6240\u6709\u76f8\u5173 CVEs \u6570\u91cf 40 24.19% 3.00% 77.25% 42.51% 6.46 6.78 262,407 2,691"},{"location":"zh-Hant/A04_2021-Insecure_Design/#_2","title":"\u5f31\u70b9\u7b80\u4ecb","text":"<p>2021 \u5e74\u4e2d\u7684\u4e00\u4e2a\u5168\u65b0\u7c7b\u522b\uff0c\u7740\u91cd\u4e8e\u5728\u8bbe\u8ba1\u4e0e\u67b6\u6784\u4e2d\u7684\u98ce\u9669\u3002\u6765\u547c\u5401\u66f4\u591a\u4f7f\u7528\u5230\u5a01\u80c1\u5efa\u6a21\u3001\u5b89\u5168\u8bbe\u8ba1\u6a21\u5f0f\u4e0e\u53c2\u8003\u67b6\u6784\u3002 \u8457\u540d\u7684 CWE \u5305\u62ec\u4e0b\u5217 CWE-209: \u4ea7\u751f\u7684\u9519\u8bef\u4fe1\u606f\u7684\u4e2d\u5305\u542b\u654f\u611f\u8baf\u606f\u3001CWE-256: \u672a\u53d7\u4fdd\u62a4\u7684\u51ed\u8bc1\u50a8\u5b58\u65b9\u5f0f\u3001CWE-501: \u8fdd\u53cd\u4fe1\u4efb\u8fb9\u754c \u4e0e CWE-522: \u4e0d\u8db3\u591f\u7684\u51ed\u8bc1\u4fdd\u62a4\u3002</p>"},{"location":"zh-Hant/A04_2021-Insecure_Design/#_3","title":"\u5f31\u70b9\u63cf\u8ff0","text":"<p>\u4e0d\u5b89\u5168\u8bbe\u8ba1\u662f\u4e00\u4e2a\u5e7f\u6cdb\u7684\u7c7b\u522b\u5448\u73b0\u8bb8\u591a\u4e0d\u540c\u7684\u5f31\u70b9\uff0c\u4ee3\u8868\u4e3a\"\u7f3a\u4e4f\u6216\u65e0\u6548\u7684\u63a7\u5236\u8bbe\u8ba1\"\u3002\u7f3a\u4e4f\u4e0d\u5b89\u5168\u8bbe\u8ba1\u662f\u6307\u6ca1\u6709\u63a7\u5236\u63aa\u65bd\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u60f3\u50cf\u4e00\u6bb5\u7a0b\u5f0f\u7801\u5e94\u8be5\u52a0\u5bc6\u654f\u611f\u8d44\u6599\u4f46\u662f\u6ca1\u6709\u5bf9\u5e94\u7684\u5b9e\u4f5c\u65b9\u6cd5\u3002\u65e0\u6548\u7684\u4e0d\u5b89\u5168\u8bbe\u8ba1\u662f\u53ef\u4ee5\u5b9e\u73b0\u5a01\u80c1\u7684\u5730\u65b9\uff0c\u4f46\u4e0d\u8db3\u7684\u9886\u57df\uff08\u5546\u4e1a\uff09\u903b\u8f91\u9a8c\u8bc1\u4f1a\u963b\u6b62\u8be5\u52a8\u4f5c\u3002\u4ee5\u4e0b\u4e2a\u4f8b\u5b50\u8bf4\uff0c\u60f3\u50cf\u9886\u57df\u903b\u8f91\u662f\u7528\u6765\u5904\u7406\u57fa\u4e8e\u6536\u5165\u7b49\u7ea7\u7684\u75ab\u60c5\u51cf\u7a0e\u4f46\u662f\u5e76\u672a\u786e\u8ba4\u6240\u6709\u7684\u8f93\u5165\u90fd\u662f\u6709\u6b63\u786e\u7684\u7b7e\u540d\uff0c\u56e0\u6b64\u63d0\u4f9b\u8d85\u8fc7\u539f\u672c\u53ef\u4ee5\u83b7\u5f97\u800c\u4e14\u66f4\u663e\u8457\u7684\u51cf\u7a0e\u5229\u76ca\u3002</p> <p>\u5b89\u5168\u8bbe\u8ba1\u4e00\u4e2a\u6587\u5316\u4e0e\u65b9\u6cd5\u6301\u7eed\u4e0d\u65ad\u7684\u6765\u8bc4\u4f30\u5a01\u80c1\u5e76\u4fdd\u8bc1\u7a0b\u5f0f\u7801\u6709\u88ab\u7a33\u5065\u7684\u8bbe\u8ba1\u4e0e\u6d4b\u8bd5\u6765\u9884\u9632\u5df2\u77e5\u7684\u653b\u51fb\u65b9\u6cd5\u3002\u5b89\u5168\u8bbe\u8ba1\u9700\u8981\u5b89\u5168\u7684\u5f00\u53d1\u751f\u547d\u5468\u671f\u3001\u67d0\u79cd\u5f62\u5f0f\u4e0a\u7684\u5b89\u5168\u8bbe\u8ba1\u6a21\u5f0f\u6216\u662f\u5df2\u5b8c\u6210\u7684\u5143\u4ef6\u5e93\u6216\u5de5\u5177\u4ee5\u53ca\u5a01\u80c1\u5efa\u6a21\u3002</p>"},{"location":"zh-Hant/A04_2021-Insecure_Design/#_4","title":"\u5982\u4f55\u9884\u9632","text":"<ul> <li> <p>\u5efa\u7acb\u4e0e\u4f7f\u7528\u5b89\u5168\u5f00\u53d1\u751f\u547d\u5468\u671f\u5e76\u4e14\u534f\u540c\u5e94\u7528\u7a0b\u5f0f\u5b89\u5168\u7684\u4e13\u4e1a\u4eba\u58eb\u6765\u8bc4\u4f30\u4e0e\u8bbe\u8ba1\u5b89\u5168\u4e0e\u9690\u79c1\u76f8\u5173\u7684\u63a7\u5236\u63aa\u65bd\u3002</p> </li> <li> <p>\u5efa\u7acb\u4e0e\u4f7f\u7528\u5b89\u5168\u8bbe\u8ba1\u6a21\u5f0f\u7684\u51fd\u5f0f\u5e93\u6216\u662f\u5df2\u5b8c\u6210\u53ef\u4f7f\u7528\u7684\u5143\u4ef6\u3002</p> </li> <li> <p>\u4f7f\u7528\u5a01\u80c1\u5efa\u6a21\u5728\u5173\u952e\u7684\u8ba4\u8bc1\u3001\u5b58\u53d6\u63a7\u5236\u3001\u5546\u4e1a\u903b\u8f91\u4e0e\u5173\u952e\u7f3a\u9677\u4e0a\u3002</p> </li> <li> <p>\u64b0\u5199\u5355\u5143\u6d4b\u8bd5\u4e0e\u6574\u5408\u6d4b\u8bd5\u6765\u9a8c\u8bc1\u6240\u6709\u7684\u5173\u952e\u6d41\u7a0b\u5bf9\u5a01\u80c1\u5efa\u6a21\u90fd\u6709\u62b5\u6297\u3002</p> </li> </ul>"},{"location":"zh-Hant/A04_2021-Insecure_Design/#_5","title":"\u653b\u51fb\u60c5\u5883\u8303\u4f8b","text":"<p>\u60c5\u5883 #1 \u51ed\u8bc1\u6062\u590d\u7684\u6d41\u7a0b\u6216\u8bb8\u4f1a\u5305\u542b\u201c\u95ee\u9898\u4e0e\u7b54\u6848\u201d\uff0c\u8be5\u65b9\u5f0f\u662f\u88ab NIST 800-63b\u3001OWASP ASVS \u4e0e WASP Top 10 \u4e2d\u7981\u6b62\u3002 \u201c\u95ee\u9898\u4e0e\u7b54\u6848\u201d\u65e0\u6cd5\u88ab\u4f5c\u4e3a\u4fe1\u4efb\u8eab\u4efd\u7684\u8bc1\u636e\u56e0\u4e3a\u4e0d\u6b62\u4e00\u4e2a\u4eba\u53ef\u80fd\u4f1a\u77e5\u9053\u7b54\u6848\uff0c\u56e0\u6b64\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u88ab\u7981\u6b62\u7684\u539f\u56e0\u3002\u56e0\u6b64\u6b64\u7c7b\u7684\u7a0b\u5f0f\u7801\u5e94\u8be5\u88ab\u79fb\u9664\u6216\u662f\u7528\u66f4\u5b89\u5168\u7684\u8bbe\u8ba1\u6765\u66ff\u4ee3\u3002</p> <p>\u60c5\u5883 #2: \u7535\u5f71\u9662\u5728\u8981\u6c42\u62bc\u91d1\u524d\u5141\u8bb8\u56e2\u4f53\u9884\u8ba2\u6298\u6263\u5e76\u4e14\u6700\u591a\u6709 15 \u540d\u89c2\u4f17\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u5a01\u80c1\u6a21\u578b\u6b64\u6d41\u7a0b\u5e76\u6d4b\u8bd5\u4ed6\u4eec\u5728\u4e00\u6b21\u8bf7\u6c42\u4e2d\u662f\u5426\u53ef\u4ee5\u9884\u8ba2 600 \u4e2a\u5ea7\u4f4d\u548c\u7684\u6240\u6709\u7535\u5f71\u9662\uff0c\u5bfc\u81f4\u7535\u5f71\u9662\u5de8\u5927\u7684\u6536\u5165\u635f\u5931\u3002</p> <p>\u60c5\u5883 #3: \u8fde\u9501\u96f6\u552e\u7684\u7535\u5b50\u5546\u52a1\u7f51\u7ad9\u6ca1\u6709\u4fdd\u62a4\u673a\u5236\u6765\u5bf9\u6297\u9ec4\u725b\u7684\u673a\u5668\u4eba\u8d2d\u4e70\u9ad8\u7aef\u7684\u663e\u793a\u5361\u518d\u8f6c\u552e\u5230\u62cd\u5356\u7f51\u7ad9\u3002\u5bf9\u4e8e\u96f6\u552e\u5546\u4e0e\u663e\u793a\u5361\u5236\u9020\u5546\u4ea7\u751f\u4e86\u53ef\u6015\u7684\u5ba3\u4f20\u6548\u5e94\u5e76\u4e14\u5bfc\u81f4\u4e0e\u90a3\u4e9b\u65e0\u6cd5\u8d2d\u4e70\u5230\u663e\u5361\u7684\u7231\u597d\u8005\u95f4\u4ea7\u751f\u4e86\u4e0d\u6109\u5feb\u3002\u5de7\u5999\u7684\u9632\u673a\u5668\u4eba\u8bbe\u8ba1\u4e0e\u9886\u57df\u903b\u8f91\u89c4\u5219\uff0c\u4f8b\u5982\u77ed\u6682\u51e0\u79d2\u7684\u8d2d\u4e70\u65f6\u95f4\u6216\u8bb8\u53ef\u4ee5\u8fa8\u8bc6\u51fa\u4e0d\u53ef\u4fe1\u8d56\u7684\u8d2d\u4e70\u5e76\u4e14\u62d2\u7edd\u8be5\u4ea4\u6613\u3002</p>"},{"location":"zh-Hant/A04_2021-Insecure_Design/#_6","title":"\u53c3\u8003\u6587\u732e","text":"<ul> <li> <p>OWASP Cheat Sheet: Secure Design Principles</p> </li> <li> <p>NIST \u2013 Guidelines on Minimum Standards for Developer Verification of</p> <p>Software https://www.nist.gov/publications/guidelines-minimum-standards-developer-verification-software</p> </li> </ul>"},{"location":"zh-Hant/A04_2021-Insecure_Design/#cwes","title":"\u5c0d\u5e94\u7684 CWEs \u6e05\u5355","text":"<p>CWE-73 External Control of File Name or Path</p> <p>CWE-183 Permissive List of Allowed Inputs</p> <p>CWE-209 Generation of Error Message Containing Sensitive Information</p> <p>CWE-213 Exposure of Sensitive Information Due to Incompatible Policies</p> <p>CWE-235 Improper Handling of Extra Parameters</p> <p>CWE-256 Unprotected Storage of Credentials</p> <p>CWE-257 Storing Passwords in a Recoverable Format</p> <p>CWE-266 Incorrect Privilege Assignment</p> <p>CWE-269 Improper Privilege Management</p> <p>CWE-280 Improper Handling of Insufficient Permissions or Privileges</p> <p>CWE-311 Missing Encryption of Sensitive Data</p> <p>CWE-312 Cleartext Storage of Sensitive Information</p> <p>CWE-313 Cleartext Storage in a File or on Disk</p> <p>CWE-316 Cleartext Storage of Sensitive Information in Memory</p> <p>CWE-419 Unprotected Primary Channel</p> <p>CWE-430 Deployment of Wrong Handler</p> <p>CWE-434 Unrestricted Upload of File with Dangerous Type</p> <p>CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')</p> <p>CWE-451 User Interface (UI) Misrepresentation of Critical Information</p> <p>CWE-472 External Control of Assumed-Immutable Web Parameter</p> <p>CWE-501 Trust Boundary Violation</p> <p>CWE-522 Insufficiently Protected Credentials</p> <p>CWE-525 Use of Web Browser Cache Containing Sensitive Information</p> <p>CWE-539 Use of Persistent Cookies Containing Sensitive Information</p> <p>CWE-579 J2EE Bad Practices: Non-serializable Object Stored in Session</p> <p>CWE-598 Use of GET Request Method With Sensitive Query Strings</p> <p>CWE-602 Client-Side Enforcement of Server-Side Security</p> <p>CWE-642 External Control of Critical State Data</p> <p>CWE-646 Reliance on File Name or Extension of Externally-Supplied File</p> <p>CWE-650 Trusting HTTP Permission Methods on the Server Side</p> <p>CWE-653 Insufficient Compartmentalization</p> <p>CWE-656 Reliance on Security Through Obscurity</p> <p>CWE-657 Violation of Secure Design Principles</p> <p>CWE-799 Improper Control of Interaction Frequency</p> <p>CWE-807 Reliance on Untrusted Inputs in a Security Decision</p> <p>CWE-840 Business Logic Errors</p> <p>CWE-841 Improper Enforcement of Behavioral Workflow</p> <p>CWE-927 Use of Implicit Intent for Sensitive Communication</p> <p>CWE-1021 Improper Restriction of Rendered UI Layers or Frames</p> <p>CWE-1173 Improper Use of Validation Framework</p>"},{"location":"zh-Hant/A05_2021-Security_Misconfiguration/","title":"A05:2021 \u2013 \u5b89\u5168\u8bbe\u5b9a\u7f3a\u9677","text":""},{"location":"zh-Hant/A05_2021-Security_Misconfiguration/#factors","title":"\u5f31\u70b9\u56e0\u7d20(Factors)","text":"\u53ef\u5bf9\u7167 CWEs \u6570\u91cf \u6700\u5927\u53d1\u751f\u7387 \u5e73\u5747\u53d1\u751f\u7387 \u6700\u5927\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u52a0\u6743\u6f0f\u6d1e \u5e73\u5747\u52a0\u6743\u5f15\u54cd \u51fa\u73b0\u6b21\u6570 \u6240\u6709\u76f8\u5173 CVEs 20 19.84% 4.51% 89.58% 44.84% 8.12 6.56 208,387 789"},{"location":"zh-Hant/A05_2021-Security_Misconfiguration/#overview","title":"\u5f31\u70b9\u7b80\u4ecb(Overview)","text":"<p>\u4ece\u5148\u524d\u7248\u672c\u7684\u7b2c\u516d\u540d\u6392\u540d\uff0c\u5411\u4e0a\u8c03\u5347\uff0c90%\u7684\u7a0b\u5f0f\u90fd\u88ab\u6d4b\u8bd5\u627e\u51fa\u5404\u7c7b\u7684\u8bbe\u5b9a\u7f3a\u9677\u3002\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u53ef\u8bbe\u5b9a\u5f0f\u8f6f\u4f53\u6570\u91cf\u589e\u52a0\uff0c\u770b\u5230\u6b64\u7c7b\u522b\u7684\u6392\u540d\u4e0a\u5347\uff0c\u5e76\u4e0d\u662f\u4ef6\u610f\u5916\u7684\u4e8b\u3002\u660e\u663e\u76f8\u5bf9\u5e94\u7684 CWEs \u5305\u542b\u4e86 CWE16 \u8bbe\u5b9a \u4ee5\u53ca CWE-611 \u4e0d\u5145\u8db3\u7684 XML \u5916\u90e8\u5b9e\u4f53\u5f15\u7528\u9650\u5236</p>"},{"location":"zh-Hant/A05_2021-Security_Misconfiguration/#description","title":"\u5f31\u70b9\u63cf\u8ff0(Description)","text":"<p>\u5982\u679c\u7a0b\u5f0f\u5305\u542b\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u56e0\u7d20\uff0c\u5219\u53ef\u80fd\u6709\u6613\u53d7\u653b\u51fb\u7684\u8106\u5f31\u6027\u3002</p> <ul> <li> <p>\u5728\u7a0b\u5f0f\u5404\u5806\u53e0\u5c42\u9762\uff0c\u7f3a\u5c11\u9002\u5207\u7684\u5b89\u5168\u5f3a\u5316\uff0c\u6216\u662f\u4e8e\u4e91\u7aef\u670d\u52a1\u4e0a\u6709\u7740\u4e0d\u5f53\u7684\u6743\u9650\u8bbe\u5b9a\u3002</p> </li> <li> <p>\u4e0d\u5fc5\u8981\u7684\u529f\u80fd\u542f\u7528\u6216\u662f\u5b89\u88c5 (\u4f8b\u5982\uff0c\u4e0d\u5fc5\u8981\u7684\u7aef\u53e3\uff0c\u670d\u52a1\uff0c\u9875\u9762\uff0c\u5e10\u53f7\uff0c\u6216\u662f\u7279\u6743)\u3002</p> </li> <li> <p>\u9884\u8bbe\u5e10\u53f7\u4e0e\u5bc6\u7801\u8fd8\u53ef\u4f7f\u7528\uff0c\u5e76\u4e14\u672a\u66f4\u6539\u3002</p> </li> <li> <p>\u56e0\u9519\u8bef\u5904\u7406\u800c\u66b4\u9732\u51fa\u7684\u5806\u53e0\u8ffd\u8e2a\uff0c\u6216\u662f\u5411\u4f7f\u7528\u8005\uff0c\u66b4\u9732\u51fa\u8fc7\u591a\u7684\u9519\u8bef\u8b66\u544a\u8d44\u8baf</p> </li> <li> <p>\u56e0\u4e3a\u7cfb\u7edf\u5347\u7ea7\uff0c\u5bfc\u81f4\u6700\u65b0\u7684\u5b89\u5168\u529f\u80fd\u88ab\u5173\u95ed\uff0c\u6216\u662f\u9020\u6210\u4e0d\u5b89\u5168\u7684\u8bbe\u5b9a</p> </li> <li> <p>\u5728\u5e03\u7f72\u7a0b\u5f0f\u7684\u4f3a\u670d\u5668\uff0c\u7a0b\u5f0f\u6846\u67b6(\u4f8b\u5982 Struts, Spring, ASP net\uff0c\u5404\u79cd\u51fd\u793a\u5e93\uff0c\u8d44\u6599\u5e93\u7b49\u3002\u5e76\u672a\u8bbe\u5b9a\u8be5\u6709\u7684\u5b89\u5168\u53c2\u6570\u3002</p> </li> <li> <p>\u670d\u52a1\u5668\u5e76\u672a\u4f20\u9001\u5b89\u5168\u7684 header \u6216\u662f\u6307\u4ee4\uff0c\u6216\u672a\u88ab\u8bbe\u5b9a\u5b89\u5168\u53c2\u6570\u3002</p> </li> <li> <p>\u8f6f\u4ef6\u5df2\u7ecf\u8fc7\u65f6\u5df2\u6dd8\u6c70\uff0c\u6216\u8005\u5e26\u6709\u8106\u5f31\u6027 (\u8bf7\u53c2\u7167 A06:2021-\u6613\u53d7\u653b\u51fb\u548c\u5df2\u6dd8\u6c70\u7684\u7ec4\u4ef6 )</p> </li> </ul> <p>\u5f53\u6ca1\u6709\u4e00\u81f4\u6027\uff0c\u53ef\u91cd\u590d\u7684\u7a0b\u5f0f\u5b89\u5168\u8bbe\u5b9a\u6d41\u7a0b\u65f6\uff0c\u7cfb\u7edf\u5c06\u4f1a\u9762\u5bf9\u9ad8\u98ce\u9669\u3002</p>"},{"location":"zh-Hant/A05_2021-Security_Misconfiguration/#how-to-prevent","title":"\u5982\u4f55\u9884\u9632(How to Prevent)","text":"<p>\u5b89\u5168\u7684\u5b89\u88c5\u6b65\u9aa4\u6d41\u7a0b\uff0c\u5e94\u8be5\u88ab\u5b9e\u9645\u5e03\u7f72\uff0c\u5305\u542b\u4ee5\u4e0b</p> <ul> <li> <p>\u4e00\u4e2a\u53ef\u91cd\u590d\u7684\u5b89\u5168\u5f3a\u5316\u6d41\u7a0b\uff0c\u5fc5\u9700\u53ef\u8fbe\u5230\u5feb\u901f\u4e14\u7b80\u5355\u7684\u5e03\u7f72\uff0c\u800c\u4e14\u80fd\u5728\u5206\u9694\u4e14\u5c01\u9501\u7684\u73af\u5883\u4e0b\u6267\u884c\u3002\u5f00\u53d1\uff0c\u54c1\u8d28\u7ba1\u7406\uff0c\u4ee5\u53ca\u5b9e\u9645\u8425\u8fd0\u7684\u73af\u5883\uff0c\u90fd\u987b\u6709\u4e00\u81f4\u76f8\u540c\u7684\u8bbe\u5b9a\uff0c\u5e76\u4e14\u4f7f\u7528\u4e0d\u540c\u7684\u8ba4\u8bc1\u8d44\u8baf\u3002\u8fd9\u79cd\u6b65\u9aa4\u9700\u8981\u5c3d\u53ef\u80fd\u7684\u81ea\u52a8\u5316\uff0c\u964d\u4f4e\u9700\u8981\u5efa\u7acb\u5b89\u5168\u73af\u5883\u65f6\uff0c\u6240\u9700\u8981\u7684\u6295\u5165\u3002</p> </li> <li> <p>\u4e00\u4e2a\u6700\u7cbe\u7b80\u7684\u5e73\u53f0\uff0c\u4e0a\u9762\u4e0d\u4f1a\u642d\u914d\u4efb\u4f55\u4e0d\u9700\u8981\u7684\u529f\u80fd\uff0c\u5957\u4ef6\uff0c\u6863\u6848\uff0c\u4ee5\u53ca\u8303\u672c\u3002\u79fb\u9664\u6216\u4e0d\u5b89\u88c5\u4efb\u4f55\uff0c\u4e0d\u987b\u4f7f\u7528\u7684\u529f\u80fd\u6216\u6846\u67b6\u3002</p> </li> <li> <p>\u5728\u53d8\u66f4\u7ba1\u7406\u4e0b\uff0c\u9700\u6709\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u4f9d\u636e\u5b89\u5168\u544a\u77e5\uff0c\u76f8\u5173\u66f4\u65b0\uff0c\u6765\u6267\u884c\u5b89\u5168\u5ba1\u89c6\u53ca\u66f4\u52a8(\u53ef\u53c2\u7167 A06:2021-\u6613\u53d7\u653b\u51fb\u548c\u5df2\u6dd8\u6c70\u7684\u7ec4\u4ef6)\u3002\u5ba1\u89c6\u4e91\u7aef\u50a8\u5b58\u7684\u6743\u9650(\u4f8b\u5982 S3 bucket \u7684\u6743\u9650)</p> </li> <li> <p>\u4e00\u4e2a\u53ef\u5206\u5272\u7684\u7a0b\u5f0f\u67b6\u6784\uff0c\u5bf9\u4e8e\u5404\u5143\u4ef6\uff0c\u7528\u6237\uff0c\u53ef\u900f\u8fc7\u5206\u79bb\uff0c\u5bb9\u5668\u5316\uff0c\u4e91\u7aef\u5b89\u5168\u7fa4\u7ec4\u8bbe\u5b9a(ACLs)\uff0c\u6765\u8fbe\u5230\u5206\u5272\u7684\u6548\u679c\u3002\u63d0\u4f9b\u6709\u6548\u4e14\u5b89\u5168\u7684\u5206\u79bb\u3002</p> </li> <li> <p>\u5bc4\u9001\u5b89\u5168\u6307\u4ee4\u7ed9\u7528\u6237\u7aef\uff0c\u4f8b\u5982 \u5b89\u5168\u6807\u5934\u3002</p> </li> <li> <p>\u4e00\u4e2a\u81ea\u52a8\u5316\u7684\u6d41\u7a0b\uff0c\u53ef\u4ee5\u786e\u8ba4\u73af\u5883\u4e2d\u5404\u7c7b\u7684\u5b89\u5168\u8bbe\u5b9a\u3002</p> </li> </ul>"},{"location":"zh-Hant/A05_2021-Security_Misconfiguration/#example-attack-scenarios","title":"\u653b\u51fb\u60c5\u5883\u8303\u4f8b(Example Attack Scenarios)","text":"<p>\u60c5\u5883 #1: \u8425\u8fd0\u7528\u7684\u7a0b\u5f0f\u670d\u52a1\u5668\uff0c\u5e26\u6709\u9884\u8bbe\u7684\u6837\u672c\u7a0b\u5f0f\uff0c\u5e76\u672a\u79fb\u9664\u3002\u8fd9\u4e2a\u6837\u672c\u7a0b\u5f0f\u5e26\u6709\u5df2\u77e5\u7684\u5b89\u5168\u7f3a\u9677\uff0c\u53ef\u88ab\u653b\u51fb\u8005\u5229\u7528\u5165\u4fb5\u670d\u52a1\u5668\u3002\u4f8b\u5982\uff0c\u9884\u8bbe\u7684\u7a0b\u5f0f\u5e26\u6709\u7ba1\u7406\u8005\u754c\u9762\uff0c\u5e76\u4e14\u6709\u672a\u53d8\u66f4\u7684\u5e10\u53f7\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u900f\u8fc7\u9884\u8bbe\u7684\u5bc6\u7801\u767b\u5165\uff0c\u5e76\u53d6\u5f97\u63a7\u5236\u6743\u3002</p> <p>\u60c5\u5883 #2: \u8d44\u6599\u76ee\u5f55\u6307\u4ee4\u5e76\u672a\u5728\u670d\u52a1\u5668\u4e0a\u5173\u95ed\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u627e\u51fa\u5e76\u4e14\u4e0b\u8f7d\uff0c\u5df2\u7f16\u8bd1\u8fc7 Java \u6863\u6848\uff0c\u5e76\u4e14\u900f\u8fc7\u53cd\u7f16\u8bd1\u4e0e\u9006\u5411\u5de5\u7a0b\u7b49\u624b\u6cd5\uff0c\u67e5\u770b\u539f\u59cb\u7801\u3002\u518d\u56e0\u6b64\u627e\u51fa\u7a0b\u5f0f\u4e2d\uff0c\u4e25\u91cd\u7684\u5b58\u53d6\u63a7\u5236\u7f3a\u9677\u3002</p> <p>\u60c5\u5883 #3: \u7a0b\u5f0f\u670d\u52a1\u5668\u7684\u8bbe\u5b9a\uff0c\u5141\u8bb8\u8f93\u51fa\u5e26\u6709\u8be6\u7ec6\u5185\u5bb9\u7684\u9519\u8bef\u8baf\u606f\uff0c\u4f8b\u5982\u5806\u53e0\u8ffd\u8e2a\uff0c\u4f9b\u7528\u6237\u67e5\u770b\u3002\u8fd9\u6709\u53ef\u80fd\u5bfc\u81f4\u654f\u611f\u8baf\u606f\u7684\u5916\u6cc4\uff0c\u6216\u95f4\u63a5\u900f\u9732\u51fa\uff0c\u4f7f\u7528\u4e2d\uff0c\u5e76\u5e26\u6709\u8106\u5f31\u6027\u7684\u5143\u4ef6\u7248\u672c\u3002</p> <p>\u60c5\u5883 #4: \u4e00\u4e2a\u4e91\u7aef\u670d\u52a1\u5668\uff0c\u63d0\u4f9b\u4e86\u9884\u8bbe\u6743\u9650\u5206\u4eab\uff0c\u7ed9\u5176\u4ed6\u5728\u7f51\u9645\u7f51\u8def\u7684 CSP \u7528\u6237\u3002\u8fd9\u5c06\u5bfc\u81f4\u4e91\u7aef\u50a8\u5b58\u7684\u654f\u611f\u8d44\u6599\u53ef\u4ee5\u88ab\u5b58\u53d6\u3002</p>"},{"location":"zh-Hant/A05_2021-Security_Misconfiguration/#references","title":"References","text":"<ul> <li> <p>OWASP Testing Guide: Configuration   Management</p> </li> <li> <p>OWASP \u6d4b\u8bd5\u6307\u5357: \u8bbe\u5b9a\u7ba1\u7406</p> </li> <li> <p>OWASP Testing Guide: Testing for Error Codes</p> </li> <li> <p>OWASP \u6d4b\u8bd5\u6307\u5357: \u9519\u8bef\u4ee3\u7801\u6d4b\u8bd5</p> </li> <li> <p>Application Security Verification Standard V19 Configuration</p> </li> <li> <p>\u5e94\u7528\u7a0b\u5f0f\u5b89\u5168\u786e\u8ba4\u6807\u51c6 v19 \u8bbe\u5b9a\u7bc7</p> </li> <li> <p>NIST Guide to General Server   Hardening</p> </li> <li> <p>NIST \u6cdb\u7528\u670d\u52a1\u5668\u5f37\u5316\u6307\u5357</p> </li> <li> <p>CIS Security Configuration   Guides/Benchmarks</p> </li> <li> <p>CIS \u5b89\u5168\u8bbe\u5b9a\u6307\u5357/\u57fa\u51c6</p> </li> <li> <p>Amazon S3 Bucket Discovery and   Enumeration</p> </li> <li> <p>Amazon S3 \u50a8\u5b58\u8d2e\u4f53\u4fa6\u6d4b\u4e0e\u63a2\u7d22</p> </li> </ul>"},{"location":"zh-Hant/A05_2021-Security_Misconfiguration/#cwes-list-of-mapped-cwes","title":"\u5c0d\u5e94\u7684 CWEs \u6e05\u5355(List of Mapped CWEs)","text":"<p>CWE-2 Configuration</p> <p>CWE-2 \u8bbe\u5b9a</p> <p>CWE-11 ASP.NET Misconfiguration: Creating Debug Binary</p> <p>CWE-11 ASP.NET \u9519\u8bef\u8bbe\u5b9a:\u521b\u5efa\u9664\u9519\u4e8c\u8fdb\u5236\u6863</p> <p>CWE-13 ASP.NET Misconfiguration: Password in Configuration File</p> <p>CWE-13 ASP.NET \u9519\u8bef\u8bbe\u5b9a: \u8bbe\u5b9a\u6863\u4e2d\u6240\u5b58\u7684\u5bc6\u7801</p> <p>CWE-15 External Control of System or Configuration Setting</p> <p>CWE-15 \u7cfb\u7d71\u7684\u5916\u90e8\u63a7\u5236\u4e0e\u8bbe\u5b9a</p> <p>CWE-16 Configuration</p> <p>CWE-16 \u8bbe\u5b9a</p> <p>CWE-260 Password in Configuration File</p> <p>CWE-260 \u8bbe\u5b9a\u6863\u4e2d\u6240\u5b58\u7684\u5bc6\u7801</p> <p>CWE-315 Cleartext Storage of Sensitive Information in a Cookie</p> <p>CWE-315 cookies \u4e2d\u7684\u660e\u6587\u5b58\u653e\u654f\u611f\u8d44\u6599</p> <p>CWE-520 .NET Misconfiguration: Use of Impersonation</p> <p>CWE-520 .NET \u9519\u8bef\u8bbe\u5b9a: \u5192\u5145\u4f7f\u7528</p> <p>CWE-526 Exposure of Sensitive Information Through Environmental Variables</p> <p>CWE-526 \u73af\u5883\u7269\u4ef6\u6240\u6cc4\u6f0f\u7684\u654f\u611f\u54a8\u8be2</p> <p>CWE-537 Java Runtime Error Message Containing Sensitive Information</p> <p>CWE-537 Java \u8fd0\u884c\u73af\u5883\u4e0b\uff0c\u9519\u8bef\u8baf\u606f\u5305\u542b\u654f\u611f\u8d44\u8baf</p> <p>CWE-541 Inclusion of Sensitive Information in an Include File</p> <p>CWE-541 \u5305\u5bb9\u6863\u6848\u4e2d\uff0c\u5305\u542b\u654f\u611f\u8d44\u8baf</p> <p>CWE-547 Use of Hard-coded, Security-relevant Constants</p> <p>CWE-547 \u4f7f\u7528\u5199\u6b7b\u7684\u5b89\u5168\u76f8\u5173\u53c2\u6570</p> <p>CWE-611 Improper Restriction of XML External Entity Reference</p> <p>CWE-611 \u4e0d\u5145\u8db3\u7684 XML \u5916\u90e8\u5b9e\u4f53\u5f15\u7528\u9650\u5236</p> <p>CWE-614 Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</p> <p>CWE-614 HTTPS \u4e0b\uff0c\u654f\u611f Cookies \u6c92\u6709\u4f7f\u7528\"\u5b89\u5168\"\u53c2\u6570\u8bbe\u5b9a</p> <p>CWE-756 Missing Custom Error Page</p> <p>CWE-756 \u9057\u6f0f\u5e38\u89c4\u7684\u9519\u8bef\u9875\u9762</p> <p>CWE-776 Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')</p> <p>CWE-776 DTDs \u4e2d\uff0c\u4e0d\u5145\u8db3\u7684\u905e\u8ff4\u7269\u4ef6\u5f15\u7528\u9650\u5236 (XML \u7269\u4ef6\u6269\u5f20)</p> <p>CWE-942 Permissive Cross-domain Policy with Untrusted Domains</p> <p>CWE-942 \u8de8\u7f51\u57df\u767d\u540d\u5355\u7684\u8fc7\u5ea6\u6743\u9650</p> <p>CWE-1004 Sensitive Cookie Without 'HttpOnly' Flag</p> <p>CWE-1004 \u654f\u611f Cookie \u6ca1\u6709\u4f7f\u7528'HttpOnly'\u53c2\u6570\u8bbe\u5b9a</p> <p>CWE-1032 OWASP Top Ten 2017 Category A6 - Security Misconfiguration</p> <p>CWE-1032 OWASP 2017 \u524d\u5341\u5927 A6 \u7fa4\u7ec4 - \u5b89\u5168\u9519\u8bef\u8bbe\u5b9a</p> <p>CWE-1174 ASP.NET Misconfiguration: Improper Model Validation</p> <p>CWE-1174 ASP.NET \u9519\u8bef\u8bbe\u5b9a: \u4e0d\u5145\u8db3\u7684\u6a21\u7ec4\u9a8c\u8bc1</p>"},{"location":"zh-Hant/A06_2021-Vulnerable_and_Outdated_Components/","title":"A06:2021 \u2013 \u6613\u53d7\u653b\u51fb\u548c\u5df2\u6dd8\u6c70\u7684\u7ec4\u4ef6(Vulnerable and Outdated Components)","text":""},{"location":"zh-Hant/A06_2021-Vulnerable_and_Outdated_Components/#factors","title":"\u5f31\u70b9\u56e0\u7d20(Factors)","text":"\u53ef\u5bf9\u7167 CWEs \u6570\u91cf \u6700\u5927\u53d1\u751f\u7387 \u5e73\u5747\u53d1\u751f\u7387 \u6700\u5927\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u52a0\u6743\u6f0f\u6d1e \u5e73\u5747\u52a0\u6743\u5f71\u54cd \u51fa\u73b0\u6b21\u6570 \u6240\u6709\u76f8\u5173 CVEs \u6570\u91cf 3 27.96% 8.77% 51.78% 22.47% 5.00 5.00 30,457 0"},{"location":"zh-Hant/A06_2021-Vulnerable_and_Outdated_Components/#_1","title":"\u5f31\u70b9\u7b80\u4ecb","text":"<p>\u6b64\u5f31\u70b9\u5728\u4ea7\u4e1a\u8c03\u67e5\u4e2d\u6392\u540d\u7b2c\u4e8c\uff0c\u4f46\u6709\u8db3\u591f\u7684\u8d44\u6599\u8ba9\u5b83\u8fdb\u5165\u524d\u5341\u3002 \u6613\u53d7\u653b\u51fb\u7684\u7ec4\u4ef6\u662f\u6211\u4eec\u52aa\u529b\u6d4b\u8bd5\u548c\u8bc4\u4f30\u98ce\u9669\u7684\u5df2\u77e5\u95ee\u9898\uff0c\u8be5\u5f31\u70b9\u662f\u5728 CWEs \u4e2d\u552f\u4e00\u6ca1\u6709\u4efb\u4f55 CVE \u5bf9\u5e94\u7684\u7c7b\u522b\uff0c\u56e0\u6b64\u4f7f\u7528\u9884\u8bbe\u7684 5.0 \u6f0f\u6d1e\u5229\u7528/\u5f71\u54cd\u6743\u91cd\u3002 \u77e5\u540d\u7684 CWEs \u5305\u62ec\uff1a *CWE-1104\uff1a\u4f7f\u7528\u672a\u7ef4\u62a4\u7684\u7b2c\u4e09\u65b9\u7ec4\u4ef6 \u4ee5\u53ca\u4e24\u4e2a 2013 \u5e74\u5ea6\u30012017 \u5e74\u5ea6 \u524d 10 \u540d\u7684 CWEs\u3002</p>"},{"location":"zh-Hant/A06_2021-Vulnerable_and_Outdated_Components/#_2","title":"\u5f31\u70b9\u63cf\u8ff0","text":"<p>\u60a8\u53ef\u80fd\u5bb9\u6613\u53d7\u5230\u653b\u51fb\uff1a</p> <ul> <li> <p>\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u60a8\u4f7f\u7528\u7684\u6240\u6709\u7ec4\u4ef6\u7684\u7248\u672c\uff08\u7528\u6237\u7aef\u548c\u4f3a\u670d\u5668\u7aef\uff09\u3002\u8fd9\u5305\u62ec\u60a8\u76f4\u63a5\u4f7f\u7528\u7684\u7ec4\u4ef6\u4ee5\u53ca\u5d4c\u5165\u7684\u76f8\u4f9d\u5957\u4ef6(nested dependencies)\u3002</p> </li> <li> <p>\u5982\u679c\u8f6f\u4f53\u5bb9\u6613\u53d7\u5230\u653b\u51fb\u3001\u5df2\u4e0d\u652f\u63f4\u6216\u5df2\u6dd8\u6c70\u3002   \u5305\u62ec\u4f5c\u4e1a\u7cfb\u7edf\u3001\u7f51\u9875/\u5e94\u7528\u7a0b\u5f0f\u4f3a\u670d\u5668\u3001\u8d44\u6599\u5e93\u7ba1\u7406\u7cfb\u7edf (DBMS)\u3001\u5e94\u7528\u7a0b\u5f0f\u3001 API \u4ee5\u53ca\u6240\u6709\u7ec4\u4ef6\u3001\u6267\u884c\u73af\u5883\u548c\u7a0b\u5f0f\u5e93(libraries)\u3002</p> </li> <li> <p>\u5982\u679c\u60a8\u6ca1\u6709\u5b9a\u671f\u6267\u884c\u5f31\u70b9\u626b\u7784\u5e76\u8ba2\u9605\u4e0e\u60a8\u4f7f\u7528\u7ec4\u4ef6\u76f8\u5173\u7684\u8d44\u5b89\u901a\u62a5\u3002</p> </li> <li> <p>\u5982\u679c\u60a8\u672a\u51ed\u501f\u57fa\u4e8e\u98ce\u9669\u7684\u65b9\u5f0f\u53ca\u65f6\u4fee\u8865\u6216\u5347\u7ea7\u5e95\u5c42\u5e73\u53f0\u3001\u6846\u67b6\u548c\u76f8\u4f9d\u5957\u4ef6\u3002   \u8fd9\u901a\u5e38\u53d1\u751f\u5728\u4fee\u8865\u5de5\u4f5c\u662f\u53d8\u66f4\u63a7\u5236\u4e0b\u7684\u6bcf\u6708\u6216\u6bcf\u5b63\u5ea6\u4efb\u52a1\u7684\u73af\u5883\u4e2d\uff0c\u4f1a\u4f7f\u7ec4\u7ec7\u6570\u5929\u751a\u81f3\u6570\u6708\u4e0d\u5fc5\u8981\u5730\u66b4\u9732\u4e8e\u53ef\u4fee\u8865\u7684\u6f0f\u6d1e\u98ce\u9669\u3002</p> </li> <li> <p>\u5982\u679c\u8f6f\u4f53\u5f00\u53d1\u4eba\u5458\u672a\u6d4b\u8bd5\u66f4\u65b0\u3001\u5347\u7ea7\u6216\u4fee\u8865\u540e\u7a0b\u5f0f\u5e93\u7684\u76f8\u5bb9\u6027\u3002</p> </li> <li> <p>\u5982\u679c\u4f60\u672a\u4fdd\u62a4\u7ec4\u4ef6\u7684\u8bbe\u5b9a\u6863\u6848\u3002 \uff08\u8bf7\u53c2\u9605 A05:2021 - \u5b89\u5168\u8bbe\u5b9a\u7f3a\u9677 Security Misconfiguration\uff09\u3002</p> </li> </ul>"},{"location":"zh-Hant/A06_2021-Vulnerable_and_Outdated_Components/#how-to-prevent","title":"\u5982\u4f55\u9884\u9632(How to Prevent)","text":"<p>\u5e94\u8be5\u8bbe\u7f6e\u4fee\u8865\u7a0b\u5f0f\u7ba1\u7406\u6d41\u7a0b\u6765\uff1a</p> <ul> <li> <p>\u5220\u9664\u672a\u4f7f\u7528\u7684\u76f8\u4f9d\u5957\u4ef6\u3001\u4e0d\u5fc5\u8981\u7684\u529f\u80fd\u3001\u7ec4\u4ef6\u3001\u6863\u6848\u53ca\u6587\u4ef6\u3002</p> </li> <li> <p>\u6301\u7eed\u4f7f\u7528\u7248\u63a7\u5de5\u5177\u6765\u76d8\u70b9\u5ba2\u6237\u7aef\u548c\u4f3a\u670d\u5668\u7aef\u7ec4\u4ef6\uff08\u4f8b\u5982\u6846\u67b6\u3001\u7a0b\u5f0f\u5e93\uff09\u53ca\u76f8\u4f9d\u7ec4\u4ef6\u7684\u7248\u672c\uff0c\u5982\u7248\u63a7\u5de5\u5177\u3001OWASP Dependency Check\u3001retire.js \u7b49\u3002   \u6301\u7eed\u76d1\u63a7 CVE \u548c NVD \u7b49\u7b49\u6765\u6e90\u6765\u786e\u8ba4\u662f\u7ec4\u4ef6\u662f\u5426\u5b58\u5728\u7684\u6f0f\u6d1e\u3002\u4f7f\u7528\u8f6f\u4f53\u7ec4\u5408\u5206\u6790\u5de5\u5177\u6765\u81ea\u52a8\u5316\u8be5\u6d41\u7a0b\u3002   \u8ba2\u9605\u60a8\u4f7f\u7528\u7684\u7ec4\u4ef6\u76f8\u5173\u7684\u5b89\u5168\u6f0f\u6d1e\u7684\u8d44\u5b89\u901a\u62a5\u3002</p> </li> <li>\u6301\u7eed\u76d8\u70b9\u5ba2\u6237\u7aef\u548c\u4f3a\u670d\u5668\u7aef\u7ec4\u4ef6\uff08\u4f8b\u5982\u6846\u67b6\u3001\u7a0b\u5f0f\u5e93\uff09\u53ca\u76f8\u4f9d\u7ec4\u4ef6\u7684\u7248\u672c\uff0c\u5982\u7248\u63a7\u5de5\u5177\u3001OWASP Dependency Check\u3001retire.js \u7b49\u3002   \u6301\u7eed\u76d1\u63a7 CVE \u548c NVD \u7b49\u7b49\u6765\u6e90\u6765\u786e\u8ba4\u662f\u7ec4\u4ef6\u662f\u5426\u5b58\u5728\u7684\u6f0f\u6d1e\u3002   \u4f7f\u7528\u8f6f\u4f53\u7ec4\u5408\u5206\u6790\u5de5\u5177\u6765\u81ea\u52a8\u5316\u8be5\u6d41\u7a0b\u3002   \u8ba2\u9605\u60a8\u4f7f\u7528\u7684\u7ec4\u4ef6\u76f8\u5173\u7684\u5b89\u5168\u6f0f\u6d1e\u7684\u8d44\u5b89\u901a\u62a5\u3002   \u4f7f\u7528\u8bf8\u5982\u7248\u63a7\u5de5\u5177\u3001OWASP Dependency Check\u3001retire.js \u7b49\u5de5\u5177\u6301\u7eed\u76d8\u70b9\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u7ec4\u4ef6\uff08\u4f8b\u5982\u6846\u67b6\u3001\u7a0b\u5f0f\u5e93\uff09\u53ca\u5176\u76f8\u4f9d\u7ec4\u4ef6\u7684\u7248\u672c\u3002</li> <li> <p>\u4ec5\u900f\u8fc7\u5b98\u65b9\u63d0\u4f9b\u7684\u5b89\u5168\u8fde\u7ed3\u6765\u53d6\u5f97\u7ec4\u4ef6\u3002   \u4f18\u5148\u9009\u62e9\u5df2\u7b7e\u7f72\u7684\u66f4\u65b0\u5305\uff0c\u4ee5\u964d\u4f4e\u66f4\u65b0\u5305\u88ab\u52a0\u5165\u6076\u610f\u7ec4\u4ef6\u7684\u53ef\u80fd\u3002 \uff08\u8bf7\u53c2\u9605 A08:2021-\u8f6f\u4f53\u53ca\u8d44\u6599\u5b8c\u6574\u6027\u5931\u6548\uff09\u3002</p> </li> <li> <p>\u76d1\u63a7\u672a\u7ef4\u62a4\u6216\u672a\u4e3a\u65e7\u7248\u672c\u521b\u5efa\u5b89\u5168\u4fee\u8865\u7a0b\u5f0f\u7684\u7a0b\u5f0f\u5e93\u548c\u7ec4\u4ef6\u3002   \u5982\u679c\u65e0\u6cd5\u4fee\u8865\u7a0b\u5f0f\uff0c\u8bf7\u8003\u8651\u90e8\u7f72\u865a\u62df\u4fee\u8865\u7a0b\u5f0f\u6765\u76d1\u63a7\u3001\u68c0\u6d4b\u6216\u9632\u5fa1\u5df2\u53d1\u73b0\u7684\u7279\u5b9a\u5f31\u70b9\u3002</p> </li> </ul> <p>\u6bcf\u4e2a\u7ec4\u7ec7\u90fd\u5fc5\u987b\u786e\u4fdd\u5728\u5e94\u7528\u7a0b\u5f0f\u6216\u5f00\u53d1\u4e13\u6848(portfolio)\u7684\u751f\u547d\u5468\u671f\u5185\u5236\u8ba2\u6301\u7eed\u76d1\u63a7\u3001\u9274\u522b\u5206\u7c7b(triaging) \u53ca \u7533\u8bf7\u66f4\u65b0 \u6216\u662f \u66f4\u6539\u914d\u7f6e\u7684\u8ba1\u5212\u3002</p>"},{"location":"zh-Hant/A06_2021-Vulnerable_and_Outdated_Components/#example-attack-scenarios","title":"\u653b\u51fb\u60c5\u5883\u8303\u4f8b(Example Attack Scenarios)","text":"<p>\u60c5\u5883 #1\uff1a \u7ec4\u4ef6\u901a\u5e38\u4ee5\u4e0e\u5e94\u7528\u7a0b\u5f0f\u672c\u8eab\u76f8\u540c\u7684\u6743\u9650\u8fd0\u884c\uff0c\u56e0\u6b64\u4efb\u4f55\u7ec4\u4ef6\u4e2d\u7684\u7f3a\u9677\u90fd\u53ef\u80fd\u5bfc\u81f4\u4e25\u91cd\u7684\u5f71\u54cd\u3002 \u6b64\u7c7b\u7f3a\u9677\u53ef\u80fd\u662f\u5076\u7136\u7684\uff08\u4f8b\u5982\uff0c\u7f16\u7801\u9519\u8bef\uff09\u6216\u6709\u610f\u7684\uff08\u4f8b\u5982\uff0c\u7ec4\u4ef6\u4e2d\u7684\u540e\u95e8\uff09\u3002 \u4e00\u4e9b\u5df2\u77e5\u6613\u53d7\u653b\u51fb\u7ec4\u4ef6\u7684\u8303\u4f8b\u4e3a\uff1a</p> <ul> <li> <p>CVE-2017-5638\uff1a\u4e00\u4e2a Struts 2 \u8fdc\u7aef\u7a0b\u5f0f\u7801\u6267\u884c\u6f0f\u6d1e\uff0c\u53ef\u4ee5\u5728\u4f3a\u670d\u5668\u4e0a\u6267\u884c\u4efb\u610f\u4ee3\u7801\uff0c\u5df2\u88ab\u5f52\u548e\u4e8e\u91cd\u5927\u6f0f\u6d1e\u3002</p> </li> <li> <p>\u867d\u7136\u7269\u8054\u7f51 (IoT) \u8bbe\u5907\u901a\u5e38\u5f88\u96be\u6216\u65e0\u6cd5\u4fee\u8865\uff0c\u4f46\u4fee\u8865\u5b83\u4eec\u53ef\u80fd\u6709\u5f88\u9ad8\u7684\u91cd\u8981\u6027\u3002 \uff08\u4f8b\u5982\uff0c\u751f\u7269\u533b\u5b66\u8bbe\u5907\uff09\u3002</p> </li> </ul> <p>\u6709\u4e00\u4e9b\u81ea\u52a8\u5316\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u653b\u51fb\u8005\u627e\u5230\u672a\u4fee\u8865\u6216\u914d\u7f6e\u9519\u8bef\u7684\u7cfb\u7edf\u3002\u4f8b\u5982\uff0cShodan IoT \u641c\u7d22\u5f15\u64ce\u53ef\u4ee5\u5e2e\u52a9\u60a8\u627e\u5230\u5b58\u5728 2014 \u5e74 4 \u6708\u672a\u4fee\u8865 Heartbleed \u6f0f\u6d1e\u7684\u8bbe\u5907\u3002</p>"},{"location":"zh-Hant/A06_2021-Vulnerable_and_Outdated_Components/#references","title":"\u53c2\u8003\u6587\u732e(References)","text":"<ul> <li> <p>OWASP Application Security Verification Standard: V1 Architecture, design and threat modelling</p> </li> <li> <p>OWASP Dependency Check (for Java and .NET libraries)</p> </li> <li> <p>OWASP Testing Guide - Map Application Architecture (OTG-INFO-010)</p> </li> <li> <p>OWASP Virtual Patching Best Practices</p> </li> <li> <p>The Unfortunate Reality of Insecure Libraries</p> </li> </ul>"},{"location":"zh-Hant/A06_2021-Vulnerable_and_Outdated_Components/#-mitre-common-vulnerabilities-and-exposures-cve-search","title":"- MITRE Common Vulnerabilities and Exposures (CVE) search","text":"<ul> <li> <p>National Vulnerability Database (NVD)</p> </li> <li> <p>Retire.js for detecting known vulnerable JavaScript libraries</p> </li> <li> <p>Node Libraries Security Advisories</p> </li> <li> <p>Ruby Libraries Security Advisory Database and Tools</p> </li> <li> <p>https://safecode.org/publication/SAFECode_Software_Integrity_Controls0610.pdf</p> </li> </ul>"},{"location":"zh-Hant/A06_2021-Vulnerable_and_Outdated_Components/#cwes-list-of-mapped-cwes","title":"\u5c0d\u61c9\u7684 CWEs \u6e05\u55ae(List of Mapped CWEs)","text":"<p>CWE-937 OWASP Top 10 2013: Using Components with Known Vulnerabilities</p> <p>CWE-1035 2017 Top 10 A9: Using Components with Known Vulnerabilities</p> <p>CWE-1104 Use of Unmaintained Third Party Components</p>"},{"location":"zh-Hant/A07_2021-Identification_and_Authentication_Failures/","title":"A07:2021 \u2013 \u8ba4\u8bc1\u53ca\u9a8c\u8bc1\u673a\u5236\u5931\u6548","text":""},{"location":"zh-Hant/A07_2021-Identification_and_Authentication_Failures/#_1","title":"\u5f31\u70b9\u56e0\u7d20","text":"\u53ef\u5bf9\u7167 CWEs \u6570\u91cf \u6700\u5927\u53d1\u751f\u7387 \u5e73\u5747\u53d1\u751f\u7387 \u6700\u5927\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u52a0\u6743\u6f0f\u6d1e \u5e73\u5747\u52a0\u6743\u5f71\u54cd \u51fa\u73b0\u6b21\u6570 \u6240\u6709\u76f8\u5173 CVEs \u6570\u91cf 22 14.84% 2.55% 79.51% 45.72% 7.40 6.50 132,195 3,897"},{"location":"zh-Hant/A07_2021-Identification_and_Authentication_Failures/#_2","title":"\u5f31\u70b9\u63cf\u8ff0","text":"<p>\u786e\u8ba4\u7528\u6237\u7684\u8eab\u5206\u3001\u8ba4\u8bc1\u3001\u4f1a\u8bdd(session)\u7ba1\u7406\u5bf9\u4e8e\u9632\u6b62\u4e0e\u8ba4\u8bc1\u76f8\u5173\u7684\u653b\u51fb\u81f3\u5173\u91cd\u8981\uff0c\u5982\u679c\u5e94\u7528\u7a0b\u5f0f\u5b58\u5728\u4ee5\u4e0b\u60c5\u51b5\uff0c\u5219\u53ef\u80fd\u6709\u8ba4\u8bc1\u7684\u6f0f\u6d1e:</p> <ul> <li> <p>\u5141\u8bb8\u50cf\u662f\u653b\u51fb\u8005\u5df2\u7ecf\u62e5\u6709\u6709\u6548\u7528\u6237\u540d\u79f0\u548c\u5bc6\u7801\u5217\u8868\u7684\u649e\u5e93\u81ea\u52a8\u5316\u653b\u51fb\u3002</p> </li> <li> <p>\u5141\u8bb8\u66b4\u529b\u6216\u5176\u4ed6\u81ea\u52a8\u5316\u653b\u51fb\u3002</p> </li> <li> <p>\u5141\u8bb8\u9884\u8bbe\u3001\u8106\u5f31\u3001\u5e38\u89c1\u7684\u5bc6\u7801\uff0c\u50cf\u662f\"Password1\"\u6216\"admin/admin\"\u3002</p> </li> <li> <p>\u4f7f\u7528\u8106\u5f31\u6216\u65e0\u6548\u7684\u8ba4\u8bc1\u8d44\u8baf\u56de\u590d\u6216\u5fd8\u8bb0\u5bc6\u7801\u7684\u6d41\u7a0b\uff0c\u5982\u4e0d\u5b89\u5168\u7684\"\u77e5\u8bc6\u76f8\u5173\u95ee\u7b54\"\u3002</p> </li> <li> <p>\u5c06\u5bc6\u7801\u4f7f\u7528\u660e\u7801\u3001\u52a0\u5bc6\u6216\u8f83\u8106\u5f31\u6742\u51d1\u6cd5\u7684\u65b9\u5f0f\u50a8\u5b58(\u53c2\u8003 A3: 2017-\u654f\u611f\u6027\u8d44\u6599\u6cc4\u6f0f)\u3002</p> </li> <li> <p>\u4e0d\u5177\u6709\u6216\u662f\u65e0\u6548\u7684\u591a\u56e0\u7d20\u8ba4\u8bc1\u3002</p> </li> <li> <p>\u4e8e URL \u4e2d\u6cc4\u6f0f\u4f1a\u8bdd(session) ID(\u5982 URL \u91cd\u5199)\u3002</p> </li> <li> <p>\u6210\u529f\u767b\u5165\u540e\u6ca1\u6709\u8f6e\u6362\u4f1a\u8bdd(session) ID\u3002</p> </li> <li> <p>\u6ca1\u6709\u6b63\u786e\u7684\u6ce8\u9500\u4f1a\u8bdd(session) ID\u3002\u7528\u6237\u7684\u4f1a\u8bdd(session)\u6216\u8ba4\u8bc1 tokens(\u4e3b\u8981\u662f\u5355\u4e00\u767b\u5165(SSO)token) \u6ca1\u6709\u5728\u767b\u51fa\u65f6\u6216\u4e00\u6bb5\u65f6\u95f4\u6ca1\u6d3b\u52a8\u65f6\u88ab\u9002\u5f53\u7684\u6ce8\u9500\u3002</p> </li> </ul>"},{"location":"zh-Hant/A07_2021-Identification_and_Authentication_Failures/#_3","title":"\u5982\u4f55\u9884\u9632","text":"<ul> <li> <p>\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u5b9e\u4f5c\u591a\u56e0\u7d20\u8ba4\u8bc1\u6765\u9632\u6b62\u81ea\u52a8\u5316\u649e\u5e93\u653b\u51fb\u3001\u66b4\u529b\u7834\u89e3\u3001\u4ee5\u53ca\u906d\u7a83\u8ba4\u8bc1\u8d44\u8baf\u88ab\u91cd\u590d\u5229\u7528\u7684\u653b\u51fb\u3002</p> </li> <li> <p>\u4e0d\u8981\u4ea4\u4ed8\u6216\u90e8\u7f72\u4efb\u4f55\u9884\u8bbe\u7684\u8ba4\u8bc1\u8d44\u8baf\uff0c\u7279\u522b\u662f\u7ba1\u7406\u8005\u3002</p> </li> <li> <p>\u5b9e\u4f5c\u8106\u5f31\u5bc6\u7801\u7684\u68c0\u67e5\uff0c\u5982\u6d4b\u8bd5\u65b0\u8bbe\u5b9a\u6216\u53d8\u66f4\u7684\u5bc6\u7801\u662f\u5426\u5b58\u5728\u4e8e\u524d 10,000 \u4e2a\u6700\u5dee\u5bc6\u7801\u6e05\u5355\u3002</p> </li> <li> <p>\u5c06\u5bc6\u7801\u957f\u5ea6\u3001\u590d\u6742\u5ea6\u3001\u548c\u8f6e\u6362\u653f\u7b56\u4e0e\"NIST 800-63b \u7b2c 5.1.1 \u8282-\u88ab\u8bb0\u5fc6\u7684\u79d8\u5bc6\u6216\u5176\u4ed6\u73b0\u4ee3\u57fa\u4e8e\u8bc1\u636e\u7684\u5bc6\u7801\u653f\u7b56\"\u4fdd\u6301\u4e00\u81f4\u3002</p> </li> <li> <p>\u5bf9\u6240\u6709\u7ed3\u679c\u4f7f\u7528\u76f8\u540c\u7684\u8baf\u606f\u56de\u5e94\uff0c\u786e\u4fdd\u6ce8\u518c\u3001\u8ba4\u8bc1\u8d44\u8baf\u56de\u590d\u3001\u4ee5\u53ca API \u8def\u5f84\u80fd\u591f\u62b5\u5fa1\u5e10\u53f7\u5217\u4e3e\u653b\u51fb\u3002</p> </li> <li> <p>\u9650\u5236\u6216\u589e\u52a0\u5931\u8d25\u767b\u5165\u5c1d\u8bd5\u7684\u5ef6\u8fdf\u3002\u8bb0\u5f55\u6240\u6709\u5931\u8d25\u5e76\u4e8e\u4fa6\u6d4b\u5230\u649e\u5e93\u3001\u66b4\u529b\u7834\u89e3\u6216\u5176\u4ed6\u653b\u51fb\u65f6\u53d1\u51fa\u544a\u8b66\u3002</p> </li> <li> <p>\u4f7f\u7528\u4f3a\u670d\u5668\u7aef\u3001\u5b89\u5168\u7684\u5185\u5efa\u4f1a\u8bdd(session)\u7ba1\u7406\u5668\uff0c\u5728\u767b\u5165\u540e\u4ea7\u751f\u65b0\u7684\u9ad8\u4e71\u6570\u968f\u673a\u7a0b\u5ea6(entropy)\u7684\u968f\u673a\u4f1a\u8bdd(session)ID\u3002\u4f1a\u8bdd(session)ID \u4e0d\u5e94\u51fa\u73b0\u5728 URL \u4e2d\uff0c\u5fc5\u987b\u88ab\u5b89\u5168\u7684\u50a8\u5b58\uff0c\u5e76\u4e14\u5728\u767b\u51fa\u540e\u3001\u95f2\u7f6e\u3001\u8d85\u65f6\u540e\u88ab\u6ce8\u9500\u3002</p> </li> </ul>"},{"location":"zh-Hant/A07_2021-Identification_and_Authentication_Failures/#_4","title":"\u653b\u51fb\u60c5\u5883\u8303\u4f8b","text":"<p>\u60c5\u5883 #1: \u4f7f\u7528\u5df2\u77e5\u5217\u8868\u5bc6\u7801\u7684\u649e\u5e93\u653b\u51fb\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u653b\u51fb\u65b9\u5f0f\uff0c\u5047\u8bbe\u5e94\u7528\u7a0b\u5f0f\u6ca1\u6709\u5b9e\u65bd\u81ea\u52a8\u5316\u5a01\u80c1\u6216\u649e\u5e93\u653b\u51fb\u7684\u4fdd\u62a4\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5e94\u7528\u7a0b\u5f0f\u4f1a\u88ab\u5229\u7528\u4e3a\u5bc6\u7801\u9884\u62a5\u7684\u5de5\u5177\u6765\u5224\u65ad\u8ba4\u8bc1\u8d44\u8baf\u662f\u5426\u6709\u6548\u3002</p> <p>\u60c5\u5883 #2: \u5927\u591a\u6570\u7684\u8ba4\u8bc1\u653b\u51fb\u662f\u56e0\u4e3a\u6301\u7eed\u7684\u4f7f\u7528\u5bc6\u7801\u4f5c\u4e3a\u552f\u4e00\u56e0\u7d20\uff0c\u6700\u4f73\u5b9e\u8df5\u3001\u5bc6\u7801\u8f6e\u6362\u3001\u4ee5\u53ca\u590d\u6742\u5ea6\u7684\u8981\u6c42\u4f1a\u9f13\u52b1\u7528\u6237\u4f7f\u7528\u548c\u91cd\u590d\u4f7f\u7528\u8106\u5f31\u7684\u5bc6\u7801\u3002\u5efa\u8bae\u7ec4\u7ec7\u6309\u7167 NIST 800-63 \u505c\u6b62\u8fd9\u4e9b\u505a\u6cd5\u5e76\u4f7f\u7528\u591a\u56e0\u7d20\u8ba4\u8bc1\u3002</p> <p>\u60c5\u5883 #3: \u5e94\u7528\u7a0b\u5f0f\u7684\u4f1a\u8bdd\u8d85\u65f6\u6ca1\u6709\u88ab\u8bbe\u5b9a\u6b63\u786e\u3002\u4e00\u4e2a\u7528\u6237\u4f7f\u7528\u516c\u7528\u7535\u8111\u6765\u5b58\u53d6\u5e94\u7528\u7a0b\u5f0f\u65f6\uff0c\u7528\u6237\u6ca1\u6709\u9009\u62e9\"\u767b\u51fa\"\u800c\u662f\u7b80\u5355\u7684\u5173\u95ed\u6d4f\u89c8\u5668\u5206\u9875\u5c31\u79bb\u5f00\uff0c\u6b64\u65f6\u4e00\u4e2a\u653b\u51fb\u8005\u5728\u4e00\u5c0f\u65f6\u540e\u4f7f\u7528\u540c\u4e00\u4e2a\u6d4f\u89c8\u5668\uff0c\u524d\u4e00\u4e2a\u7528\u6237\u4ecd\u7136\u5904\u4e8e\u901a\u8fc7\u8ba4\u8bc1\u7684\u72b6\u6001\u3002</p>"},{"location":"zh-Hant/A07_2021-Identification_and_Authentication_Failures/#_5","title":"\u53c2\u8003\u6587\u732e","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Digital   Identity</p> </li> <li> <p>OWASP Application Security Verification Standard: V2   authentication</p> </li> <li> <p>OWASP Application Security Verification Standard: V3 Session   Management</p> </li> <li> <p>OWASP Testing Guide: Identity,\u00a0Authentication</p> </li> <li> <p>OWASP Cheat Sheet:   Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Credential Stuffing</p> </li> <li> <p>OWASP Cheat Sheet: Forgot   Password</p> </li> <li> <p>OWASP Cheat Sheet: Session Management</p> </li> <li> <p>OWASP Automated Threats   Handbook</p> </li> <li> <p>NIST 800-63b: 5.1.1 Memorized Secrets</p> </li> </ul>"},{"location":"zh-Hant/A07_2021-Identification_and_Authentication_Failures/#cwes","title":"\u5c0d\u61c9\u7684 CWEs \u6e05\u55ae","text":"<p>CWE-255 Credentials Management Errors</p> <p>CWE-259 Use of Hard-coded Password</p> <p>CWE-287 Improper Authentication</p> <p>CWE-288 Authentication Bypass Using an Alternate Path or Channel</p> <p>CWE-290 Authentication Bypass by Spoofing</p> <p>CWE-294 Authentication Bypass by Capture-replay</p> <p>CWE-295 Improper Certificate Validation</p> <p>CWE-297 Improper Validation of Certificate with Host Mismatch</p> <p>CWE-300 Channel Accessible by Non-Endpoint</p> <p>CWE-302 Authentication Bypass by Assumed-Immutable Data</p> <p>CWE-304 Missing Critical Step in Authentication</p> <p>CWE-306 Missing Authentication for Critical Function</p> <p>CWE-307 Improper Restriction of Excessive Authentication Attempts</p> <p>CWE-346 Origin Validation Error</p> <p>CWE-384 Session Fixation</p> <p>CWE-521 Weak Password Requirements</p> <p>CWE-613 Insufficient Session Expiration</p> <p>CWE-620 Unverified Password Change</p> <p>CWE-640 Weak Password Recovery Mechanism for Forgotten Password</p> <p>CWE-798 Use of Hard-coded Credentials</p> <p>CWE-940 Improper Verification of Source of a Communication Channel</p> <p>CWE-1216 Lockout Mechanism Errors</p>"},{"location":"zh-Hant/A08_2021-Software_and_Data_Integrity_Failures/#_1","title":"\u5f31\u70b9\u56e0\u7d20","text":"\u5bf9\u5e94\u7684 CWEs \u6570\u91cf \u6700\u5927\u53d1\u751f\u7387 \u5e73\u5747\u53d1\u751f\u7387 \u6700\u5927\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u52a0\u6743\u6f0f\u6d1e \u5e73\u5747\u52a0\u6743\u5f71\u54cd \u51fa\u73b0\u6b21\u6570 \u76f8\u5173 CVEs \u603b\u91cf 10 16.67% 2.05% 75.04% 45.35% 6.94 7.94 47,972 1,152"},{"location":"zh-Hant/A08_2021-Software_and_Data_Integrity_Failures/#_2","title":"\u5f31\u70b9\u7b80\u4ecb","text":"<p>\u8fd9\u662f 2021 \u5e74\u7684\u65b0\u7c7b\u578b\uff0c\u7740\u91cd\u5728\u8f6f\u4f53\u66f4\u65b0\uff0c\u5173\u952e\u8d44\u6599\u53ca\u6301\u7eed\u6027\u6574\u5408/\u90e8\u7f72(CI/CD)\u6d41\u7a0b\u672a\u7ecf\u5b8c\u6574\u6027\u9a8c\u8bc1\u4e4b\u5047\u8bbe\u3002\u540c\u65f6\u5728 CVE/CVSS \u8d44\u6599\u52a0\u6743\u540e\u4e4b\u6700\u9ad8\u5f71\u54cd\u4e4b\u4e00\u3002\u503c\u5f97\u6ce8\u610f\u7684 CWE \u5305\u542b CWE-502\uff1a\u4e0d\u53d7\u4fe1\u4efb\u8d44\u6599\u4e4b\u53cd\u5e8f\u5217\u5316\uff0cCWE-829\uff1a\u5305\u542b\u6765\u81ea\u4e0d\u53d7\u4fe1\u4efb\u63a7\u5236\u9886\u57df\u4e4b\u529f\u80fd\u53ca CWE-494\uff1a\u4e0b\u8f7d\u672a\u7ecf\u5b8c\u6574\u6027\u9a8c\u8bc1\u4e4b\u7a0b\u5f0f\u7801\u3002</p>"},{"location":"zh-Hant/A08_2021-Software_and_Data_Integrity_Failures/#_3","title":"\u5f31\u70b9\u63cf\u8ff0","text":"<p>\u7a0b\u5f0f\u7801\u6216\u57fa\u7840\u67b6\u6784\u672a\u80fd\u4fdd\u62a4\u8f6f\u4f53\u53ca\u8d44\u6599\u4e4b\u5b8c\u6574\u6027\u53d7\u5230\u7834\u574f\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u7269\u4ef6\u6216\u8d44\u6599\u7ecf\u7f16\u7801\u6216\u5e8f\u5217\u5316\u5230\u4e00\u4e2a\u5bf9\u653b\u51fb\u8005\u53ef\u8bfb\u5199\u4e4b\u7ed3\u6784\u4e2d\u5c06\u5bfc\u81f4\u4e0d\u5b89\u5168\u7684\u53cd\u5e8f\u5217\u5316\u3002\u53e6\u4e00\u79cd\u5f62\u5f0f\u5219\u662f\u5e94\u7528\u7a0b\u5f0f\u4f9d\u8d56\u6765\u81ea\u4e8e\u4e0d\u53d7\u4fe1\u4efb\u6765\u6e90\uff0c\u5178\u85cf\u5e93\u53ca\u5185\u5bb9\u9012\u9001\u7f51\u8def\u4e4b\u5916\u6302\uff0c\u51fd\u5f0f\u5e93\u6216\u6a21\u7ec4\u3002\u4e0d\u5b89\u5168\u7684\u6301\u7eed\u6027\u6574\u5408/\u90e8\u7f72(CI/CD)\u6d41\u7a0b\u5219\u4f1a\u9020\u6210\u6f5c\u5728\u7684\u672a\u7ecf\u6388\u6743\u5b58\u53d6\uff0c\u6076\u610f\u7a0b\u5f0f\u7801\u6216\u7cfb\u7edf\u7834\u574f\u3002\u6700\u540e\uff0c\u73b0\u5728\u8bb8\u591a\u5e94\u7528\u7a0b\u5f0f\u62e5\u6709\u81ea\u52a8\u66f4\u65b0\u529f\u80fd\uff0c\u4f46\u81ea\u52a8\u66f4\u65b0\u529f\u80fd\u5728\u7f3a\u4e4f\u5145\u8db3\u5b8c\u6574\u6027\u9a8c\u8bc1\u529f\u80fd\u65f6\u5c31\u4e0b\u8f7d\u5e76\u5b89\u88c5\u66f4\u65b0\u5230\u5904\u4e8e\u5b89\u5168\u72b6\u6001\u4e0b\u7684\u5e94\u7528\u7a0b\u5f0f\u3002\u653b\u51fb\u8005\u80fd\u4e0a\u4f20\u81ea\u5236\u66f4\u65b0\u6863\u6848\uff0c\u66f4\u65b0\u6863\u6848\u5c06\u4f20\u64ad\u5230\u6240\u6709\u5df2\u5b89\u88c5\u4e4b\u5e94\u7528\u7a0b\u5f0f\u5e76\u5728\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5f0f\u4e0a\u6267\u884c\u3002</p>"},{"location":"zh-Hant/A08_2021-Software_and_Data_Integrity_Failures/#_4","title":"\u5f31\u70b9\u63cf\u8ff0","text":"<ul> <li> <p>\u786e\u4fdd\u4e0d\u53d7\u4fe1\u4efb\u4e4b\u5ba2\u6237\u7aef\u4e0d\u4f1a\u6536\u5230\u672a\u7b7e\u7f72\u6216\u52a0\u5bc6\u4e4b\u5e8f\u5217\u5316\u8d44\u6599\u5e76\u5229\u7528\u5b8c\u6574\u6027\u68c0\u67e5\u6216\u6570\u4f4d\u7b7e\u7ae0\u6765\u4fa6\u6d4b\u7a9c\u6539\u6216\u91cd\u653e\u653b\u51fb\u3002</p> </li> <li> <p>\u5229\u7528\u6570\u4f4d\u7b7e\u7ae0\u6216\u7c7b\u4f3c\u673a\u5236\u786e\u4fdd\u8f6f\u4f53\u6216\u8d44\u6599\u6765\u81ea\u9884\u671f\u4e4b\u63d0\u4f9b\u8005</p> </li> <li> <p>\u786e\u4fdd\u51fd\u5f0f\u5e93\u53ca\u4ece\u5c5e\u5957\u4ef6\uff0c\u4f8b\u5982 npm \u6216 Maven\uff0c\u662f\u4ece\u53d7\u4fe1\u4efb\u7684\u5178\u85cf\u5e93\u53d6\u5f97\u3002</p> </li> <li> <p>\u4f7f\u7528\u8f6f\u4f53\u4f9b\u5e94\u94fe\u5b89\u5168\u5de5\u5177(\u4f8b\u5982 OWASP Dependency Check \u6216 OWASP CycloneDX)\u786e\u4fdd\u5143\u4ef6\u6ca1\u6709\u5df2\u77e5\u5f31\u70b9\u3002</p> </li> <li>\u9002\u5f53\u5730\u8bbe\u5b9a\u6301\u7eed\u6027\u6574\u5408/\u90e8\u7f72(CI/CD)\u6d41\u7a0b\u7684\u7ec4\u6001\u53ca\u5b58\u53d6\u63a7\u5236\u4ee5\u786e\u4fdd\u7a0b\u5f0f\u7801\u5728\u7ec4\u5efa\u53ca\u90e8\u7f72\u6d41\u7a0b\u4e2d\u7684\u5b8c\u6574\u6027\u3002</li> </ul>"},{"location":"zh-Hant/A08_2021-Software_and_Data_Integrity_Failures/#_5","title":"\u653b\u51fb\u60c5\u5883\u8303\u4f8b","text":"<p>\u60c5\u5883 1 \u4e0d\u5b89\u5168\u7684\u53cd\u5e8f\u5217\u5316\uff1a\u4e00\u4e2a\u53cd\u5e94\u5f0f\u5e94\u7528\u7a0b\u5f0f\u547c\u53eb Spring Boot \u5fae\u670d\u52a1\u3002\u7a0b\u5f0f\u8bbe\u8ba1\u5e08\u4eec\u8bd5\u56fe\u786e\u4fdd\u4ed6\u4eec\u7684\u4ee3\u7801\u662f\u4e0d\u53ef\u53d8\u7684\u3002\u4ed6\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5728\u53cc\u5411\u6240\u6709\u8bf7\u6c42\u8baf\u606f\u4e2d\u5305\u542b\u5e8f\u5217\u5316\u7684\u7528\u6237\u72b6\u6001\u3002\u653b\u51fb\u8005\u6ce8\u610f\u5230\u201cR00\u201dJava \u7269\u4ef6\u7b7e\u7ae0\u5e76\u4f7f\u7528 Java Serial Killer \u5de5\u5177(\u7528\u6765\u6267\u884c Java \u53cd\u5e8f\u5217\u5316\u653b\u51fb)\u5728\u5e94\u7528\u7a0b\u5f0f\u670d\u52a1\u5668\u8fdc\u7aef\u6267\u884c\u7a0b\u5f0f\u7801\u3002</p> <p>\u60c5\u5883 2 \u672a\u7b7e\u7f72\u4e4b\u66f4\u65b0\uff1a\u8bb8\u591a\u5bb6\u7528\u8def\u7531\u5668\u3001\u673a\u4e0a\u76d2\u3001\u88c5\u7f6e\u97e7\u4f53\u7b49\u672a\u4ee5\u901a\u8fc7\u7b7e\u7f72\u4e4b\u97e7\u4f53\u9a8c\u8bc1\u66f4\u65b0\u6863\u6848\u3002\u672a\u7b7e\u7f72\u97e7\u4f53\u662f\u8d8a\u6765\u8d8a\u591a\u653b\u51fb\u8005\u7684\u76ee\u6807\u4e14\u60c5\u51b5\u53ea\u4f1a\u53d8\u5f97\u66f4\u7cdf\u3002\u8fd9\u662f\u4e00\u4e2a\u4e3b\u8981\u95ee\u9898\uff0c\u56e0\u4e3a\u53ea\u80fd\u4ee5\u65b0\u7248\u672c\u4fee\u590d\u6b64\u673a\u5236\u5e76\u671f\u5f85\u65e7\u7248\u672c\u81ea\u7136\u6dd8\u6c70\uff0c\u6ca1\u6709\u5176\u4ed6\u65b9\u6cd5\u3002</p> <p>\u60c5\u5883 3 SolarWinds \u6076\u610f\u66f4\u65b0\uff1a\u4f17\u6240\u5468\u77e5\uff0c\u67d0\u4e9b\u56fd\u5bb6\u4f1a\u653b\u51fb\u66f4\u65b0\u673a\u5236\uff0c\u6700\u8fd1\u4e00\u6b21\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5bf9 SolarWinds Orion \u7684\u653b\u51fb\u3002\u8be5\u8f6f\u4f53\u5f00\u53d1\u5546\u62e5\u6709\u5b89\u5168\u7ec4\u5efa\u548c\u66f4\u65b0\u5b8c\u6574\u6027\u6d41\u7a0b\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4e9b\u6d41\u7a0b\u4ecd\u88ab\u7834\u574f\u5e76\u5728\u51e0\u4e2a\u6708\u65f6\u95f4\u4e2d\u5411 18,000 \u591a\u4e2a\u7ec4\u7ec7\u9001\u51fa\u9ad8\u5ea6\u9488\u5bf9\u6027\u7684\u6076\u610f\u66f4\u65b0\uff0c\u5176\u4e2d\u5927\u7ea6 100 \u4e2a\u7ec4\u7ec7\u53d7\u5230\u4e86\u5f71\u54cd\u3002\u8fd9\u662f\u5386\u53f2\u4e0a\u6b64\u7c7b\u6027\u8d28\u6700\u6df1\u8fdc\u3001\u6700\u91cd\u5927\u7684\u8d44\u5b89\u4e8b\u4ef6\u4e4b\u4e00\u3002</p>"},{"location":"zh-Hant/A08_2021-Software_and_Data_Integrity_Failures/#_6","title":"\u53c2\u8003\u6587\u732e","text":"<ul> <li> <p>[OWASP Cheat Sheet: Deserialization](   https://wiki.owasp.org/index.php/Deserialization_Cheat_Sheet)</p> </li> <li> <p>[OWASP Cheat Sheet: Software Supply Chain Security]()</p> </li> <li> <p>[OWASP Cheat Sheet: Secure build and deployment]()</p> </li> <li> <p>[SAFECode Software Integrity Controls](   https://safecode.org/publication/SAFECode_Software_Integrity_Controls0610.pdf)</p> </li> <li> <p>[A 'Worst Nightmare' Cyberattack: The Untold Story Of The   SolarWinds   Hack](https://www.npr.org/2021/04/16/985439655/a-worst-nightmare-cyberattack-the-untold-story-of-the-solarwinds-hack)</p> </li> <li> <p>https://www.manning.com/books/securing-devops</p> </li> </ul>"},{"location":"zh-Hant/A08_2021-Software_and_Data_Integrity_Failures/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":""},{"location":"zh-Hant/A08_2021-Software_and_Data_Integrity_Failures/#cwes","title":"\u5bf9\u5e94\u7684 CWEs \u6e05\u5355","text":"<p>CWE-345 Insufficient Verification of Data Authenticity</p> <p>CWE-345 \u4e0d\u8db3\u7684\u8d44\u6599\u771f\u5b9e\u6027\u9a8c\u8bc1</p> <p>CWE-353 Missing Support for Integrity Check</p> <p>CWE-353 \u7f3a\u4e4f\u5bf9\u5b8c\u6574\u6027\u786e\u8ba4\u4e4b\u652f\u63f4</p> <p>CWE-426 Untrusted Search Path</p> <p>CWE-426 \u4e0d\u53d7\u4fe1\u4efb\u7684\u641c\u5bfb\u8def\u5f84</p> <p>CWE-494 Download of Code Without Integrity Check</p> <p>CWE-494 \u4e0b\u8f7d\u672a\u7ecf\u5b8c\u6574\u6027\u9a8c\u8bc1\u4e4b\u7a0b\u5f0f\u7801</p> <p>CWE-502 Deserialization of Untrusted Data</p> <p>CWE-502 \u4e0d\u53d7\u4fe1\u4efb\u8d44\u6599\u4e4b\u53cd\u5e8f\u5217\u5316</p> <p>CWE-565 Reliance on Cookies without Validation and Integrity Checking</p> <p>CWE-565 \u4fe1\u4efb\u672a\u7ecf\u9a8c\u8bc1\u53ca\u5b8c\u6574\u6027\u786e\u8ba4\u7684 Cookies</p> <p>CWE-784 Reliance on Cookies without Validation and Integrity Checking in a Security Decision</p> <p>CWE-784 \u5728\u5b89\u5168\u6027\u51b3\u7b56\u4e2d\u4fe1\u4efb\u672a\u7ecf\u9a8c\u8bc1\u53ca\u5b8c\u6574\u6027\u786e\u8ba4\u7684 Cookies</p> <p>CWE-829 Inclusion of Functionality from Untrusted Control Sphere</p> <p>CWE-829\u00a0 \u5305\u542b\u6765\u81ea\u4e0d\u53d7\u4fe1\u4efb\u63a7\u5236\u9886\u57df\u4e4b\u529f\u80fd</p> <p>CWE-830 Inclusion of Web Functionality from an Untrusted Source</p> <p>CWE-830\u00a0 \u5305\u542b\u6765\u81ea\u4e0d\u53d7\u4fe1\u4efb\u63a7\u5236\u6765\u6e90\u4e4b\u7f51\u9875\u529f\u80fd</p> <p>CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes</p> <p>CWE-915 \u52a8\u6001\u51b3\u5b9a\u7269\u4ef6\u5c5e\u6027\u4e8e\u4e0d\u5f53\u63a7\u5236\u4e0b\u4e4b\u4fee\u6539</p>"},{"location":"zh-Hant/A09_2021-Security_Logging_and_Monitoring_Failures/#_1","title":"\u56e0\u7d20","text":"\u53ef\u5bf9\u7167 CWEs \u6570\u91cf \u6700\u5927\u53d1\u751f\u7387 \u5e73\u5747\u53d1\u751f\u7387 \u6700\u5927\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u52a0\u6743\u6f0f\u6d1e \u5e73\u5747\u52a0\u6743\u5f71\u54cd \u603b\u53d1\u751f\u6570 \u76f8\u5173 CVEs \u603b\u6570\u91cf 4 19.23% 6.51% 53.67% 39.97% 6.87 4.99 53,615 242"},{"location":"zh-Hant/A09_2021-Security_Logging_and_Monitoring_Failures/#_2","title":"\u7b80\u4ecb","text":"<p>\u5b89\u5168\u8bb0\u5f55\u53ca\u76d1\u63a7\u662f\u4e1a\u754c\u8c03\u67e5\u7ed3\u679c (#3)\uff0c\u7531 2017 \u5e74\u7684\u7b2c\u5341\u540d\u7a0d\u5fae\u4e0a\u5347\u3002\u8bb0\u5f55\u53ca\u76d1\u63a7\u529f\u80fd\u9a8c\u8bc1\u975e\u5e38\u6709\u6311\u6218\u6027\uff0c\u901a\u5e38\u9700\u8981\u4ee5\u8bbf\u8c08\u6216\u8be2\u95ee\u4e4b\u65b9\u5f0f\u68c0\u9a8c\u6709\u65e0\u4fa6\u6d4b\u6e17\u900f\u6d4b\u8bd5\u7684\u653b\u51fb\u6d3b\u52a8\u3002\u4fa6\u6d4b\u53ca\u5e94\u53d8\u5bf9\u8d44\u5b89\u4e8b\u4ef6\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u6b64\u7c7b\u578b\u4e4b CVE/CVSS \u8d44\u6599\u4e0d\u591a\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6b64\u7c7b\u578b\u5bf9\u4e8e\u4e8b\u4ef6\u544a\u8b66\u3001\u53ef\u89c1\u6027\u548c\u9274\u8bc6\u4ecd\u7136\u975e\u5e38\u6709\u5f71\u54cd\u529b\u3002\u6b64\u7c7b\u578b\u6db5\u76d6 CWE-778 \u4e0d\u8db3\u5730\u8bb0\u5f55\uff0cCWE-117 \u672a\u7ecf\u9002\u5f53\u5904\u7406\u4e4b\u65e5\u5fd7\u8f93\u51fa\uff0cCWE-223 \u9057\u6f0f\u5b89\u5168\u76f8\u5173\u8d44\u8baf\u53ca CWE-532 \u4e8e\u65e5\u5fd7\u6863\u6848\u7f6e\u5165\u654f\u611f\u8d44\u8baf\u3002</p>"},{"location":"zh-Hant/A09_2021-Security_Logging_and_Monitoring_Failures/#_3","title":"\u63cf\u8ff0","text":"<p>\u5728 2021 \u5e74 OWASP Top 10\uff0c\u6b64\u7c7b\u578b\u6709\u52a9\u4e8e\u5bf9\u8fdb\u884c\u4e2d\u8d44\u5b89\u4e8b\u4ef6\u4e4b\u4fa6\u6d4b\uff0c\u5347\u7ea7\u53ca\u5e94\u53d8\u3002\u7f3a\u4e4f\u8bb0\u5f55\u53ca\u76d1\u63a7\u65f6\u65e0\u6cd5\u4fa6\u6d4b\u8d44\u5b89\u4e8b\u4ef6\u53d1\u751f\u3002\u4e0d\u8db3\u5730\u8bb0\u5f55\uff0c\u4fa6\u6d4b\uff0c\u76d1\u63a7\u53ca\u4e3b\u52a8\u5e94\u53d8\u968f\u65f6\u4f1a\u53d1\u751f\uff1a</p> <ul> <li> <p>\u53ef\u7a3d\u6838\u4e8b\u4ef6\u672a\u8bb0\u5f55\uff0c\u5982\u767b\u5165\u6210\u529f\uff0c\u767b\u5165\u5931\u8d25\u53ca\u9ad8\u4ef7\u503c\u4ea4\u6613\u3002</p> </li> <li> <p>\u8b66\u544a\u6216\u9519\u8bef\u53d1\u751f\u65f6\u672a\u4ea7\u751f\uff0c\u4ea7\u751f\u4e0d\u5145\u8db3\u6216\u4ea7\u751f\u4e0d\u660e\u786e\u65e5\u5fd7\u3002</p> </li> <li> <p>\u672a\u76d1\u63a7\u5e94\u7528\u7a0b\u5f0f\u6216\u5e94\u7528\u7a0b\u5f0f\u4ecb\u9762(API)\u65e5\u5fd7\u4e2d\u7684\u53ef\u7591\u6d3b\u52a8\u3002</p> </li> <li> <p>\u65e5\u5fd7\u4ec5\u50a8\u5b58\u4e8e\u672c\u5730\u7aef\u3002</p> </li> <li>\u672a\u8bbe\u6709\u6216\u8bbe\u6709\u65e0\u6548\u4e4b\u9002\u5f53\u544a\u8b66\u9600\u503c\u53ca\u5e94\u53d8\u5347\u7ea7\u7a0b\u5e8f\u3002</li> <li> <p>\u6e17\u900f\u6d4b\u8bd5\u53ca DAST \u5de5\u5177(\u5982 OWASP ZAP)\u626b\u63cf\u6ca1\u6709\u89e6\u53d1\u544a\u8b66\u3002</p> </li> <li> <p>\u5e94\u7528\u7a0b\u5f0f\u65e0\u6cd5\u63a5\u8fd1\u5373\u65f6\u6216\u5373\u65f6\u4fa6\u6d4b\uff0c\u5347\u7ea7\u6216\u8b66\u544a\u8fdb\u884c\u4e2d\u4e4b\u653b\u51fb\u3002</p> </li> </ul> <p>\u5141\u8bb8\u4f7f\u7528\u8005\u6216\u653b\u51fb\u8005\u8bfb\u53d6\u65e5\u5fd7\u6216\u544a\u8b66\u4e8b\u4ef6\u53ef\u80fd\u65e9\u6210\u8d44\u8baf\u6cc4\u6f0f(\u53c2\u8003 A01:2021 \u6743\u9650\u63a7\u5236\u5931\u6548)</p>"},{"location":"zh-Hant/A09_2021-Security_Logging_and_Monitoring_Failures/#_4","title":"\u5982\u4f55\u9884\u9632","text":"<p>\u5f00\u53d1\u8005\u5e94\u4f9d\u636e\u5e94\u7528\u7a0b\u5f0f\u6240\u9762\u4e34\u98ce\u9669\u5b9e\u4f5c\u4e0b\u5217\u90e8\u5206\u6216\u5168\u90e8\u7684\u63a7\u5236\u9879\uff1a</p> <ul> <li> <p>\u786e\u4fdd\u8bb0\u5f55\u6240\u6709\u767b\u5165\uff0c\u5b58\u53d6\u63a7\u5236\u53ca\u670d\u52a1\u5668\u7aef\u8f93\u5165\u9a8c\u8bc1\u4e4b\u5931\u8d25\uff0c\u65e5\u5fd7\u5e94\u5305\u542b\u5145\u8db3\u4f7f\u7528\u8005\u60c5\u5883\u4ee5\u8bc6\u522b\u53ef\u7591\u6216\u6076\u610f\u5e10\u53f7\uff0c\u65e5\u5fd7\u5e94\u5b58\u7559\u5145\u8db3\u65f6\u95f4\u4ee5\u5229\u672a\u6765\u53ef\u80fd\u4e4b\u9274\u8bc6\u5206\u6790\u8981\u6c42\u3002</p> </li> <li> <p>\u786e\u4fdd\u65e5\u5fd7\u683c\u5f0f\u7b26\u5408\u4e00\u822c\u65e5\u5fd7\u7ba1\u7406\u7cfb\u7edf\u5e38\u7528\u683c\u5f0f\u3002</p> </li> <li>\u786e\u4fdd\u65e5\u5fd7\u7ecf\u6b63\u786e\u7f16\u7801\u4ee5\u9632\u6b62\u906d\u53d7\u6ce8\u5165\u653b\u51fb\u6216\u65e5\u5fd7/\u76d1\u63a7\u7cfb\u7edf\u906d\u53d7\u653b\u51fb\u3002</li> <li>\u786e\u4fdd\u9ad8\u4ef7\u503c\u4ea4\u6613\u8fdb\u884c\u65f6\u4ea7\u751f\u7a3d\u6838\u8f68\u8ff9(\u65e5\u5fd7)\u5e76\u5b9e\u4f5c\u5b8c\u6574\u6027\u63a7\u5236\u4ee5\u907f\u514d\u7a9c\u6539\u6216\u5220\u9664\uff0c\u5982\u4ec5\u9650\u9644\u52a0\u7684\u8d44\u6599\u8868\u6216\u7c7b\u4f3c\u5de5\u5177\u3002</li> <li>DevSecOps \u56e2\u961f\u5e94\u5efa\u7acb\u6709\u6548\u5730\u76d1\u63a7\u53ca\u544a\u8b66\u673a\u5236\u4ee5\u5229\u4fa6\u6d4b\u53ef\u7591\u6d3b\u52a8\u5e76\u5feb\u901f\u5e94\u53d8\u3002</li> <li>\u5efa\u7acb\u6216\u5bfc\u5165\u4e8b\u4ef6\u5e94\u53d8\u53ca\u590d\u539f\u8ba1\u753b\uff0c\u5982 NIST 800-61r2 \u6216\u66f4\u65b0\u7248\u672c\u3002</li> </ul> <p>\u73b0\u6709\u591a\u79cd\u5546\u4e1a\u5316\u53ca\u5f00\u653e\u539f\u59cb\u7801\u5e94\u7528\u7a0b\u5f0f\u4fdd\u62a4\u67b6\u6784\uff0c\u5982 OWASP ModSecurity Core Rule Set \u53ca\u5f00\u653e\u539f\u59cb\u7801\u65e5\u5fd7\u5173\u8054\u8f6f\u4f53\u53ef\u5ba2\u5236\u5316\u4eea\u8868\u677f\u53ca\u544a\u8b66\uff0c\u5982 ELK stack\u3002</p>"},{"location":"zh-Hant/A09_2021-Security_Logging_and_Monitoring_Failures/#_5","title":"\u653b\u51fb\u60c5\u666f\u8303\u4f8b","text":"<p>\u60c5\u5883 1\uff1a\u4e00\u5bb6\u513f\u7ae5\u5065\u5eb7\u8ba1\u5212\u4f9b\u5e94\u5546\u7684\u7f51\u7ad9\u8fd0\u8425\u5546\u56e0\u7f3a\u4e4f\u76d1\u63a7\u548c\u8bb0\u5f55\u65e0\u6cd5\u4fa6\u6d4b\u8d44\u5b89\u4e8b\u4ef6\u3002\u5916\u90e8\u901a\u77e5\u8be5\u5065\u5eb7\u8ba1\u5212\u4f9b\u5e94\u5546\uff0c\u653b\u51fb\u8005\u5df2\u5b58\u53d6\u53ca\u4fee\u6539\u8d85\u8fc7 350 \u4e07\u540d\u513f\u7ae5\u7684\u654f\u611f\u5065\u5eb7\u8bb0\u5f55\u3002\u4e8b\u540e\u5ba1\u67e5\u53d1\u73b0\u7f51\u7ad9\u5f00\u53d1\u8005\u6ca1\u6709\u5904\u7406\u91cd\u5927\u5f31\u70b9\u3002\u7531\u4e8e\u7cfb\u7edf\u6ca1\u6709\u8bb0\u5f55\u6216\u76d1\u63a7\uff0c\u8d44\u6599\u6cc4\u6f0f\u53ef\u80fd\u4ece 2013 \u5e74\u5f00\u59cb\u81f3\u4eca\uff0c\u65f6\u95f4\u8d85\u8fc7\u4e03\u5e74\u3002</p> <p>\u60c5\u5883 2\uff1a\u5370\u5ea6\u4e00\u5bb6\u5927\u578b\u822a\u7a7a\u516c\u53f8\u53d1\u751f\u6d89\u53ca\u6570\u767e\u4e07\u4e58\u5ba2\u8d85\u8fc7\u5341\u5e74\u5305\u62ec\u62a4\u7167\u53ca\u4fe1\u7528\u5361\u8d44\u6599\u7b49\u4e2a\u4eba\u8d44\u6599\u7684\u8d44\u6599\u6cc4\u6f0f\u3002\u8d44\u6599\u6cc4\u6f0f\u53d1\u751f\u5728\u7b2c\u4e09\u65b9\u4f9b\u5e94\u5546\u63d0\u4f9b\u7684\u4e91\u7aef\u670d\u52a1\uff0c\u8be5\u4f9b\u5e94\u5546\u5728\u8d44\u6599\u6cc4\u6f0f\u53d1\u751f\u4e00\u6bb5\u65f6\u95f4\u540e\u901a\u77e5\u822a\u7a7a\u516c\u53f8\u3002</p> <p>\u60c5\u5883 3\uff1a\u4e00\u5bb6\u5927\u578b\u6b27\u6d32\u822a\u7a7a\u516c\u53f8\u53d1\u751f\u4f9d GDPR \u5e94\u62a5\u544a\u4e4b\u4e2a\u8d44\u4e8b\u6545\u3002\u636e\u62a5\u5bfc\uff0c\u653b\u51fb\u8005\u5229\u7528\u652f\u4ed8\u5e94\u7528\u7cfb\u7edf\u4e4b\u5b89\u5168\u6f0f\u6d1e\uff0c\u53d6\u5f97\u8d85\u8fc7 40 \u4e07\u7b14\u5ba2\u6237\u652f\u4ed8\u7eaa\u5f55\u3002\u8be5\u822a\u7a7a\u516c\u53f8\u906d\u9690\u79c1\u4e3b\u7ba1\u673a\u5173\u88c1\u7f5a\u4e24\u5343\u4e07\u82f1\u9551\u3002</p>"},{"location":"zh-Hant/A09_2021-Security_Logging_and_Monitoring_Failures/#_6","title":"\u53c2\u8003\u6587\u6863","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Logging and   Monitoring</p> </li> <li> <p>OWASP Application Security Verification Standard: V8 Logging and   Monitoring</p> </li> <li> <p>OWASP Testing Guide: Testing for Detailed Error   Code</p> </li> <li> <p>OWASP Cheat Sheet:   Logging</p> </li> <li> <p>Data Integrity: Recovering from Ransomware and Other Destructive   Events</p> </li> <li> <p>Data Integrity: Identifying and Protecting Assets Against   Ransomware and Other Destructive   Events</p> </li> <li> <p>Data Integrity: Detecting and Responding to Ransomware and Other   Destructive   Events</p> </li> </ul>"},{"location":"zh-Hant/A09_2021-Security_Logging_and_Monitoring_Failures/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":"<p>CWE-117 Improper Output Neutralization for Logs</p> <p>CWE-117 \u672a\u7ecf\u9002\u5f53\u5904\u7406\u4e4b\u65e5\u5fd7\u8f93\u51fa</p> <p>CWE-223 Omission of Security-relevant Information</p> <p>CWE-223 \u9057\u6f0f\u5b89\u5168\u76f8\u5173\u8d44\u8baf</p> <p>CWE-532 Insertion of Sensitive Information into Log File</p> <p>CWE-532 \u4e8e\u65e5\u5fd7\u6863\u6848\u7f6e\u5165\u654f\u611f\u8d44\u8baf</p> <p>CWE-778 Insufficient Logging</p> <p>CWE-778 \u4e0d\u8db3\u5730\u8bb0\u5f55</p>"},{"location":"zh-Hant/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_1","title":"\u56e0\u7d20","text":"\u53ef\u5bf9\u7167 CWEs \u6570\u91cf \u6700\u5927\u53d1\u751f\u7387 \u5e73\u5747\u53d1\u751f\u7387 \u6700\u5927\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u52a0\u6743\u6f0f\u6d1e \u5e73\u5747\u52a0\u6743\u5f71\u54cd \u51fa\u73b0\u6b21\u6570 \u6240\u6709\u76f8\u5173 CVEs \u6570\u91cf 1 2.72% 2.72% 67.72% 67.72% 8.28 6.72 9,503 385"},{"location":"zh-Hant/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_2","title":"\u6982\u89c8","text":"<p>\u8fd9\u4e2a\u7c7b\u522b\u662f\u4ece\u4ea7\u4e1a\u8c03\u67e5\u7ed3\u679c\u52a0\u5165\u81f3\u6b64\u7684(#1)\u3002\u8d44\u6599\u663e\u793a\u5728\u6d4b\u8bd5\u8986\u76d6\u7387\u9ad8\u4e8e\u5e73\u5747\u6c34\u51c6\u4ee5\u53ca\u5229\u7528(Exploit)\u548c\u51b2\u51fb(Impact)\u6f5c\u529b\u8bc4\u7b49\u9ad8\u4e8e\u5e73\u5747\u6c34\u51c6\u7684\u60c5\u51b5\u4e0b\uff0c\u6b64\u7c7b\u522b\u53d1\u751f\u673a\u7387\u76f8\u5bf9\u8f83\u4f4e\u3002\u56e0\u4e3a\u65b0\u62a5\u5230\u7684\u7c7b\u522b\u6709\u53ef\u80fd\u662f\u5728 CWEs \u5f53\u4e2d\u53d7\u5230\u5355\u4e00\u6216\u5c0f\u7fa4\u5173\u6ce8\u7684\u7c7b\u522b\u800c\u5df2\uff0c\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u6b64\u9879\u76ee\u53ef\u4ee5\u5f15\u6765\u66f4\u591a\u4eba\u5173\u6ce8\uff0c\u8fdb\u800c\u5728\u672a\u6765\u7248\u672c\u53d8\u6210\u4e00\u4e2a\u8f83\u5927\u7684\u7c7b\u522b\u3002</p>"},{"location":"zh-Hant/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_3","title":"\u63cf\u8ff0","text":"<p>\u5f53\u7f51\u9875\u5e94\u7528\u7a0b\u5f0f\u6b63\u5728\u53d6\u5f97\u8fdc\u7aef\u8d44\u6e90\uff0c\u5374\u672a\u9a8c\u8bc1\u7531\u4f7f\u7528\u8005\u63d0\u4f9b\u7684\u7f51\u5740\uff0c\u6b64\u65f6\u5c31\u4f1a\u53d1\u751f\u4f2a\u9020\u670d\u52a1\u7aef\u8bf7\u6c42\u3002\u5373\u4fbf\u6709\u9632\u706b\u5899\u3001VPN \u6216\u5176\u4ed6\u7f51\u8def ACL \u4fdd\u62a4\u7684\u60c5\u51b5\u4e0b\uff0c\u653b\u51fb\u8005\u4ecd\u5f97\u4ee5\u5f3a\u8feb\u7f51\u9875\u5e94\u7528\u7a0b\u5f0f\u53d1\u9001\u4e00\u4e2a\u7ecf\u8fc7\u634f\u9020\u7684\u8bf7\u6c42\u7ed9\u4e00\u4e2a\u975e\u9884\u671f\u7684\u76ee\u7684\u7aef\u3002</p> <p>\u73b0\u4eca\u7684\u7f51\u9875\u5e94\u7528\u7a0b\u5f0f\u63d0\u4f9b\u7ec8\u7aef\u4f7f\u7528\u8005\u4fbf\u5229\u7684\u7279\u8272\uff0c\u53d6\u5f97\u7f51\u5740\u5df2\u7ecf\u662f\u5e38\u89c1\u7684\u4e86\u3002\u56e0\u6b64\uff0c\u4f2a\u9020\u670d\u52a1\u7aef\u8bf7\u6c42\u7684\u53d1\u751f\u7387\u662f\u5728\u589e\u52a0\u5f53\u4e2d\u7684\u3002\u800c\u4e14\uff0c\u56e0\u4e3a\u4e91\u7aef\u670d\u52a1\u548c\u4e91\u7aef\u7ed3\u6784\u7684\u590d\u6742\u6027\uff0c\u4f2a\u9020\u670d\u52a1\u7aef\u8bf7\u6c42\u7684\u4e25\u91cd\u6027\u5c06\u4f1a\u6108\u6765\u6108\u4e25\u5cfb\u3002</p>"},{"location":"zh-Hant/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#_4","title":"\u5982\u4f55\u9884\u9632","text":"<p>\u5f00\u53d1\u8005\u53ef\u4ee5\u9884\u9632\u4f2a\u9020\u670d\u52a1\u7aef\u8bf7\u6c42\uff0c\u900f\u8fc7\u5b9e\u65bd\u4e0b\u5217\u4e00\u90e8\u5206\u6216\u5168\u90e8\u7684\u7eb5\u8eab\u9632\u5fa1\u63a7\u5236\u63aa\u65bd\uff1a</p>"},{"location":"zh-Hant/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#from-network-layer","title":"From Network layer (\u4ece\u7f51\u8def\u5c42\u7740\u624b)","text":"<ul> <li> <p>\u5c06\u8fdc\u7aef\u8d44\u6e90\u5b58\u53d6\u529f\u80fd\u5207\u5272\u6210\u4e0d\u540c\u5b50\u7f51\u8def\u4ee5\u964d\u4f4e\u4f2a\u9020\u670d\u52a1\u7aef\u8bf7\u6c42\u4e4b\u51b2\u51fb</p> </li> <li> <p>\u4e8e\u9632\u706b\u5899\u653f\u7b56\u6216\u4e8e\u7f51\u8def\u5b58\u53d6\u63a7\u5236\u89c4\u5219\u5b9e\u65bd\"\u9884\u8bbe\u5168\u62d2\u7edd(deny by default)\" \uff0c\u4ee5\u5c01\u9501\u5168\u90e8\u6765\u81ea\u5916\u90e8\u4e4b\u7f51\u8def\u6d41\u91cf</p> </li> </ul>"},{"location":"zh-Hant/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#from-application-layer","title":"From Application layer: (\u4ece\u5e94\u7528\u5c42)","text":"<ul> <li> <p>\u8fc7\u6ee4\u5e76\u9a8c\u8bc1\u6765\u81ea\u4e8e\u7528\u6237\u7aef\u63d0\u4f9b\u4e4b\u5168\u90e8\u8f93\u5165</p> </li> <li> <p>\u4ee5\u6b63\u9762\u8868\u5217\u65b9\u5f0f\u5217\u51fa URL\u3001port\u3001\u76ee\u7684\u5730\u6e05\u5355</p> </li> <li> <p>\u4e0d\u4f20\u9001\u539f\u59cb\u56de\u5e94\u7ed9\u7528\u6237\u7aef</p> </li> <li> <p>\u505c\u7528 HTTP \u91cd\u65b0\u5bfc\u5411</p> </li> <li> <p>\u7559\u610f\u7f51\u5740\u4e4b\u4e00\u81f4\u6027\uff0c\u4ee5\u907f\u514d\u4f8b\u5982 DNS rebinding \u653b\u51fb\u3001TOCTOU \u653b\u51fb</p> </li> </ul> <p>\u522b\u900f\u8fc7\u62d2\u7edd\u6e05\u5355\u6216\u6b63\u89c4\u8868\u793a\u5f0f\u6765\u51cf\u7f13\u4f2a\u9020\u670d\u52a1\u7aef\u8bf7\u6c42\u3002\u653b\u51fb\u8005\u6709 payload \u6e05\u5355\u3001\u5de5\u5177\u548c\u6280\u5de7\u53ef\u4ee5\u7ed5\u8fc7\u8fd9\u4e9b\u62d2\u7edd\u6e05\u5355</p>"},{"location":"zh-Hant/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#example-attack-scenarios","title":"Example Attack Scenarios (\u653b\u51fb\u60c5\u5883\u8303\u4f8b)","text":"<p>\u653b\u51fb\u8005\u53ef\u4ee5\u5229\u7528\u4f2a\u9020\u670d\u52a1\u7aef\u8bf7\u6c42\u6765\u653b\u51fb\u5728 WAF\u3001\u9632\u706b\u5899\u3001\u6216\u7f51\u8def ACL \u540e\u9762\u7684\u7cfb\u7edf\uff0c\u53ef\u80fd\u91c7\u53d6\u4e4b\u60c5\u5883\u5982\u4e0b\uff1a</p> <p>\u60c5\u5883\u4e00\uff1a\u5bf9\u5185\u90e8\u670d\u52a1\u5668 port scan\u3002\u5982\u679c\u7f51\u8def\u67b6\u6784\u672a\u88ab\u5207\u5272\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u900f\u8fc7\u8fde\u7ebf\u7ed3\u679c\u6216\u8fde\u7ebf\u6240\u7ecf\u8fc7\u7684\u65f6\u95f4\u6216\u62d2\u7edd SSRF payload \u8fde\u7ebf\u7684\u72b6\u6001\uff0c\u52a0\u4ee5\u5bf9\u5e94\u51fa\u5185\u90e8\u7f51\u8def\u5e76\u4e14\u5224\u65ad\u8be5\u7b49 port \u5728\u5185\u90e8\u670d\u52a1\u5668\u662f\u5426\u5f00\u542f\u6216\u5173\u95ed\u72b6\u6001</p> <p>\u60c5\u5883\u4e8c\uff1a\u673a\u654f\u8d44\u6599\u6cc4\u6f0f\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u5b58\u53d6\u672c\u5730\u7aef\u6863\u6848(\u4f8b\u5982 ) \u6216\u5185\u90e8\u670d\u52a1\u5df2\u53d6\u5f97\u673a\u654f\u8d44\u6599\u3002 <p>\u60c5\u5883\u4e09\uff1a\u5b58\u53d6\u4e91\u670d\u52a1\u4e4b metadata storage\u3002\u5927\u90e8\u5206\u4e91\u7aef\u63d0\u4f9b\u8005\u90fd\u6709 metadata storage\uff0c\u4f8b\u5982http://169.254.169.254/\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u8bfb\u53d6 metadata \u4ee5\u53d6\u5f97\u673a\u654f\u8d44\u8baf\u3002</p> <p>\u60c5\u5883\u56db\uff1a\u6e17\u900f\u5185\u90e8\u670d\u52a1 - \u653b\u51fb\u8005\u53ef\u4ee5\u6ee5\u7528\u5185\u90e8\u670d\u52a1\u53bb\u6267\u884c\u66f4\u8fdb\u4e00\u6b65\u7684\u653b\u51fb\uff0c\u4f8b\u5982 RCE \u6216 Dos</p>"},{"location":"zh-Hant/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#references","title":"References","text":"<ul> <li> <p>OWASP - Server-Side Request Forgery Prevention Cheat   Sheet</p> </li> <li> <p>PortSwigger - Server-side request forgery   (SSRF)</p> </li> <li> <p>Acunetix - What is Server-Side Request Forgery   (SSRF)?</p> </li> <li> <p>SSRF   bible</p> </li> <li> <p>A New Era of SSRF - Exploiting URL Parser in Trending Programming   Languages!</p> </li> </ul>"},{"location":"zh-Hant/A11_2021-Next_Steps/","title":"A11:2021 \u2013 \u4e0b\u4e00\u6b65","text":"<p>By design, the OWASP Top 10 is innately limited to the ten most significant risks. Every OWASP Top 10 has \u201con the cusp\u201d risks considered at length for inclusion, but in the end, they didn\u2019t make it. No matter how we tried to interpret or twist the data, the other risks were more prevalent and impactful.</p> <p>Organizations working towards a mature appsec program or security consultancies or tool vendors wishing to expand coverage for their offerings, the following four issues are well worth the effort to identify and remediate.</p>"},{"location":"zh-Hant/A11_2021-Next_Steps/#_1","title":"\u4ee3\u7801\u8d28\u91cf\u95ee\u9898","text":"\u53ef\u5bf9\u7167 CWEs \u6570\u91cf \u6700\u5927\u53d1\u751f\u7387 \u5e73\u5747\u53d1\u751f\u7387 \u6700\u5927\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u52a0\u6743\u5f31\u70b9 \u5e73\u5747\u52a0\u6743\u5f71\u54cd \u51fa\u73b0\u6b21\u6570 \u6240\u6709\u6709\u5173 CVEs \u6570\u91cf 38 49.46% 2.22% 60.85% 23.42% 101736 7564 <ul> <li> <p>Description. Code quality issues include known security defects   or patterns, reusing variables for multiple purposes, exposure of   sensitive information in debugging output, off-by-one errors, time   of check/time of use (TOCTOU) race conditions, unsigned or signed   conversion errors, use after free, and more. The hallmark of this   section is that they can usually be identified with stringent   compiler flags, static code analysis tools, and linter IDE plugins.   Modern languages by design eliminated many of these issues, such as   Rust\u2019s memory ownership and borrowing concept, Rust\u2019s threading   design, and Go\u2019s strict typing and bounds checking.</p> </li> <li> <p>How to prevent. Enable and use your editor and language\u2019s static   code analysis options. Consider using a static code analysis tool.   Consider if it might be possible to use or migrate to a language or   framework that eliminates bug classes, such as Rust or Go.</p> </li> <li> <p>Example attack scenarios. An attacker might obtain or update   sensitive information by exploiting a race condition using a   statically shared variable across multiple threads.</p> </li> <li> <p>References. TBA</p> </li> </ul>"},{"location":"zh-Hant/A11_2021-Next_Steps/#_2","title":"\u963b\u65ad\u670d\u52a1\u653b\u51fb","text":"\u53ef\u5bf9\u7167 CWEs \u6570\u91cf \u6700\u5927\u53d1\u751f\u7387 \u5e73\u5747\u53d1\u751f\u7387 \u6700\u5927\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u52a0\u6743\u5f31\u70b9 \u5e73\u5747\u52a0\u6743\u5f71\u54cd \u51fa\u73b0\u6b21\u6570 \u6240\u6709\u6709\u5173 CVEs \u6570\u91cf 8 17.54% 4.89% 79.58% 33.26% 66985 973 <ul> <li> <p>Description. Denial of service is always possible given   sufficient resources. However, design and coding practices have a   significant bearing on the magnitude of the denial of service.   Suppose anyone with the link can access a large file, or a   computationally expensive transaction occurs on every page. In that   case, denial of service requires less effort to conduct.</p> </li> <li> <p>How to prevent. Performance test code for CPU, I/O, and memory   usage, re-architect, optimize, or cache expensive operations.   Consider access controls for larger objects to ensure that only   authorized individuals can access huge files or objects or serve   them by an edge caching network.</p> </li> <li> <p>Example attack scenarios. An attacker might determine that an   operation takes 5-10 seconds to complete. When running four   concurrent threads, the server seems to stop responding. The   attacker uses 1000 threads and takes the entire system offline.</p> </li> <li> <p>References. TBA</p> </li> </ul>"},{"location":"zh-Hant/A11_2021-Next_Steps/#_3","title":"\u8bb0\u5fc6\u4f53\u7ba1\u7406\u9519\u8bef","text":"\u53ef\u5bf9\u7167 CWEs \u6570\u91cf \u6700\u5927\u53d1\u751f\u7387 \u5e73\u5747\u53d1\u751f\u7387 \u6700\u5927\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u8986\u76d6\u8303\u56f4 \u5e73\u5747\u52a0\u6743\u5f31\u70b9 \u5e73\u5747\u52a0\u6743\u5f71\u54cd \u51fa\u73b0\u6b21\u6570 \u6240\u6709\u6709\u5173 CVEs \u6570\u91cf 14 7.03% 1.16% 56.06% 31.74% 26576 16184 <ul> <li> <p>Description. Web applications tend to be written in managed   memory languages, such as Java, .NET, or node.js (JavaScript or   TypeScript). However, these languages are written in systems   languages that have memory management issues, such as buffer or heap   overflows, use after free, integer overflows, and more. There have   been many sandbox escapes over the years that prove that just   because the web application language is nominally memory \u201csafe,\u201d the   foundations are not.</p> </li> <li> <p>How to prevent. Many modern APIs are now written in memory-safe   languages such as Rust or Go. In the case of Rust, memory safety is   a crucial feature of the language. For existing code, the use of   strict compiler flags, strong typing, static code analysis, and fuzz   testing can be beneficial in identifying memory leaks, memory, and   array overru</p> </li> </ul>"},{"location":"zh-TW/","title":"OWASP Top 10 2021 \u4ecb\u7d39","text":"<p>\u6b61\u8fce\u4f86\u5230\u6700\u65b0\u7248\u672c\u7684 OWASP Top 10\uff01! OWASP Top 10 2021 \u662f\u4e00\u500b\u5168\u65b0\u7684\u540d\u55ae\uff0c\u5305\u542b\u4e86\u4f60\u53ef\u4ee5\u5217\u5370\u4e0b\u4f86\u7684\u65b0\u5716\u793a\u8aaa\u660e\uff0c\u82e5\u6709\u9700\u8981\u7684\u8a71\uff0c\u4f60\u53ef\u4ee5\u5f9e\u6211\u5011\u7684\u7db2\u9801\u4e0a\u9762\u4e0b\u8f09\u3002</p> <p>\u5728\u6b64\u6211\u5011\u60f3\u5c0d\u6240\u6709\u8ca2\u737b\u4e86\u4ed6\u5011\u6642\u9593\u548c\u8cc7\u6599\u7684\u4eba\u7d66\u4e88\u4e00\u500b\u6975\u5927\u7684\u611f\u8b1d\u3002\u6c92\u6709\u4f60\u5011\uff0c\u9019\u4e00\u500b\u65b0\u7248\u672c\u662f\u4e0d\u6703\u51fa\u73fe\u7684\u3002\u8b1d\u8b1d\u3002</p>"},{"location":"zh-TW/#top-10-for-2021","title":"Top 10 for 2021 \u6709\u4ec0\u9ebc\u65b0\u7684\u8b8a\u5316\uff1f","text":"<p>\u9019\u6b21\u5728 OWASP Top 10 for 2021 \u6709\u4e09\u500b\u5168\u65b0\u7684\u5206\u985e\uff0c\u6709\u56db\u500b\u5206\u985e\u6709\u505a\u540d\u7a31\u548c\u7bc4\u570d\u7684\u4fee\u6b63\uff0c\u4e26\u6709\u5c07\u4e00\u4e9b\u985e\u5225\u505a\u5408\u4f75\u3002</p> <p></p> <p>A01:2021-\u6b0a\u9650\u63a7\u5236\u5931\u6548 \u5f9e\u7b2c\u4e94\u540d\u79fb\u4e0a\u4f86; 94% \u88ab\u6e2c\u8a66\u7684\u61c9\u7528\u7a0b\u5f0f\u90fd\u6709\u9a57\u6e2c\u5230\u67d0\u7a2e\u985e\u5225\u6b0a\u9650\u63a7\u5236\u5931\u6548\u7684\u554f\u984c\u3002\u5728\u6b0a\u9650\u63a7\u5236\u5931\u6548\u9019\u500b\u985e\u5225\u4e2d\u88ab\u5c0d\u61c9\u5230\u7684 34 \u500b CWEs \u5728\u9a57\u6e2c\u8cc7\u6599\u4e2d\u51fa\u73fe\u7684\u6b21\u6578\u90fd\u9ad8\u65bc\u5176\u4ed6\u7684\u5f31\u9ede\u985e\u5225\u3002</p> <p>A02:2021-\u52a0\u5bc6\u6a5f\u5236\u5931\u6548 \u63d0\u5347\u4e00\u540d\u5230\u7b2c\u4e8c\u540d\uff0c\u5728\u4e4b\u524d\u70ba \u654f\u611f\u8cc7\u6599\u5916\u66dd\uff0c\u5728\u6b64\u5b9a\u7fa9\u4e0b\u6bd4\u8f03\u985e\u4f3c\u65bc\u4e00\u500b\u5ee3\u6cdb\u7684\u554f\u984c\u800c\u975e\u6839\u672c\u539f\u56e0\u3002\u5728\u6b64\u91cd\u65b0\u5b9a\u7fa9\u4e26\u5c07\u554f\u984c\u6838\u5fc3\u5b9a\u7fa9\u5728\u52a0\u5bc6\u6a5f\u5236\u7684\u5931\u6557\uff0c\u4e26\u56e0\u6b64\u9020\u6210\u654f\u611f\u6027\u8cc7\u6599\u5916\u6d29\u6216\u662f\u7cfb\u7d71\u88ab\u7834\u58de\u3002</p> <p>A03:2021-\u6ce8\u5165\u5f0f\u653b\u64ca \u4e0b\u6ed1\u5230\u7b2c\u4e09\u540d\u300294% \u88ab\u6e2c\u8a66\u7684\u61c9\u7528\u7a0b\u5f0f\u90fd\u6709\u9a57\u6e2c\u5230\u67d0\u7a2e\u985e\u5225\u6ce8\u5165\u5f0f\u653b\u64ca\u7684\u554f\u984c\u3002\u5728\u6ce8\u5165\u5f0f\u653b\u64ca\u9019\u500b\u985e\u5225\u4e2d\u88ab\u5c0d\u61c9\u5230\u7684 33 \u500b CWEs \u5728\u9a57\u6e2c\u8cc7\u6599\u4e2d\u51fa\u73fe\u7684\u6b21\u6578\u70ba\u5f31\u9ede\u554f\u984c\u7684\u7b2c\u4e8c\u9ad8\u3002\u8de8\u7ad9\u8173\u672c\u653b\u64ca\u73fe\u5728\u5728\u65b0\u7248\u672c\u5c6c\u65bc\u9019\u500b\u985e\u5225\u3002</p> <p>A04:2021-\u4e0d\u5b89\u5168\u8a2d\u8a08 \u9019\u662f 2021 \u5e74\u7248\u672c\u7684\u65b0\u985e\u5225\uff0c\u4e26\u7279\u5225\u91dd\u6ce8\u5728\u8207\u8a2d\u8a08\u76f8\u95dc\u7684\u7f3a\u5931\u3002\u5982\u679c\u6211\u5011\u771f\u7684\u5e0c\u671b\u8b93\u6574\u500b\u7522\u696d\"\u5411\u5de6\u79fb\u52d5\"\uff0a\u8a3b\u4e00\uff0a\uff0c\u90a3\u6211\u5011\u5fc5\u9808\u9032\u4e00\u6b65\u7684\u5f80\u5a01\u8105\u5efa\u6a21\uff0c\u5b89\u5168\u8a2d\u8a08\u6a21\u584a\u7684\u89c0\u5ff5\uff0c\u548c\u5b89\u5168\u53c3\u8003\u67b6\u69cb\u524d\u9032\u3002</p> <p>\uff0a\u8a3b\u4e00: Move Left \u65bc\u82f1\u6587\u539f\u6587\u4e2d\u4ee3\u8868\u5728\u8edf\u9ad4\u958b\u767c\u53ca\u4ea4\u4ed8\u904e\u7a0b\u4e2d\uff0c\u5728\u65e9\u671f\u627e\u51fa\u53ca\u8655\u7406\u76f8\u95dc\u554f\u984c\uff0c\u540c Shift Left Testing\u3002\uff0a </p> <p>A05:2021-\u5b89\u5168\u8a2d\u5b9a\u7f3a\u9677 \u5f9e\u4e0a\u4e00\u7248\u672c\u7684\u7b2c\u516d\u540d\u79fb\u52d5\u4e0a\u4f86\u300290% \u88ab\u6e2c\u8a66\u7684\u61c9\u7528\u7a0b\u5f0f\u90fd\u6709\u9a57\u6e2c\u5230\u67d0\u7a2e\u985e\u5225\u7684\u5b89\u5168\u8a2d\u5b9a\u7f3a\u9677\u3002\u5728\u66f4\u591a\u7684\u8edf\u9ad4\u5f80\u66f4\u9ad8\u5ea6\u548c\u6709\u5f48\u6027\u7684\u8a2d\u5b9a\u79fb\u52d5\uff0c\u6211\u5011\u4e26\u4e0d\u610f\u5916\u9019\u500b\u985e\u5225\u7684\u554f\u984c\u5f80\u4e0a\u79fb\u52d5\u3002\u5728\u524d\u7248\u672c\u4e2d\u7684 XML \u5916\u90e8\u5be6\u9ad4\u6ce8\u5165\u653b\u64ca \uff08XML External Entities\uff09\u73fe\u5728\u5c6c\u65bc\u9019\u500b\u985e\u5225\u3002</p> <p>A06:2021-\u5371\u96aa\u6216\u904e\u820a\u7684\u5143\u4ef6 \u5728\u4e4b\u524d\u6a19\u984c\u70ba \u4f7f\u7528\u6709\u5df2\u77e5\u5f31\u9ede\u7684\u5143\u4ef6\u3002\u5728\u672c\u6b21\u7248\u672c\u4e2d\u65bc\u696d\u754c\u554f\u5377\u4e2d\u6392\u540d\u7b2c\u4e8c\uff0c\u4f46\u4e5f\u6709\u8db3\u5920\u7684\u7d71\u8a08\u8cc7\u6599\u8b93\u5b83\u53ef\u4ee5\u9032\u5165 Top 10\u3002\u9019\u500b\u985e\u5225\u5f9e 2017 \u7248\u672c\u7684\u7b2c\u4e5d\u540d\u722c\u5347\u5230\u7b2c\u516d\uff0c\u4e5f\u662f\u6211\u5011\u6301\u7e8c\u6399\u624e\u505a\u6e2c\u8a66\u548c\u8a55\u4f30\u98a8\u96aa\u7684\u985e\u5225\u3002\u9019\u4e5f\u662f\u552f\u4e00\u4e00\u500b\u6c92\u6709\u4efb\u4f55 CVE \u80fd\u88ab\u5c0d\u61c9\u5230 CWE \u5167\u7684\u985e\u5225\uff0c\u6240\u4ee5\u9810\u8a2d\u7684\u5a01\u8105\u53ca\u5f71\u97ff\u6b0a\u91cd\u5728\u9019\u985e\u5225\u7684\u5206\u6578\u4e0a\u88ab\u9810\u8a2d\u70ba 5.0\u3002</p> <p>A07:2021-\u8a8d\u8b49\u53ca\u9a57\u8b49\u6a5f\u5236\u5931\u6548 \u5728\u4e4b\u524d\u6a19\u984c\u70ba \u932f\u8aa4\u7684\u8a8d\u8b49\u6a5f\u5236\u3002\u5728\u672c\u6b21\u7248\u672c\u4e2d\u6cb9\u7b2c\u4e8c\u540d\u4e0b\u6ed1\u81f3\u6b64\uff0c\u4e26\u540c\u6642\u5305\u542b\u4e86\u5c07\u8a8d\u8b49\u76f8\u95dc\u7f3a\u5931\u7684 CWE \u5305\u542b\u5728\u5167\u3002\u9019\u500b\u985e\u5225\u4ecd\u662f Top 10 \u4e0d\u53ef\u7f3a\u5c11\u7684\u4e00\u74b0\uff0c\u4f46\u540c\u6642\u4e5f\u6709\u767c\u73fe\u73fe\u5728\u6a19\u6e96\u5316\u7684\u67b6\u69cb\u6709\u5354\u52a9\u964d\u4f4e\u6b21\u98a8\u96aa\u767c\u751f\u6a5f\u7387\u3002</p> <p>A08:2021-\u8edf\u9ad4\u53ca\u8cc7\u6599\u5b8c\u6574\u6027\u5931\u6548 \u9019\u662f 2021 \u5e74\u7248\u672c\u5168\u65b0\u7684\u985e\u5225\uff0c\u4e26\u5728\u8edf\u9ad4\u66f4\u65b0\uff0c\u6a5f\u654f\u53ca\u91cd\u8981\u8cc7\u6599\uff0c\u548c CI/CD \u7ba1\u9053\u4e2d\u4e26\u6c92\u6709\u505a\u5b8c\u6574\u6027\u7684\u78ba\u8a8d\u70ba\u524d\u63d0\u505a\u5047\u8a2d\u4e26\u9032\u884c\u8a55\u4f30\u3002\u5728\u8a55\u4f30\u4e2d\u5f71\u97ff\u6b0a\u91cd\u6700\u9ad8\u5206\u7684 CVE/CVSS \u8cc7\u6599\u90fd\u8207\u9019\u985e\u5225\u4e2d\u7684 10 \u500b CWE \u5c0d\u61c9\u5230\u30022017 \u5e74\u7248\u672c\u4e2d\u4e0d\u5b89\u5168\u7684\u53cd\u5e8f\u5217\u5316\u73fe\u5728\u88ab\u5408\u4f75\u81f3\u6b64\u985e\u5225\u3002</p> <p>A09:2021-\u8cc7\u5b89\u8a18\u9304\u53ca\u76e3\u63a7\u5931\u6548 \u5728\u4e4b\u524d\u70ba\u4e0d\u5b8c\u6574\u7684\u7d00\u9304\u53ca\u76e3\u63a7\u4e26\u7d0d\u5165\u5728\u696d\u754c\u554f\u5377\u4e2d\u5728\u672c\u6b21\u5217\u540d\u70ba\u7b2c\u4e09\u540d\u4e26\u5f9e\u4e4b\u524d\u7684\u7b2c\u5341\u540d\u4e0a\u79fb\u3002\u9019\u500b\u985e\u5225\u5c07\u64f4\u5145\u53bb\u7d0d\u5165\u66f4\u591a\u76f8\u95dc\u7684\u7f3a\u5931\uff0c\u4f46\u9019\u4e5f\u662f\u76f8\u7576\u96e3\u53bb\u9a57\u8b49\uff0c\u4e26\u6c92\u6709\u76f8\u7576\u591a\u7684 CVE/CVSS \u8cc7\u6599\u53ef\u4ee5\u4f50\u8b49\u3002\u4f46\u662f\u5728\u9019\u500b\u985e\u5225\u4e2d\u7684\u7f3a\u5931\u6703\u76f4\u63a5\u5f71\u97ff\u5230\u6574\u9ad4\u5b89\u5168\u7684\u53ef\u8996\u6027\uff0c\u4e8b\u4ef6\u544a\u8b66\u53ca\u9451\u8b58\u3002</p> <p>A10:2021-\u4f3a\u670d\u7aef\u8acb\u6c42\u507d\u9020 \u9019\u500b\u985e\u5225\u662f\u5728\u696d\u754c\u554f\u5377\u6392\u540d\u7b2c\u4e00\u540d\uff0c\u4e26\u5728\u6b64\u7248\u672c\u5167\u7d0d\u5165\u3002\u7531\u8cc7\u6599\u986f\u793a\u6b64\u554f\u984c\u6709\u8f03\u4f4e\u88ab\u9a57\u6e2c\u6b21\u6578\u548c\u7bc4\u570d\uff0c\u4f46\u6709\u9ad8\u65bc\u5e73\u5747\u7684\u5a01\u8105\u53ca\u5f71\u97ff\u6b0a\u91cd\u6bd4\u7387\u3002\u9019\u500b\u985e\u5225\u7684\u51fa\u73fe\u4e5f\u662f\u56e0\u70ba\u696d\u754c\u5c08\u5bb6\u91cd\u8907\u7533\u660e\u9019\u985e\u5225\u7684\u554f\u984c\u76f8\u7576\u91cd\u8981\uff0c\u5373\u4f7f\u5728\u672c\u6b21\u8cc7\u6599\u4e2d\u4e26\u6c92\u6709\u8db3\u5920\u7684\u8cc7\u6599\u53bb\u986f\u793a\u9019\u500b\u554f\u984c\u3002</p>"},{"location":"zh-TW/#_1","title":"\u5206\u6790\u65b9\u6cd5","text":"<p>\u672c\u6b21 Top 10 \u7684\u9078\u64c7\u65b9\u5f0f\u6bd4\u4ee5\u5f80\u66f4\u91cd\u8996\u8cc7\u6599\u5206\u6790\uff0c\u4f46\u4e26\u4e0d\u662f\u5b8c\u5168\u4ee5\u8cc7\u6599\u5206\u6790\u70ba\u4e3b\u3002\u6211\u5011\u5f9e\u8cc7\u6599\u5206\u6790\u4e2d\u6311\u9078\u4e86\u516b\u500b\u98a8\u96aa\u985e\u5225\uff0c\u7136\u5f8c\u7531\u696d\u754c\u554f\u5377\u4e2d\u6311\u9078\u5169\u500b\u98a8\u96aa\u985e\u5225\u3002\u6211\u5011\u5f9e\u904e\u5f80\u7684\u5206\u4eab\u8cc7\u6599\u4e2d\u53bb\u77ad\u89e3\uff0c\u4e26\u6709\u6211\u5011\u4e00\u500b\u57fa\u672c\u7684\u7406\u7531\u3002\u539f\u56e0\u662f\u6240\u6709\u7684\u8cc7\u5b89\u7814\u7a76\u4eba\u54e1\u90fd\u4e0d\u65b7\u7684\u5728\u627e\u65b0\u7684\u5f31\u9ede\u4e26\u627e\u51fa\u65b9\u6cd5\u53bb\u9a57\u8b49\u5f31\u9ede\uff0c\u4f46\u6703\u9700\u8981\u6642\u9593\u624d\u80fd\u5c07\u9019\u4e9b\u9a57\u6e2c\u65b9\u6cd5\u7d0d\u5165\u5230\u65e2\u6709\u7684\u5de5\u5177\u548c\u6e2c\u8a66\u6d41\u7a0b\u4e2d\u3002\u7576\u6211\u5011\u80fd\u6709\u6548\u7684\u5927\u91cf\u6e2c\u8a66\u9019\u500b\u5f31\u9ede\u6642\uff0c\u6709\u53ef\u80fd\u5df2\u7d93\u904e\u4e86\u591a\u5e74\u7684\u6642\u9593\u3002\u70ba\u4e86\u8981\u8b93\u5169\u8005\u4e4b\u9593\u6709\u5e73\u8861\uff0c\u6211\u5011\u4f7f\u7528\u696d\u754c\u554f\u5377\u8acb\u6559\u5728\u524d\u7dda\u7684\u8cc7\u5b89\u7814\u7a76\u5c08\u5bb6\u5011\u4e26\u77ad\u89e3\u4ed6\u5011\u89ba\u5f97\u6709\u54ea\u4e9b\u662f\u4ed6\u5011\u89ba\u5f97\u56b4\u91cd\u4f46\u5c1a\u672a\u51fa\u73fe\u5728\u6e2c\u8a66\u8cc7\u6599\u4e2d\u7684\u6f0f\u6d1e\u53ca\u554f\u984c\u3002</p> <p>\u9019\u662f\u5e7e\u500b\u6211\u5011\u70ba\u4e86\u8981\u8b93 OWASP Top 10 \u66f4\u52a0\u6210\u719f\u7684\u91cd\u8981\u6539\u8b8a\u3002</p>"},{"location":"zh-TW/#_2","title":"\u5982\u4f55\u5efa\u69cb\u98a8\u96aa\u985e\u5225","text":"<p>\u6709\u5225\u65bc\u4e0a\u4e00\u500b\u7248\u672c\uff0c\u5728\u9019\u6b21\u7684 OWASP Top 10 \u6709\u4e00\u4e9b\u98a8\u96aa\u985e\u5225\u7684\u4fee\u6539\u3002\u6211\u5011\u5728\u6b64\u4ee5\u6bd4\u8f03\u9ad8\u7684\u89d2\u5ea6\u8aaa\u660e\u4e00\u4e0b\u9019\u6b21\u7684\u985e\u5225\u4fee\u6539\u3002</p> <p>\u5728\u4e0a\u4e00\u6b21\u7684\u8cc7\u6599\u6536\u96c6\u7576\u4e2d\uff0c\u6211\u5011\u5c07\u8cc7\u6599\u6536\u96c6\u7684\u91cd\u5fc3\u653e\u5728\u9810\u5148\u5b9a\u7fa9\u597d\u7684\u7d04 30 \u500b CWEs \u4e26\u7d0d\u5165\u4e00\u500b\u6b04\u4f4d\u5fb5\u6c42\u5176\u4ed6\u7684\u767c\u73fe\u3002\u5f9e\u9019\u88e1\u6211\u5011\u770b\u5230\u6c7a\u591a\u6578\u7684\u7d44\u7e54\u90fd\u53ea\u6703\u5c08\u6ce8\u5728\u9019 30 \u500b CWEs \u800c\u4e0d\u5e38\u52a0\u5165\u5176\u4ed6\u4ed6\u5011\u53ef\u80fd\u767c\u73fe\u7684 CWEs\u3002\u5728\u9019\u6b21\u7684\u6539\u7248\u4e2d\uff0c\u6211\u5011\u5c07\u6240\u6709\u7684\u554f\u984c\u90fd\u4ee5\u958b\u653e\u5f0f\u7684\u65b9\u6cd5\u8655\u7406\uff0c\u4e26\u6c92\u6709\u9650\u5236\u5728\u4efb\u4f55\u4e00\u500b CWEs\u3002\u6211\u5011\u8acb\u6559\u4e86\u5f9e 2017 \u5e74\u958b\u59cb\u6240\u6e2c\u8a66\u7684\u7db2\u9801\u61c9\u7528\u7a0b\u5f0f\u6578\u91cf\uff0c\u7136\u5f8c\u5728\u9019\u4e9b\u7a0b\u5f0f\u4e2d\u81f3\u5c11\u6709\u4e00\u500b CWE \u88ab\u767c\u73fe\u7684\u6578\u91cf\u3002\u9019\u500b\u683c\u5f0f\u8b93\u6211\u5011\u80fd\u5920\u8ffd\u8e64\u6bcf\u500b CWE \u8ddf\u6240\u6709\u88ab\u9a57\u6e2c\u53ca\u7d71\u8a08\u7684\u61c9\u7528\u7a0b\u5f0f\u7684\u6578\u91cf\u8ddf\u95dc\u4fc2\u3002\u6211\u5011\u4e5f\u5ffd\u7565\u4e86 CWE \u51fa\u73fe\u7684\u983b\u7387\uff0c\u96d6\u7136\u5728\u67d0\u4e9b\u72c0\u6cc1\u4e0b\u9019\u4e5f\u8a31\u662f\u5fc5\u9808\u7684\uff0c\u4f46\u9019\u537b\u96b1\u85cf\u4e86\u98a8\u96aa\u985e\u5225\u672c\u8eab\u8207\u61c9\u7528\u7a0b\u5f0f\u6578\u91cf\u6574\u9ad4\u7684\u95dc\u4fc2\u3002\u6240\u4ee5\u4e00\u500b\u61c9\u7528\u7a0b\u5f0f\u6709 4 \u500b\u6216\u662f 4,000 \u500b\u5f31\u9ede\u4e26\u4e0d\u662f\u88ab\u8a08\u7b97\u5728 Top 10 \u7684\u57fa\u790e\u3002\u4f46\u540c\u6642\u6211\u5011\u4e5f\u5f9e\u539f\u672c\u7684 30 \u591a\u500b CWEs \u589e\u9577\u5230\u5feb 400 \u591a\u500bCWEs \u53bb\u9032\u884c\u5206\u6790\u3002\u6211\u5011\u56e0\u6b64\u4e5f\u8a08\u756b\u672a\u4f86\u505a\u66f4\u591a\u7684\u8cc7\u6599\u5206\u6790\uff0c\u4e26\u5728\u5c0d\u6b64\u7248\u672c\u9032\u884c\u88dc\u5145\u8aaa\u660e\u3002\u800c\u9019\u4e9b\u589e\u52a0\u7684 CWEs \u4e5f\u540c\u6642\u5f71\u97ff\u4e86\u9019\u6b21\u98a8\u96aa\u985e\u5225\u7684\u898f\u5283\u3002</p> <p>\u6211\u5011\u82b1\u4e86\u597d\u5e7e\u500b\u6708\u5c07 CWEs \u9032\u884c\u5206\u7d44\u8ddf\u5206\u985e\uff0c\u800c\u4e14\u5176\u5be6\u53ef\u4ee5\u4e00\u76f4\u82b1\u66f4\u591a\u500b\u6708\u53bb\u505a\u9019\u4ef6\u4e8b\u60c5\u3002\u4f46\u6211\u5011\u5fc5\u9808\u5728\u67d0\u4e00\u500b\u6642\u9593\u9ede\u505c\u4f4f\u3002\u5728 CWEs \u7576\u4e2d\uff0c\u540c\u6642\u6709 \u539f\u56e0 \u4ee5\u53ca \u75c7\u72c0 \u7684\u554f\u984c\uff0c\u800c\u50cf\u662f \"\u52a0\u5bc6\u6a5f\u5236\u5931\u6548\" \u548c \"\u8a2d\u5b9a\u554f\u984c\" \u9019\u985e\u578b\u7684 \u539f\u56e0 \u8207 \"\u6a5f\u654f\u8cc7\u6599\u5916\u6d29\" \u548c \"\u963b\u65b7\u670d\u52d9\" \u9019\u985e\u578b\u7684 \u75c7\u72c0 \u662f\u5c0d\u7acb\u7684\u3002\u56e0\u6b64\u6211\u5011\u6c7a\u5b9a\u5728\u53ef\u4ee5\u7684\u6642\u5019\u8981\u66f4\u5c08\u6ce8\u65bc\u5e95\u5c64\u7684\u539f\u56e0\uff0c\u56e0\u70ba\u9019\u662f\u53ef\u4ee5\u6709\u6548\u6307\u51fa\u554f\u984c\u7684\u672c\u9ad4\u8ddf\u540c\u6642\u63d0\u4f9b\u554f\u984c\u7684\u89e3\u6c7a\u65b9\u5411\u3002\u5c08\u6ce8\u5728\u554f\u984c\u6838\u5fc3\u800c\u4e0d\u5c07\u91cd\u5fc3\u653e\u5728\u75c7\u72c0\u4e26\u4e0d\u662f\u4e00\u500b\u65b0\u7684\u6982\u5ff5\b\b\uff0cTop Ten \u6709\u53f2\u4ee5\u4f86\u4e00\u76f4\u662f\u75c7\u72c0\u8ddf\u554f\u984c\u6838\u5fc3\u7684\u7d9c\u5408\u9ad4\uff0c\u53ea\u662f\u9019\u6b21\u6211\u5011\u66f4\u523b\u610f\u7684\u5c07\u4ed6\u7a81\u986f\u51fa\u4f86\u3002\u5728\u9019\u6b21\u7684\u65b0\u7248\u672c\u4e2d\uff0c\u6bcf\u4e00\u500b\u985e\u5225\u5167\u7684\u5e73\u5747\u6709 19.6 \u500b CWE\uff0c\u800c\u6700\u4f4e\u7684 A10:2021-\u4f3a\u670d\u7aef\u8acb\u6c42\u507d\u9020 \u6709\u4e00\u500b CWE \u5230 A04:2021-\u4e0d\u5b89\u5168\u8a2d\u8a08 \u6709\u56db\u5341\u500b CWE\u3002\u9019\u500b\u65b0\u7684\u985e\u5225\u67b6\u69cb\u80fd\u63d0\u4f9b\u4f01\u696d\u66f4\u591a\u7684\u8cc7\u5b89\u8a13\u7df4\u7684\u597d\u8655\uff0c\u56e0\u70ba\u5728\u65b0\u7684\u67b6\u69cb\u4e0b\u53ef\u4ee5\u66f4\u5c08\u6ce8\u5728\u67d0\u500b\u8a9e\u7cfb\u6216\u5e73\u53f0\u4e0a\u7684 CWE\u3002</p>"},{"location":"zh-TW/#_3","title":"\u9078\u64c7\u985e\u5225\u6642\u8cc7\u6599\u7684\u4f7f\u7528\u65b9\u5f0f","text":"<p>\u5728 2017 \u5e74\uff0c\u6211\u5011\u7528\u4e8b\u4ef6\u767c\u751f\u6b21\u6578\u53bb\u5224\u65b7\u53ef\u80fd\u767c\u751f\u7684\u6a5f\u7387\u53bb\u9078\u64c7\u985e\u5225\uff0c\u7136\u5f8c\u900f\u904e\u4e00\u7fa4\u5728\u696d\u754c\u64c1\u6709\u6578\u5341\u5e74\u7d93\u9a57\u7684\u5c08\u5bb6\u5718\u5c0d\u8a0e\u8ad6\u4e26\u4f9d\u7167 \u53ef\u767c\u751f\u6027\uff0c\u53ef\u767c\u73fe\u6027\uff08\u540c\u53ef\u80fd\u6027\uff09\uff0c\u548c \u6280\u8853\u5f71\u97ff\u529b \u53bb\u505a\u6392\u540d\u3002\u5728 2021 \u5e74\uff0c\u6211\u5011\u5e0c\u671b\u5982\u679c\u53ef\u4ee5\u7684\u8a71\u7528\u8cc7\u6599\u8b49\u660e\u53ef\u767c\u751f\u6027\u548c\u6280\u8853\u5f71\u97ff\u6027\u3002</p> <p>\u6211\u5011\u4e0b\u8f09\u4e86 OWASP Depndency Check \u4e26\u53d6\u51fa\u4e86 CVSS \u6f0f\u6d1e\uff0c\u4e26\u5c07\u76f8\u95dc\u7684 CWE \u7528\u5f71\u97ff\u529b\u5206\u6578\u5206\u7fa4\u3002\u9019\u82b1\u4e86\u4e00\u4e9b\u6642\u9593\u548c\u529b\u6c23\u53bb\u7814\u7a76\u56e0\u70ba\u6240\u6709\u7684 CVEs \u90fd\u6709 CVSSv2 \u5206\u6578\uff0c\u4f46\u662f\u5728\u5176\u4e2d\u56e0\u70ba CVSSv2 \u8ddf CVSSv3 \u4e4b\u9593\u6709\u4e00\u4e9b\u7f3a\u5931\u662f\u5fc5\u9808\u88ab\u4fee\u6b63\u7684\u3002\u7d93\u904e\u4e86\u4e00\u6bb5\u6642\u9593\u5f8c\uff0c\u6240\u6709\u7684 CVEs \u90fd\u6703\u6709\u5c0d\u61c9\u7684 CVSSv3 \u7684\u5206\u6578\u3002\u518d\u8005\uff0c\u5206\u6578\u7684\u7bc4\u570d\u548c\u8a08\u7b97\u7684\u516c\u5f0f\u5728 CVSSv2 \u548c CVSSv3 \u4e4b\u9593\u4e5f\u505a\u4e86\u66f4\u65b0\u3002</p> <p>\u5728 CVSSv2 \u4e2d\uff0c\u6f0f\u6d1e\u548c\u5f71\u97ff\u529b\u5169\u8005\u90fd\u53ef\u9054\u5230 10.0 \u5206\uff0c\u4f46\u662f\u516c\u5f0f\u672c\u8eab\u6703\u5c07\u5169\u8005\u8abf\u6574\u70ba\u6f0f\u6d1e\u4f54 60%\uff0c\u7136\u5f8c\u5f71\u97ff\u529b\u4f54 40%\u3002\u5728 CVSSv3 \u4e2d\uff0c\u7406\u8ad6\u4e0a\u7684\u6700\u9ad8\u503c\u5c07\u6f0f\u6d1e\u9650\u5236\u5728 6.0 \u5206\u800c\u5f71\u97ff\u529b\u5728 4.0 \u5206\u3002\u7576\u8003\u616e\u5230\u6b0a\u91cd\u6bd4\u7387\u6642\uff0c\u5f71\u97ff\u529b\u7684\u5206\u6578\u6703\u504f\u9ad8\uff0c\u5728 CVSSv3 \u4e2d\u5e7e\u4e4e\u5e73\u5747\u6703\u591a\u51fa 1.5 \u5206\uff0c\u800c\u6f0f\u6d1e\u5206\u6578\u537b\u6703\u5e73\u5747\u5c11 0.5 \u5206\u3002</p> <p>\u5f9e OWASP Dependcy Check \u7fe0\u53d6\u51fa\u7684 NVD \u8cc7\u6599\u7576\u4e2d\u6709\u5c07\u8fd1 12.5 \u842c\u7b46 CVE \u8cc7\u6599\u6709\u5c0d\u61c9\u5230 CWE\uff0c\u800c\u6709 241 \u7b46\u7368\u7279\u7684 CWEs \u6709\u5c0d\u61c9\u5230 CVE\u30026.2\u842c\u7b46 CWE \u6709\u5c0d\u61c9\u5230 CVSSv3 \u5206\u6578\uff0c\u6240\u4ee5\u5927\u7d04\u662f\u6574\u9ad4\u8cc7\u6599\u4e2d\u4e00\u534a\u7684\u90e8\u5206\u3002</p> <p>\u800c\u5728 Top Ten\uff0c\u6211\u5011\u8a08\u7b97\u6f0f\u6d1e\u548c\u5f71\u97ff\u529b\u7684\u5e73\u5747\u5206\u6578\u7684\u65b9\u5f0f\u5982\u4e0b\u3002\u6211\u5011\u5c07\u6240\u6709\u6709 CVSS \u5206\u6578\u7684 CVE \u4f9d\u7167 CWE \u5206\u7d44\uff0c\u7136\u5f8c\u4f9d\u7167\u6709 CVSSv3 \u7684\u6f0f\u6d1e\u548c\u5f71\u97ff\u529b\u5728\u6240\u6709\u8cc7\u6599\u4e2d\u7684\u767e\u5206\u6bd4\u4f5c\u6b0a\u91cd\uff0c\u5728\u52a0\u4e0a\u8cc7\u6599\u4e2d\u6709 CVSSv2 \u7684\u8cc7\u6599\u53bb\u505a\u5e73\u5747\u3002\u6211\u5011\u5c07\u9019\u4e9b\u5e73\u5747\u5f8c\u7684 CWEs \u5c0d\u61c9\u5230\u8cc7\u6599\u4e2d\uff0c\u7136\u5f8c\u5c07\u4ed6\u7684\u6f0f\u6d1e\u548c\u5f15\u60f3\u529b\u5206\u6578\u4f7f\u7528\u5728\u53e6\u4e00\u534a\u7684\u98a8\u96aa\u516c\u5f0f\u4e2d\u3002</p>"},{"location":"zh-TW/#_4","title":"\u70ba\u4ec0\u9ebc\u5c31\u4e0d\u7d14\u7cb9\u505a\u7d71\u8a08\u5206\u6790\uff1f","text":"<p>\u9019\u4e9b\u8cc7\u6599\u7684\u7d50\u679c\u6700\u4e3b\u8981\u662f\u88ab\u9650\u5236\u5728\u80fd\u4f7f\u7528\u81ea\u52d5\u5de5\u5177\u6e2c\u8a66\u51fa\u4f86\u7684\u7d50\u679c\u3002\u53ef\u662f\u7576\u4f60\u8ddf\u4e00\u4f4d\u6709\u7d93\u9a57\u7684\u61c9\u7528\u7a0b\u5f0f\u5b89\u5168\u5c08\u5bb6\u804a\u7684\u6642\u5019\uff0c\u4ed6\u5011\u6703\u8ddf\u4f60\u8aaa\u7d55\u5927\u591a\u6578\u4ed6\u5011\u627e\u5230\u7684\u554f\u984c\u90fd\u4e0d\u5728\u9019\u4e9b\u8cc7\u6599\u88e1\u9762\u3002\u539f\u56e0\u662f\u4e00\u500b\u6e2c\u8a66\u8981\u88ab\u81ea\u52d5\u5316\u7684\u6642\u5019\uff0c\u9700\u8981\u82b1\u6642\u9593\u53bb\u958b\u767c\u9019\u4e9b\u5f31\u9ede\u6e2c\u8a66\u7684\u65b9\u6cd5\u8ad6\uff0c\u7576\u4f60\u9700\u8981\u5c07\u9019\u500b\u6e2c\u8a66\u81ea\u52d5\u5316\u4e26\u80fd\u5c0d\u5927\u91cf\u7684\u61c9\u7528\u7a0b\u5f0f\u53bb\u9a57\u8b49\u6642\uff0c\u53c8\u6703\u82b1\u4e0a\u66f4\u591a\u7684\u6642\u9593\u3002\u7576\u6211\u5011\u56de\u982d\u770b\u53bb\u5e74\u7372\u4ee5\u524d\u6709\u53ef\u80fd\u6c92\u51fa\u73fe\u7684\u4e00\u4e9b\u554f\u984c\u7684\u8da8\u52e2\uff0c\u6211\u5011\u767c\u73fe\u5176\u5be6\u90fd\u6c92\u6709\u5728\u9019\u4e9b\u8cc7\u6599\u7576\u4e2d\u3002</p> <p>\u56e0\u6b64\uff0c\u7531\u65bc\u8cc7\u6599\u4e0d\u5b8c\u5168\u7684\u95dc\u4fc2\uff0c\u6211\u5011\u53ea\u6709\u5f9e\u8cc7\u6599\u4e2d\u9078\u51fa 8 \u500b\u985e\u5225\uff0c\u800c\u4e26\u4e0d\u662f 10 \u500b\u3002\u5269\u4e0b\u7684\u5169\u500b\u985e\u5225\u662f\u5f9e\u696d\u754c\u554f\u5377\u4e2d\u6240\u9078\u51fa\u7684\u3002\u9019\u6703\u5141\u8a31\u5728\u524d\u7dda\u7684\u53c3\u8207\u8005\u53bb\u9078\u51fa\u4ed6\u5011\u8a8d\u70ba\u7684\u9ad8\u98a8\u96aa\uff0c\u800c\u4e0d\u662f\u7d14\u7cb9\u4f9d\u64da\u8cc7\u6599\u53bb\u5224\u65b7\uff08\u751a\u81f3\u53ef\u80fd\u8cc7\u6599\u6c38\u9060\u90fd\u4e0d\u6703\u6709\u51fa\u73fe\u7684\u8e64\u8de1\uff09\u3002</p>"},{"location":"zh-TW/#_5","title":"\u70ba\u4ec0\u9ebc\u7528\u4e8b\u6545\u7387\u800c\u4e0d\u662f\u7528\u767c\u751f\u6b21\u6578","text":"<p>There are three primary sources of data. We identify them as Human-assisted Tooling (HaT), Tool-assisted Human (TaH), and raw Tooling.</p> <p>Tooling and HaT are high-frequency finding generators. Tools will look for specific vulnerabilities and tirelessly attempt to find every instance of that vulnerability and will generate high finding counts for some vulnerability types. Look at Cross-Site Scripting, which is typically one of two flavors: it's either a more minor, isolated mistake or a systemic issue. When it's a systemic issue, the finding counts can be in the thousands for an application. This high frequency drowns out most other vulnerabilities found in reports or data.</p> <p>TaH, on the other hand, will find a broader range of vulnerability types but at a much lower frequency due to time constraints. When humans test an application and see something like Cross-Site Scripting, they will typically find three or four instances and stop. They can determine a systemic finding and write it up with a recommendation to fix on an application-wide scale. There is no need (or time) to find every instance.</p> <p>Suppose we take these two distinct data sets and try to merge them on frequency. In that case, the Tooling and HaT data will drown the more accurate (but broad) TaH data and is a good part of why something like Cross-Site Scripting has been so highly ranked in many lists when the impact is generally low to moderate. It's because of the sheer volume of findings. (Cross-Site Scripting is also reasonably easy to test for, so there are many more tests for it as well).</p> <p>In 2017, we introduced using incidence rate instead to take a fresh look at the data and cleanly merge Tooling and HaT data with TaH data. The incidence rate asks what percentage of the application population had at least one instance of a vulnerability type. We don't care if it was one-off or systemic. That's irrelevant for our purposes; we just need to know how many applications had at least one instance, which helps provide a clearer view of the testing is findings across multiple testing types without drowning the data in high-frequency results.</p>"},{"location":"zh-TW/#what-is-your-data-collection-and-analysis-process","title":"What is your data collection and analysis process?","text":"<p>We formalized the OWASP Top 10 data collection process at the Open Security Summit in 2017. OWASP Top 10 leaders and the community spent two days working out formalizing a transparent data collection process. The 2021 edition is the second time we have used this methodology.</p> <p>We publish a call for data through social media channels available to us, both project and OWASP. On the OWASP Project page, we list the data elements and structure we are looking for and how to submit them. In the GitHub project, we have example files that serve as templates. We work with organizations as needed to help figure out the structure and mapping to CWEs.</p> <p>We get data from organizations that are testing vendors by trade, bug bounty vendors, and organizations that contribute internal testing data. Once we have the data, we load it together and run a fundamental analysis of what CWEs map to risk categories. There is overlap between some CWEs, and others are very closely related (ex. Cryptographic vulnerabilities). Any decisions related to the raw data submitted are documented and published to be open and transparent with how we normalized the data.</p> <p>We look at the eight categories with the highest incidence rates for inclusion in the Top 10. We also look at the industry survey results to see which ones may already be present in the data. The top two votes that aren't already present in the data will be selected for the other two places in the Top 10. Once all ten were selected, we applied generalized factors for exploitability and impact; to help rank the Top 10 in order.</p>"},{"location":"zh-TW/#data-factors","title":"Data Factors","text":"<p>There are data factors that are listed for each of the Top 10 Categories, here is what they mean:</p> <ul> <li> <p>CWEs Mapped: The number of CWEs mapped to a category by the Top 10     team.</p> </li> <li> <p>Incidence Rate: Incidence rate is the percentage of applications     vulnerable to that CWE from the population tested by that org for     that year.</p> </li> <li> <p>(Testing) Coverage: The percentage of applications tested by all     organizations for a given CWE.</p> </li> <li> <p>Weighted Exploit: The Exploit sub-score from CVSSv2 and CVSSv3     scores assigned to CVEs mapped to CWEs, normalized, and placed on a     10pt scale.</p> </li> <li> <p>Weighted Impact: The Impact sub-score from CVSSv2 and CVSSv3     scores assigned to CVEs mapped to CWEs, normalized, and placed on a     10pt scale.</p> </li> <li> <p>Total Occurrences: Total number of applications found to have the     CWEs mapped to a category.</p> </li> <li> <p>Total CVEs: Total number of CVEs in the NVD DB that were mapped to     the CWEs mapped to a category.</p> </li> </ul>"},{"location":"zh-TW/#category-relationships-from-2017","title":"Category Relationships from 2017","text":"<p>There has been a lot of talk about the overlap between the Top Ten risks. By the definition of each (list of CWEs included), there really isn't any overlap. However, conceptually, there can be overlap or interactions based on the higher-level naming. Venn diagrams are many times used to show overlap like this.</p> <p></p> <p>The Venn diagram above represents the interactions between the Top Ten 2017 risk categories. While doing so, a couple of essential points became obvious:</p> <ol> <li> <p>One could argue that Cross-Site Scripting ultimately belongs within     Injection as it's essentially Content Injection. Looking at the 2021     data, it became even more evident that XSS needed to move into     Injection.</p> </li> <li> <p>The overlap is only in one direction. We will often classify a     vulnerability by the end manifestation or \"symptom,\" not the     (potentially deep) root cause. For instance, \"Sensitive Data     Exposure\" may have been the result of a \"Security Misconfiguration\";     however, you won't see it in the other direction. As a result,     arrows are drawn in the interaction zones to indicate which     direction it occurs.</p> </li> <li> <p>Sometimes these diagrams are drawn with everything in A06:2021     Using Components with Known Vulnerabilities. While some of these     risk categories may be the root cause of third-party     vulnerabilities, they are generally managed differently and with     different responsibilities. The other types are typically     representing first-party risks.</p> </li> </ol>"},{"location":"zh-TW/#thank-you-to-our-data-contributors","title":"Thank you to our data contributors","text":"<p>The following organizations (along with some anonymous donors) kindly donated data for over 500,000 applications to make this the largest and most comprehensive application security data set. Without you, this would not be possible.</p> AppSec Labs GitLab Micro Focus Sqreen Cobalt.io HackerOne PenTest-Tools Veracode Contrast Security HCL Technologies Probely WhiteHat (NTT)"},{"location":"zh-TW/0x00_2021-notice/","title":"\u767c\u8868\u7248\u672c","text":"<p>\u65bc 2021 \u5e74 9 \u6708 24 \u65e5\u6b63\u5f0f\u767c\u8868</p>"},{"location":"zh-TW/0x00_2021-notice/#_2","title":"\u5c08\u6848\u9818\u8896","text":"<ul> <li>Andrew van der Stock (twitter: @vanderaj)</li> <li>Brian Glas (twitter: @infosecdad)</li> <li>Neil Smithline (twitter: @appsecneil)</li> <li>Torsten Gigler (twitter: @torsten_tweet)</li> </ul>"},{"location":"zh-TW/0x00_2021-notice/#_3","title":"\u8ca2\u737b\u5c08\u5bb6","text":"<ul> <li>Orange Tsai, @orange_8361 A10-2021: \u4f3a\u670d\u7aef\u8acb\u6c42\u507d\u9020 \u7684\u4f5c\u8005</li> <li>Jim Manico @manicode \u548c Jakub Ma\u0107kowski @kubamackowski</li> </ul>"},{"location":"zh-TW/0x00_2021-notice/#_4","title":"\u4f60\u80fd\u5982\u4f55\u5e6b\u52a9","text":"<p>\u5728\u76ee\u524d\u968e\u6bb5\uff0c\u6211\u5011\u9700\u8981</p> <ul> <li>\u8cc7\u6599\u79d1\u5b78\u5bb6 - \u5354\u52a9\u78ba\u8a8d\u6211\u5011\u7684\u8cc7\u6599\u5206\u6790\u7d50\u679c</li> <li>\u7db2\u9801\u8a2d\u8a08\u5e2b - \u6211\u5011\u9700\u8981\u505a\u4e00\u500b\u5c0d\u884c\u52d5\u88dd\u7f6e\u53cb\u5584\u7684\u7248\u672c</li> <li>\u7ffb\u8b6f\u4eba\u54e1 - \u8acb\u5354\u52a9\u78ba\u8a8d\u82f1\u6587\u7248\u672c\u6587\u5b57\u4e26\u78ba\u8a8d\u53ef\u88ab\u7ffb\u8b6f\u5230\u5176\u4ed6\u8a9e\u8a00\u7248\u672c</li> <li>ASVS, Testing Guide, \u548c Code Review Guide \u5c08\u6848\u9818\u8896 - \u8acb\u4f7f\u7528\u6211\u5011\u7684\u8cc7\u6599\u4e26\u5354\u52a9\u6211\u5011\u628a\u5176\u4ed6\u7684\u6587\u4ef6\u548c\u6a19\u6e96\u9023\u63a5\u8d77\u4f86</li> </ul>"},{"location":"zh-TW/0x00_2021-notice/#pull-request","title":"\u554f\u984c\u53ca Pull Request","text":"<p>\u8acb\u5c07\u4efb\u4f55\u554f\u984c\u6216\u662f\u9700\u88ab\u4fee\u6539\u7684\u5730\u65b9\u8a18\u9304\u5230\u6b64:</p> <ul> <li>https://github.com/OWASP/Top10/issues</li> </ul>"},{"location":"zh-TW/0x01_2021-about-owasp/","title":"\u95dc\u65bc OWASP","text":"<p>The Open Worldwide Application Security Project (OWASP) is an open community dedicated to enabling organizations to develop, purchase, and maintain applications and APIs that can be trusted.</p> <p>At OWASP, you'll find free and open:</p> <ul> <li>Application security tools and standards</li> <li>Cutting edge research</li> <li>Standard security controls and libraries</li> <li>Complete books on application security testing, secure code development, and secure code review</li> <li>Presentations and videos</li> <li>Cheat sheets on many common topics</li> <li>Chapters meetings</li> <li>Events, training, and conferences.</li> <li>Google Groups</li> </ul> <p>Learn more at: https://owasp.org.</p> <p>All OWASP tools, documents, videos, presentations, and chapters are free and open to anyone interested in improving application security.</p> <p>We advocate approaching application security as a people, process, and technology problem, because the most effective approaches to application security require improvements in these areas.</p> <p>OWASP is a new kind of organization. Our freedom from commercial pressures allows us to provide unbiased, practical, and cost-effective information about application security.</p> <p>OWASP is not affiliated with any technology company, although we support the informed use of commercial security technology. OWASP produces many types of materials in a collaborative, transparent, and open way.</p> <p>The OWASP Foundation is the non-profit entity that ensures the project's long-term success. Almost everyone associated with OWASP is a volunteer, including the OWASP board, chapter leaders, project leaders, and project members. We support innovative security research with grants and infrastructure.</p> <p>Come join us!</p>"},{"location":"zh-TW/0x01_2021-about-owasp/#copyright-and-license","title":"Copyright and License","text":"<p>Copyright \u00a9 2003-2025 The OWASP\u00ae Foundation. This document is released under the Creative Commons Attribution Share-Alike 4.0 license. For any reuse or distribution, you must make it clear to others the license terms of this work.</p>"},{"location":"zh-TW/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#stage-1-identify-the-gaps-and-goals-of-your-appsec-program","title":"Stage 1. Identify the gaps and goals of your appsec program","text":"<p>Many Application Security (AppSec) programs try to run before they can crawl or walk. These efforts are doomed to failure. We strongly encourage CISOs and AppSec leadership to use OWASP Software Assurance Maturity Model (SAMM) [https://owaspsamm.org] to identify weaknesses and areas for improvement over a 1-3 year period. The first step is to evaluate where you are now, identify the gaps in governance, design, implementation, verification, and operations you need to resolve immediately versus those that can wait, and prioritize implementing or improving the fifteen OWASP SAMM security practices. OWASP SAMM can help you build and measure improvements in your software assurance efforts.</p>"},{"location":"zh-TW/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#stage-2-plan-for-a-paved-road-secure-development-lifecycle","title":"Stage 2. Plan for a paved road secure development lifecycle","text":"<p>Traditionally the preserve of so-called \"unicorns,\" the paved road concept is the easiest way to make the most impact and scale AppSec resources with development team velocity, which only increases every year.</p> <p>The paved road concept is \"the easiest way is also the most secure way\" and should involve a culture of deep partnerships between the development team and the security team, preferably such that they are one and the same team. The paved road aims to continuously improve, measure, detect and replace insecure alternatives by having an enterprise-wide library of drop-in secured replacements, with tooling to help see where improvements can be made by adopting the paved road. This allows existing development tools to report on insecure builds and help development teams self-correct away from insecure alternatives.</p> <p>The paved road might seem a lot to take in, but it should be built incrementally over time. There are other forms of appsec programs out there, notably the Microsoft Agile Secure Development Lifecycle. Not every appsec program methodology suits every business.</p>"},{"location":"zh-TW/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/#stage-5-test-that-the-paved-road-has-mitigated-the-issues-found-in-the-owasp-top-10","title":"Stage 5. Test that the paved road has mitigated the issues found in the OWASP Top 10","text":"<p>Paved road components should address a significant issue with the OWASP Top 10, for example, how to automatically detect or fix vulnerable components, or a static code analysis IDE plugin to detect injections or even better a library that is known safe against injection, such as React or Vue. The more of these secure drop-in replacements provided to teams, the better. A vital task of the appsec team is to ensure that the security of these components is continuously evaluated and improved. Once they are improved, some form of communication pathway with consumers of the component should indicate that an upgrade should occur, preferably automatically, but if not, as least highlighted on a dashboard or similar.</p>"},{"location":"zh-TW/A00_2021_How_to_use_the_OWASP_Top_10_as_a_standard/","title":"\u5982\u4f55\u5c07 OWASP Top 10 2021 \u505a\u70ba\u6a19\u6e96\u4f7f\u7528","text":"<p>OWASP Top 10 \u6700\u4e3b\u8981\u662f\u4e00\u500b\u63d0\u5347\u610f\u8b58\u53ca\u8cc7\u5b89\u8a8d\u77e5\u5f62\u614b\u7684\u6587\u4ef6\u3002\u4f46\u662f\uff0c\u5f9e 2003 \u5e74\u958b\u59cb\uff0c\u9019\u4e26\u6c92\u6709\u8b93\u4efb\u4f55\u7684\u4f01\u696d\u6216\u7d44\u7e54\u505c\u6b62\u4f7f\u7528\u5b83\u7576\u4f5c\u9810\u8a2d\u7684\u61c9\u7528\u5b89\u5168\u6a19\u6e96\u3002\u5982\u679c\u4f60\u60f3\u8981\u7528\u4f7f\u7528 OWASP Top 10 \u7576\u4f5c\u7a0b\u5f0f\u8a2d\u8a08\u6216\u662f\u9a57\u8b49\u6e2c\u8a66\u7684\u4e00\u500b\u6a19\u6e96\uff0c\u8981\u5148\u77e5\u9053\u9019\u53ea\u662f\u4e00\u500b\u6700\u4f4e\u9650\u5ea6\u7684\u6307\u6a19\u4e26\u4e14\u4e5f\u53ea\u662f\u4e00\u500b\u958b\u59cb\u3002</p> <p>\u4f7f\u7528 OWASP Top 10 \u4f5c\u70ba\u6a19\u6e96\u7684\u56f0\u96e3\u4e4b\u4e00\u662f\u6211\u5011\u8a18\u9304\u4e86\u61c9\u7528\u5b89\u5168\u98a8\u96aa\uff0c\u800c\u4e0d\u4e00\u5b9a\u662f\u5bb9\u6613\u6e2c\u8a66\u7684\u554f\u984c\u3002\u4f8b\u5982\uff0cA04:2021-Insecure Design \u8d85\u51fa\u4e86\u5927\u591a\u6578\u80fd\u5920\u6e2c\u88ab\u8a66\u53ca\u88ab\u9a57\u8b49\u7684\u7bc4\u570d\u3002 \u53e6\u4e00\u500b\u4f8b\u5b50\u662f\u8981\u6e2c\u8a66\u6709\u6548\u7684\u5c31\u5730\u3001\u88ab\u4f7f\u7528\u4e2d\u7684\u6e2c\u8a66\u8a18\u9304\u548c\u76e3\u63a7\u6a5f\u5236\u53ea\u80fd\u900f\u904e\u9762\u8ac7\u548c\u8981\u6c42\u62bd\u6a23\u6709\u6548\u7684\u8cc7\u5b89\u4e8b\u4ef6\u9451\u8b58\u6848\u4f8b\u3002 \u4e00\u500b\u975c\u614b\u539f\u59cb\u78bc\u5206\u6790\u5de5\u5177\u53ef\u4ee5\u627e\u51fa\u65e5\u8a8c\u8a18\u9304\u7684\u7f3a\u5931\uff0c\u4f46\u53ef\u80fd\u7121\u6cd5\u78ba\u5b9a\u696d\u52d9\u908f\u8f2f\u6216\u5b58\u53d6\u63a7\u5236\u662f\u5426\u5728\u65e5\u8a8c\u8a18\u9304\u4e2d\u8a18\u9304\u4e86\u6709\u95dc\u91cd\u8981\u5b89\u5168\u6f0f\u6d1e\u7684\u65e5\u8a8c\u3002 \u6ef2\u900f\u6e2c\u8a66\u4eba\u54e1\u53ef\u80fd\u53ea\u80fd\u78ba\u5b9a\u4ed6\u5011\u5728\u6e2c\u8a66\u74b0\u5883\u4e2d\u6e2c\u8a66\u6642\u6709\u78ba\u5be6\u7684\u57f7\u884c\u4e86\u8cc7\u5b89\u4e8b\u4ef6\u9451\u8b58\uff0c\u5728\u5be6\u969b\u7684\u5be6\u9ad4\u74b0\u5883\u4e2d\u537b\u6709\u53ef\u80fd\u6c92\u6709\u505a\u5230\u76f8\u540c\u7684\u6a19\u6e96\u3002</p> <p>\u4ee5\u4e0b\u662f\u6211\u5011\u5efa\u8b70\u5728\u4ec0\u9ebc\u6642\u5019\u53ef\u4ee5\u4f7f\u7528 OWASP Top 10:</p> \u4f7f\u7528\u6848\u4f8b OWASP Top 10 2021 OWASP \u61c9\u7528\u5b89\u5168\u9a57\u8b49\u6a19\u6e96 (ASVS) \u8a8d\u77e5\u6027 \u662f \u6559\u80b2\u8a13\u7df4 \u57fa\u790e \u5b8c\u6574 \u8a2d\u8a08\u53ca\u67b6\u69cb \u5076\u723e \u53ef\u4ee5 \u7a0b\u5f0f\u6a19\u6e96 \u6700\u4f4e\u9650\u5ea6 \u53ef\u4ee5 \u5b89\u5168\u7a0b\u5f0f\u9a57\u8b49 \u6700\u4f4e\u9650\u5ea6 \u53ef\u4ee5 \u540c\u884c\u8a55\u5be9\u6e05\u55ae \u6700\u4f4e\u9650\u5ea6 \u53ef\u4ee5 \u55ae\u5143\u6e2c\u8a66 \u5076\u800c\u53ef\u4ee5 \u53ef\u4ee5 \u6574\u5408\u6e2c\u8a66 \u5076\u800c\u53ef\u4ee5 \u53ef\u4ee5 \u6ef2\u900f\u6e2c\u8a66 \u6700\u4f4e\u9650\u5ea6 \u53ef\u4ee5 \u652f\u63f4\u5de5\u5177 \u6700\u4f4e\u9650\u5ea6 \u53ef\u4ee5 \u5b89\u5168\u4f9b\u61c9\u93c8 \u5076\u800c\u53ef\u4ee5 \u53ef\u4ee5 <p>\u6211\u5011\u9f13\u52f5\u4efb\u4f55\u5e0c\u671b\u80fd\u5957\u7528\u61c9\u7528\u5b89\u5168\u6a19\u6e96\u7684\u4eba\u53ef\u4ee5\u5229\u7528 OWASP \u61c9\u7528\u5b89\u5168\u9a57\u8b49\u6a19\u6e96\uff08ASVS\uff09\uff0c\u56e0\u70ba\u5b83\u672c\u8eab\u7684\u8a2d\u8a08\u5c31\u662f\u53ef\u88ab\u6e2c\u8a66\u53ca\u9a57\u8b49\u7684\uff0c\u4e26\u53ef\u4ee5\u5728\u5b89\u5168\u8edf\u9ad4\u958b\u767c\u751f\u547d\u9031\u671f\u7684\u6240\u6709\u968e\u6bb5\u90fd\u53ef\u88ab\u904b\u7528\u3002</p> <p>ASVS \u4e5f\u662f\u552f\u4e00\u5de5\u5177\u63d0\u4f9b\u8005\u80fd\u88ab\u63a5\u53d7\u7684\u9078\u64c7\u3002\u6e2c\u8a66\u5de5\u5177\u6c92\u8fa6\u6cd5\u5168\u9762\u7684\u5075\u6e2c\uff0c\u6e2c\u8a66\uff0c\u6216\u4fdd\u8b77 OWASP Top 10 \u7576\u4e2d\u7684\u4e00\u4e9b\u9805\u76ee\u3002\u662f\u56e0\u70ba OWASP Top 10 \u7684\u98a8\u96aa\u985e\u5225\u7684\u5340\u5206\u6709\u4e00\u90e8\u5206\u4e5f\u662f\u8ddf A04:2021-\u4e0d\u5b89\u5168\u7684\u8a2d\u8a08\u6709\u6240\u76f8\u95dc\u3002OWASP \u5f37\u70c8\u4e0d\u5efa\u8b70\u7528 OWASP Top 10 \u53bb\u51fd\u84cb\u6240\u6709\u7684\u5b89\u5168\u898f\u7bc4\u53ca\u9700\u6c42\uff0c\u56e0\u70ba\u9019\u672c\u8eab\u5c31\u4e0d\u662f\u771f\u7684\u3002</p>"},{"location":"zh-TW/A00_2021_Introduction/","title":"OWASP Top 10 2021 \u4ecb\u7d39","text":"<p>\u6b61\u8fce\u4f86\u5230\u6700\u65b0\u7248\u672c\u7684 OWASP Top 10\uff01! OWASP Top 10 2021 \u662f\u4e00\u500b\u5168\u65b0\u7684\u540d\u55ae\uff0c\u5305\u542b\u4e86\u4f60\u53ef\u4ee5\u5217\u5370\u4e0b\u4f86\u7684\u65b0\u5716\u793a\u8aaa\u660e\uff0c\u82e5\u6709\u9700\u8981\u7684\u8a71\uff0c\u4f60\u53ef\u4ee5\u5f9e\u6211\u5011\u7684\u7db2\u9801\u4e0a\u9762\u4e0b\u8f09\u3002</p> <p>\u5728\u6b64\u6211\u5011\u60f3\u5c0d\u6240\u6709\u8ca2\u737b\u4e86\u4ed6\u5011\u6642\u9593\u548c\u8cc7\u6599\u7684\u4eba\u7d66\u4e88\u4e00\u500b\u6975\u5927\u7684\u611f\u8b1d\u3002\u6c92\u6709\u4f60\u5011\uff0c\u9019\u4e00\u500b\u65b0\u7248\u672c\u662f\u4e0d\u6703\u51fa\u73fe\u7684\u3002\u8b1d\u8b1d\u3002</p>"},{"location":"zh-TW/A00_2021_Introduction/#top-10-for-2021","title":"Top 10 for 2021 \u6709\u4ec0\u9ebc\u65b0\u7684\u8b8a\u5316\uff1f","text":"<p>\u9019\u6b21\u5728 OWASP Top 10 for 2021 \u6709\u4e09\u500b\u5168\u65b0\u7684\u5206\u985e\uff0c\u6709\u56db\u500b\u5206\u985e\u6709\u505a\u540d\u7a31\u548c\u7bc4\u570d\u7684\u4fee\u6b63\uff0c\u4e26\u6709\u5c07\u4e00\u4e9b\u985e\u5225\u505a\u5408\u4f75\u3002</p> <p></p> <p>A01:2021-\u6b0a\u9650\u63a7\u5236\u5931\u6548 \u5f9e\u7b2c\u4e94\u540d\u79fb\u4e0a\u4f86; 94% \u88ab\u6e2c\u8a66\u7684\u61c9\u7528\u7a0b\u5f0f\u90fd\u6709\u9a57\u6e2c\u5230\u67d0\u7a2e\u985e\u5225\u6b0a\u9650\u63a7\u5236\u5931\u6548\u7684\u554f\u984c\u3002\u5728\u6b0a\u9650\u63a7\u5236\u5931\u6548\u9019\u500b\u985e\u5225\u4e2d\u88ab\u5c0d\u61c9\u5230\u7684 34 \u500b CWEs \u5728\u9a57\u6e2c\u8cc7\u6599\u4e2d\u51fa\u73fe\u7684\u6b21\u6578\u90fd\u9ad8\u65bc\u5176\u4ed6\u7684\u5f31\u9ede\u985e\u5225\u3002</p> <p>A02:2021-\u52a0\u5bc6\u6a5f\u5236\u5931\u6548 \u63d0\u5347\u4e00\u540d\u5230\u7b2c\u4e8c\u540d\uff0c\u5728\u4e4b\u524d\u70ba \u654f\u611f\u8cc7\u6599\u5916\u66dd\uff0c\u5728\u6b64\u5b9a\u7fa9\u4e0b\u6bd4\u8f03\u985e\u4f3c\u65bc\u4e00\u500b\u5ee3\u6cdb\u7684\u554f\u984c\u800c\u975e\u6839\u672c\u539f\u56e0\u3002\u5728\u6b64\u91cd\u65b0\u5b9a\u7fa9\u4e26\u5c07\u554f\u984c\u6838\u5fc3\u5b9a\u7fa9\u5728\u52a0\u5bc6\u6a5f\u5236\u7684\u5931\u6557\uff0c\u4e26\u56e0\u6b64\u9020\u6210\u654f\u611f\u6027\u8cc7\u6599\u5916\u6d29\u6216\u662f\u7cfb\u7d71\u88ab\u7834\u58de\u3002</p> <p>A03:2021-\u6ce8\u5165\u5f0f\u653b\u64ca \u4e0b\u6ed1\u5230\u7b2c\u4e09\u540d\u300294% \u88ab\u6e2c\u8a66\u7684\u61c9\u7528\u7a0b\u5f0f\u90fd\u6709\u9a57\u6e2c\u5230\u67d0\u7a2e\u985e\u5225\u6ce8\u5165\u5f0f\u653b\u64ca\u7684\u554f\u984c\u3002\u5728\u6ce8\u5165\u5f0f\u653b\u64ca\u9019\u500b\u985e\u5225\u4e2d\u88ab\u5c0d\u61c9\u5230\u7684 33 \u500b CWEs \u5728\u9a57\u6e2c\u8cc7\u6599\u4e2d\u51fa\u73fe\u7684\u6b21\u6578\u70ba\u5f31\u9ede\u554f\u984c\u7684\u7b2c\u4e8c\u9ad8\u3002\u8de8\u7ad9\u8173\u672c\u653b\u64ca\u73fe\u5728\u5728\u65b0\u7248\u672c\u5c6c\u65bc\u9019\u500b\u985e\u5225\u3002</p> <p>A04:2021-\u4e0d\u5b89\u5168\u8a2d\u8a08 \u9019\u662f 2021 \u5e74\u7248\u672c\u7684\u65b0\u985e\u5225\uff0c\u4e26\u7279\u5225\u91dd\u6ce8\u5728\u8207\u8a2d\u8a08\u76f8\u95dc\u7684\u7f3a\u5931\u3002\u5982\u679c\u6211\u5011\u771f\u7684\u5e0c\u671b\u8b93\u6574\u500b\u7522\u696d\"\u5411\u5de6\u79fb\u52d5\"\uff0a\u8a3b\u4e00\uff0a\uff0c\u90a3\u6211\u5011\u5fc5\u9808\u9032\u4e00\u6b65\u7684\u5f80\u5a01\u8105\u5efa\u6a21\uff0c\u5b89\u5168\u8a2d\u8a08\u6a21\u584a\u7684\u89c0\u5ff5\uff0c\u548c\u5b89\u5168\u53c3\u8003\u67b6\u69cb\u524d\u9032\u3002</p> <p>\uff0a\u8a3b\u4e00: Move Left \u65bc\u82f1\u6587\u539f\u6587\u4e2d\u4ee3\u8868\u5728\u8edf\u9ad4\u958b\u767c\u53ca\u4ea4\u4ed8\u904e\u7a0b\u4e2d\uff0c\u5728\u65e9\u671f\u627e\u51fa\u53ca\u8655\u7406\u76f8\u95dc\u554f\u984c\uff0c\u540c Shift Left Testing\u3002\uff0a </p> <p>A05:2021-\u5b89\u5168\u8a2d\u5b9a\u7f3a\u9677 \u5f9e\u4e0a\u4e00\u7248\u672c\u7684\u7b2c\u516d\u540d\u79fb\u52d5\u4e0a\u4f86\u300290% \u88ab\u6e2c\u8a66\u7684\u61c9\u7528\u7a0b\u5f0f\u90fd\u6709\u9a57\u6e2c\u5230\u67d0\u7a2e\u985e\u5225\u7684\u5b89\u5168\u8a2d\u5b9a\u7f3a\u9677\u3002\u5728\u66f4\u591a\u7684\u8edf\u9ad4\u5f80\u66f4\u9ad8\u5ea6\u548c\u6709\u5f48\u6027\u7684\u8a2d\u5b9a\u79fb\u52d5\uff0c\u6211\u5011\u4e26\u4e0d\u610f\u5916\u9019\u500b\u985e\u5225\u7684\u554f\u984c\u5f80\u4e0a\u79fb\u52d5\u3002\u5728\u524d\u7248\u672c\u4e2d\u7684 XML \u5916\u90e8\u5be6\u9ad4\u6ce8\u5165\u653b\u64ca \uff08XML External Entities\uff09\u73fe\u5728\u5c6c\u65bc\u9019\u500b\u985e\u5225\u3002</p> <p>A06:2021-\u5371\u96aa\u6216\u904e\u820a\u7684\u5143\u4ef6 \u5728\u4e4b\u524d\u6a19\u984c\u70ba \u4f7f\u7528\u6709\u5df2\u77e5\u5f31\u9ede\u7684\u5143\u4ef6\u3002\u5728\u672c\u6b21\u7248\u672c\u4e2d\u65bc\u696d\u754c\u554f\u5377\u4e2d\u6392\u540d\u7b2c\u4e8c\uff0c\u4f46\u4e5f\u6709\u8db3\u5920\u7684\u7d71\u8a08\u8cc7\u6599\u8b93\u5b83\u53ef\u4ee5\u9032\u5165 Top 10\u3002\u9019\u500b\u985e\u5225\u5f9e 2017 \u7248\u672c\u7684\u7b2c\u4e5d\u540d\u722c\u5347\u5230\u7b2c\u516d\uff0c\u4e5f\u662f\u6211\u5011\u6301\u7e8c\u6399\u624e\u505a\u6e2c\u8a66\u548c\u8a55\u4f30\u98a8\u96aa\u7684\u985e\u5225\u3002\u9019\u4e5f\u662f\u552f\u4e00\u4e00\u500b\u6c92\u6709\u4efb\u4f55 CVE \u80fd\u88ab\u5c0d\u61c9\u5230 CWE \u5167\u7684\u985e\u5225\uff0c\u6240\u4ee5\u9810\u8a2d\u7684\u5a01\u8105\u53ca\u5f71\u97ff\u6b0a\u91cd\u5728\u9019\u985e\u5225\u7684\u5206\u6578\u4e0a\u88ab\u9810\u8a2d\u70ba 5.0\u3002</p> <p>A07:2021-\u8a8d\u8b49\u53ca\u9a57\u8b49\u6a5f\u5236\u5931\u6548 \u5728\u4e4b\u524d\u6a19\u984c\u70ba \u932f\u8aa4\u7684\u8a8d\u8b49\u6a5f\u5236\u3002\u5728\u672c\u6b21\u7248\u672c\u4e2d\u6cb9\u7b2c\u4e8c\u540d\u4e0b\u6ed1\u81f3\u6b64\uff0c\u4e26\u540c\u6642\u5305\u542b\u4e86\u5c07\u8a8d\u8b49\u76f8\u95dc\u7f3a\u5931\u7684 CWE \u5305\u542b\u5728\u5167\u3002\u9019\u500b\u985e\u5225\u4ecd\u662f Top 10 \u4e0d\u53ef\u7f3a\u5c11\u7684\u4e00\u74b0\uff0c\u4f46\u540c\u6642\u4e5f\u6709\u767c\u73fe\u73fe\u5728\u6a19\u6e96\u5316\u7684\u67b6\u69cb\u6709\u5354\u52a9\u964d\u4f4e\u6b21\u98a8\u96aa\u767c\u751f\u6a5f\u7387\u3002</p> <p>A08:2021-\u8edf\u9ad4\u53ca\u8cc7\u6599\u5b8c\u6574\u6027\u5931\u6548 \u9019\u662f 2021 \u5e74\u7248\u672c\u5168\u65b0\u7684\u985e\u5225\uff0c\u4e26\u5728\u8edf\u9ad4\u66f4\u65b0\uff0c\u6a5f\u654f\u53ca\u91cd\u8981\u8cc7\u6599\uff0c\u548c CI/CD \u7ba1\u9053\u4e2d\u4e26\u6c92\u6709\u505a\u5b8c\u6574\u6027\u7684\u78ba\u8a8d\u70ba\u524d\u63d0\u505a\u5047\u8a2d\u4e26\u9032\u884c\u8a55\u4f30\u3002\u5728\u8a55\u4f30\u4e2d\u5f71\u97ff\u6b0a\u91cd\u6700\u9ad8\u5206\u7684 CVE/CVSS \u8cc7\u6599\u90fd\u8207\u9019\u985e\u5225\u4e2d\u7684 10 \u500b CWE \u5c0d\u61c9\u5230\u30022017 \u5e74\u7248\u672c\u4e2d\u4e0d\u5b89\u5168\u7684\u53cd\u5e8f\u5217\u5316\u73fe\u5728\u88ab\u5408\u4f75\u81f3\u6b64\u985e\u5225\u3002</p> <p>A09:2021-\u8cc7\u5b89\u8a18\u9304\u53ca\u76e3\u63a7\u5931\u6548 \u5728\u4e4b\u524d\u70ba\u4e0d\u5b8c\u6574\u7684\u7d00\u9304\u53ca\u76e3\u63a7\u4e26\u7d0d\u5165\u5728\u696d\u754c\u554f\u5377\u4e2d\u5728\u672c\u6b21\u5217\u540d\u70ba\u7b2c\u4e09\u540d\u4e26\u5f9e\u4e4b\u524d\u7684\u7b2c\u5341\u540d\u4e0a\u79fb\u3002\u9019\u500b\u985e\u5225\u5c07\u64f4\u5145\u53bb\u7d0d\u5165\u66f4\u591a\u76f8\u95dc\u7684\u7f3a\u5931\uff0c\u4f46\u9019\u4e5f\u662f\u76f8\u7576\u96e3\u53bb\u9a57\u8b49\uff0c\u4e26\u6c92\u6709\u76f8\u7576\u591a\u7684 CVE/CVSS \u8cc7\u6599\u53ef\u4ee5\u4f50\u8b49\u3002\u4f46\u662f\u5728\u9019\u500b\u985e\u5225\u4e2d\u7684\u7f3a\u5931\u6703\u76f4\u63a5\u5f71\u97ff\u5230\u6574\u9ad4\u5b89\u5168\u7684\u53ef\u8996\u6027\uff0c\u4e8b\u4ef6\u544a\u8b66\u53ca\u9451\u8b58\u3002</p> <p>A10:2021-\u4f3a\u670d\u7aef\u8acb\u6c42\u507d\u9020 \u9019\u500b\u985e\u5225\u662f\u5728\u696d\u754c\u554f\u5377\u6392\u540d\u7b2c\u4e00\u540d\uff0c\u4e26\u5728\u6b64\u7248\u672c\u5167\u7d0d\u5165\u3002\u7531\u8cc7\u6599\u986f\u793a\u6b64\u554f\u984c\u6709\u8f03\u4f4e\u88ab\u9a57\u6e2c\u6b21\u6578\u548c\u7bc4\u570d\uff0c\u4f46\u6709\u9ad8\u65bc\u5e73\u5747\u7684\u5a01\u8105\u53ca\u5f71\u97ff\u6b0a\u91cd\u6bd4\u7387\u3002\u9019\u500b\u985e\u5225\u7684\u51fa\u73fe\u4e5f\u662f\u56e0\u70ba\u696d\u754c\u5c08\u5bb6\u91cd\u8907\u7533\u660e\u9019\u985e\u5225\u7684\u554f\u984c\u76f8\u7576\u91cd\u8981\uff0c\u5373\u4f7f\u5728\u672c\u6b21\u8cc7\u6599\u4e2d\u4e26\u6c92\u6709\u8db3\u5920\u7684\u8cc7\u6599\u53bb\u986f\u793a\u9019\u500b\u554f\u984c\u3002</p>"},{"location":"zh-TW/A00_2021_Introduction/#_1","title":"\u5206\u6790\u65b9\u6cd5","text":"<p>\u672c\u6b21 Top 10 \u7684\u9078\u64c7\u65b9\u5f0f\u6bd4\u4ee5\u5f80\u66f4\u91cd\u8996\u8cc7\u6599\u5206\u6790\uff0c\u4f46\u4e26\u4e0d\u662f\u5b8c\u5168\u4ee5\u8cc7\u6599\u5206\u6790\u70ba\u4e3b\u3002\u6211\u5011\u5f9e\u8cc7\u6599\u5206\u6790\u4e2d\u6311\u9078\u4e86\u516b\u500b\u98a8\u96aa\u985e\u5225\uff0c\u7136\u5f8c\u7531\u696d\u754c\u554f\u5377\u4e2d\u6311\u9078\u5169\u500b\u98a8\u96aa\u985e\u5225\u3002\u6211\u5011\u5f9e\u904e\u5f80\u7684\u5206\u4eab\u8cc7\u6599\u4e2d\u53bb\u77ad\u89e3\uff0c\u4e26\u6709\u6211\u5011\u4e00\u500b\u57fa\u672c\u7684\u7406\u7531\u3002\u539f\u56e0\u662f\u6240\u6709\u7684\u8cc7\u5b89\u7814\u7a76\u4eba\u54e1\u90fd\u4e0d\u65b7\u7684\u5728\u627e\u65b0\u7684\u5f31\u9ede\u4e26\u627e\u51fa\u65b9\u6cd5\u53bb\u9a57\u8b49\u5f31\u9ede\uff0c\u4f46\u6703\u9700\u8981\u6642\u9593\u624d\u80fd\u5c07\u9019\u4e9b\u9a57\u6e2c\u65b9\u6cd5\u7d0d\u5165\u5230\u65e2\u6709\u7684\u5de5\u5177\u548c\u6e2c\u8a66\u6d41\u7a0b\u4e2d\u3002\u7576\u6211\u5011\u80fd\u6709\u6548\u7684\u5927\u91cf\u6e2c\u8a66\u9019\u500b\u5f31\u9ede\u6642\uff0c\u6709\u53ef\u80fd\u5df2\u7d93\u904e\u4e86\u591a\u5e74\u7684\u6642\u9593\u3002\u70ba\u4e86\u8981\u8b93\u5169\u8005\u4e4b\u9593\u6709\u5e73\u8861\uff0c\u6211\u5011\u4f7f\u7528\u696d\u754c\u554f\u5377\u8acb\u6559\u5728\u524d\u7dda\u7684\u8cc7\u5b89\u7814\u7a76\u5c08\u5bb6\u5011\u4e26\u77ad\u89e3\u4ed6\u5011\u89ba\u5f97\u6709\u54ea\u4e9b\u662f\u4ed6\u5011\u89ba\u5f97\u56b4\u91cd\u4f46\u5c1a\u672a\u51fa\u73fe\u5728\u6e2c\u8a66\u8cc7\u6599\u4e2d\u7684\u6f0f\u6d1e\u53ca\u554f\u984c\u3002</p> <p>\u9019\u662f\u5e7e\u500b\u6211\u5011\u70ba\u4e86\u8981\u8b93 OWASP Top 10 \u66f4\u52a0\u6210\u719f\u7684\u91cd\u8981\u6539\u8b8a\u3002</p>"},{"location":"zh-TW/A00_2021_Introduction/#_2","title":"\u5982\u4f55\u5efa\u69cb\u98a8\u96aa\u985e\u5225","text":"<p>\u6709\u5225\u65bc\u4e0a\u4e00\u500b\u7248\u672c\uff0c\u5728\u9019\u6b21\u7684 OWASP Top 10 \u6709\u4e00\u4e9b\u98a8\u96aa\u985e\u5225\u7684\u4fee\u6539\u3002\u6211\u5011\u5728\u6b64\u4ee5\u6bd4\u8f03\u9ad8\u7684\u89d2\u5ea6\u8aaa\u660e\u4e00\u4e0b\u9019\u6b21\u7684\u985e\u5225\u4fee\u6539\u3002</p> <p>\u5728\u4e0a\u4e00\u6b21\u7684\u8cc7\u6599\u6536\u96c6\u7576\u4e2d\uff0c\u6211\u5011\u5c07\u8cc7\u6599\u6536\u96c6\u7684\u91cd\u5fc3\u653e\u5728\u9810\u5148\u5b9a\u7fa9\u597d\u7684\u7d04 30 \u500b CWEs \u4e26\u7d0d\u5165\u4e00\u500b\u6b04\u4f4d\u5fb5\u6c42\u5176\u4ed6\u7684\u767c\u73fe\u3002\u5f9e\u9019\u88e1\u6211\u5011\u770b\u5230\u6c7a\u591a\u6578\u7684\u7d44\u7e54\u90fd\u53ea\u6703\u5c08\u6ce8\u5728\u9019 30 \u500b CWEs \u800c\u4e0d\u5e38\u52a0\u5165\u5176\u4ed6\u4ed6\u5011\u53ef\u80fd\u767c\u73fe\u7684 CWEs\u3002\u5728\u9019\u6b21\u7684\u6539\u7248\u4e2d\uff0c\u6211\u5011\u5c07\u6240\u6709\u7684\u554f\u984c\u90fd\u4ee5\u958b\u653e\u5f0f\u7684\u65b9\u6cd5\u8655\u7406\uff0c\u4e26\u6c92\u6709\u9650\u5236\u5728\u4efb\u4f55\u4e00\u500b CWEs\u3002\u6211\u5011\u8acb\u6559\u4e86\u5f9e 2017 \u5e74\u958b\u59cb\u6240\u6e2c\u8a66\u7684\u7db2\u9801\u61c9\u7528\u7a0b\u5f0f\u6578\u91cf\uff0c\u7136\u5f8c\u5728\u9019\u4e9b\u7a0b\u5f0f\u4e2d\u81f3\u5c11\u6709\u4e00\u500b CWE \u88ab\u767c\u73fe\u7684\u6578\u91cf\u3002\u9019\u500b\u683c\u5f0f\u8b93\u6211\u5011\u80fd\u5920\u8ffd\u8e64\u6bcf\u500b CWE \u8ddf\u6240\u6709\u88ab\u9a57\u6e2c\u53ca\u7d71\u8a08\u7684\u61c9\u7528\u7a0b\u5f0f\u7684\u6578\u91cf\u8ddf\u95dc\u4fc2\u3002\u6211\u5011\u4e5f\u5ffd\u7565\u4e86 CWE \u51fa\u73fe\u7684\u983b\u7387\uff0c\u96d6\u7136\u5728\u67d0\u4e9b\u72c0\u6cc1\u4e0b\u9019\u4e5f\u8a31\u662f\u5fc5\u9808\u7684\uff0c\u4f46\u9019\u537b\u96b1\u85cf\u4e86\u98a8\u96aa\u985e\u5225\u672c\u8eab\u8207\u61c9\u7528\u7a0b\u5f0f\u6578\u91cf\u6574\u9ad4\u7684\u95dc\u4fc2\u3002\u6240\u4ee5\u4e00\u500b\u61c9\u7528\u7a0b\u5f0f\u6709 4 \u500b\u6216\u662f 4,000 \u500b\u5f31\u9ede\u4e26\u4e0d\u662f\u88ab\u8a08\u7b97\u5728 Top 10 \u7684\u57fa\u790e\u3002\u4f46\u540c\u6642\u6211\u5011\u4e5f\u5f9e\u539f\u672c\u7684 30 \u591a\u500b CWEs \u589e\u9577\u5230\u5feb 400 \u591a\u500bCWEs \u53bb\u9032\u884c\u5206\u6790\u3002\u6211\u5011\u56e0\u6b64\u4e5f\u8a08\u756b\u672a\u4f86\u505a\u66f4\u591a\u7684\u8cc7\u6599\u5206\u6790\uff0c\u4e26\u5728\u5c0d\u6b64\u7248\u672c\u9032\u884c\u88dc\u5145\u8aaa\u660e\u3002\u800c\u9019\u4e9b\u589e\u52a0\u7684 CWEs \u4e5f\u540c\u6642\u5f71\u97ff\u4e86\u9019\u6b21\u98a8\u96aa\u985e\u5225\u7684\u898f\u5283\u3002</p> <p>\u6211\u5011\u82b1\u4e86\u597d\u5e7e\u500b\u6708\u5c07 CWEs \u9032\u884c\u5206\u7d44\u8ddf\u5206\u985e\uff0c\u800c\u4e14\u5176\u5be6\u53ef\u4ee5\u4e00\u76f4\u82b1\u66f4\u591a\u500b\u6708\u53bb\u505a\u9019\u4ef6\u4e8b\u60c5\u3002\u4f46\u6211\u5011\u5fc5\u9808\u5728\u67d0\u4e00\u500b\u6642\u9593\u9ede\u505c\u4f4f\u3002\u5728 CWEs \u7576\u4e2d\uff0c\u540c\u6642\u6709 \u539f\u56e0 \u4ee5\u53ca \u75c7\u72c0 \u7684\u554f\u984c\uff0c\u800c\u50cf\u662f \"\u52a0\u5bc6\u6a5f\u5236\u5931\u6548\" \u548c \"\u8a2d\u5b9a\u554f\u984c\" \u9019\u985e\u578b\u7684 \u539f\u56e0 \u8207 \"\u6a5f\u654f\u8cc7\u6599\u5916\u6d29\" \u548c \"\u963b\u65b7\u670d\u52d9\" \u9019\u985e\u578b\u7684 \u75c7\u72c0 \u662f\u5c0d\u7acb\u7684\u3002\u56e0\u6b64\u6211\u5011\u6c7a\u5b9a\u5728\u53ef\u4ee5\u7684\u6642\u5019\u8981\u66f4\u5c08\u6ce8\u65bc\u5e95\u5c64\u7684\u539f\u56e0\uff0c\u56e0\u70ba\u9019\u662f\u53ef\u4ee5\u6709\u6548\u6307\u51fa\u554f\u984c\u7684\u672c\u9ad4\u8ddf\u540c\u6642\u63d0\u4f9b\u554f\u984c\u7684\u89e3\u6c7a\u65b9\u5411\u3002\u5c08\u6ce8\u5728\u554f\u984c\u6838\u5fc3\u800c\u4e0d\u5c07\u91cd\u5fc3\u653e\u5728\u75c7\u72c0\u4e26\u4e0d\u662f\u4e00\u500b\u65b0\u7684\u6982\u5ff5\b\b\uff0cTop Ten \u6709\u53f2\u4ee5\u4f86\u4e00\u76f4\u662f\u75c7\u72c0\u8ddf\u554f\u984c\u6838\u5fc3\u7684\u7d9c\u5408\u9ad4\uff0c\u53ea\u662f\u9019\u6b21\u6211\u5011\u66f4\u523b\u610f\u7684\u5c07\u4ed6\u7a81\u986f\u51fa\u4f86\u3002\u5728\u9019\u6b21\u7684\u65b0\u7248\u672c\u4e2d\uff0c\u6bcf\u4e00\u500b\u985e\u5225\u5167\u7684\u5e73\u5747\u6709 19.6 \u500b CWE\uff0c\u800c\u6700\u4f4e\u7684 A10:2021-\u4f3a\u670d\u7aef\u8acb\u6c42\u507d\u9020 \u6709\u4e00\u500b CWE \u5230 A04:2021-\u4e0d\u5b89\u5168\u8a2d\u8a08 \u6709\u56db\u5341\u500b CWE\u3002\u9019\u500b\u65b0\u7684\u985e\u5225\u67b6\u69cb\u80fd\u63d0\u4f9b\u4f01\u696d\u66f4\u591a\u7684\u8cc7\u5b89\u8a13\u7df4\u7684\u597d\u8655\uff0c\u56e0\u70ba\u5728\u65b0\u7684\u67b6\u69cb\u4e0b\u53ef\u4ee5\u66f4\u5c08\u6ce8\u5728\u67d0\u500b\u8a9e\u7cfb\u6216\u5e73\u53f0\u4e0a\u7684 CWE\u3002</p>"},{"location":"zh-TW/A00_2021_Introduction/#_3","title":"\u9078\u64c7\u985e\u5225\u6642\u8cc7\u6599\u7684\u4f7f\u7528\u65b9\u5f0f","text":"<p>\u5728 2017 \u5e74\uff0c\u6211\u5011\u7528\u4e8b\u4ef6\u767c\u751f\u6b21\u6578\u53bb\u5224\u65b7\u53ef\u80fd\u767c\u751f\u7684\u6a5f\u7387\u53bb\u9078\u64c7\u985e\u5225\uff0c\u7136\u5f8c\u900f\u904e\u4e00\u7fa4\u5728\u696d\u754c\u64c1\u6709\u6578\u5341\u5e74\u7d93\u9a57\u7684\u5c08\u5bb6\u5718\u5c0d\u8a0e\u8ad6\u4e26\u4f9d\u7167 \u53ef\u767c\u751f\u6027\uff0c\u53ef\u767c\u73fe\u6027\uff08\u540c\u53ef\u80fd\u6027\uff09\uff0c\u548c \u6280\u8853\u5f71\u97ff\u529b \u53bb\u505a\u6392\u540d\u3002\u5728 2021 \u5e74\uff0c\u6211\u5011\u5e0c\u671b\u5982\u679c\u53ef\u4ee5\u7684\u8a71\u7528\u8cc7\u6599\u8b49\u660e\u53ef\u767c\u751f\u6027\u548c\u6280\u8853\u5f71\u97ff\u6027\u3002</p> <p>\u6211\u5011\u4e0b\u8f09\u4e86 OWASP Depndency Check \u4e26\u53d6\u51fa\u4e86 CVSS \u6f0f\u6d1e\uff0c\u4e26\u5c07\u76f8\u95dc\u7684 CWE \u7528\u5f71\u97ff\u529b\u5206\u6578\u5206\u7fa4\u3002\u9019\u82b1\u4e86\u4e00\u4e9b\u6642\u9593\u548c\u529b\u6c23\u53bb\u7814\u7a76\u56e0\u70ba\u6240\u6709\u7684 CVEs \u90fd\u6709 CVSSv2 \u5206\u6578\uff0c\u4f46\u662f\u5728\u5176\u4e2d\u56e0\u70ba CVSSv2 \u8ddf CVSSv3 \u4e4b\u9593\u6709\u4e00\u4e9b\u7f3a\u5931\u662f\u5fc5\u9808\u88ab\u4fee\u6b63\u7684\u3002\u7d93\u904e\u4e86\u4e00\u6bb5\u6642\u9593\u5f8c\uff0c\u6240\u6709\u7684 CVEs \u90fd\u6703\u6709\u5c0d\u61c9\u7684 CVSSv3 \u7684\u5206\u6578\u3002\u518d\u8005\uff0c\u5206\u6578\u7684\u7bc4\u570d\u548c\u8a08\u7b97\u7684\u516c\u5f0f\u5728 CVSSv2 \u548c CVSSv3 \u4e4b\u9593\u4e5f\u505a\u4e86\u66f4\u65b0\u3002</p> <p>\u5728 CVSSv2 \u4e2d\uff0c\u6f0f\u6d1e\u548c\u5f71\u97ff\u529b\u5169\u8005\u90fd\u53ef\u9054\u5230 10.0 \u5206\uff0c\u4f46\u662f\u516c\u5f0f\u672c\u8eab\u6703\u5c07\u5169\u8005\u8abf\u6574\u70ba\u6f0f\u6d1e\u4f54 60%\uff0c\u7136\u5f8c\u5f71\u97ff\u529b\u4f54 40%\u3002\u5728 CVSSv3 \u4e2d\uff0c\u7406\u8ad6\u4e0a\u7684\u6700\u9ad8\u503c\u5c07\u6f0f\u6d1e\u9650\u5236\u5728 6.0 \u5206\u800c\u5f71\u97ff\u529b\u5728 4.0 \u5206\u3002\u7576\u8003\u616e\u5230\u6b0a\u91cd\u6bd4\u7387\u6642\uff0c\u5f71\u97ff\u529b\u7684\u5206\u6578\u6703\u504f\u9ad8\uff0c\u5728 CVSSv3 \u4e2d\u5e7e\u4e4e\u5e73\u5747\u6703\u591a\u51fa 1.5 \u5206\uff0c\u800c\u6f0f\u6d1e\u5206\u6578\u537b\u6703\u5e73\u5747\u5c11 0.5 \u5206\u3002</p> <p>\u5f9e OWASP Dependcy Check \u8403\u53d6\u51fa\u7684 NVD \u8cc7\u6599\u7576\u4e2d\u6709\u5c07\u8fd1 12.5 \u842c\u7b46 CVE \u8cc7\u6599\u6709\u5c0d\u61c9\u5230 CWE\uff0c\u800c\u6709 241 \u7b46\u7368\u7279\u7684 CWEs \u6709\u5c0d\u61c9\u5230 CVE\u30026.2\u842c\u7b46 CWE \u6709\u5c0d\u61c9\u5230 CVSSv3 \u5206\u6578\uff0c\u6240\u4ee5\u5927\u7d04\u662f\u6574\u9ad4\u8cc7\u6599\u4e2d\u4e00\u534a\u7684\u90e8\u5206\u3002</p> <p>\u800c\u5728 Top Ten\uff0c\u6211\u5011\u8a08\u7b97\u6f0f\u6d1e\u548c\u5f71\u97ff\u529b\u7684\u5e73\u5747\u5206\u6578\u7684\u65b9\u5f0f\u5982\u4e0b\u3002\u6211\u5011\u5c07\u6240\u6709\u6709 CVSS \u5206\u6578\u7684 CVE \u4f9d\u7167 CWE \u5206\u7d44\uff0c\u7136\u5f8c\u4f9d\u7167\u6709 CVSSv3 \u7684\u6f0f\u6d1e\u548c\u5f71\u97ff\u529b\u5728\u6240\u6709\u8cc7\u6599\u4e2d\u7684\u767e\u5206\u6bd4\u4f5c\u6b0a\u91cd\uff0c\u5728\u52a0\u4e0a\u8cc7\u6599\u4e2d\u6709 CVSSv2 \u7684\u8cc7\u6599\u53bb\u505a\u5e73\u5747\u3002\u6211\u5011\u5c07\u9019\u4e9b\u5e73\u5747\u5f8c\u7684 CWEs \u5c0d\u61c9\u5230\u8cc7\u6599\u4e2d\uff0c\u7136\u5f8c\u5c07\u4ed6\u7684\u6f0f\u6d1e\u548c\u5f15\u60f3\u529b\u5206\u6578\u4f7f\u7528\u5728\u53e6\u4e00\u534a\u7684\u98a8\u96aa\u516c\u5f0f\u4e2d\u3002</p>"},{"location":"zh-TW/A00_2021_Introduction/#_4","title":"\u70ba\u4ec0\u9ebc\u5c31\u4e0d\u7d14\u7cb9\u505a\u7d71\u8a08\u5206\u6790\uff1f","text":"<p>\u9019\u4e9b\u8cc7\u6599\u7684\u7d50\u679c\u6700\u4e3b\u8981\u662f\u88ab\u9650\u5236\u5728\u80fd\u4f7f\u7528\u81ea\u52d5\u5de5\u5177\u6e2c\u8a66\u51fa\u4f86\u7684\u7d50\u679c\u3002\u53ef\u662f\u7576\u4f60\u8ddf\u4e00\u4f4d\u6709\u7d93\u9a57\u7684\u61c9\u7528\u7a0b\u5f0f\u5b89\u5168\u5c08\u5bb6\u804a\u7684\u6642\u5019\uff0c\u4ed6\u5011\u6703\u8ddf\u4f60\u8aaa\u7d55\u5927\u591a\u6578\u4ed6\u5011\u627e\u5230\u7684\u554f\u984c\u90fd\u4e0d\u5728\u9019\u4e9b\u8cc7\u6599\u88e1\u9762\u3002\u539f\u56e0\u662f\u4e00\u500b\u6e2c\u8a66\u8981\u88ab\u81ea\u52d5\u5316\u7684\u6642\u5019\uff0c\u9700\u8981\u82b1\u6642\u9593\u53bb\u958b\u767c\u9019\u4e9b\u5f31\u9ede\u6e2c\u8a66\u7684\u65b9\u6cd5\u8ad6\uff0c\u7576\u4f60\u9700\u8981\u5c07\u9019\u500b\u6e2c\u8a66\u81ea\u52d5\u5316\u4e26\u80fd\u5c0d\u5927\u91cf\u7684\u61c9\u7528\u7a0b\u5f0f\u53bb\u9a57\u8b49\u6642\uff0c\u53c8\u6703\u82b1\u4e0a\u66f4\u591a\u7684\u6642\u9593\u3002\u7576\u6211\u5011\u56de\u982d\u770b\u53bb\u5e74\u7372\u4ee5\u524d\u6709\u53ef\u80fd\u6c92\u51fa\u73fe\u7684\u4e00\u4e9b\u554f\u984c\u7684\u8da8\u52e2\uff0c\u6211\u5011\u767c\u73fe\u5176\u5be6\u90fd\u6c92\u6709\u5728\u9019\u4e9b\u8cc7\u6599\u7576\u4e2d\u3002</p> <p>\u56e0\u6b64\uff0c\u7531\u65bc\u8cc7\u6599\u4e0d\u5b8c\u5168\u7684\u95dc\u4fc2\uff0c\u6211\u5011\u53ea\u6709\u5f9e\u8cc7\u6599\u4e2d\u9078\u51fa 8 \u500b\u985e\u5225\uff0c\u800c\u4e26\u4e0d\u662f 10 \u500b\u3002\u5269\u4e0b\u7684\u5169\u500b\u985e\u5225\u662f\u5f9e\u696d\u754c\u554f\u5377\u4e2d\u6240\u9078\u51fa\u7684\u3002\u9019\u6703\u5141\u8a31\u5728\u524d\u7dda\u7684\u53c3\u8207\u8005\u53bb\u9078\u51fa\u4ed6\u5011\u8a8d\u70ba\u7684\u9ad8\u98a8\u96aa\uff0c\u800c\u4e0d\u662f\u7d14\u7cb9\u4f9d\u64da\u8cc7\u6599\u53bb\u5224\u65b7\uff08\u751a\u81f3\u53ef\u80fd\u8cc7\u6599\u6c38\u9060\u90fd\u4e0d\u6703\u6709\u51fa\u73fe\u7684\u8e64\u8de1\uff09\u3002</p>"},{"location":"zh-TW/A00_2021_Introduction/#why-incidence-rate-instead-of-frequency","title":"Why incidence rate instead of frequency?","text":"<p>There are three primary sources of data. We identify them as Human-assisted Tooling (HaT), Tool-assisted Human (TaH), and raw Tooling.</p> <p>Tooling and HaT are high-frequency finding generators. Tools will look for specific vulnerabilities and tirelessly attempt to find every instance of that vulnerability and will generate high finding counts for some vulnerability types. Look at Cross-Site Scripting, which is typically one of two flavors: it's either a more minor, isolated mistake or a systemic issue. When it's a systemic issue, the finding counts can be in the thousands for an application. This high frequency drowns out most other vulnerabilities found in reports or data. TaH, on the other hand, will find a broader range of vulnerability types but at a much lower frequency due to time constraints. When humans test an application and see something like Cross-Site Scripting, they will typically find three or four instances and stop. They can determine a systemic finding and write it up with a recommendation to fix on an application-wide scale. There is no need (or time) to find every instance.</p> <p>Suppose we take these two distinct data sets and try to merge them on frequency. In that case, the Tooling and HaT data will drown the more accurate (but broad) TaH data and is a good part of why something like Cross-Site Scripting has been so highly ranked in many lists when the impact is generally low to moderate. It's because of the sheer volume of findings. (Cross-Site Scripting is also reasonably easy to test for, so there are many more tests for it as well). In 2017, we introduced using incidence rate instead to take a fresh look at the data and cleanly merge Tooling and HaT data with TaH data. The incidence rate asks what percentage of the application population had at least one instance of a vulnerability type. We don't care if it was one-off or systemic. That's irrelevant for our purposes; we just need to know how many applications had at least one instance, which helps provide a clearer view of the testing is findings across multiple testing types without drowning the data in high-frequency results.</p>"},{"location":"zh-TW/A00_2021_Introduction/#what-is-your-data-collection-and-analysis-process","title":"What is your data collection and analysis process?","text":"<p>We formalized the OWASP Top 10 data collection process at the Open Security Summit in 2017. OWASP Top 10 leaders and the community spent two days working out formalizing a transparent data collection process. The 2021 edition is the second time we have used this methodology. We publish a call for data through social media channels available to us, both project and OWASP. On the OWASP Project page, we list the data elements and structure we are looking for and how to submit them. In the GitHub project, we have example files that serve as templates. We work with organizations as needed to help figure out the structure and mapping to CWEs. We get data from organizations that are testing vendors by trade, bug bounty vendors, and organizations that contribute internal testing data. Once we have the data, we load it together and run a fundamental analysis of what CWEs map to risk categories. There is overlap between some CWEs, and others are very closely related (ex. Cryptographic vulnerabilities). Any decisions related to the raw data submitted are documented and published to be open and transparent with how we normalized the data.</p> <p>We look at the eight categories with the highest incidence rates for inclusion in the Top 10. We also look at the industry survey results to see which ones may already be present in the data. The top two votes that aren't already present in the data will be selected for the other two places in the Top 10. Once all ten were selected, we applied generalized factors for exploitability and impact; to help rank the Top 10 in order.</p>"},{"location":"zh-TW/A00_2021_Introduction/#category-relationships-from-2017","title":"Category Relationships from 2017","text":"<p>There has been a lot of talk about the overlap between the Top Ten risks. By the definition of each (list of CWEs included), there really isn't any overlap. However, conceptually, there can be overlap or interactions based on the higher-level naming. Venn diagrams are many times used to show overlap like this.</p> <p>The Venn diagram above represents the interactions between the Top Ten 2017 risk categories. While doing so, a couple of essential points became obvious:</p> <ol> <li>One could argue that Cross-Site Scripting ultimately belongs within Injection as it's essentially Content Injection. Looking at the 2021 data, it became even more evident that XSS needed to move into Injection.</li> <li>The overlap is only in one direction. We will often classify a vulnerability by the end manifestation or \"symptom,\" not the (potentially deep) root cause. For instance, \"Sensitive Data Exposure\" may have been the result of a \"Security Misconfiguration\"; however, you won't see it in the other direction. As a result, arrows are drawn in the interaction zones to indicate which direction it occurs.</li> <li>Sometimes these diagrams are drawn with everything in A06:2021 Using Components with Known Vulnerabilities. While some of these risk categories may be the root cause of third-party vulnerabilities, they are generally managed differently and with different responsibilities. The other types are typically representing first-party risks.</li> </ol>"},{"location":"zh-TW/A00_2021_Introduction/#thank-you-to-our-financial-supporters","title":"Thank you to our financial supporters","text":""},{"location":"zh-TW/A01_2021-Broken_Access_Control/","title":"A01:2021 \u2013 \u6b0a\u9650\u63a7\u5236\u5931\u6548","text":""},{"location":"zh-TW/A01_2021-Broken_Access_Control/#_1","title":"\u5c0d\u7167\u56e0\u7d20","text":"\u53ef\u5c0d\u7167 CWEs \u6578\u91cf \u6700\u5927\u767c\u751f\u7387 \u5e73\u5747\u767c\u751f\u7387 \u6700\u5927\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u52a0\u6b0a\u6f0f\u6d1e \u5e73\u5747\u52a0\u6b0a\u5f71\u97ff \u51fa\u73fe\u6b21\u6578 \u6240\u6709\u76f8\u95dc CVEs \u6578\u91cf 34 55.97% 3.81% 94.55% 47.72% 6.92 5.93 318,487 19,013"},{"location":"zh-TW/A01_2021-Broken_Access_Control/#_2","title":"\u6982\u8ff0","text":"<p>\u5f9e\u7b2c\u4e94\u540d\u664b\u5347\u81f3\u7b2c\u4e00\u540d\uff0c94% \u88ab\u6e2c\u8a66\u7684\u61c9\u7528\u7a0b\u5f0f\uff0c\u90fd\u6709\u88ab\u9a57\u6e2c\u5230\u67d0\u7a2e\u985e\u5225\u6b0a\u9650\u63a7\u5236\u5931\u6548\u7684\u554f\u984c\u3002\u8457\u540d\u7684CWE\u5305\u62ec CWE-200\uff1aExposure of Sensitive Information to an Unauthorized Actor\uff0cCWE-201\uff1aExposure of Sensitive Information Through Sent Data \u548c *CWE-352 Cross-Site Request Forgery\u3002</p>"},{"location":"zh-TW/A01_2021-Broken_Access_Control/#_3","title":"\u63cf\u8ff0","text":"<p>\u5b58\u53d6\u63a7\u5236\u5f37\u5316\u653f\u7b56\uff0c\u4f7f\u7528\u6236\u4e0d\u80fd\u63a1\u53d6\u5728\u9810\u671f\u6b0a\u9650\u4e4b\u5916\u7684\u884c\u52d5\u3002\u63a7\u5236\u5931\u6548\u901a\u5e38\u6703\u5c0e\u81f4\u672a\u7d93\u6388\u6b0a\u7684\u8cc7\u8a0a\u6d29\u9732\u3001\u4fee\u6539\u6216\u640d\u58de\u6240\u6709\u8cc7\u6599\uff0c\u6216\u57f7\u884c\u8d85\u51fa\u7528\u6236\u6b0a\u9650\u7684\u696d\u52d9\u529f\u80fd\u3002\u5e38\u898b\u7684\u5b58\u53d6\u63a7\u5236\u5f31\u9ede\u5305\u62ec\uff1a</p> <ul> <li> <p>\u901a\u904e\u4fee\u6539URL\u3001\u5167\u90e8\u61c9\u7528\u7a0b\u5f0f\u72c0\u614b\u6216HTML\u9801\u9762\uff0c\u6216\u50c5\u4f7f\u7528\u81ea\u5b9a\u7fa9API\u653b\u64ca\u5de5\u5177\u4f86\u7e5e\u904e\u5b58\u53d6\u63a7\u5236\u6aa2\u67e5\u3002</p> </li> <li> <p>\u5bb9\u8a31\u4e3b\u9375\u88ab\u66f4\u6539\u70ba\u5176\u4ed6\u7528\u6236\u7684\u8a18\u9304\uff0c\u5141\u8a31\u67e5\u770b\u6216\u7de8\u8f2f\u5176\u4ed6\u4eba\u7684\u5e33\u6236\u3002</p> </li> <li> <p>\u7279\u6b0a\u63d0\u5347\u3002\u672a\u767b\u5165\u5373\u6210\u70ba\u7528\u6236\uff0c\u6216\u4ee5\u7528\u6236\u8eab\u4efd\u767b\u5165\u5373\u6210\u70ba\u7ba1\u7406\u54e1\u3002</p> </li> <li> <p>\u4e2d\u7e7c\u8cc7\u6599\u64cd\u4f5c\uff0c\u4f8b\u5982\u91cd\u653e\u6216\u7be1\u6539JSON\u7db2\u7ad9\u4ee4\u724c(JWT)\u4e4b\u5b58\u53d6\u63a7\u5236\u4ee4\u724c\uff0c\u6216\u88ab\u64cd\u7e31\u4ee5\u63d0\u5347\u7279\u6b0a\u6216\u6feb\u7528JWT\u5931\u6548\u7684cookie\u6216\u96b1\u85cf\u6b04\u4f4d\u3002</p> </li> <li> <p>CORS\u932f\u8aa4\u914d\u7f6e\u5141\u8a31\u672a\u7d93\u6388\u6b0a\u7684API\u5b58\u53d6\u3002</p> </li> <li> <p>\u4ee5\u672a\u7d93\u8eab\u4efd\u9a57\u8b49\u7684\u7528\u6236\u8eab\u4efd\u5f37\u5236\u700f\u89bd\u5df2\u9a57\u8b49\u7684\u9801\u9762\u6216\u4ee5\u6a19\u6e96\u7528\u6236\u8eab\u4efd\u5b58\u53d6\u7279\u6b0a\u9801\u9762\u3002\u5b58\u53d6\u7f3a\u5c11\u5b58\u53d6\u63a7\u5236\u7684API\u4ee5\u9032\u884cPOST\u3001PUT \u548c DELETE\u64cd\u4f5c\u3002</p> </li> </ul>"},{"location":"zh-TW/A01_2021-Broken_Access_Control/#_4","title":"\u5982\u4f55\u9810\u9632","text":"<p>\u5b58\u53d6\u63a7\u5236\u50c5\u5728\u53d7\u4fe1\u4efb\u7684\u4f3a\u670d\u5668\u7aef\u4ee3\u78bc\u6216\u7121\u4f3a\u670d\u5668\u7684API\u6709\u6548\uff0c\u653b\u64ca\u8005\u7121\u6cd5\u4fee\u6539\u9019\u88cf\u7684\u5b58\u53d6\u63a7\u5236\u6aa2\u67e5\u6216\u4e2d\u7e7c\u8cc7\u6599\u3002</p> <ul> <li> <p>\u9664\u516c\u958b\u7684\u8cc7\u6e90\u5916\uff0c\u9ed8\u8a8d\u70ba\u62d2\u7d55\u5b58\u53d6\u3002</p> </li> <li> <p>\u4e00\u6b21\u6027\u5730\u5efa\u7f6e\u5b58\u53d6\u63a7\u5236\u6a5f\u5236\uff0c\u4e4b\u5f8c\u5728\u6574\u500b\u61c9\u7528\u7a0b\u5f0f\u4e2d\u91cd\u8907\u4f7f\u7528\u5b83\u5011\uff0c\u5305\u62ec\u6700\u5927\u9650\u5ea6\u5730\u6e1b\u5c11\u4f7f\u7528CORS\u3002</p> </li> <li> <p>\u6a21\u578b\u7684\u5b58\u53d6\u63a7\u5236\u63aa\u65bd\u61c9\u8a72\u5f37\u5316\u8a18\u9304\u6240\u6709\u6b0a\uff0c\u800c\u4e0d\u662f\u8b93\u7528\u6236\u53ef\u4ee5\u5275\u5efa\u3001\u8b80\u53d6\u3001\u66f4\u65b0\u6216\u522a\u9664\u4efb\u4f55\u8a18\u9304\u3002</p> </li> <li> <p>\u7368\u7279\u7684\u61c9\u7528\u7a0b\u5f0f\u696d\u52d9\u9650\u5236\u8981\u6c42\u61c9\u7531\u9818\u57df\u6a21\u578b\u4e88\u4ee5\u5f37\u5316\u3002</p> </li> <li> <p>\u505c\u7528Web\u4f3a\u670d\u5668\u76ee\u9304\u5217\u8868\uff0c\u4e26\u78ba\u4fdd\u6a94\u6848\u4e2d\u7e7c\u8cc7\u6599\uff08\u4f8b\u5982\uff0c.git)\u548c\u5099\u4efd\u6a94\u6848\u4e0d\u5728web\u6839\u76ee\u9304\u4e2d\u3002</p> </li> <li> <p>\u8a18\u9304\u5b58\u53d6\u63a7\u5236\u5931\u6548\uff0c\u4e26\u5728\u9069\u7576\u7684\u6642\u9593\u8b66\u793a\u7ba1\u7406\u54e1\uff08\u4f8b\u5982\uff0c\u91cd\u8986\u6027\u5931\u6548\uff09\u3002</p> </li> <li> <p>\u5c0dAPI\u548c\u63a7\u5236\u5668\u5b58\u53d6\u9032\u884c\u6d41\u91cf\u9650\u5236\uff0c\u4ee5\u6700\u5c0f\u5316\u81ea\u52d5\u653b\u64ca\u5de5\u5177\u6240\u5e36\u4f86\u7684\u640d\u5bb3\u3002</p> </li> <li> <p>JWT\u4ee4\u724c\u65bc\u767b\u51fa\u5f8c\uff0c\u5728\u4f3a\u670d\u5668\u7aef\u61c9\u4f7f\u5176\u5931\u6548\u3002</p> </li> </ul> <p>\u958b\u767c\u4eba\u54e1\u548cQA\u54c1\u4fdd\u4eba\u54e1\u61c9\u7d0d\u5165\u8207\u529f\u80fd\u6709\u95dc\u4e4b\u5b58\u53d6\u63a7\u5236\u7684\u55ae\u5143\u548c\u6574\u5408\u6e2c\u8a66\u3002</p>"},{"location":"zh-TW/A01_2021-Broken_Access_Control/#_5","title":"\u653b\u64ca\u60c5\u5883\u7bc4\u4f8b","text":"<p>\u60c5\u5883 #1\uff1a \u61c9\u7528\u7a0b\u5f0f\u5728\u5b58\u53d6\u5e33\u6236\u8cc7\u8a0a\u7684SQL\u547c\u53eb\u4e2d\u4f7f\u7528\u672a\u7d93\u9a57\u8b49\u7684\u8cc7\u6599\uff1a</p> <p>pstmt.setString(1, request.getParameter(\"acct\"));</p> <p>ResultSet results = pstmt.executeQuery( );</p> <p>\u653b\u64ca\u8005\u53ea\u9700\u4fee\u6539\u700f\u89bd\u5668\u7684\u201cacct\u201d\u53c3\u6578\u5373\u53ef\u767c\u9001\u4ed6\u5011\u60f3\u8981\u7684\u4efb\u4f55\u5e33\u865f\u3002\u5982\u679c\u6c92\u6709\u6b63\u78ba\u9a57\u8b49\uff0c\u653b\u64ca\u8005\u53ef\u4ee5\u5b58\u53d6\u4efb\u4f55\u7528\u6236\u7684\u5e33\u6236\u3002</p> <p>https://example.com/app/accountInfo?acct=notmyacct</p> <p>\u60c5\u5883#2\uff1a \u653b\u64ca\u8005\u50c5\u5f37\u8feb\u700f\u89bd\u67d0\u4e9b\u76ee\u6a19\u7db2\u5740\u3002\u5b58\u53d6\u7ba1\u7406\u9801\u9762\u9700\u8981\u7ba1\u7406\u54e1\u6b0a\u9650\u3002</p> <p>https://example.com/app/getappInfo</p> <p>https://example.com/app/admin_getappInfo</p> <p>\u5982\u679c\u672a\u7d93\u8eab\u4efd\u9a57\u8b49\u7684\u7528\u6236\u53ef\u4ee5\u5b58\u53d6\u4efb\u4e00\u9801\u9762\uff0c\u90a3\u5c31\u662f\u4e00\u500b\u7f3a\u9677\u3002 \u5982\u679c\u4e00\u500b\u975e\u7ba1\u7406\u54e1\u53ef\u4ee5\u5b58\u53d6\u7ba1\u7406\u9801\u9762\uff0c\u9019\u4e5f\u662f\u4e00\u500b\u7f3a\u9677\u3002</p>"},{"location":"zh-TW/A01_2021-Broken_Access_Control/#_6","title":"\u53c3\u8003","text":"<ul> <li> <p>OWASP Proactive Controls: Enforce Access     Controls</p> </li> <li> <p>OWASP Application Security Verification Standard: V4 Access     Control</p> </li> <li> <p>OWASP Testing Guide: Authorization     Testing</p> </li> <li> <p>OWASP Cheat Sheet: Authorization</p> </li> <li> <p>PortSwigger: Exploiting CORS     misconfiguration</p> </li> <li> <p>OAuth: Revoking Access</p> </li> </ul>"},{"location":"zh-TW/A01_2021-Broken_Access_Control/#cwe","title":"\u5c0d\u61c9\u7684CWE\u5217\u8868","text":"<p>CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</p> <p>CWE-23 Relative Path Traversal</p> <p>CWE-35 Path Traversal: '.../...//'</p> <p>CWE-59 Improper Link Resolution Before File Access ('Link Following')</p> <p>CWE-200 Exposure of Sensitive Information to an Unauthorized Actor</p> <p>CWE-201 Exposure of Sensitive Information Through Sent Data</p> <p>CWE-219 Storage of File with Sensitive Data Under Web Root</p> <p>CWE-264 Permissions, Privileges, and Access Controls (should no longer be used)</p> <p>CWE-275 Permission Issues</p> <p>CWE-276 Incorrect Default Permissions</p> <p>CWE-284 Improper Access Control</p> <p>CWE-285 Improper Authorization</p> <p>CWE-352 Cross-Site Request Forgery (CSRF)</p> <p>CWE-359 Exposure of Private Personal Information to an Unauthorized Actor</p> <p>CWE-377 Insecure Temporary File</p> <p>CWE-402 Transmission of Private Resources into a New Sphere ('Resource Leak')</p> <p>CWE-425 Direct Request ('Forced Browsing')</p> <p>CWE-441 Unintended Proxy or Intermediary ('Confused Deputy')</p> <p>CWE-497 Exposure of Sensitive System Information to an Unauthorized Control Sphere</p> <p>CWE-538 Insertion of Sensitive Information into Externally-Accessible File or Directory</p> <p>CWE-540 Inclusion of Sensitive Information in Source Code</p> <p>CWE-548 Exposure of Information Through Directory Listing</p> <p>CWE-552 Files or Directories Accessible to External Parties</p> <p>CWE-566 Authorization Bypass Through User-Controlled SQL Primary Key</p> <p>CWE-601 URL Redirection to Untrusted Site ('Open Redirect')</p> <p>CWE-639 Authorization Bypass Through User-Controlled Key</p> <p>CWE-651 Exposure of WSDL File Containing Sensitive Information</p> <p>CWE-668 Exposure of Resource to Wrong Sphere</p> <p>CWE-706 Use of Incorrectly-Resolved Name or Reference</p> <p>CWE-862 Missing Authorization</p> <p>CWE-863 Incorrect Authorization</p> <p>CWE-913 Improper Control of Dynamically-Managed Code Resources</p> <p>CWE-922 Insecure Storage of Sensitive Information</p> <p>CWE-1275 Sensitive Cookie with Improper SameSite Attribute</p>"},{"location":"zh-TW/A02_2021-Cryptographic_Failures/","title":"A02:2021 \u2013 \u52a0\u5bc6\u6a5f\u5236\u5931\u6548","text":""},{"location":"zh-TW/A02_2021-Cryptographic_Failures/#_1","title":"\u5f31\u9ede\u56e0\u7d20","text":"\u53ef\u5c0d\u7167 CWEs \u6578\u91cf \u6700\u5927\u767c\u751f\u7387 \u5e73\u5747\u767c\u751f\u7387 \u6700\u5927\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u52a0\u6b0a\u6f0f\u6d1e \u5e73\u5747\u52a0\u6b0a\u5f71\u97ff \u51fa\u73fe\u6b21\u6578 \u6240\u6709\u76f8\u95dc CVEs \u6578\u91cf 29 46.44% 4.49% 79.33% 34.85% 7.29 6.81 233,788 3,075"},{"location":"zh-TW/A02_2021-Cryptographic_Failures/#_2","title":"\u5f31\u9ede\u7c21\u4ecb","text":"<p>\u4e0a\u5347\u4e00\u500b\u540d\u6b21\u4f86\u5230\u7b2c\u4e8c\u540d\uff0c\u4e4b\u524d\u7248\u672c\u7a31\u70ba\"\u654f\u611f\u6027\u8cc7\u6599\u6d29\u6f0f\"\uff0c\u66f4\u50cf\u662f\u4e00\u7a2e\u5ee3\u6cdb\u7684\u75c7\u72c0\u800c\u975e\u6839\u56e0\uff0c\u672c\u7248\u672c\u805a\u7126\u65bc\u5bc6\u78bc\u5b78\u76f8\u95dc\u7684\u5931\u6548(\u6216\u7f3a\u4e4f\u52a0\u5bc6)\uff0c\u4e26\u56e0\u6b64\u5e38\u5e38\u5c0e\u81f4\u654f\u611f\u8cc7\u6599\u7684\u6d29\u6f0f\u3002\u8457\u540d\u7684CWE\u5305\u542b\"CWE259: Use of Hard-coded Password\", \"CWE-327: Broken or Risky Crypto Algorithm\", \u4ee5\u53ca\"CWE-331: Insufficient Entropy\"\u3002</p>"},{"location":"zh-TW/A02_2021-Cryptographic_Failures/#_3","title":"\u5f31\u9ede\u63cf\u8ff0","text":"<p>\u9996\u5148\u78ba\u5b9a\u975c\u614b\u8cc7\u6599\u53ca\u8cc7\u6599\u50b3\u8f38\u7684\u9632\u8b77\u9700\u6c42\uff0c\u8209\u4f8b\u4f86\u8aaa\uff0c\u5bc6\u78bc\u3001\u4fe1\u7528\u5361\u5361\u865f\u3001\u5065\u5eb7\u7d00\u9304\u3001\u500b\u8cc7\u3001\u4ee5\u53ca\u9700\u8981\u984d\u5916\u4fdd\u8b77\u7684\u71df\u696d\u7955\u5bc6...\u7b49\u7b49\u4e3b\u8981\u88ab\u96b1\u79c1\u6cd5\u6240\u4fdd\u8b77\u7684\u8cc7\u6599\uff0c\u5982\u6b50\u76dfGDPR\u6216PCIDSS\u7b49\u7b49\u91d1\u878d\u696d\u76f8\u95dc\u7684\u8cc7\u6599\u4fdd\u8b77\u6cd5\u6216\u6a19\u6e96\u3002\u5c0d\u65bc\u9019\u4e9b\u8cc7\u6599\u9700\u8003\u91cf:</p> <ul> <li> <p>\u4e0a\u958b\u8cc7\u6599\u662f\u5426\u4ee5\u660e\u78bc\u50b3\u8f38? \u50cf\u662fHTTP, SMTP, FTP\u7b49\u7b49\u5354\u5b9a\uff0c\u4f7f\u7528\u65bc\u5c0d\u5916\u7db2\u969b\u7db2\u8def\u7684\u6d41\u91cf\u662f\u5371\u96aa\u7684\u3002\u5fc5\u9808\u9a57\u8b49\u6240\u6709\u7684\u5167\u90e8\u6d41\u91cf\uff0c\u5982\u5728\u8ca0\u8f09\u5e73\u8861\u5668\u3001\u7db2\u7ad9\u4f3a\u670d\u5668\u3001\u6216\u5f8c\u7aef\u7cfb\u7d71\u4e4b\u9593 \u3002</p> </li> <li> <p>\u662f\u5426\u6709\u4efb\u4f55\u8001\u820a\u6216\u8106\u5f31\u7684\u52a0\u5bc6\u6f14\u7b97\u6cd5\u88ab\u9810\u8a2d\u4f7f\u7528\u6216\u5b58\u5728\u65bc\u8f03\u820a\u7684\u7a0b\u5f0f\u78bc?</p> </li> <li> <p>\u662f\u5426\u6709\u4efb\u4f55\u9810\u8a2d\u7684\u52a0\u5bc6\u91d1\u9470\u88ab\u4f7f\u7528\u3001\u8106\u5f31\u7684\u52a0\u5bc6\u91d1\u9470\u88ab\u91cd\u8907\u4f7f\u7528\uff0c\u662f\u5426\u6709\u9069\u7576\u7684\u91d1\u9470\u7ba1\u7406\u6216\u91d1\u9470\u8f2a\u63db?</p> </li> <li> <p>\u52a0\u5bc6\u662f\u5426\u975e\u5f37\u5236? \u8209\u4f8b: \u4f7f\u7528\u8005\u4ee3\u7406(\u700f\u89bd\u5668)\u662f\u5426\u6709\u907a\u5931\u5b89\u5168\u76f8\u95dc\u7684\u6307\u4ee4\u6216\u6a19\u984c?</p> </li> <li> <p>\u4f7f\u7528\u8005\u4ee3\u7406(\u5982: app, \u90f5\u4ef6\u5ba2\u6236\u7aef)\u662f\u5426\u6709\u9a57\u8b49\u4f3a\u670d\u5668\u7684\u6191\u8b49\u662f\u6709\u6548\u7684?</p> </li> </ul> <p>\u8acb\u53c3\u8003 ASVS \u52a0\u5bc6(V7), \u8cc7\u6599\u4fdd\u8b77(V9), \u53caSSL/TLS(V10)\u3002</p>"},{"location":"zh-TW/A02_2021-Cryptographic_Failures/#_4","title":"\u5982\u4f55\u9810\u9632","text":"<p>\u81f3\u5c11\u57f7\u884c\u4ee5\u4e0b\u63aa\u65bd\uff0c\u4e26\u53c3\u8003\u76f8\u95dc\u8cc7\u6599:</p> <ul> <li> <p>\u5c0d\u61c9\u7528\u7a0b\u5f0f\u8655\u7406\u3001\u5132\u5b58\u3001\u50b3\u8f38\u7684\u8cc7\u6599\u9032\u884c\u5206\u985e\uff0c\u6839\u64da\u96b1\u79c1\u6cd5\u3001\u6cd5\u4ee4\u6cd5\u898f\u3001\u6216\u5546\u696d\u9700\u6c42\u8fa8\u8b58\u54ea\u4e9b\u70ba\u654f\u611f\u6027\u8cc7\u6599\u3002</p> </li> <li> <p>\u4f9d\u7167\u5206\u985e\u57f7\u884c\u5c0d\u61c9\u7684\u63a7\u5236\u63aa\u65bd\u3002</p> </li> <li> <p>\u975e\u5fc5\u8981\u4e0d\u5132\u5b58\u654f\u611f\u6027\u8cc7\u6599\uff0c\u76e1\u5feb\u6368\u68c4\u6216\u4f7f\u7528\u7b26\u5408PCIDSS\u7684\u8cc7\u6599\u8a18\u865f\u5316(tokenization)\u751a\u81f3\u622a\u65b7(truncation)\u3002 \u6c92\u6709\u88ab\u4fdd\u5b58\u7684\u6578\u64da\u662f\u4e0d\u6703\u88ab\u7aca\u53d6\u7684\u3002</p> </li> <li> <p>\u78ba\u4fdd\u5c07\u6240\u6709\u975c\u614b\u7684\u654f\u611f\u6027\u8cc7\u6599\u52a0\u5bc6\u3002</p> </li> <li> <p>\u78ba\u8a8d\u4f7f\u7528\u6700\u65b0\u7248\u4e14\u6a19\u6e96\u7684\u5f37\u6f14\u7b97\u6cd5\u3001\u5354\u5b9a\u53ca\u91d1\u9470; \u4f7f\u7528\u9069\u7576\u7684\u91d1\u9470\u7ba1\u7406\u3002</p> </li> <li> <p>\u4f7f\u7528\u5b89\u5168\u7684\u5354\u5b9a\u52a0\u5bc6\u50b3\u8f38\u4e2d\u7684\u8cc7\u6599\uff0c\u50cf\u662f\u6709\u5b8c\u5168\u524d\u5411\u4fdd\u5bc6(PFS)\u3001\u4f3a\u670d\u5668\u52a0\u5bc6\u512a\u5148\u9806\u5e8f(cipher prioritization by the server)\u53ca\u5b89\u5168\u53c3\u6578\u7684TLS\u3002 \u4f7f\u7528\u50cf\u662fHTTP\u5f37\u5236\u5b89\u5168\u50b3\u8f38\u6280\u8853(HSTS)\u7684\u6307\u4ee4\u5f37\u5316\u52a0\u5bc6\u3002</p> </li> <li> <p>\u91dd\u5c0d\u5305\u542b\u654f\u611f\u8cc7\u6599\u7684\u56de\u61c9\u505c\u7528\u5feb\u53d6\u3002</p> </li> <li> <p>\u4f7f\u7528\u5177\u6709\u96dc\u6e4a\u8fed\u4ee3\u6b21\u6578\u56e0\u7d20(work factor/delay factor)\uff0c\u5982Argon2, scrypt, bcrypt\u6216PBKDF2\u7684\u5f37\u81ea\u9069\u61c9\u6027\u52a0\u9e7d\u96dc\u6e4a\u6cd5\u4f86\u5132\u5b58\u5bc6\u78bc\u3002</p> </li> <li> <p>\u7368\u7acb\u9a57\u8b49\u8a2d\u5b9a\u7684\u6709\u6548\u6027\u3002</p> </li> </ul>"},{"location":"zh-TW/A02_2021-Cryptographic_Failures/#_5","title":"\u653b\u64ca\u60c5\u5883\u7bc4\u4f8b","text":"<p>\u60c5\u5883 #1: \u6709\u4e00\u500b\u61c9\u7528\u7a0b\u5f0f\u4f7f\u7528\u81ea\u52d5\u5316\u8cc7\u6599\u5eab\u52a0\u5bc6\u4f86\u52a0\u5bc6\u8cc7\u6599\u5eab\u4e2d\u7684\u4fe1\u7528\u5361\u5361\u865f\uff0c\u4f46\u662f\u8cc7\u6599\u88ab\u5b58\u53d6\u6642\u662f\u88ab\u81ea\u52d5\u89e3\u5bc6\u7684\uff0c\u9032\u800c\u5141\u8a31\u900f\u904eSQL\u6ce8\u5165\u7f3a\u9677\u4f86\u5b58\u53d6\u4fe1\u7528\u5361\u5361\u865f\u660e\u6587\u3002</p> <p>\u60c5\u5883 #2: \u6709\u4e00\u500b\u7ad9\u53f0\u6c92\u6709\u5c0d\u6240\u6709\u9801\u9762\u5f37\u5236\u4f7f\u7528TLS\u6216\u652f\u63f4\u8106\u5f31\u7684\u52a0\u5bc6\uff0c\u653b\u64ca\u8005\u76e3\u63a7\u7db2\u8def\u6d41\u91cf(\u5982\u5728\u4e0d\u5b89\u5168\u7684\u7121\u7dda\u7db2\u8def), \u5c07\u9023\u7dda\u5f9eHTTPS\u964d\u7d1a\u6210HTTP\uff0c\u4e26\u6514\u622a\u8acb\u6c42\u7aca\u53d6\u4f7f\u7528\u8005\u7684\u6703\u8a71(session) cookies\uff0c\u4e4b\u5f8c\u653b\u64ca\u8005\u91cd\u9001\u7aca\u53d6\u5230\u7684\u6703\u8a71(session) cookies\u4e26\u52ab\u6301\u7528\u6236(\u8a8d\u8b49\u904e\u7684)\u7684\u6703\u8a71\uff0c\u9032\u800c\u5b58\u53d6\u6216\u4fee\u6539\u4f7f\u7528\u8005\u7684\u96b1\u79c1\u8cc7\u6599\u3002 \u9664\u4e86\u4e0a\u8ff0\u4ee5\u5916\uff0c\u653b\u64ca\u8005\u4e5f\u80fd\u4fee\u6539\u50b3\u8f38\u7684\u8cc7\u6599\uff0c\u5982\u532f\u6b3e\u6536\u6b3e\u4eba\u3002</p> <p>\u60c5\u5883 #3: \u5bc6\u78bc\u8cc7\u6599\u5eab\u4f7f\u7528\u672a\u88ab\u52a0\u9e7d\u6216\u7c21\u55ae\u7684\u96dc\u6e4a\u4f86\u5132\u5b58\u6bcf\u500b\u4eba\u7684\u5bc6\u78bc\uff0c\u4e00\u500b\u6a94\u6848\u4e0a\u50b3\u7684\u7f3a\u9677\u53ef\u4ee5\u8b93\u653b\u64ca\u8005\u5b58\u53d6\u5bc6\u78bc\u8cc7\u6599\u5eab\uff0c\u6240\u6709\u672a\u88ab\u52a0\u9e7d\u7684\u96dc\u6e4a\u53ef\u4ee5\u88ab\u9810\u5148\u8a08\u7b97\u597d\u7684\u5f69\u8679\u8868\u516c\u958b\u3002\u5373\u4f7f\u96dc\u6e4a\u6709\u88ab\u52a0\u9e7d\uff0c\u7531\u7c21\u55ae\u6216\u5feb\u901f\u7684\u96dc\u6e4a\u6cd5\u7b97\u51fa\u7684\u96dc\u6e4a\u4ecd\u80fd\u88abGPU\u7834\u89e3\u3002</p>"},{"location":"zh-TW/A02_2021-Cryptographic_Failures/#_6","title":"\u53c3\u8003\u6587\u737b","text":"<ul> <li> <p>OWASP Proactive Controls: Protect Data     Everywhere</p> </li> <li> <p>OWASP Application Security Verification Standard (V7,     9, 10)</p> </li> <li> <p>OWASP Cheat Sheet: Transport Layer     Protection</p> </li> <li> <p>OWASP Cheat Sheet: User Privacy     Protection</p> </li> <li> <p>OWASP Cheat Sheet: Password and Cryptographic Storage</p> </li> <li> <p>OWASP Cheat Sheet:     HSTS</p> </li> <li> <p>OWASP Testing Guide: Testing for weak cryptography</p> </li> </ul>"},{"location":"zh-TW/A02_2021-Cryptographic_Failures/#cwes","title":"\u5c0d\u61c9\u7684CWEs\u6e05\u55ae","text":"<p>CWE-261 Weak Encoding for Password</p> <p>CWE-296 Improper Following of a Certificate's Chain of Trust</p> <p>CWE-310 Cryptographic Issues</p> <p>CWE-319 Cleartext Transmission of Sensitive Information</p> <p>CWE-321 Use of Hard-coded Cryptographic Key</p> <p>CWE-322 Key Exchange without Entity Authentication</p> <p>CWE-323 Reusing a Nonce, Key Pair in Encryption</p> <p>CWE-324 Use of a Key Past its Expiration Date</p> <p>CWE-325 Missing Required Cryptographic Step</p> <p>CWE-326 Inadequate Encryption Strength</p> <p>CWE-327 Use of a Broken or Risky Cryptographic Algorithm</p> <p>CWE-328 Reversible One-Way Hash</p> <p>CWE-329 Not Using a Random IV with CBC Mode</p> <p>CWE-330 Use of Insufficiently Random Values</p> <p>CWE-331 Insufficient Entropy</p> <p>CWE-335 Incorrect Usage of Seeds in Pseudo-Random Number Generator(PRNG)</p> <p>CWE-336 Same Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-337 Predictable Seed in Pseudo-Random Number Generator (PRNG)</p> <p>CWE-338 Use of Cryptographically Weak Pseudo-Random Number Generator(PRNG)</p> <p>CWE-340 Generation of Predictable Numbers or Identifiers</p> <p>CWE-347 Improper Verification of Cryptographic Signature</p> <p>CWE-523 Unprotected Transport of Credentials</p> <p>CWE-720 OWASP Top Ten 2007 Category A9 - Insecure Communications</p> <p>CWE-757 Selection of Less-Secure Algorithm During Negotiation('Algorithm Downgrade')</p> <p>CWE-759 Use of a One-Way Hash without a Salt</p> <p>CWE-760 Use of a One-Way Hash with a Predictable Salt</p> <p>CWE-780 Use of RSA Algorithm without OAEP</p> <p>CWE-818 Insufficient Transport Layer Protection</p> <p>CWE-916 Use of Password Hash With Insufficient Computational Effort</p>"},{"location":"zh-TW/A03_2021-Injection/","title":"A03:2021 \u2013 \u6ce8\u5165\u5f0f\u653b\u64ca","text":""},{"location":"zh-TW/A03_2021-Injection/#_1","title":"\u5c0d\u7167\u56e0\u7d20","text":"\u53ef\u5c0d\u7167 CWEs \u6578\u91cf \u6700\u5927\u767c\u751f\u7387 \u5e73\u5747\u767c\u751f\u7387 \u6700\u5927\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u52a0\u6b0a\u5f31\u9ede \u5e73\u5747\u52a0\u6b0a\u5f71\u97ff \u51fa\u73fe\u6b21\u6578 \u6240\u6709\u6709\u95dc CVEs \u6578\u91cf 33 19.09% 3.37% 94.04% 47.90% 7.25 7.15 274,228 32,078"},{"location":"zh-TW/A03_2021-Injection/#_2","title":"\u6982\u8ff0","text":"<p>\u690d\u5165\u5f0f\u653b\u64ca\u4e0b\u6ed1\u5230\u4e86\u7b2c\u4e09\u540d\u300294% \u88ab\u6e2c\u8a66\u7684\u61c9\u7528\u7a0b\u5f0f\u90fd\u6709\u9a57\u6e2c\u5230\u67d0\u7a2e\u985e\u578b\u7684\u6ce8\u5165\u5f0f\u653b\u64ca\u554f\u984c\u3002\u503c\u5f97\u6ce8\u610f\u7684 CWEs \u5305\u62ec\u4e86 CWE-79\uff1a\u8de8\u7db2\u7ad9\u653b\u64ca\u3001CWE-89\uff1aSQL \u6ce8\u5165\u5f0f\u653b\u64ca\u4ee5\u53ca CWE-73\uff1a\u5728\u5916\u90e8\u63a7\u5236\u6a94\u6848\u540d\u7a31\u6216\u8def\u5f91\u3002 </p>"},{"location":"zh-TW/A03_2021-Injection/#_3","title":"\u63cf\u8ff0","text":"<p>\u61c9\u7528\u7a0b\u5f0f\u5728\u4ee5\u4e0b\u60c5\u6cc1\u5bb9\u6613\u906d\u53d7\u653b\u64ca\uff1a</p> <ul> <li> <p>\u61c9\u7528\u7a0b\u5f0f\u672a\u9a57\u8b49\u3001\u904e\u6ffe\u6216\u6e05\u7406\u4f7f\u7528\u8005\u63d0\u4f9b\u7684\u8cc7\u6599\u3002</p> </li> <li> <p>\u5728\u76f4\u8b6f\u5668\u4e2d\u672a\u4f7f\u7528\u4e0a\u4e0b\u6587\u611f\u77e5\u8f49\u7fa9\u7684\u52d5\u614b\u67e5\u8a62\u6216\u7121\u53c3\u6578\u547c\u53eb\u3002</p> </li> <li> <p>\u5728\u7269\u4ef6\u95dc\u4fc2\u5c0d\u6620 (ORM) \u7684\u641c\u5c0b\u53c3\u6578\u4e2d\uff0c\u4f7f\u7528\u60e1\u610f\u7684\u8cc7\u6599\u4f86\u63d0\u53d6\u984d\u5916\u7684\u654f\u611f\u7d00\u9304\u3002</p> </li> <li> <p>\u5728\u52d5\u614b\u67e5\u8a62\u3001\u547d\u4ee4\u6216\u5132\u5b58\u7684\u7a0b\u5e8f\uff0cSQL\u3001\u6307\u4ee4\u6216\u5132\u5b58\u7684\u7a0b\u5e8f\u4e2d\uff0c\u76f4\u63a5\u4f7f\u7528\u6216\u9023\u7d50\u4e86\u60e1\u610f\u8cc7\u6599\u3002</p> </li> </ul> <p>\u4e00\u4e9b\u5e38\u898b\u7684\u6ce8\u5165\u5f0f\u653b\u64ca\u662f SQL\u3001NoSQL\u3001OS \u6307\u4ee4\u3001\u7269\u4ef6\u95dc\u4fc2\u5c0d\u6620 (ORM)\u3001LDAP\u4ee5\u53ca\u8868\u9054\u5f0f\u8a9e\u8a00 (EL) \u6216\u5c0d\u8c61\u5c0e\u822a\u5716\u8a9e\u8a00 (OGNL) \u6ce8\u5165\u3002\u9019\u500b\u6982\u5ff5\u5728\u6240\u6709\u7684\u76f4\u8b6f\u5668\u90fd\u662f\u76f8\u540c\u7684\u3002\u5047\u82e5\u61c9\u7528\u7a0b\u5f0f\u5b58\u5728\u6ce8\u5165\u5f0f\u653b\u64ca\u7684\u5f31\u9ede\uff0c\u6e90\u78bc\u6aa2\u6e2c\u662f\u6700\u597d\u7684\u65b9\u5f0f\u3002\u5f37\u70c8\u5efa\u8b70\u5c0d\u6240\u6709\u8f38\u5165\u7684\u53c3\u6578\u3001\u6a19\u982d\u3001URL\u3001cookies\u3001JSON\u3001SOAP \u4ee5\u53ca XML \u7684\u8cc7\u6599\u9032\u884c\u81ea\u52d5\u5316\u6e2c\u8a66\u3002\u7d44\u7e54\u53ef\u4ee5\u5c07\u975c\u614b\u6e90\u78bc\u6e2c\u8a66 (SAST) \u4ee5\u53ca\u52d5\u614b\u61c9\u7528\u7a0b\u5f0f\u6aa2\u6e2c (DAST) \u5de5\u5177\uff0c\u5305\u542b\u5230\u6301\u7e8c\u6574\u5408\u8207\u6301\u7e8c\u90e8\u7f72 (CI/CD)\u7ba1\u9053\u4e2d\uff0c\u4ee5\u9054\u6210\u5728\u4e0a\u7dda\u90e8\u7f72\u524d\u80fd\u8b58\u5225\u6ce8\u5165\u653b\u64ca\u7684\u7f3a\u9677\u3002</p>"},{"location":"zh-TW/A03_2021-Injection/#_4","title":"\u5982\u4f55\u9810\u9632","text":"<ul> <li> <p>\u9700\u8981\u5c07\u547d\u4ee4\u8207\u67e5\u8a62\u8cc7\u6599\u5206\u958b\uff0c\u4ee5\u9632\u6b62\u6ce8\u5165\u5f0f\u653b\u64ca\u3002</p> </li> <li> <p>\u9996\u8981\u7684\u9078\u9805\u662f\u4f7f\u7528\u5b89\u5168\u7684\u61c9\u7528\u7a0b\u5f0f\u754c\u9762 (API)\uff0c\u5b8c\u5168\u907f\u514d\u4f7f\u7528\u76f4\u8b6f\u5668\uff0c\u4ee5\u63d0\u4f9b\u53c3\u6578\u5316\u7684\u754c\u9762\u6216\u6574\u5408\u5230\u7269\u4ef6\u95dc\u4fc2\u5c0d\u6620 (ORMs) \u5de5\u5177\u4e2d\u3002</p> </li> <li> <p>\u6ce8\u610f\uff1a\u5373\u4f7f\u5df2\u7d93\u53c3\u6578\u5316\u4e86\uff0c\u5728\u5132\u5b58\u7684\u7a0b\u5e8f\u4e2d\u4ecd\u7136\u53ef\u4ee5\u5f15\u5165 SQL \u6ce8\u5165\u653b\u64ca\uff0c\u5982\u679c\u900f\u904e PL/SQL \u6216 T-SQL \u9023\u63a5\u67e5\u8a62\u8207\u8cc7\u6599\uff0c\u4e26\u4f7f\u7528 EXECUTE IMMEDIATE \u6216 exec() \u57f7\u884c\u60e1\u610f\u8cc7\u6599\u3002</p> </li> <li> <p>\u4f7f\u7528\u6b63\u9762\u6216\u767d\u540d\u55ae\u5728\u4f3a\u670d\u5668\u7aef\u9a57\u8b49\u8f38\u5165\u7684\u8cc7\u6599\u3002\u9019\u4e26\u4e0d\u662f\u4e00\u500b\u5b8c\u6574\u7684\u9632\u79a6\u6a5f\u5236\uff0c\u56e0\u8a31\u591a\u61c9\u7528\u7a0b\u5e8f\u9700\u8981\u4f7f\u7528\u7279\u6b8a\u7684\u5b57\u7b26\uff0c\u4f8b\u5982\uff1a\u61c9\u7528\u7a0b\u5f0f\u7684\u6587\u672c\u5340\u57df\u6216\u61c9\u7528\u7a0b\u5f0f\u754c\u9762 (API)\u61c9\u7528\u65bc\u884c\u52d5\u88dd\u7f6e\u4e0a\u7684\u61c9\u7528\u7a0b\u5f0f\u3002</p> </li> <li> <p>\u5c0d\u65bc\u4efb\u4f55\u5269\u9918\u7684\u52d5\u614b\u67e5\u8a62\uff0c\u5728\u8f49\u8b6f\u4e2d\u4f7f\u7528\u7279\u6b8a\u7b26\u865f\u9032\u884c\u67e5\u8a62\u5c07\u5c0d\u67e5\u8a62\u8a9e\u6cd5\u5e36\u4f86\u4e0d\u540c\u7684\u6db5\u7fa9\u3002</p> </li> <li> <p>\u6ce8\u610f\uff1a\u5728 SQL \u7d50\u69cb\u4e2d\uff0c\u4f8b\u5982\uff1a\u8cc7\u6599\u8868\u540d\u7a31\u3001\u6b04\u4f4d\u540d\u7a31\u662f\u7121\u6cd5\u88ab\u8f49\u8b6f\u7684\uff0c\u56e0\u6b64\u4f7f\u7528\u8005\u63d0\u4f9b\u8cc7\u6599\u7d50\u69cb\u7684\u540d\u7a31\u662f\u5371\u96aa\u7684\uff0c\u9019\u662f\u4e00\u500b\u5728\u7de8\u5beb\u8edf\u9ad4\u6642\u5e38\u898b\u7684\u554f\u984c\u3002</p> </li> <li> <p>\u5728\u67e5\u8a62\u4e2d\u4f7f\u7528 LIMIT \u4ee5\u53ca\u5176\u5b83\u7684 SQL \u63a7\u5236\u5668\uff0c\u53ef\u4ee5\u9632\u6b62\u7576\u906d\u53d7 SQL \u6ce8\u5165\u5f0f\u653b\u64ca\u6642\u88ab\u5927\u91cf\u6d29\u9732\u7d00\u9304\u3002</p> </li> </ul>"},{"location":"zh-TW/A03_2021-Injection/#_5","title":"\u653b\u64ca\u60c5\u5883\u7bc4\u4f8b","text":"<p>\u60c5\u5883 #1: \u61c9\u7528\u7a0b\u5f0f\u4f7f\u7528\u4e86\u4e0d\u88ab\u4fe1\u4efb\u7684\u8cc7\u6599\u5728\u8106\u5f31\u7684 SQL \u547c\u53eb\u4e2d\uff1a</p> <p>String query = \"SELECT * FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\";</p> <p>\u60c5\u5883 #2: \u985e\u4f3c\u5730\uff0c\u61c9\u7528\u7a0b\u5f0f\u5c0d\u6846\u67b6\u7684\u76f2\u76ee\u4fe1\u4efb\uff0c\u53ef\u80fd\u5c0e\u81f4\u4ecd\u7136\u5728\u6f0f\u6d1e\u7684\u67e5\u8a62\uff0c(\u4f8b\u5982\uff1aHibernate \u67e5\u8a62\u8a9e\u8a00 (HQL))\uff1a </p> <p>Query HQLQuery = session.createQuery(\"FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\");</p> <p>\u5728\u9019\u5169\u500b\u60c5\u5883\u4e2d\uff0c\u653b\u64ca\u8005\u5728\u4ed6\u5011\u7684\u700f\u89bd\u5668\u4fee\u6539\u4e86 \"id\" \u53c3\u6578\u503c\uff0c\u9001\u51fa \u2018 or \u20181\u2019=\u20191\uff0c\u4f8b\u5982\uff1a</p> <p>http://example.com/app/accountView?id=' UNION SELECT SLEEP(10);--</p> <p>\u9019\u5169\u500b\u67e5\u8a62\u7684\u542b\u7fa9\u5c07\u7522\u751f\u6539\u8b8a\uff0c\u800c\u56de\u61c9\u6240\u6709\u5e33\u6236\u8cc7\u6599\u8868\u4e2d\u7684\u7d00\u9304\uff0c\u66f4\u5371\u96aa\u7684\u653b\u64ca\u5c07\u53ef\u80fd\u4fee\u6539\u6216\u522a\u9664\u8cc7\u6599\uff0c\u4ee5\u53ca\u5f71\u97ff\u8cc7\u6599\u7684\u5132\u5b58\u904e\u7a0b\u3002</p>"},{"location":"zh-TW/A03_2021-Injection/#_6","title":"\u53c3\u8003","text":"<ul> <li> <p>OWASP Proactive Controls: Secure Database     Access</p> </li> <li> <p>OWASP ASVS: V5 Input Validation and     Encoding</p> </li> <li> <p>OWASP Testing Guide: SQL     Injection, Command     Injection,     and\u00a0ORM     Injection</p> </li> <li> <p>OWASP Cheat Sheet: Injection     Prevention</p> </li> <li> <p>OWASP Cheat Sheet: SQL Injection     Prevention</p> </li> <li> <p>OWASP Cheat Sheet: Injection Prevention in     Java</p> </li> <li> <p>OWASP Cheat Sheet: Query     Parameterization</p> </li> <li> <p>OWASP Automated Threats to Web Applications \u2013     OAT-014</p> </li> <li> <p>PortSwigger: Server-side template     injection</p> </li> </ul>"},{"location":"zh-TW/A03_2021-Injection/#cwe","title":"\u5c0d\u61c9\u7684 CWE \u5217\u8868","text":"<p>CWE-20 Improper Input Validation</p> <p>CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')</p> <p>CWE-75 Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)</p> <p>CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection')</p> <p>CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</p> <p>CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</p> <p>CWE-80 Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</p> <p>CWE-83 Improper Neutralization of Script in Attributes in a Web Page</p> <p>CWE-87 Improper Neutralization of Alternate XSS Syntax</p> <p>CWE-88 Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')</p> <p>CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</p> <p>CWE-90 Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</p> <p>CWE-91 XML Injection (aka Blind XPath Injection)</p> <p>CWE-93 Improper Neutralization of CRLF Sequences ('CRLF Injection')</p> <p>CWE-94 Improper Control of Generation of Code ('Code Injection')</p> <p>CWE-95 Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</p> <p>CWE-96 Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')</p> <p>CWE-97 Improper Neutralization of Server-Side Includes (SSI) Within a Web Page</p> <p>CWE-98 Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')</p> <p>CWE-99 Improper Control of Resource Identifiers ('Resource Injection')</p> <p>CWE-100 Deprecated: Was catch-all for input validation issues</p> <p>CWE-113 Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')</p> <p>CWE-116 Improper Encoding or Escaping of Output</p> <p>CWE-138 Improper Neutralization of Special Elements</p> <p>CWE-184 Incomplete List of Disallowed Inputs</p> <p>CWE-470 Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')</p> <p>CWE-471 Modification of Assumed-Immutable Data (MAID)</p> <p>CWE-564 SQL Injection: Hibernate</p> <p>CWE-610 Externally Controlled Reference to a Resource in Another Sphere</p> <p>CWE-643 Improper Neutralization of Data within XPath Expressions ('XPath Injection')</p> <p>CWE-644 Improper Neutralization of HTTP Headers for Scripting Syntax</p> <p>CWE-652 Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')</p> <p>CWE-917 Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')</p>"},{"location":"zh-TW/A04_2021-Insecure_Design/","title":"A04:2021 \u2013 \u4e0d\u5b89\u5168\u8a2d\u8a08","text":""},{"location":"zh-TW/A04_2021-Insecure_Design/#_1","title":"\u5f31\u9ede\u56e0\u7d20","text":"\u53ef\u5c0d\u7167 CWEs \u6578\u91cf \u6700\u5927\u767c\u751f\u7387 \u5e73\u5747\u767c\u751f\u7387 \u6700\u5927\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u52a0\u6b0a\u6f0f\u6d1e \u5e73\u5747\u52a0\u6b0a\u5f71\u97ff \u51fa\u73fe\u6b21\u6578 \u6240\u6709\u76f8\u95dc CVEs \u6578\u91cf 40 24.19% 3.00% 77.25% 42.51% 6.46 6.78 262,407 2,691"},{"location":"zh-TW/A04_2021-Insecure_Design/#_2","title":"\u5f31\u9ede\u7c21\u4ecb","text":"<p>2021\u5e74\u4e2d\u7684\u4e00\u500b\u5168\u65b0\u985e\u5225\uff0c\u8457\u91cd\u65bc\u5728\u8a2d\u8a08\u8207\u67b6\u69cb\u4e2d\u7684\u98a8\u96aa\u3002\u4f86\u547c\u7c72\u66f4\u591a\u4f7f\u7528\u5230\u5a01\u8105\u5efa\u6a21\u3001\u5b89\u5168\u8a2d\u8a08\u6a21\u5f0f\u8207\u53c3\u8003\u67b6\u69cb\u3002 \u8457\u540d\u7684 CWE \u5305\u62ec\u4e0b\u5217 CWE-209: \u7522\u751f\u7684\u932f\u8aa4\u4fe1\u606f\u7684\u4e2d\u5305\u542b\u654f\u611f\u8a0a\u606f\u3001CWE-256: \u672a\u53d7\u4fdd\u8b77\u7684\u6191\u8b49\u5132\u5b58\u65b9\u5f0f\u3001CWE-501: \u9055\u53cd\u4fe1\u4efb\u908a\u754c \u8207 CWE-522: \u4e0d\u8db3\u5920\u7684\u6191\u8b49\u4fdd\u8b77\u3002</p>"},{"location":"zh-TW/A04_2021-Insecure_Design/#_3","title":"\u5f31\u9ede\u63cf\u8ff0","text":"<p>\u4e0d\u5b89\u5168\u8a2d\u8a08\u662f\u4e00\u500b\u5ee3\u6cdb\u7684\u985e\u5225\u5448\u73fe\u8a31\u591a\u4e0d\u540c\u7684\u5f31\u9ede\uff0c\u4ee3\u8868\u70ba\"\u7f3a\u4e4f\u6216\u7121\u6548\u7684\u63a7\u5236\u8a2d\u8a08\"\u3002 \u7f3a\u4e4f\u4e0d\u5b89\u5168\u8a2d\u8a08\u662f\u6307\u6ca1\u6709\u63a7\u5236\u63aa\u65bd\u3002\u8209\u4f8b\u4f86\u8aaa\uff0c\u60f3\u50cf\u4e00\u6bb5\u7a0b\u5f0f\u78bc\u61c9\u8a72\u52a0\u5bc6\u654f\u611f\u8cc7\u6599\u4f46\u662f\u6c92\u6709\u5c0d\u61c9\u7684\u5be6\u4f5c\u65b9\u6cd5\u3002\u7121\u6548\u7684\u4e0d\u5b89\u5168\u8a2d\u8a08\u662f\u53ef\u4ee5\u5be6\u73fe\u5a01\u8105\u7684\u5730\u65b9\uff0c\u4f46\u4e0d\u8db3\u7684\u9818\u57df\uff08\u5546\u696d\uff09\u908f\u8f2f\u9a57\u8b49\u6703\u963b\u6b62\u8a72\u52d5\u4f5c\u3002\u4ee5\u4e0b\u500b\u4f8b\u5b50\u8aaa\uff0c\u60f3\u50cf\u9818\u57df\u908f\u8f2f\u662f\u7528\u4f86\u8655\u7406\u57fa\u65bc\u6536\u5165\u7b49\u7d1a\u7684\u75ab\u60c5\u6e1b\u7a05\u4f46\u662f\u4e26\u672a\u78ba\u8a8d\u6240\u6709\u7684\u8f38\u5165\u90fd\u662f\u6709\u6b63\u78ba\u7684\u7c3d\u540d\uff0c\u56e0\u6b64\u63d0\u4f9b\u8d85\u904e\u539f\u672c\u53ef\u4ee5\u7372\u5f97\u800c\u4e14\u66f4\u986f\u8457\u7684\u6e1b\u7a05\u5229\u76ca\u3002</p> <p>\u5b89\u5168\u8a2d\u8a08\u4e00\u500b\u6587\u5316\u8207\u65b9\u6cd5\u6301\u7e8c\u4e0d\u65b7\u7684\u4f86\u8a55\u4f30\u5a01\u8105\u4e26\u4fdd\u8b49\u7a0b\u5f0f\u78bc\u6709\u88ab\u7a69\u5065\u7684\u8a2d\u8a08\u8207\u6e2c\u8a66\u4f86\u9810\u9632\u5df2\u77e5\u7684\u653b\u64ca\u65b9\u6cd5\u3002\u5b89\u5168\u8a2d\u8a08\u9700\u8981\u5b89\u5168\u7684\u958b\u767c\u751f\u547d\u9031\u671f\u3001\u67d0\u7a2e\u5f62\u5f0f\u4e0a\u7684\u5b89\u5168\u8a2d\u8a08\u6a21\u5f0f\u6216\u662f\u5df2\u5b8c\u6210\u7684\u5143\u4ef6\u5eab\u6216\u5de5\u5177\u4ee5\u53ca\u5a01\u8105\u5efa\u6a21\u3002</p>"},{"location":"zh-TW/A04_2021-Insecure_Design/#_4","title":"\u5982\u4f55\u9810\u9632","text":"<ul> <li> <p>\u5efa\u7acb\u8207\u4f7f\u7528\u5b89\u5168\u958b\u767c\u751f\u547d\u9031\u671f\u4e26\u4e14\u5354\u540c\u61c9\u7528\u7a0b\u5f0f\u5b89\u5168\u7684\u5c08\u696d\u4eba\u58eb\u4f86\u8a55\u4f30\u8207\u8a2d\u8a08\u5b89\u5168\u8207\u96b1\u79c1\u76f8\u95dc\u7684\u63a7\u5236\u63aa\u65bd\u3002</p> </li> <li> <p>\u5efa\u7acb\u8207\u4f7f\u7528\u5b89\u5168\u8a2d\u8a08\u6a21\u5f0f\u7684\u51fd\u5f0f\u5eab\u6216\u662f\u5df2\u5b8c\u6210\u53ef\u4f7f\u7528\u7684\u5143\u4ef6\u3002    </p> </li> <li> <p>\u4f7f\u7528\u5a01\u8105\u5efa\u6a21\u5728\u95dc\u9375\u7684\u8a8d\u8b49\u3001\u5b58\u53d6\u63a7\u5236\u3001\u5546\u696d\u908f\u8f2f\u8207\u95dc\u9375\u7f3a\u9677\u4e0a\u3002</p> </li> <li> <p>\u64b0\u5beb\u55ae\u5143\u6e2c\u8a66\u8207\u6574\u5408\u6e2c\u8a66\u4f86\u9a57\u8b49\u6240\u6709\u7684\u95dc\u9375\u6d41\u7a0b\u5c0d\u5a01\u8105\u5efa\u6a21\u90fd\u6709\u62b5\u6297\u3002</p> </li> </ul>"},{"location":"zh-TW/A04_2021-Insecure_Design/#_5","title":"\u653b\u64ca\u60c5\u5883\u7bc4\u4f8b","text":"<p>\u60c5\u5883 #1 \u6191\u8b49\u6062\u5fa9\u7684\u6d41\u7a0b\u6216\u8a31\u6703\u5305\u542b\u201c\u554f\u984c\u8207\u7b54\u6848\u201d\uff0c\u8a72\u65b9\u5f0f\u662f\u88abNIST 800-63b\u3001OWASP ASVS\u8207WASP Top 10\u4e2d\u7981\u6b62\u3002\u201c\u554f\u984c\u8207\u7b54\u6848\u201d\u7121\u6cd5\u88ab\u4f5c\u70ba\u4fe1\u4efb\u8eab\u4efd\u7684\u8b49\u64da\u56e0\u70ba\u4e0d\u6b62\u4e00\u500b\u4eba\u53ef\u80fd\u6703\u77e5\u9053\u7b54\u6848\uff0c\u56e0\u6b64\u9019\u500b\u65b9\u6cd5\u6703\u88ab\u7981\u6b62\u7684\u539f\u56e0\u3002\u56e0\u6b64\u6b64\u985e\u7684\u7a0b\u5f0f\u78bc\u61c9\u8a72\u88ab\u79fb\u9664\u6216\u662f\u7528\u66f4\u5b89\u5168\u7684\u8a2d\u8a08\u4f86\u66ff\u4ee3\u3002</p> <p>\u60c5\u5883 #2: \u96fb\u5f71\u9662\u5728\u8981\u6c42\u62bc\u91d1\u524d\u5141\u8a31\u5718\u9ad4\u9810\u8a02\u6298\u6263\u4e26\u4e14\u6700\u591a\u670915 \u540d\u89c0\u773e\u3002\u653b\u64ca\u8005\u53ef\u4ee5\u5a01\u8105\u6a21\u578b\u6b64\u6d41\u7a0b\u4e26\u6e2c\u8a66\u4ed6\u5011\u5728\u4e00\u6b21\u8acb\u6c42\u4e2d\u662f\u5426\u53ef\u4ee5\u9810\u8a02 600 \u500b\u5ea7\u4f4d\u548c\u7684\u6240\u6709\u96fb\u5f71\u9662\uff0c\u5c0e\u81f4\u96fb\u5f71\u9662\u5de8\u5927\u7684\u6536\u5165\u640d\u5931\u3002</p> <p>\u60c5\u5883  #3: \u9023\u9396\u96f6\u552e\u7684\u96fb\u5b50\u5546\u52d9\u7db2\u7ad9\u6c92\u6709\u4fdd\u8b77\u6a5f\u5236\u4f86\u5c0d\u6297\u9ec3\u725b\u7684\u6a5f\u5668\u4eba\u8cfc\u8cb7\u9ad8\u7aef\u7684\u986f\u793a\u5361\u518d\u8f49\u552e\u5230\u62cd\u8ce3\u7db2\u7ad9\u3002\u5c0d\u65bc\u96f6\u552e\u5546\u8207\u986f\u793a\u5361\u88fd\u9020\u5546\u7522\u751f\u4e86\u53ef\u6015\u7684\u5ba3\u50b3\u6548\u61c9\u4e26\u4e14\u5c0e\u81f4\u8207\u90a3\u4e9b\u7121\u6cd5\u8cfc\u8cb7\u5230\u986f\u5361\u7684\u611b\u597d\u8005\u9593\u7522\u751f\u4e86\u4e0d\u6109\u5feb\u3002\u5de7\u5999\u7684\u9632\u6a5f\u5668\u4eba\u8a2d\u8a08\u8207\u9818\u57df\u908f\u8f2f\u898f\u5247\uff0c\u4f8b\u5982\u77ed\u66ab\u5e7e\u79d2\u7684\u8cfc\u8cb7\u6642\u9593\u6216\u8a31\u53ef\u4ee5\u8fa8\u8b58\u51fa\u4e0d\u53ef\u4fe1\u8cf4\u7684\u8cfc\u8cb7\u4e26\u4e14\u62d2\u7d55\u8a72\u4ea4\u6613\u3002</p>"},{"location":"zh-TW/A04_2021-Insecure_Design/#_6","title":"\u53c3\u8003\u6587\u737b","text":"<ul> <li> <p>OWASP Cheat Sheet: Secure Design Principles</p> </li> <li> <p>NIST \u2013 Guidelines on Minimum Standards for Developer Verification of     &gt; Software     &gt; https://www.nist.gov/publications/guidelines-minimum-standards-developer-verification-software</p> </li> </ul>"},{"location":"zh-TW/A04_2021-Insecure_Design/#cwes","title":"\u5c0d\u61c9\u7684 CWEs \u6e05\u55ae","text":"<p>CWE-73 External Control of File Name or Path</p> <p>CWE-183 Permissive List of Allowed Inputs</p> <p>CWE-209 Generation of Error Message Containing Sensitive Information</p> <p>CWE-213 Exposure of Sensitive Information Due to Incompatible Policies</p> <p>CWE-235 Improper Handling of Extra Parameters</p> <p>CWE-256 Unprotected Storage of Credentials</p> <p>CWE-257 Storing Passwords in a Recoverable Format</p> <p>CWE-266 Incorrect Privilege Assignment</p> <p>CWE-269 Improper Privilege Management</p> <p>CWE-280 Improper Handling of Insufficient Permissions or Privileges</p> <p>CWE-311 Missing Encryption of Sensitive Data</p> <p>CWE-312 Cleartext Storage of Sensitive Information</p> <p>CWE-313 Cleartext Storage in a File or on Disk</p> <p>CWE-316 Cleartext Storage of Sensitive Information in Memory</p> <p>CWE-419 Unprotected Primary Channel</p> <p>CWE-430 Deployment of Wrong Handler</p> <p>CWE-434 Unrestricted Upload of File with Dangerous Type</p> <p>CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')</p> <p>CWE-451 User Interface (UI) Misrepresentation of Critical Information</p> <p>CWE-472 External Control of Assumed-Immutable Web Parameter</p> <p>CWE-501 Trust Boundary Violation</p> <p>CWE-522 Insufficiently Protected Credentials</p> <p>CWE-525 Use of Web Browser Cache Containing Sensitive Information</p> <p>CWE-539 Use of Persistent Cookies Containing Sensitive Information</p> <p>CWE-579 J2EE Bad Practices: Non-serializable Object Stored in Session</p> <p>CWE-598 Use of GET Request Method With Sensitive Query Strings</p> <p>CWE-602 Client-Side Enforcement of Server-Side Security</p> <p>CWE-642 External Control of Critical State Data</p> <p>CWE-646 Reliance on File Name or Extension of Externally-Supplied File</p> <p>CWE-650 Trusting HTTP Permission Methods on the Server Side</p> <p>CWE-653 Insufficient Compartmentalization</p> <p>CWE-656 Reliance on Security Through Obscurity</p> <p>CWE-657 Violation of Secure Design Principles</p> <p>CWE-799 Improper Control of Interaction Frequency</p> <p>CWE-807 Reliance on Untrusted Inputs in a Security Decision</p> <p>CWE-840 Business Logic Errors</p> <p>CWE-841 Improper Enforcement of Behavioral Workflow</p> <p>CWE-927 Use of Implicit Intent for Sensitive Communication</p> <p>CWE-1021 Improper Restriction of Rendered UI Layers or Frames</p> <p>CWE-1173 Improper Use of Validation Framework</p>"},{"location":"zh-TW/A05_2021-Security_Misconfiguration/","title":"A05:2021 \u2013 \u5b89\u5168\u8a2d\u5b9a\u7f3a\u9677","text":""},{"location":"zh-TW/A05_2021-Security_Misconfiguration/#factors","title":"\u5f31\u9ede\u56e0\u7d20(Factors)","text":"\u53ef\u5c0d\u7167CWEs\u6578\u91cf \u6700\u5927\u767c\u751f\u7387 \u5e73\u5747\u767c\u751f\u7387 \u6700\u5927\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u52a0\u6b0a\u6f0f\u6d1e \u5e73\u5747\u52a0\u6b0a\u5f15\u97ff \u51fa\u73fe\u6b21\u6578 \u6240\u6709\u76f8\u95dc CVEs 20 19.84% 4.51% 89.58% 44.84% 8.12 6.56 208,387 789"},{"location":"zh-TW/A05_2021-Security_Misconfiguration/#overview","title":"\u5f31\u9ede\u7c21\u4ecb(Overview)","text":"<p>Moving up from #6 in the previous edition, 90% of applications were tested for some form of misconfiguration. With more shifts into highly configurable software, it's not surprising to see this category move up. Notable CWEs included are CWE-16 Configuration and CWE-611 Improper Restriction of XML External Entity Reference.</p> <p>\u5f9e\u5148\u524d\u7248\u672c\u7684\u7b2c\u516d\u540d\u6392\u540d\uff0c\u5411\u4e0a\u8abf\u5347\uff0c90%\u7684\u7a0b\u5f0f\u90fd\u88ab\u6e2c\u8a66\u627e\u51fa\u5404\u985e\u7684\u8a2d\u5b9a\u7f3a\u9677\u3002\u96a8\u8457\u8d8a\u4f86\u8d8a\u591a\u7684\u53ef\u8a2d\u5b9a\u5f0f\u8edf\u9ad4\u6578\u91cf\u589e\u52a0\uff0c\u770b\u5230\u6b64\u985e\u5225\u7684\u6392\u540d\u4e0a\u5347\uff0c\u4e26\u4e0d\u662f\u4ef6\u610f\u5916\u7684\u4e8b\u3002\u660e\u986f\u76f8\u5c0d\u61c9\u7684CWEs\u5305\u542b\u4e86 CWE16 \u8a2d\u5b9a \u4ee5\u53ca CWE-611 \u4e0d\u5145\u8db3\u7684XML\u5916\u90e8\u5be6\u9ad4\u5f15\u7528\u9650\u5236</p>"},{"location":"zh-TW/A05_2021-Security_Misconfiguration/#description","title":"\u5f31\u9ede\u63cf\u8ff0(Description)","text":"<p>The application might be vulnerable if the application is: \u5982\u679c\u7a0b\u5f0f\u5305\u542b\u4e86\u4ee5\u4e0b\u5e7e\u500b\u56e0\u7d20\uff0c\u5247\u53ef\u80fd\u6709\u6613\u53d7\u653b\u64ca\u7684\u8106\u5f31\u6027\u3002</p> <ul> <li> <p>Missing appropriate security hardening across any part of the     application stack or improperly configured permissions on cloud     services.</p> </li> <li> <p>\u5728\u7a0b\u5f0f\u5404\u5806\u758a\u5c64\u9762\uff0c\u7f3a\u5c11\u9069\u5207\u7684\u5b89\u5168\u5f37\u5316\uff0c\u6216\u662f\u65bc\u96f2\u7aef\u670d\u52d9\u4e0a\u6709\u8457\u4e0d\u7576\u7684\u6b0a\u9650\u8a2d\u5b9a\u3002</p> </li> <li> <p>Unnecessary features are enabled or installed (e.g., unnecessary     ports, services, pages, accounts, or privileges).</p> </li> <li> <p>\u4e0d\u5fc5\u8981\u7684\u529f\u80fd\u555f\u7528\u6216\u662f\u5b89\u88dd (\u4f8b\u5982\uff0c\u4e0d\u5fc5\u8981\u7684\u7aef\u53e3\uff0c\u670d\u52d9\uff0c\u9801\u9762\uff0c\u5e33\u865f\uff0c\u6216\u662f\u7279\u6b0a)\u3002</p> </li> <li> <p>Default accounts and their passwords are still enabled and     unchanged.</p> </li> <li> <p>\u9810\u8a2d\u5e33\u865f\u8207\u5bc6\u78bc\u9084\u53ef\u4f7f\u7528\uff0c\u4e26\u4e14\u672a\u66f4\u6539\u3002</p> </li> <li> <p>Error handling reveals stack traces or other overly informative     error messages to users.</p> </li> <li> <p>\u56e0\u932f\u8aa4\u8655\u7406\u800c\u66b4\u9732\u51fa\u7684\u5806\u758a\u8ffd\u8e64\uff0c\u6216\u662f\u5411\u4f7f\u7528\u8005\uff0c\u66b4\u9732\u51fa\u904e\u591a\u7684\u932f\u8aa4\u8b66\u544a\u8cc7\u8a0a</p> </li> <li> <p>For upgraded systems, the latest security features are disabled or     not configured securely.</p> </li> <li> <p>\u56e0\u70ba\u7cfb\u7d71\u5347\u7d1a\uff0c\u5c0e\u81f4\u6700\u65b0\u7684\u5b89\u5168\u529f\u80fd\u88ab\u95dc\u9589\uff0c\u6216\u662f\u9020\u6210\u4e0d\u5b89\u5168\u7684\u8a2d\u5b9a</p> </li> <li> <p>The security settings in the application servers, application     frameworks (e.g., Struts, Spring, ASP.NET), libraries, databases,     etc., are not set to secure values.</p> </li> <li> <p>\u5728\u4f48\u7f72\u7a0b\u5f0f\u7684\u4f3a\u670d\u5668\uff0c\u7a0b\u5f0f\u6846\u67b6(\u4f8b\u5982Struts, Spring, ASP net\uff0c\u5404\u7a2e\u51fd\u793a\u5eab\uff0c\u8cc7\u6599\u5eab\u7b49\u3002\u4e26\u672a\u8a2d\u5b9a\u8a72\u6709\u7684\u5b89\u5168\u53c3\u6578\u3002 </p> </li> <li> <p>The server does not send security headers or directives, or they are     not set to secure values.</p> </li> <li> <p>\u4f3a\u670d\u5668\u4e26\u672a\u50b3\u9001\u5b89\u5168\u7684\u6a19\u982d\u6216\u662f\u6307\u4ee4\uff0c\u6216\u672a\u88ab\u8a2d\u5b9a\u5b89\u5168\u53c3\u6578\u3002</p> </li> <li> <p>The software is out of date or vulnerable (see A06:2021-Vulnerable     and Outdated Components).</p> </li> <li> <p>\u8edf\u9ad4\u5df2\u7d93\u904e\u6642\u5df2\u6dd8\u6c70\uff0c\u6216\u8005\u5e36\u6709\u8106\u5f31\u6027 (\u8acb\u53c3\u7167 A06:2021-\u6613\u53d7\u653b\u64ca\u548c\u5df2\u6dd8\u6c70\u7684\u7d44\u4ef6 )</p> </li> </ul> <p>Without a concerted, repeatable application security configuration process, systems are at a higher risk. \u7576\u6c92\u6709\u4e00\u500b\u4e00\u81f4\u6027\uff0c\u53ef\u91cd\u8907\u7684\u7a0b\u5f0f\u5b89\u5168\u8a2d\u5b9a\u6d41\u7a0b\u6642\uff0c\u7cfb\u7d71\u5c07\u6703\u9762\u5c0d\u9ad8\u98a8\u96aa\u3002</p>"},{"location":"zh-TW/A05_2021-Security_Misconfiguration/#how-to-prevent","title":"\u5982\u4f55\u9810\u9632(How to Prevent)","text":"<p>Secure installation processes should be implemented, including: \u5b89\u5168\u7684\u5b89\u88dd\u6b65\u9a5f\u6d41\u7a0b\uff0c\u61c9\u8a72\u88ab\u5be6\u969b\u4f48\u7f72\uff0c\u5305\u542b\u4ee5\u4e0b</p> <ul> <li> <p>A repeatable hardening process makes it fast and easy to deploy     another environment that is appropriately locked down. Development,     QA, and production environments should all be configured     identically, with different credentials used in each environment.     This process should be automated to minimize the effort required to     set up a new secure environment.</p> </li> <li> <p>\u4e00\u500b\u53ef\u91cd\u8907\u7684\u5b89\u5168\u5f37\u5316\u6d41\u7a0b\uff0c\u5fc5\u9700\u53ef\u9054\u5230\u5feb\u901f\u4e14\u7c21\u55ae\u7684\u4f48\u7f72\uff0c\u800c\u4e14\u80fd\u5728\u5206\u9694\u4e14\u5c01\u9396\u7684\u74b0\u5883\u4e0b\u57f7\u884c\u3002\u958b\u767c\uff0c\u54c1\u8cea\u7ba1\u7406\uff0c\u4ee5\u53ca\u5be6\u969b\u71df\u904b\u7684\u74b0\u5883\uff0c\u90fd\u9808\u6709\u4e00\u81f4\u76f8\u540c\u7684\u8a2d\u5b9a\uff0c\u4e26\u4e14\u4f7f\u7528\u4e0d\u540c\u7684\u8a8d\u8b49\u8cc7\u8a0a\u3002\u9019\u7a2e\u6b65\u9a5f\u9700\u8981\u76e1\u53ef\u80fd\u7684\u81ea\u52d5\u5316\uff0c\u964d\u4f4e\u9700\u8981\u5efa\u7acb\u5b89\u5168\u74b0\u5883\u6642\uff0c\u6240\u9700\u8981\u7684\u6295\u5165\u3002</p> </li> <li> <p>A minimal platform without any unnecessary features, components,     documentation, and samples. Remove or do not install unused features     and frameworks.</p> </li> <li> <p>\u4e00\u500b\u6700\u7cbe\u7c21\u7684\u5e73\u53f0\uff0c\u4e0a\u9762\u4e0d\u6703\u642d\u914d\u4efb\u4f55\u4e0d\u9700\u8981\u7684\u529f\u80fd\uff0c\u5957\u4ef6\uff0c\u6a94\u6848\uff0c\u4ee5\u53ca\u7bc4\u672c\u3002\u79fb\u9664\u6216\u4e0d\u5b89\u88dd\u4efb\u4f55\uff0c\u4e0d\u9808\u4f7f\u7528\u7684\u529f\u80fd\u6216\u6846\u67b6\u3002</p> </li> <li> <p>A task to review and update the configurations appropriate to all     security notes, updates, and patches as part of the patch management     process (see A06:2021-Vulnerable and Outdated Components). Review     cloud storage permissions (e.g., S3 bucket permissions).</p> </li> <li> <p>\u5728\u8b8a\u66f4\u7ba1\u7406\u4e0b\uff0c\u9700\u6709\u7279\u5b9a\u7684\u4efb\u52d9\uff0c\u4f9d\u64da\u5b89\u5168\u544a\u77e5\uff0c\u76f8\u95dc\u66f4\u65b0\uff0c\u4f86\u57f7\u884c\u5b89\u5168\u5be9\u8996\u53ca\u66f4\u52d5(\u53ef\u53c3\u7167 A06:2021-\u6613\u53d7\u653b\u64ca\u548c\u5df2\u6dd8\u6c70\u7684\u7d44\u4ef6)\u3002\u5be9\u8996\u96f2\u7aef\u5132\u5b58\u7684\u6b0a\u9650(\u4f8b\u5982 S3 bucket\u7684\u6b0a\u9650)</p> </li> <li> <p>A segmented application architecture provides effective and secure     separation between components or tenants, with segmentation,     containerization, or cloud security groups (ACLs).</p> </li> <li> <p>\u4e00\u500b\u53ef\u5206\u5272\u7684\u7a0b\u5f0f\u67b6\u69cb\uff0c\u5c0d\u65bc\u5404\u5143\u4ef6\uff0c\u7528\u6236\uff0c\u53ef\u900f\u904e\u5206\u96e2\uff0c\u5bb9\u5668\u5316\uff0c\u96f2\u7aef\u5b89\u5168\u7fa4\u7d44\u8a2d\u5b9a(ACLs)\uff0c\u4f86\u9054\u5230\u5206\u5272\u7684\u6548\u679c\u3002\u63d0\u4f9b\u6709\u6548\u4e14\u5b89\u5168\u7684\u5206\u96e2\u3002</p> </li> <li> <p>Sending security directives to clients, e.g., Security Headers.</p> </li> <li> <p>\u5bc4\u9001\u5b89\u5168\u6307\u4ee4\u7d66\u7528\u6236\u7aef\uff0c\u4f8b\u5982 \u5b89\u5168\u6a19\u982d\u3002</p> </li> <li> <p>An automated process to verify the effectiveness of the     configurations and settings in all environments.</p> </li> <li> <p>\u4e00\u500b\u81ea\u52d5\u5316\u7684\u6d41\u7a0b\uff0c\u53ef\u4ee5\u78ba\u8a8d\u74b0\u5883\u4e2d\u5404\u985e\u7684\u5b89\u5168\u8a2d\u5b9a\u3002</p> </li> </ul>"},{"location":"zh-TW/A05_2021-Security_Misconfiguration/#example-attack-scenarios","title":"\u653b\u64ca\u60c5\u5883\u7bc4\u4f8b(Example Attack Scenarios)","text":"<p>Scenario #1: The application server comes with sample applications not removed from the production server. These sample applications have known security flaws attackers use to compromise the server. Suppose one of these applications is the admin console, and default accounts weren't changed. In that case, the attacker logs in with default passwords and takes over.</p> <p>\u60c5\u5883 #1: \u71df\u904b\u7528\u7684\u7a0b\u5f0f\u4f3a\u670d\u5668\uff0c\u5e36\u6709\u9810\u8a2d\u7684\u6a23\u672c\u7a0b\u5f0f\uff0c\u4e26\u672a\u79fb\u9664\u3002\u9019\u500b\u6a23\u672c\u7a0b\u5f0f\u5e36\u6709\u5df2\u77e5\u7684\u5b89\u5168\u7f3a\u9677\uff0c\u53ef\u88ab\u653b\u64ca\u8005\u5229\u7528\u5165\u4fb5\u4f3a\u670d\u5668\u3002\u4f8b\u5982\uff0c\u9810\u8a2d\u7684\u7a0b\u5f0f\u5e36\u6709\u7ba1\u7406\u8005\u4ecb\u9762\uff0c\u4e26\u4e14\u6709\u672a\u8b8a\u66f4\u7684\u5e33\u865f\uff0c\u653b\u64ca\u8005\u53ef\u4ee5\u900f\u904e\u9810\u8a2d\u7684\u5bc6\u78bc\u767b\u5165\uff0c\u4e26\u53d6\u5f97\u63a7\u5236\u6b0a\u3002</p> <p>Scenario #2: Directory listing is not disabled on the server. An attacker discovers they can simply list directories. The attacker finds and downloads the compiled Java classes, which they decompile and reverse engineer to view the code. The attacker then finds a severe access control flaw in the application.</p> <p>\u60c5\u5883 #2: \u8cc7\u6599\u593e\u5217\u8868\u6307\u4ee4\u4e26\u672a\u5728\u4f3a\u670d\u5668\u4e0a\u95dc\u9589\u3002\u653b\u64ca\u8005\u53ef\u4ee5\u627e\u51fa\u4e26\u4e14\u4e0b\u8f09\uff0c\u5df2\u7de8\u8b6f\u904eJava\u6a94\u6848\uff0c\u4e26\u4e14\u900f\u904e\u53cd\u7de8\u8b6f\u8207\u9006\u5411\u5de5\u7a0b\u7b49\u624b\u6cd5\uff0c\u67e5\u770b\u539f\u59cb\u78bc\u3002\u518d\u56e0\u6b64\u627e\u51fa\u7a0b\u5f0f\u4e2d\uff0c\u56b4\u91cd\u7684\u5b58\u53d6\u63a7\u5236\u7f3a\u9677\u3002</p> <p>Scenario #3: The application server's configuration allows detailed error messages, e.g., stack traces, to be returned to users. This potentially exposes sensitive information or underlying flaws such as component versions that are known to be vulnerable.</p> <p>\u60c5\u5883 #3: \u7a0b\u5f0f\u4f3a\u670d\u5668\u7684\u8a2d\u5b9a\uff0c\u52fb\u8a31\u8f38\u51fa\u5e36\u6709\u8a73\u7d30\u5167\u5bb9\u7684\u932f\u8aa4\u8a0a\u606f\uff0c\u4f8b\u5982\u5806\u758a\u8ffd\u8e64\uff0c\u4f9b\u7528\u6236\u67e5\u770b\u3002\u9019\u6709\u53ef\u80fd\u5c0e\u81f4\u654f\u611f\u8a0a\u606f\u7684\u5916\u6d29\uff0c\u6216\u9593\u63a5\u900f\u9732\u51fa\uff0c\u4f7f\u7528\u4e2d\uff0c\u4e26\u5e36\u6709\u8106\u5f31\u6027\u7684\u5143\u4ef6\u7248\u672c\u3002</p> <p>Scenario #4: A cloud service provider has default sharing permissions open to the Internet by other CSP users. This allows sensitive data stored within cloud storage to be accessed.</p> <p>\u60c5\u5883 #4: \u4e00\u500b\u96f2\u7aef\u4f3a\u670d\u5668\uff0c\u63d0\u4f9b\u4e86\u9810\u8a2d\u6b0a\u9650\u5206\u4eab\uff0c\u7d66\u5176\u4ed6\u5728\u7db2\u969b\u7db2\u8def\u7684CSP\u7528\u6236\u3002\u9019\u5c07\u5c0e\u81f4\u96f2\u7aef\u5132\u5b58\u7684\u654f\u611f\u8cc7\u6599\u53ef\u4ee5\u88ab\u5b58\u53d6\u3002</p>"},{"location":"zh-TW/A05_2021-Security_Misconfiguration/#references","title":"References","text":"<ul> <li> <p>OWASP Testing Guide: Configuration     Management</p> </li> <li> <p>OWASP \u6e2c\u8a66\u6307\u5357: \u8a2d\u5b9a\u7ba1\u7406</p> </li> <li> <p>OWASP Testing Guide: Testing for Error Codes</p> </li> <li> <p>OWASP \u6e2c\u8a66\u6307\u5357: \u932f\u8aa4\u4ee3\u78bc\u6e2c\u8a66</p> </li> <li> <p>Application Security Verification Standard V19 Configuration</p> </li> <li> <p>\u61c9\u7528\u7a0b\u5f0f\u5b89\u5168\u78ba\u8a8d\u6a19\u6e96 v19 \u8a2d\u5b9a\u7bc7</p> </li> <li> <p>NIST Guide to General Server     Hardening</p> </li> <li> <p>NIST \u6cdb\u7528\u4f3a\u670d\u5668\u5f37\u5316\u6307\u5357</p> </li> <li> <p>CIS Security Configuration     Guides/Benchmarks</p> </li> <li> <p>CIS \u5b89\u5168\u8a2d\u5b9a\u6307\u5357/\u57fa\u6e96</p> </li> <li> <p>Amazon S3 Bucket Discovery and     Enumeration</p> </li> <li> <p>Amazon S3 \u5132\u5b58\u8caf\u9ad4\u5075\u6e2c\u8207\u63a2\u7d22</p> </li> </ul>"},{"location":"zh-TW/A05_2021-Security_Misconfiguration/#cweslist-of-mapped-cwes","title":"\u5c0d\u61c9\u7684CWEs\u6e05\u55ae(List of Mapped CWEs)","text":"<p>CWE-2 Configuration</p> <p>CWE-2 \u8a2d\u5b9a</p> <p>CWE-11 ASP.NET Misconfiguration: Creating Debug Binary</p> <p>CWE-11 ASP.NET \u932f\u8aa4\u8a2d\u5b9a:\u5275\u5efa\u9664\u932f\u4e8c\u9032\u5236\u6a94 </p> <p>CWE-13 ASP.NET Misconfiguration: Password in Configuration File</p> <p>CWE-13 ASP.NET \u932f\u8aa4\u8a2d\u5b9a: \u8a2d\u5b9a\u6a94\u4e2d\u6240\u5b58\u7684\u5bc6\u78bc</p> <p>CWE-15 External Control of System or Configuration Setting</p> <p>CWE-15 \u7cfb\u7d71\u7684\u5916\u90e8\u63a7\u5236\u8207\u8a2d\u5b9a</p> <p>CWE-16 Configuration</p> <p>CWE-16 \u8a2d\u5b9a</p> <p>CWE-260 Password in Configuration File</p> <p>CWE-260 \u8a2d\u5b9a\u6a94\u4e2d\u6240\u5b58\u7684\u5bc6\u78bc</p> <p>CWE-315 Cleartext Storage of Sensitive Information in a Cookie</p> <p>CWE-315 cookies\u4e2d\u7684\u660e\u6587\u5b58\u653e\u654f\u611f\u8cc7\u6599 </p> <p>CWE-520 .NET Misconfiguration: Use of Impersonation</p> <p>CWE-520 .NET \u932f\u8aa4\u8a2d\u5b9a: \u5192\u5145\u4f7f\u7528</p> <p>CWE-526 Exposure of Sensitive Information Through Environmental Variables</p> <p>CWE-526 \u74b0\u5883\u7269\u4ef6\u6240\u6d29\u6f0f\u7684\u654f\u611f\u8cc7\u8a0a</p> <p>CWE-537 Java Runtime Error Message Containing Sensitive Information</p> <p>CWE-537 Java\u904b\u884c\u74b0\u5883\u4e0b\uff0c\u932f\u8aa4\u8a0a\u606f\u5305\u542b\u654f\u611f\u8cc7\u8a0a</p> <p>CWE-541 Inclusion of Sensitive Information in an Include File</p> <p>CWE-541 \u5305\u5bb9\u6a94\u6848\u4e2d\uff0c\u5305\u542b\u654f\u611f\u8cc7\u8a0a</p> <p>CWE-547 Use of Hard-coded, Security-relevant Constants</p> <p>CWE-547 \u4f7f\u7528\u5beb\u6b7b\u7684\u5b89\u5168\u76f8\u95dc\u53c3\u6578</p> <p>CWE-611 Improper Restriction of XML External Entity Reference</p> <p>CWE-611 \u4e0d\u5145\u8db3\u7684XML\u5916\u90e8\u5be6\u9ad4\u5f15\u7528\u9650\u5236</p> <p>CWE-614 Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</p> <p>CWE-614 HTTPS\u4e0b\uff0c\u654f\u611fCookies\u6c92\u6709\u4f7f\u7528\"\u5b89\u5168\"\u53c3\u6578\u8a2d\u5b9a </p> <p>CWE-756 Missing Custom Error Page</p> <p>CWE-756 \u907a\u6f0f\u5ba2\u5236\u7684\u932f\u8aa4\u9801\u9762</p> <p>CWE-776 Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')</p> <p>CWE-776 DTDs\u4e2d\uff0c\u4e0d\u5145\u8db3\u7684\u905e\u8ff4\u7269\u4ef6\u5f15\u7528\u9650\u5236 (XML \u7269\u4ef6\u64f4\u5f35)</p> <p>CWE-942 Permissive Cross-domain Policy with Untrusted Domains</p> <p>CWE-942 \u8de8\u7db2\u57df\u767d\u540d\u55ae\u7684\u904e\u5ea6\u6b0a\u9650</p> <p>CWE-1004 Sensitive Cookie Without 'HttpOnly' Flag</p> <p>CWE-1004 \u654f\u611fCookie\u6c92\u6709\u4f7f\u7528'HttpOnly'\u53c3\u6578\u8a2d\u5b9a</p> <p>CWE-1032 OWASP Top Ten 2017 Category A6 - Security Misconfiguration</p> <p>CWE-1032 OWASP 2017 \u524d\u5341\u5927 A6\u7fa4\u7d44 - \u5b89\u5168\u932f\u8aa4\u8a2d\u5b9a</p> <p>CWE-1174 ASP.NET Misconfiguration: Improper Model Validation</p> <p>CWE-1174 ASP.NET \u932f\u8aa4\u8a2d\u5b9a: \u4e0d\u5145\u8db3\u7684\u6a21\u7d44\u9a57\u8b49</p>"},{"location":"zh-TW/A06_2021-Vulnerable_and_Outdated_Components/","title":"A06:2021 \u2013 \u6613\u53d7\u653b\u64ca\u548c\u5df2\u6dd8\u6c70\u7684\u7d44\u4ef6(Vulnerable and Outdated Components)","text":""},{"location":"zh-TW/A06_2021-Vulnerable_and_Outdated_Components/#factors","title":"\u5f31\u9ede\u56e0\u7d20(Factors)","text":"\u53ef\u5c0d\u7167 CWEs \u6578\u91cf \u6700\u5927\u767c\u751f\u7387 \u5e73\u5747\u767c\u751f\u7387 \u6700\u5927\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u52a0\u6b0a\u6f0f\u6d1e \u5e73\u5747\u52a0\u6b0a\u5f71\u97ff \u51fa\u73fe\u6b21\u6578 \u6240\u6709\u76f8\u95dc CVEs \u6578\u91cf 3 27.96% 8.77% 51.78% 22.47% 5.00 5.00 30,457 0"},{"location":"zh-TW/A06_2021-Vulnerable_and_Outdated_Components/#_1","title":"\u5f31\u9ede\u7c21\u4ecb","text":"<p>\u6b64\u5f31\u9ede\u5728\u7522\u696d\u8abf\u67e5\u4e2d\u6392\u540d\u7b2c\u4e8c\uff0c\u4f46\u6709\u8db3\u5920\u7684\u8cc7\u6599\u8b93\u5b83\u9032\u5165\u524d\u5341\u3002 \u6613\u53d7\u653b\u64ca\u7684\u7d44\u4ef6\u662f\u6211\u5011\u52aa\u529b\u6e2c\u8a66\u548c\u8a55\u4f30\u98a8\u96aa\u7684\u5df2\u77e5\u554f\u984c\uff0c\u8a72\u5f31\u9ede\u662f\u5728 CWEs \u4e2d\u552f\u4e00\u6c92\u6709\u4efb\u4f55 CVE \u5c0d\u61c9\u7684\u985e\u5225\uff0c\u56e0\u6b64\u4f7f\u7528\u9810\u8a2d\u7684 5.0 \u6f0f\u6d1e\u5229\u7528/\u5f71\u97ff\u6b0a\u91cd\u3002 \u77e5\u540d\u7684 CWEs\u5305\u62ec\uff1a  *CWE-1104\uff1a\u4f7f\u7528\u672a\u7dad\u8b77\u7684\u7b2c\u4e09\u65b9\u7d44\u4ef6 \u4ee5\u53ca\u5169\u500b 2013 \u5e74\u5ea6\u30012017 \u5e74\u5ea6 \u524d 10 \u540d\u7684 CWEs\u3002</p>"},{"location":"zh-TW/A06_2021-Vulnerable_and_Outdated_Components/#_2","title":"\u5f31\u9ede\u63cf\u8ff0","text":"<p>\u60a8\u53ef\u80fd\u5bb9\u6613\u53d7\u5230\u653b\u64ca\uff1a</p> <ul> <li> <p>\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u60a8\u4f7f\u7528\u7684\u6240\u6709\u7d44\u4ef6\u7684\u7248\u672c\uff08\u7528\u6236\u7aef\u548c\u4f3a\u670d\u5668\u7aef\uff09\u3002 \u9019\u5305\u62ec\u60a8\u76f4\u63a5\u4f7f\u7528\u7684\u7d44\u4ef6\u4ee5\u53ca\u5d4c\u5165\u7684\u76f8\u4f9d\u5957\u4ef6(nested dependencies)\u3002</p> </li> <li> <p>\u5982\u679c\u8edf\u9ad4\u5bb9\u6613\u53d7\u5230\u653b\u64ca\u3001\u5df2\u4e0d\u652f\u63f4\u6216\u5df2\u6dd8\u6c70\u3002      \u5305\u62ec\u4f5c\u696d\u7cfb\u7d71\u3001\u7db2\u9801/\u61c9\u7528\u7a0b\u5f0f\u4f3a\u670d\u5668\u3001\u8cc7\u6599\u5eab\u7ba1\u7406\u7cfb\u7d71 (DBMS)\u3001\u61c9\u7528\u7a0b\u5f0f\u3001 API \u4ee5\u53ca\u6240\u6709\u7d44\u4ef6\u3001\u57f7\u884c\u74b0\u5883\u548c\u7a0b\u5f0f\u5eab(libraries)\u3002</p> </li> <li> <p>\u5982\u679c\u60a8\u6c92\u6709\u5b9a\u671f\u57f7\u884c\u5f31\u9ede\u6383\u7784\u4e26\u8a02\u95b1\u8207\u60a8\u4f7f\u7528\u7d44\u4ef6\u76f8\u95dc\u7684\u8cc7\u5b89\u901a\u5831\u3002</p> </li> <li> <p>\u5982\u679c\u60a8\u672a\u6191\u85c9\u57fa\u65bc\u98a8\u96aa\u7684\u65b9\u5f0f\u53ca\u6642\u4fee\u88dc\u6216\u5347\u7d1a\u5e95\u5c64\u5e73\u53f0\u3001\u6846\u67b6\u548c\u76f8\u4f9d\u5957\u4ef6\u3002      \u9019\u901a\u5e38\u767c\u751f\u5728\u4fee\u88dc\u5de5\u4f5c\u662f\u8b8a\u66f4\u63a7\u5236\u4e0b\u7684\u6bcf\u6708\u6216\u6bcf\u5b63\u5ea6\u4efb\u52d9\u7684\u74b0\u5883\u4e2d\uff0c\u6703\u4f7f\u7d44\u7e54\u6578\u5929\u751a\u81f3\u6578\u6708\u4e0d\u5fc5\u8981\u5730\u66b4\u9732\u65bc\u53ef\u4fee\u88dc\u7684\u6f0f\u6d1e\u98a8\u96aa\u3002</p> </li> <li> <p>\u5982\u679c\u8edf\u9ad4\u958b\u767c\u4eba\u54e1\u672a\u6e2c\u8a66\u66f4\u65b0\u3001\u5347\u7d1a\u6216\u4fee\u88dc\u5f8c\u7a0b\u5f0f\u5eab\u7684\u76f8\u5bb9\u6027\u3002</p> </li> <li> <p>\u5982\u679c\u4f60\u672a\u4fdd\u8b77\u7d44\u4ef6\u7684\u8a2d\u5b9a\u6a94\u6848\u3002\uff08\u8acb\u53c3\u95b1 A05:2021 - \u5b89\u5168\u8a2d\u5b9a\u7f3a\u9677 Security Misconfiguration\uff09\u3002</p> </li> </ul>"},{"location":"zh-TW/A06_2021-Vulnerable_and_Outdated_Components/#how-to-prevent","title":"\u5982\u4f55\u9810\u9632(How to Prevent)","text":"<p>\u61c9\u8a72\u8a2d\u7f6e\u4fee\u88dc\u7a0b\u5f0f\u7ba1\u7406\u6d41\u7a0b\u4f86\uff1a</p> <ul> <li> <p>\u522a\u9664\u672a\u4f7f\u7528\u7684\u76f8\u4f9d\u5957\u4ef6\u3001\u4e0d\u5fc5\u8981\u7684\u529f\u80fd\u3001\u7d44\u4ef6\u3001\u6a94\u6848\u53ca\u6587\u4ef6\u3002</p> </li> <li> <p>\u6301\u7e8c\u4f7f\u7528\u7248\u63a7\u5de5\u5177\u4f86\u76e4\u9ede\u5ba2\u6236\u7aef\u548c\u4f3a\u670d\u5668\u7aef\u7d44\u4ef6\uff08\u4f8b\u5982\u6846\u67b6\u3001\u7a0b\u5f0f\u5eab\uff09\u53ca\u76f8\u4f9d\u7d44\u4ef6\u7684\u7248\u672c\uff0c\u5982\u7248\u63a7\u5de5\u5177\u3001OWASP Dependency Check\u3001retire.js \u7b49\u3002     \u6301\u7e8c\u76e3\u63a7 CVE \u548c NVD \u7b49\u7b49\u4f86\u6e90\u4f86\u78ba\u8a8d\u662f\u7d44\u4ef6\u662f\u5426\u5b58\u5728\u7684\u6f0f\u6d1e\u3002\u4f7f\u7528\u8edf\u9ad4\u7d44\u5408\u5206\u6790\u5de5\u5177\u4f86\u81ea\u52d5\u5316\u8a72\u6d41\u7a0b\u3002      \u8a02\u95b1\u60a8\u4f7f\u7528\u7684\u7d44\u4ef6\u76f8\u95dc\u7684\u5b89\u5168\u6f0f\u6d1e\u7684\u8cc7\u5b89\u901a\u5831\u3002</p> </li> <li> <p>\u6301\u7e8c\u76e4\u9ede\u5ba2\u6236\u7aef\u548c\u4f3a\u670d\u5668\u7aef\u7d44\u4ef6\uff08\u4f8b\u5982\u6846\u67b6\u3001\u7a0b\u5f0f\u5eab\uff09\u53ca\u76f8\u4f9d\u7d44\u4ef6\u7684\u7248\u672c\uff0c\u5982\u7248\u63a7\u5de5\u5177\u3001OWASP Dependency Check\u3001retire.js \u7b49\u3002     \u6301\u7e8c\u76e3\u63a7 CVE \u548c NVD \u7b49\u7b49\u4f86\u6e90\u4f86\u78ba\u8a8d\u662f\u7d44\u4ef6\u662f\u5426\u5b58\u5728\u7684\u6f0f\u6d1e\u3002     \u4f7f\u7528\u8edf\u9ad4\u7d44\u5408\u5206\u6790\u5de5\u5177\u4f86\u81ea\u52d5\u5316\u8a72\u6d41\u7a0b\u3002      \u8a02\u95b1\u60a8\u4f7f\u7528\u7684\u7d44\u4ef6\u76f8\u95dc\u7684\u5b89\u5168\u6f0f\u6d1e\u7684\u8cc7\u5b89\u901a\u5831\u3002     \u4f7f\u7528\u8af8\u5982\u7248\u63a7\u5de5\u5177\u3001OWASP Dependency Check\u3001retire.js \u7b49\u5de5\u5177\u6301\u7e8c\u76e4\u9ede\u5ba2\u6236\u7aef\u548c\u670d\u52d9\u5668\u7aef\u7d44\u4ef6\uff08\u4f8b\u5982\u6846\u67b6\u3001\u7a0b\u5f0f\u5eab\uff09\u53ca\u5176\u76f8\u4f9d\u7d44\u4ef6\u7684\u7248\u672c\u3002</p> </li> <li> <p>\u50c5\u900f\u904e\u5b98\u65b9\u63d0\u4f9b\u7684\u5b89\u5168\u9023\u7d50\u4f86\u53d6\u5f97\u7d44\u4ef6\u3002     \u512a\u5148\u9078\u64c7\u5df2\u7c3d\u7f72\u7684\u66f4\u65b0\u5305\uff0c\u4ee5\u964d\u4f4e\u66f4\u65b0\u5305\u88ab\u52a0\u5165\u60e1\u610f\u7d44\u4ef6\u7684\u53ef\u80fd\u3002\uff08\u8acb\u53c3\u95b1 A08:2021-\u8edf\u9ad4\u53ca\u8cc7\u6599\u5b8c\u6574\u6027\u5931\u6548\uff09\u3002</p> </li> <li> <p>\u76e3\u63a7\u672a\u7dad\u8b77\u6216\u672a\u70ba\u820a\u7248\u672c\u5275\u5efa\u5b89\u5168\u4fee\u88dc\u7a0b\u5f0f\u7684\u7a0b\u5f0f\u5eab\u548c\u7d44\u4ef6\u3002     \u5982\u679c\u7121\u6cd5\u4fee\u88dc\u7a0b\u5f0f\uff0c\u8acb\u8003\u616e\u90e8\u7f72\u865b\u64ec\u4fee\u88dc\u7a0b\u5f0f\u4f86\u76e3\u63a7\u3001\u6aa2\u6e2c\u6216\u9632\u79a6\u5df2\u767c\u73fe\u7684\u7279\u5b9a\u5f31\u9ede\u3002</p> </li> </ul> <p>\u6bcf\u500b\u7d44\u7e54\u90fd\u5fc5\u9808\u78ba\u4fdd\u5728\u61c9\u7528\u7a0b\u5f0f\u6216\u958b\u767c\u5c08\u6848(portfolio)\u7684\u751f\u547d\u9031\u671f\u5167\u5236\u8a02\u6301\u7e8c\u76e3\u63a7\u3001\u9452\u5225\u5206\u985e(triaging) \u53ca \u7533\u8acb\u66f4\u65b0 \u6216\u662f \u66f4\u6539\u914d\u7f6e\u7684\u8a08\u5283\u3002</p>"},{"location":"zh-TW/A06_2021-Vulnerable_and_Outdated_Components/#example-attack-scenarios","title":"\u653b\u64ca\u60c5\u5883\u7bc4\u4f8b(Example Attack Scenarios)","text":"<p>\u60c5\u5883 #1\uff1a \u7d44\u4ef6\u901a\u5e38\u4ee5\u8207\u61c9\u7528\u7a0b\u5f0f\u672c\u8eab\u76f8\u540c\u7684\u6b0a\u9650\u904b\u884c\uff0c\u56e0\u6b64\u4efb\u4f55\u7d44\u4ef6\u4e2d\u7684\u7f3a\u9677\u90fd\u53ef\u80fd\u5c0e\u81f4\u56b4\u91cd\u7684\u5f71\u97ff\u3002  \u6b64\u985e\u7f3a\u9677\u53ef\u80fd\u662f\u5076\u7136\u7684\uff08\u4f8b\u5982\uff0c\u7de8\u78bc\u932f\u8aa4\uff09\u6216\u6709\u610f\u7684\uff08\u4f8b\u5982\uff0c\u7d44\u4ef6\u4e2d\u7684\u5f8c\u9580\uff09\u3002  \u4e00\u4e9b\u5df2\u77e5\u6613\u53d7\u653b\u64ca\u7d44\u4ef6\u7684\u7bc4\u4f8b\u70ba\uff1a</p> <ul> <li> <p>CVE-2017-5638\uff1a\u4e00\u500b Struts 2 \u9060\u7aef\u7a0b\u5f0f\u78bc\u57f7\u884c\u6f0f\u6d1e\uff0c\u53ef\u4ee5\u5728\u4f3a\u670d\u5668\u4e0a\u57f7\u884c\u4efb\u610f\u4ee3\u78bc\uff0c\u5df2\u88ab\u6b78\u548e\u65bc\u91cd\u5927\u6f0f\u6d1e\u3002</p> </li> <li> <p>\u96d6\u7136\u7269\u806f\u7db2 (IoT) \u8a2d\u5099\u901a\u5e38\u5f88\u96e3\u6216\u7121\u6cd5\u4fee\u88dc\uff0c\u4f46\u4fee\u88dc\u5b83\u5011\u53ef\u80fd\u6709\u5f88\u9ad8\u7684\u91cd\u8981\u6027\u3002\uff08\u4f8b\u5982\uff0c\u751f\u7269\u91ab\u5b78\u8a2d\u5099\uff09\u3002</p> </li> </ul> <p>\u6709\u4e00\u4e9b\u81ea\u52d5\u5316\u5de5\u5177\u53ef\u4ee5\u5e6b\u52a9\u653b\u64ca\u8005\u627e\u5230\u672a\u4fee\u88dc\u6216\u914d\u7f6e\u932f\u8aa4\u7684\u7cfb\u7d71\u3002 \u4f8b\u5982\uff0cShodan IoT \u641c\u7d22\u5f15\u64ce\u53ef\u4ee5\u5e6b\u52a9\u60a8\u627e\u5230\u5b58\u5728 2014 \u5e74 4 \u6708\u672a\u4fee\u88dc Heartbleed \u6f0f\u6d1e\u7684\u8a2d\u5099\u3002</p>"},{"location":"zh-TW/A06_2021-Vulnerable_and_Outdated_Components/#references","title":"\u53c3\u8003\u6587\u737b(References)","text":"<ul> <li> <p>OWASP Application Security Verification Standard: V1 Architecture, design and threat modelling</p> </li> <li> <p>OWASP Dependency Check (for Java and .NET libraries)</p> </li> <li> <p>OWASP Testing Guide - Map Application Architecture (OTG-INFO-010)</p> </li> <li> <p>OWASP Virtual Patching Best Practices</p> </li> <li> <p>The Unfortunate Reality of Insecure Libraries</p> </li> </ul>"},{"location":"zh-TW/A06_2021-Vulnerable_and_Outdated_Components/#-mitre-common-vulnerabilities-and-exposures-cve-search","title":"-   MITRE Common Vulnerabilities and Exposures (CVE) search","text":"<ul> <li> <p>National Vulnerability Database (NVD)</p> </li> <li> <p>Retire.js for detecting known vulnerable JavaScript libraries</p> </li> <li> <p>Node Libraries Security Advisories</p> </li> <li> <p>Ruby Libraries Security Advisory Database and Tools</p> </li> <li> <p>https://safecode.org/publication/SAFECode_Software_Integrity_Controls0610.pdf</p> </li> </ul>"},{"location":"zh-TW/A06_2021-Vulnerable_and_Outdated_Components/#cwes-list-of-mapped-cwes","title":"\u5c0d\u61c9\u7684 CWEs \u6e05\u55ae(List of Mapped CWEs)","text":"<p>CWE-937 OWASP Top 10 2013: Using Components with Known Vulnerabilities</p> <p>CWE-1035 2017 Top 10 A9: Using Components with Known Vulnerabilities</p> <p>CWE-1104 Use of Unmaintained Third Party Components</p>"},{"location":"zh-TW/A07_2021-Identification_and_Authentication_Failures/","title":"A07:2021 \u2013 \u8a8d\u8b49\u53ca\u9a57\u8b49\u6a5f\u5236\u5931\u6548","text":""},{"location":"zh-TW/A07_2021-Identification_and_Authentication_Failures/#_1","title":"\u5f31\u9ede\u56e0\u7d20","text":"\u53ef\u5c0d\u7167 CWEs \u6578\u91cf \u6700\u5927\u767c\u751f\u7387 \u5e73\u5747\u767c\u751f\u7387 \u6700\u5927\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u52a0\u6b0a\u6f0f\u6d1e \u5e73\u5747\u52a0\u6b0a\u5f71\u97ff \u51fa\u73fe\u6b21\u6578 \u6240\u6709\u76f8\u95dc CVEs \u6578\u91cf 22 14.84% 2.55% 79.51% 45.72% 7.40 6.50 132,195 3,897"},{"location":"zh-TW/A07_2021-Identification_and_Authentication_Failures/#_2","title":"\u5f31\u9ede\u7c21\u4ecb","text":"<p>\u4e4b\u524d\u88ab\u7a31\u4e4b\u70ba\"\u7121\u6548\u7684\u8eab\u4efd\u8a8d\u8b49\"\uff0c\u6b64\u985e\u5225\u5f9e\u7b2c\u4e8c\u540d\u4e0b\u6ed1\uff0c\u73fe\u5728\u5305\u542b\u4e86\u8207\u8eab\u4efd\u8b58\u5225\u5931\u6548\u76f8\u95dc\u7684CWEs\uff0c\u5982\u77e5\u540d\u7684\"CWE-297: \u8207\u4e0d\u5339\u914d\u7684\u670d\u52d9\u7aef\u9032\u884c\u4e0d\u9069\u7576\u7684\u6191\u8b49\u78ba\u8a8d\", \"CWE-287: \u4e0d\u9069\u7576\u7684\u8a8d\u8b49\", \"CWE-384: \u6703\u8a71(session)\u56fa\u5b9a\u653b\u64ca\"</p>"},{"location":"zh-TW/A07_2021-Identification_and_Authentication_Failures/#_3","title":"\u5f31\u9ede\u63cf\u8ff0","text":"<p>\u78ba\u8a8d\u7528\u6236\u7684\u8eab\u5206\u3001\u8a8d\u8b49\u3001\u6703\u8a71(session)\u7ba1\u7406\u5c0d\u65bc\u9632\u6b62\u8207\u8a8d\u8b49\u76f8\u95dc\u7684\u653b\u64ca\u81f3\u95dc\u91cd\u8981\uff0c\u5982\u679c\u61c9\u7528\u7a0b\u5f0f\u5b58\u5728\u4ee5\u4e0b\u60c5\u6cc1\uff0c\u5247\u53ef\u80fd\u6709\u8a8d\u8b49\u7684\u6f0f\u6d1e:</p> <ul> <li> <p>\u5141\u8a31\u50cf\u662f\u653b\u64ca\u8005\u5df2\u7d93\u64c1\u6709\u6709\u6548\u7528\u6236\u540d\u7a31\u548c\u5bc6\u78bc\u5217\u8868\u7684\u649e\u5eab\u81ea\u52d5\u5316\u653b\u64ca\u3002</p> </li> <li> <p>\u5141\u8a31\u66b4\u529b\u6216\u5176\u4ed6\u81ea\u52d5\u5316\u653b\u64ca\u3002</p> </li> <li> <p>\u5141\u8a31\u9810\u8a2d\u3001\u8106\u5f31\u3001\u5e38\u898b\u7684\u5bc6\u78bc\uff0c\u50cf\u662f\"Password1\"\u6216\"admin/admin\"\u3002</p> </li> <li> <p>\u4f7f\u7528\u8106\u5f31\u6216\u7121\u6548\u7684\u8a8d\u8b49\u8cc7\u8a0a\u56de\u5fa9\u6216\u5fd8\u8a18\u5bc6\u78bc\u7684\u6d41\u7a0b\uff0c\u5982\u4e0d\u5b89\u5168\u7684\"\u77e5\u8b58\u76f8\u95dc\u554f\u7b54\"\u3002</p> </li> <li> <p>\u5c07\u5bc6\u78bc\u4f7f\u7528\u660e\u78bc\u3001\u52a0\u5bc6\u6216\u8f03\u8106\u5f31\u96dc\u6e4a\u6cd5\u7684\u65b9\u5f0f\u5132\u5b58(\u53c3\u8003A3: 2017-\u654f\u611f\u6027\u8cc7\u6599\u6d29\u6f0f)\u3002</p> </li> <li> <p>\u4e0d\u5177\u6709\u6216\u662f\u7121\u6548\u7684\u591a\u56e0\u7d20\u8a8d\u8b49\u3002</p> </li> <li> <p>\u65bcURL\u4e2d\u6d29\u6f0f\u6703\u8a71(session) ID(\u5982 URL\u91cd\u5beb)\u3002</p> </li> <li> <p>\u6210\u529f\u767b\u5165\u5f8c\u6c92\u6709\u8f2a\u63db\u6703\u8a71(session) ID\u3002</p> </li> <li> <p>\u6c92\u6709\u6b63\u78ba\u7684\u8a3b\u92b7\u6703\u8a71(session) ID\u3002 \u7528\u6236\u7684\u6703\u8a71(session)\u6216\u8a8d\u8b49tokens(\u4e3b\u8981\u662f\u55ae\u4e00\u767b\u5165(SSO)token) \u6c92\u6709\u5728\u767b\u51fa\u6642\u6216\u4e00\u6bb5\u6642\u9593\u6c92\u6d3b\u52d5\u6642\u88ab\u9069\u7576\u7684\u8a3b\u92b7\u3002</p> </li> </ul>"},{"location":"zh-TW/A07_2021-Identification_and_Authentication_Failures/#_4","title":"\u5982\u4f55\u9810\u9632","text":"<ul> <li> <p>\u5728\u53ef\u80fd\u7684\u60c5\u6cc1\u4e0b\uff0c\u5be6\u4f5c\u591a\u56e0\u7d20\u8a8d\u8b49\u4f86\u9632\u6b62\u81ea\u52d5\u5316\u649e\u5eab\u653b\u64ca\u3001\u66b4\u529b\u7834\u89e3\u3001\u4ee5\u53ca\u906d\u7aca\u8a8d\u8b49\u8cc7\u8a0a\u88ab\u91cd\u8907\u5229\u7528\u7684\u653b\u64ca\u3002</p> </li> <li> <p>\u4e0d\u8981\u4ea4\u4ed8\u6216\u90e8\u7f72\u4efb\u4f55\u9810\u8a2d\u7684\u8a8d\u8b49\u8cc7\u8a0a\uff0c\u7279\u5225\u662f\u7ba1\u7406\u8005\u3002</p> </li> <li> <p>\u5be6\u4f5c\u8106\u5f31\u5bc6\u78bc\u7684\u6aa2\u67e5\uff0c\u5982\u6e2c\u8a66\u65b0\u8a2d\u5b9a\u6216\u8b8a\u66f4\u7684\u5bc6\u78bc\u662f\u5426\u5b58\u5728\u65bc\u524d10,000\u500b\u6700\u5dee\u5bc6\u78bc\u6e05\u55ae\u3002</p> </li> <li> <p>\u5c07\u5bc6\u78bc\u9577\u5ea6\u3001\u8907\u96dc\u5ea6\u3001\u548c\u8f2a\u63db\u653f\u7b56\u8207\"NIST 800-63b\u7b2c5.1.1\u7bc0-\u88ab\u8a18\u61b6\u7684\u79d8\u5bc6\u6216\u5176\u4ed6\u73fe\u4ee3\u57fa\u65bc\u8b49\u64da\u7684\u5bc6\u78bc\u653f\u7b56\"\u4fdd\u6301\u4e00\u81f4\u3002</p> </li> <li> <p>\u5c0d\u6240\u6709\u7d50\u679c\u4f7f\u7528\u76f8\u540c\u7684\u8a0a\u606f\u56de\u61c9\uff0c\u78ba\u4fdd\u8a3b\u518a\u3001\u8a8d\u8b49\u8cc7\u8a0a\u56de\u5fa9\u3001\u4ee5\u53caAPI\u8def\u5f91\u80fd\u5920\u62b5\u79a6\u5e33\u865f\u5217\u8209\u653b\u64ca\u3002</p> </li> <li> <p>\u9650\u5236\u6216\u589e\u52a0\u5931\u6557\u767b\u5165\u5617\u8a66\u7684\u5ef6\u9072\u3002\u8a18\u9304\u6240\u6709\u5931\u6557\u4e26\u65bc\u5075\u6e2c\u5230\u649e\u5eab\u3001\u66b4\u529b\u7834\u89e3\u6216\u5176\u4ed6\u653b\u64ca\u6642\u767c\u51fa\u544a\u8b66\u3002</p> </li> <li> <p>\u4f7f\u7528\u4f3a\u670d\u5668\u7aef\u3001\u5b89\u5168\u7684\u5167\u5efa\u6703\u8a71(session)\u7ba1\u7406\u5668\uff0c\u5728\u767b\u5165\u5f8c\u7522\u751f\u65b0\u7684\u9ad8\u4e82\u6578\u96a8\u6a5f\u7a0b\u5ea6(entropy)\u7684\u96a8\u6a5f\u6703\u8a71(session)ID\u3002\u6703\u8a71(session)ID\u4e0d\u61c9\u51fa\u73fe\u5728URL\u4e2d\uff0c\u5fc5\u9808\u88ab\u5b89\u5168\u7684\u5132\u5b58\uff0c\u4e26\u4e14\u5728\u767b\u51fa\u5f8c\u3001\u9592\u7f6e\u3001\u8d85\u6642\u5f8c\u88ab\u8a3b\u92b7\u3002</p> </li> </ul>"},{"location":"zh-TW/A07_2021-Identification_and_Authentication_Failures/#_5","title":"\u653b\u64ca\u60c5\u5883\u7bc4\u4f8b","text":"<p>\u60c5\u5883 #1: \u4f7f\u7528\u5df2\u77e5\u5217\u8868\u5bc6\u78bc\u7684\u649e\u5eab\u653b\u64ca\u662f\u4e00\u7a2e\u5e38\u898b\u7684\u653b\u64ca\u65b9\u5f0f\uff0c\u5047\u8a2d\u61c9\u7528\u7a0b\u5f0f\u6c92\u6709\u5be6\u65bd\u81ea\u52d5\u5316\u5a01\u8105\u6216\u649e\u5eab\u653b\u64ca\u7684\u4fdd\u8b77\uff0c\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u61c9\u7528\u7a0b\u5f0f\u6703\u88ab\u5229\u7528\u70ba\u5bc6\u78bc\u9810\u5831\u7684\u5de5\u5177\u4f86\u5224\u65b7\u8a8d\u8b49\u8cc7\u8a0a\u662f\u5426\u6709\u6548\u3002</p> <p>\u60c5\u5883 #2: \u5927\u591a\u6578\u7684\u8a8d\u8b49\u653b\u64ca\u662f\u56e0\u70ba\u6301\u7e8c\u7684\u4f7f\u7528\u5bc6\u78bc\u4f5c\u70ba\u552f\u4e00\u56e0\u7d20\uff0c\u6700\u4f73\u5be6\u52d9\u3001\u5bc6\u78bc\u8f2a\u63db\u3001\u4ee5\u53ca\u8907\u96dc\u5ea6\u7684\u8981\u6c42\u6703\u9f13\u52f5\u7528\u6236\u4f7f\u7528\u548c\u91cd\u8907\u4f7f\u7528\u8106\u5f31\u7684\u5bc6\u78bc\u3002\u5efa\u8b70\u7d44\u7e54\u6309\u7167NIST 800-63\u505c\u6b62\u9019\u4e9b\u505a\u6cd5\u4e26\u4f7f\u7528\u591a\u56e0\u7d20\u8a8d\u8b49\u3002</p> <p>\u60c5\u5883 #3: \u61c9\u7528\u7a0b\u5f0f\u7684\u6703\u8a71\u8d85\u6642\u6c92\u6709\u88ab\u8a2d\u5b9a\u6b63\u78ba\u3002\u4e00\u500b\u7528\u6236\u4f7f\u7528\u516c\u7528\u96fb\u8166\u4f86\u5b58\u53d6\u61c9\u7528\u7a0b\u5f0f\u6642\uff0c\u7528\u6236\u6c92\u6709\u9078\u64c7\"\u767b\u51fa\"\u800c\u662f\u7c21\u55ae\u7684\u95dc\u9589\u700f\u89bd\u5668\u5206\u9801\u5c31\u96e2\u958b\uff0c\u6b64\u6642\u4e00\u500b\u653b\u64ca\u8005\u5728\u4e00\u5c0f\u6642\u5f8c\u4f7f\u7528\u540c\u4e00\u500b\u700f\u89bd\u5668\uff0c\u524d\u4e00\u500b\u7528\u6236\u4ecd\u7136\u8655\u65bc\u901a\u904e\u8a8d\u8b49\u7684\u72c0\u614b\u3002</p>"},{"location":"zh-TW/A07_2021-Identification_and_Authentication_Failures/#_6","title":"\u53c3\u8003\u6587\u737b","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Digital     Identity</p> </li> <li> <p>OWASP Application Security Verification Standard: V2     authentication</p> </li> <li> <p>OWASP Application Security Verification Standard: V3 Session     Management</p> </li> <li> <p>OWASP Testing Guide: Identity,\u00a0Authentication</p> </li> <li> <p>OWASP Cheat Sheet:     Authentication</p> </li> <li> <p>OWASP Cheat Sheet: Credential Stuffing</p> </li> <li> <p>OWASP Cheat Sheet: Forgot     Password</p> </li> <li> <p>OWASP Cheat Sheet: Session Management</p> </li> <li> <p>OWASP Automated Threats     Handbook</p> </li> <li> <p>NIST 800-63b: 5.1.1 Memorized Secrets</p> </li> </ul>"},{"location":"zh-TW/A07_2021-Identification_and_Authentication_Failures/#cwes","title":"\u5c0d\u61c9\u7684 CWEs \u6e05\u55ae","text":"<p>CWE-255 Credentials Management Errors</p> <p>CWE-259 Use of Hard-coded Password</p> <p>CWE-287 Improper Authentication</p> <p>CWE-288 Authentication Bypass Using an Alternate Path or Channel</p> <p>CWE-290 Authentication Bypass by Spoofing</p> <p>CWE-294 Authentication Bypass by Capture-replay</p> <p>CWE-295 Improper Certificate Validation</p> <p>CWE-297 Improper Validation of Certificate with Host Mismatch</p> <p>CWE-300 Channel Accessible by Non-Endpoint</p> <p>CWE-302 Authentication Bypass by Assumed-Immutable Data</p> <p>CWE-304 Missing Critical Step in Authentication</p> <p>CWE-306 Missing Authentication for Critical Function</p> <p>CWE-307 Improper Restriction of Excessive Authentication Attempts</p> <p>CWE-346 Origin Validation Error</p> <p>CWE-384 Session Fixation</p> <p>CWE-521 Weak Password Requirements</p> <p>CWE-613 Insufficient Session Expiration</p> <p>CWE-620 Unverified Password Change</p> <p>CWE-640 Weak Password Recovery Mechanism for Forgotten Password</p> <p>CWE-798 Use of Hard-coded Credentials</p> <p>CWE-940 Improper Verification of Source of a Communication Channel</p> <p>CWE-1216 Lockout Mechanism Errors</p>"},{"location":"zh-TW/A08_2021-Software_and_Data_Integrity_Failures/#factors","title":"Factors","text":""},{"location":"zh-TW/A08_2021-Software_and_Data_Integrity_Failures/#_1","title":"\u5f31\u9ede\u56e0\u7d20","text":"\u5c0d\u61c9\u7684 CWEs\u6578\u91cf \u6700\u5927\u767c\u751f\u7387 \u5e73\u5747\u767c\u751f\u7387 \u6700\u5927\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u52a0\u6b0a\u6f0f\u6d1e \u5e73\u5747\u52a0\u6b0a\u5f71\u97ff \u51fa\u73fe\u6b21\u6578 \u76f8\u95dc CVEs \u7e3d\u91cf 10 16.67% 2.05% 75.04% 45.35% 6.94 7.94 47,972 1,152"},{"location":"zh-TW/A08_2021-Software_and_Data_Integrity_Failures/#overview","title":"Overview","text":""},{"location":"zh-TW/A08_2021-Software_and_Data_Integrity_Failures/#_2","title":"\u5f31\u9ede\u7c21\u4ecb","text":"<p>A new category for 2021 focuses on making assumptions related to software updates, critical data, and CI/CD pipelines without verifying integrity. One of the highest weighted impacts from CVE/CVSS data. Notable CWEs include CWE-502: Deserialization of Untrusted Data, CWE-829: Inclusion of Functionality from Untrusted Control Sphere, and CWE-494: Download of Code Without Integrity Check.</p> <p>\u9019\u662f2021\u5e74\u7684\u65b0\u985e\u578b\uff0c\u8457\u91cd\u5728\u8edf\u9ad4\u66f4\u65b0\uff0c\u95dc\u9375\u8cc7\u6599\u53ca\u6301\u7e8c\u6027\u6574\u5408/\u90e8\u7f72(CI/CD)\u6d41\u7a0b\u672a\u7d93\u5b8c\u6574\u6027\u9a57\u8b49\u4e4b\u5047\u8a2d\u3002\u540c\u6642\u5728CVE/CVSS\u8cc7\u6599\u52a0\u6b0a\u5f8c\u4e4b\u6700\u9ad8\u5f71\u97ff\u4e4b\u4e00\u3002\u503c\u5f97\u6ce8\u610f\u7684CWE\u5305\u542bCWE-502\uff1a\u4e0d\u53d7\u4fe1\u4efb\u8cc7\u6599\u4e4b\u53cd\u5e8f\u5217\u5316\uff0cCWE-829\uff1a\u5305\u542b\u4f86\u81ea\u4e0d\u53d7\u4fe1\u4efb\u63a7\u5236\u9818\u57df\u4e4b\u529f\u80fd\u53caCWE-494\uff1a\u4e0b\u8f09\u672a\u7d93\u5b8c\u6574\u6027\u9a57\u8b49\u4e4b\u7a0b\u5f0f\u78bc\u3002</p>"},{"location":"zh-TW/A08_2021-Software_and_Data_Integrity_Failures/#description","title":"Description","text":""},{"location":"zh-TW/A08_2021-Software_and_Data_Integrity_Failures/#_3","title":"\u5f31\u9ede\u63cf\u8ff0","text":"<p>Software and data integrity failures relate to code and infrastructure that does not protect against integrity violations. For example, where objects or data are encoded or serialized into a structure that an attacker can see and modify is vulnerable to insecure deserialization. Another form of this is where an application relies upon plugins, libraries, or modules from untrusted sources, repositories, and content delivery networks (CDNs). An insecure CI/CD pipeline can introduce the potential for unauthorized access, malicious code, or system compromise. Lastly, many applications now include auto-update functionality, where updates are downloaded without sufficient integrity verification and applied to the previously trusted application. Attackers could potentially upload their own updates to be distributed and run on all installations.</p> <p>\u7a0b\u5f0f\u78bc\u6216\u57fa\u790e\u67b6\u69cb\u672a\u80fd\u4fdd\u8b77\u8edf\u9ad4\u53ca\u8cc7\u6599\u4e4b\u5b8c\u6574\u6027\u53d7\u5230\u7834\u58de\u3002\u8209\u4f8b\u4f86\u8aaa\uff0c\u7269\u4ef6\u6216\u8cc7\u6599\u7d93\u7de8\u78bc\u6216\u5e8f\u5217\u5316\u5230\u4e00\u500b\u5c0d\u653b\u64ca\u8005\u53ef\u8b80\u5beb\u4e4b\u7d50\u69cb\u4e2d\u5c07\u5c0e\u81f4\u4e0d\u5b89\u5168\u7684\u53cd\u5e8f\u5217\u5316\u3002\u53e6\u4e00\u7a2e\u5f62\u5f0f\u5247\u662f\u61c9\u7528\u7a0b\u5f0f\u4f9d\u8cf4\u4f86\u81ea\u65bc\u4e0d\u53d7\u4fe1\u4efb\u4f86\u6e90\uff0c\u5178\u85cf\u5eab\u53ca\u5167\u5bb9\u905e\u9001\u7db2\u8def\u4e4b\u5916\u639b\uff0c\u51fd\u5f0f\u5eab\u6216\u6a21\u7d44\u3002\u4e0d\u5b89\u5168\u7684\u6301\u7e8c\u6027\u6574\u5408/\u90e8\u7f72(CI/CD)\u6d41\u7a0b\u5247\u6703\u9020\u6210\u6f5b\u5728\u7684\u672a\u7d93\u6388\u6b0a\u5b58\u53d6\uff0c\u60e1\u610f\u7a0b\u5f0f\u78bc\u6216\u7cfb\u7d71\u7834\u58de\u3002\u6700\u5f8c\uff0c\u73fe\u5728\u8a31\u591a\u61c9\u7528\u7a0b\u5f0f\u64c1\u6709\u81ea\u52d5\u66f4\u65b0\u529f\u80fd\uff0c\u4f46\u81ea\u52d5\u66f4\u65b0\u529f\u80fd\u5728\u7f3a\u4e4f\u5145\u8db3\u5b8c\u6574\u6027\u9a57\u8b49\u529f\u80fd\u6642\u5c31\u4e0b\u8f09\u4e26\u5b89\u88dd\u66f4\u65b0\u5230\u8655\u65bc\u5b89\u5168\u72c0\u614b\u4e0b\u7684\u61c9\u7528\u7a0b\u5f0f\u3002\u653b\u64ca\u8005\u80fd\u4e0a\u50b3\u81ea\u88fd\u66f4\u65b0\u6a94\u6848\uff0c\u66f4\u65b0\u6a94\u6848\u5c07\u50b3\u64ad\u5230\u6240\u6709\u5df2\u5b89\u88dd\u4e4b\u61c9\u7528\u7a0b\u5f0f\u4e26\u5728\u9019\u4e9b\u61c9\u7528\u7a0b\u5f0f\u4e0a\u57f7\u884c\u3002</p>"},{"location":"zh-TW/A08_2021-Software_and_Data_Integrity_Failures/#how-to-prevent","title":"How to Prevent","text":""},{"location":"zh-TW/A08_2021-Software_and_Data_Integrity_Failures/#_4","title":"\u5f31\u9ede\u63cf\u8ff0","text":"<ul> <li> <p>Ensure that unsigned or unencrypted serialized data is not sent to     untrusted clients without some form of integrity check or digital     signature to detect tampering or replay of the serialized data</p> </li> <li> <p>\u78ba\u4fdd\u4e0d\u53d7\u4fe1\u4efb\u4e4b\u5ba2\u6236\u7aef\u4e0d\u6703\u6536\u5230\u672a\u7c3d\u7f72\u6216\u52a0\u5bc6\u4e4b\u5e8f\u5217\u5316\u8cc7\u6599\u4e26\u5229\u7528\u5b8c\u6574\u6027\u6aa2\u67e5\u6216\u6578\u4f4d\u7c3d\u7ae0\u4f86\u5075\u6e2c\u7ac4\u6539\u6216\u91cd\u653e\u653b\u64ca\u3002</p> </li> <li> <p>Verify the software or data is from the expected source via signing     or similar mechanisms</p> </li> <li> <p>\u5229\u7528\u6578\u4f4d\u7c3d\u7ae0\u6216\u985e\u4f3c\u6a5f\u5236\u78ba\u4fdd\u8edf\u9ad4\u6216\u8cc7\u6599\u4f86\u81ea\u9810\u671f\u4e4b\u63d0\u4f9b\u8005</p> </li> <li> <p>Ensure libraries and dependencies, such as npm or Maven, are     consuming trusted repositories</p> </li> <li> <p>\u78ba\u4fdd\u51fd\u5f0f\u5eab\u53ca\u5f9e\u5c6c\u5957\u4ef6\uff0c\u4f8b\u5982npm\u6216Maven\uff0c\u662f\u5f9e\u53d7\u4fe1\u4efb\u7684\u5178\u85cf\u5eab\u53d6\u5f97\u3002</p> </li> <li> <p>Ensure that a software supply chain security tool, such as OWASP     Dependency Check or OWASP CycloneDX, is used to verify that     components do not contain known vulnerabilities</p> </li> <li> <p>\u4f7f\u7528\u8edf\u9ad4\u4f9b\u61c9\u93c8\u5b89\u5168\u5de5\u5177(\u4f8b\u5982OWASP Dependency Check \u6216 OWASP CycloneDX)\u78ba\u4fdd\u5143\u4ef6\u6c92\u6709\u5df2\u77e5\u5f31\u9ede\u3002</p> </li> <li> <p>Ensure that your CI/CD pipeline has proper configuration and access     control to ensure the integrity of the code flowing through the     build and deploy processes.</p> </li> <li> <p>\u9069\u7576\u5730\u8a2d\u5b9a\u6301\u7e8c\u6027\u6574\u5408/\u90e8\u7f72(CI/CD)\u6d41\u7a0b\u7684\u7d44\u614b\u53ca\u5b58\u53d6\u63a7\u5236\u4ee5\u78ba\u4fdd\u7a0b\u5f0f\u78bc\u5728\u7d44\u5efa\u53ca\u90e8\u7f72\u6d41\u7a0b\u4e2d\u7684\u5b8c\u6574\u6027\u3002</p> </li> </ul>"},{"location":"zh-TW/A08_2021-Software_and_Data_Integrity_Failures/#example-attack-scenarios","title":"Example Attack Scenarios","text":""},{"location":"zh-TW/A08_2021-Software_and_Data_Integrity_Failures/#_5","title":"\u653b\u64ca\u60c5\u5883\u7bc4\u4f8b","text":"<p>Scenario #1 Insecure Deserialization: A React application calls a set of Spring Boot microservices. Being functional programmers, they tried to ensure that their code is immutable. The solution they came up with is serializing the user state and passing it back and forth with each request. An attacker notices the \"R00\" Java object signature and uses the Java Serial Killer tool to gain remote code execution on the application server.</p> <p>\u60c5\u58831 \u4e0d\u5b89\u5168\u7684\u53cd\u5e8f\u5217\u5316\uff1a\u4e00\u500b\u53cd\u61c9\u5f0f\u61c9\u7528\u7a0b\u5f0f\u547c\u53ebSpring Boot\u5fae\u670d\u52d9\u3002\u7a0b\u5f0f\u8a2d\u8a08\u5e2b\u5011\u8a66\u5716\u78ba\u4fdd\u4ed6\u5011\u7684\u4ee3\u78bc\u662f\u4e0d\u53ef\u8b8a\u7684\u3002\u4ed6\u5011\u7684\u89e3\u6c7a\u65b9\u6848\u662f\u5728\u96d9\u5411\u6240\u6709\u8acb\u6c42\u8a0a\u606f\u4e2d\u5305\u542b\u5e8f\u5217\u5316\u7684\u7528\u6236\u72c0\u614b\u3002\u653b\u64ca\u8005\u6ce8\u610f\u5230\u201cR00\u201dJava\u7269\u4ef6\u7c3d\u7ae0\u4e26\u4f7f\u7528 Java Serial Killer \u5de5\u5177(\u7528\u4f86\u57f7\u884cJava\u53cd\u5e8f\u5217\u5316\u653b\u64ca)\u5728\u61c9\u7528\u7a0b\u5f0f\u4f3a\u670d\u5668\u9060\u7aef\u57f7\u884c\u7a0b\u5f0f\u78bc\u3002</p> <p>Scenario #2 Update without signing: Many home routers, set-top boxes, device firmware, and others do not verify updates via signed firmware. Unsigned firmware is a growing target for attackers and is expected to only get worse. This is a major concern as many times there is no mechanism to remediate other than to fix in a future version and wait for previous versions to age out.</p> <p>\u60c5\u58832 \u672a\u7c3d\u7f72\u4e4b\u66f4\u65b0\uff1a\u8a31\u591a\u5bb6\u7528\u8def\u7531\u5668\u3001\u6a5f\u4e0a\u76d2\u3001\u88dd\u7f6e\u97cc\u9ad4\u7b49\u672a\u4ee5\u901a\u904e\u7c3d\u7f72\u4e4b\u97cc\u9ad4\u9a57\u8b49\u66f4\u65b0\u6a94\u6848\u3002\u672a\u7c3d\u7f72\u97cc\u9ad4\u662f\u8d8a\u4f86\u8d8a\u591a\u653b\u64ca\u8005\u7684\u76ee\u6a19\u4e14\u60c5\u6cc1\u53ea\u6703\u8b8a\u5f97\u66f4\u7cdf\u3002\u9019\u662f\u4e00\u500b\u4e3b\u8981\u554f\u984c\uff0c\u56e0\u70ba\u53ea\u80fd\u4ee5\u65b0\u7248\u672c\u4fee\u5fa9\u6b64\u6a5f\u5236\u4e26\u671f\u5f85\u820a\u7248\u672c\u81ea\u7136\u6dd8\u6c70\uff0c\u6c92\u6709\u5176\u4ed6\u65b9\u6cd5\u3002</p> <p>Scenario #3 SolarWinds malicious update: Nation-states have been known to attack update mechanisms, with a recent notable attack being the SolarWinds Orion attack. The company that develops the software had secure build and update integrity processes. Still, these were able to be subverted, and for several months, the firm distributed a highly targeted malicious update to more than 18,000 organizations, of which around 100 or so were affected. This is one of the most far-reaching and most significant breaches of this nature in history.</p> <p>\u60c5\u58833 SolarWinds \u60e1\u610f\u66f4\u65b0\uff1a\u773e\u6240\u5468\u77e5\uff0c\u67d0\u4e9b\u570b\u5bb6\u6703\u653b\u64ca\u66f4\u65b0\u6a5f\u5236\uff0c\u6700\u8fd1\u4e00\u6b21\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5c0dSolarWinds Orion\u7684\u653b\u64ca\u3002\u8a72\u8edf\u9ad4\u958b\u767c\u5546\u64c1\u6709\u5b89\u5168\u7d44\u5efa\u548c\u66f4\u65b0\u5b8c\u6574\u6027\u6d41\u7a0b\u3002\u5118\u7ba1\u5982\u6b64\uff0c\u9019\u4e9b\u6d41\u7a0b\u4ecd\u88ab\u7834\u58de\u4e26\u5728\u5e7e\u500b\u6708\u6642\u9593\u4e2d\u5411 18,000 \u591a\u500b\u7d44\u7e54\u9001\u51fa\u9ad8\u5ea6\u91dd\u5c0d\u6027\u7684\u60e1\u610f\u66f4\u65b0\uff0c\u5176\u4e2d\u5927\u7d04 100 \u500b\u7d44\u7e54\u53d7\u5230\u4e86\u5f71\u97ff\u3002 \u9019\u662f\u6b77\u53f2\u4e0a\u6b64\u985e\u6027\u8cea\u6700\u6df1\u9060\u3001\u6700\u91cd\u5927\u7684\u8cc7\u5b89\u4e8b\u4ef6\u4e4b\u4e00\u3002</p>"},{"location":"zh-TW/A08_2021-Software_and_Data_Integrity_Failures/#references","title":"References","text":""},{"location":"zh-TW/A08_2021-Software_and_Data_Integrity_Failures/#_6","title":"\u53c3\u8003\u6587\u737b","text":"<ul> <li> <p>[OWASP Cheat Sheet: Deserialization](     https://wiki.owasp.org/index.php/Deserialization_Cheat_Sheet)</p> </li> <li> <p>[OWASP Cheat Sheet: Software Supply Chain Security]()</p> </li> <li> <p>[OWASP Cheat Sheet: Secure build and deployment]()</p> </li> <li> <p>[SAFECode Software Integrity Controls](     https://safecode.org/publication/SAFECode_Software_Integrity_Controls0610.pdf)</p> </li> <li> <p>[A 'Worst Nightmare' Cyberattack: The Untold Story Of The     SolarWinds     Hack](https://www.npr.org/2021/04/16/985439655/a-worst-nightmare-cyberattack-the-untold-story-of-the-solarwinds-hack)</p> </li> <li> <p>https://www.manning.com/books/securing-devops</p> </li> </ul>"},{"location":"zh-TW/A08_2021-Software_and_Data_Integrity_Failures/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":""},{"location":"zh-TW/A08_2021-Software_and_Data_Integrity_Failures/#cwes","title":"\u5c0d\u61c9\u7684 CWEs \u6e05\u55ae","text":"<p>CWE-345 Insufficient Verification of Data Authenticity</p> <p>CWE-345 \u4e0d\u8db3\u7684\u8cc7\u6599\u771f\u5be6\u6027\u9a57\u8b49</p> <p>CWE-353 Missing Support for Integrity Check</p> <p>CWE-353 \u7f3a\u4e4f\u5c0d\u5b8c\u6574\u6027\u78ba\u8a8d\u4e4b\u652f\u63f4</p> <p>CWE-426 Untrusted Search Path</p> <p>CWE-426 \u4e0d\u53d7\u4fe1\u4efb\u7684\u641c\u5c0b\u8def\u5f91</p> <p>CWE-494 Download of Code Without Integrity Check</p> <p>CWE-494 \u4e0b\u8f09\u672a\u7d93\u5b8c\u6574\u6027\u9a57\u8b49\u4e4b\u7a0b\u5f0f\u78bc</p> <p>CWE-502 Deserialization of Untrusted Data</p> <p>CWE-502 \u4e0d\u53d7\u4fe1\u4efb\u8cc7\u6599\u4e4b\u53cd\u5e8f\u5217\u5316</p> <p>CWE-565 Reliance on Cookies without Validation and Integrity Checking</p> <p>CWE-565 \u4fe1\u4efb\u672a\u7d93\u9a57\u8b49\u53ca\u5b8c\u6574\u6027\u78ba\u8a8d\u7684Cookies</p> <p>CWE-784 Reliance on Cookies without Validation and Integrity Checking in a Security Decision</p> <p>CWE-784 \u5728\u5b89\u5168\u6027\u6c7a\u7b56\u4e2d\u4fe1\u4efb\u672a\u7d93\u9a57\u8b49\u53ca\u5b8c\u6574\u6027\u78ba\u8a8d\u7684Cookies</p> <p>CWE-829 Inclusion of Functionality from Untrusted Control Sphere</p> <p>CWE-829\u00a0\u5305\u542b\u4f86\u81ea\u4e0d\u53d7\u4fe1\u4efb\u63a7\u5236\u9818\u57df\u4e4b\u529f\u80fd</p> <p>CWE-830 Inclusion of Web Functionality from an Untrusted Source</p> <p>CWE-830\u00a0\u5305\u542b\u4f86\u81ea\u4e0d\u53d7\u4fe1\u4efb\u63a7\u5236\u4f86\u6e90\u4e4b\u7db2\u9801\u529f\u80fd</p> <p>CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes</p> <p>CWE-915 \u52d5\u614b\u6c7a\u5b9a\u7269\u4ef6\u5c6c\u6027\u65bc\u4e0d\u7576\u63a7\u5236\u4e0b\u4e4b\u4fee\u6539</p>"},{"location":"zh-TW/A09_2021-Security_Logging_and_Monitoring_Failures/#factors","title":"Factors","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Max Coverage Avg Coverage Avg Weighted Exploit Avg Weighted Impact Total Occurrences Total CVEs 4 19.23% 6.51% 53.67% 39.97% 6.87 4.99 53,615 242 \u53ef\u5c0d\u7167 CWEs \u6578\u91cf \u6700\u5927\u767c\u751f\u7387 \u5e73\u5747\u767c\u751f\u7387 \u6700\u5927\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u52a0\u6b0a\u6f0f\u6d1e \u5e73\u5747\u52a0\u6b0a\u5f71\u97ff \u7e3d\u767c\u751f\u6578 \u76f8\u95dc CVEs \u7e3d\u6578\u91cf 4 19.23% 6.51% 53.67% 39.97% 6.87 4.99 53,615 242"},{"location":"zh-TW/A09_2021-Security_Logging_and_Monitoring_Failures/#overview","title":"Overview","text":"<p>Security logging and monitoring came from the industry survey (#3), up slightly from the tenth position in the OWASP Top 10 2017. Logging and monitoring can be challenging to test, often involving interviews or asking if attacks were detected during a penetration test. There isn't much CVE/CVSS data for this category, but detecting and responding to breaches is critical. Still, it can be very impactful for visibility, incident alerting, and forensics. This category expands beyond CWE-778 Insufficient Logging to include CWE-117 Improper Output Neutralization for Logs, CWE-223 Omission of Security-relevant Information, and CWE-532 Insertion of Sensitive Information into Log File.</p> <p>\u5b89\u5168\u8a18\u9304\u53ca\u76e3\u63a7\u662f\u696d\u754c\u8abf\u67e5\u7d50\u679c (#3)\uff0c\u75312017\u5e74\u7684\u7b2c\u5341\u540d\u7a0d\u5fae\u4e0a\u5347\u3002\u8a18\u9304\u53ca\u76e3\u63a7\u529f\u80fd\u9a57\u8b49\u975e\u5e38\u6709\u6311\u6230\u6027\uff0c\u901a\u5e38\u9700\u8981\u4ee5\u8a2a\u8ac7\u6216\u8a62\u554f\u4e4b\u65b9\u5f0f\u6aa2\u9a57\u6709\u7121\u5075\u6e2c\u6ef2\u900f\u6e2c\u8a66\u7684\u653b\u64ca\u6d3b\u52d5\u3002\u5075\u6e2c\u53ca\u61c9\u8b8a\u5c0d\u8cc7\u5b89\u4e8b\u4ef6\u81f3\u95dc\u91cd\u8981\uff0c\u4f46\u6b64\u985e\u578b\u4e4bCVE/CVSS\u8cc7\u6599\u4e0d\u591a\u3002\u5118\u7ba1\u5982\u6b64\uff0c\u6b64\u985e\u578b\u5c0d\u65bc\u4e8b\u4ef6\u544a\u8b66\u3001\u53ef\u898b\u6027\u548c\u9451\u8b58\u4ecd\u7136\u975e\u5e38\u6709\u5f71\u97ff\u529b\u3002\u6b64\u985e\u578b\u6db5\u84cbCWE-778\u4e0d\u8db3\u5730\u8a18\u9304\uff0cCWE-117\u672a\u7d93\u9069\u7576\u8655\u7406\u4e4b\u65e5\u8a8c\u8f38\u51fa\uff0cCWE-223\u907a\u6f0f\u5b89\u5168\u76f8\u95dc\u8cc7\u8a0a\u53caCWE-532\u65bc\u65e5\u8a8c\u6a94\u6848\u7f6e\u5165\u654f\u611f\u8cc7\u8a0a\u3002</p>"},{"location":"zh-TW/A09_2021-Security_Logging_and_Monitoring_Failures/#description","title":"Description","text":"<p>Returning to the OWASP Top 10 2021, this category is to help detect, escalate, and respond to active breaches. Without logging and monitoring, breaches cannot be detected. Insufficient logging, detection, monitoring, and active response occurs any time:</p> <p>\u57282021\u5e74OWASP Top 10\uff0c\u6b64\u985e\u578b\u6709\u52a9\u65bc\u5c0d\u9032\u884c\u4e2d\u8cc7\u5b89\u4e8b\u4ef6\u4e4b\u5075\u6e2c\uff0c\u5347\u7d1a\u53ca\u61c9\u8b8a\u3002\u7f3a\u4e4f\u8a18\u9304\u53ca\u76e3\u63a7\u6642\u7121\u6cd5\u5075\u6e2c\u8cc7\u5b89\u4e8b\u4ef6\u767c\u751f\u3002\u4e0d\u8db3\u5730\u8a18\u9304\uff0c\u5075\u6e2c\uff0c\u76e3\u63a7\u53ca\u4e3b\u52d5\u61c9\u8b8a\u96a8\u6642\u6703\u767c\u751f\uff1a</p> <ul> <li> <p>Auditable events, such as logins, failed logins, and high-value     transactions, are not logged.</p> </li> <li> <p>\u53ef\u7a3d\u6838\u4e8b\u4ef6\u672a\u8a18\u9304\uff0c\u5982\u767b\u5165\u6210\u529f\uff0c\u767b\u5165\u5931\u6557\u53ca\u9ad8\u50f9\u503c\u4ea4\u6613\u3002</p> </li> <li> <p>Warnings and errors generate no, inadequate, or unclear log     messages.</p> </li> <li> <p>\u8b66\u544a\u6216\u932f\u8aa4\u767c\u751f\u6642\u672a\u7522\u751f\uff0c\u7522\u751f\u4e0d\u5145\u8db3\u6216\u7522\u751f\u4e0d\u660e\u78ba\u65e5\u8a8c\u3002</p> </li> <li> <p>Logs of applications and APIs are not monitored for suspicious     activity.</p> </li> <li> <p>\u672a\u76e3\u63a7\u61c9\u7528\u7a0b\u5f0f\u6216\u61c9\u7528\u7a0b\u5f0f\u4ecb\u9762(API)\u65e5\u8a8c\u4e2d\u7684\u53ef\u7591\u6d3b\u52d5\u3002</p> </li> <li> <p>Logs are only stored locally.</p> </li> <li> <p>\u65e5\u8a8c\u50c5\u5132\u5b58\u65bc\u672c\u5730\u7aef\u3002</p> </li> <li> <p>Appropriate alerting thresholds and response escalation processes     are not in place or effective.</p> </li> <li> <p>\u672a\u8a2d\u6709\u6216\u8a2d\u6709\u7121\u6548\u4e4b\u9069\u7576\u544a\u8b66\u95a5\u503c\u53ca\u61c9\u8b8a\u5347\u7d1a\u7a0b\u5e8f\u3002</p> </li> <li> <p>Penetration testing and scans by DAST tools (such as OWASP ZAP) do     not trigger alerts.</p> </li> <li> <p>\u6ef2\u900f\u6e2c\u8a66\u53caDAST\u5de5\u5177(\u5982OWASP ZAP)\u6383\u63cf\u6c92\u6709\u89f8\u767c\u544a\u8b66\u3002</p> </li> <li> <p>The application cannot detect, escalate, or alert for active attacks     in real-time or near real-time.</p> </li> <li> <p>\u61c9\u7528\u7a0b\u5f0f\u7121\u6cd5\u63a5\u8fd1\u5373\u6642\u6216\u5373\u6642\u5075\u6e2c\uff0c\u5347\u7d1a\u6216\u8b66\u544a\u9032\u884c\u4e2d\u4e4b\u653b\u64ca\u3002</p> </li> </ul> <p>You are vulnerable to information leakage by making logging and alerting events visible to a user or an attacker (see A01:2021 \u2013 Broken Access Control).</p> <p>\u5141\u8a31\u4f7f\u7528\u8005\u6216\u653b\u64ca\u8005\u8b80\u53d6\u65e5\u8a8c\u6216\u544a\u8b66\u4e8b\u4ef6\u53ef\u80fd\u65e9\u6210\u8cc7\u8a0a\u6d29\u6f0f(\u53c3\u8003A01:2021\u6b0a\u9650\u63a7\u5236\u5931\u6548)</p>"},{"location":"zh-TW/A09_2021-Security_Logging_and_Monitoring_Failures/#how-to-prevent","title":"How to Prevent","text":"<p>Developers should implement some or all the following controls, d epending on the risk of the application:</p> <p>\u958b\u767c\u8005\u61c9\u4f9d\u64da\u61c9\u7528\u7a0b\u5f0f\u6240\u9762\u81e8\u98a8\u96aa\u5be6\u4f5c\u4e0b\u5217\u90e8\u5206\u6216\u5168\u90e8\u7684\u63a7\u5236\u9805\uff1a</p> <ul> <li> <p>Ensure all login, access control, and server-side input validation     failures can be logged with sufficient user context to identify     suspicious or malicious accounts and held for enough time to allow     delayed forensic analysis.</p> </li> <li> <p>\u78ba\u4fdd\u8a18\u9304\u6240\u6709\u767b\u5165\uff0c\u5b58\u53d6\u63a7\u5236\u53ca\u4f3a\u670d\u5668\u7aef\u8f38\u5165\u9a57\u8b49\u4e4b\u5931\u6557\uff0c\u65e5\u8a8c\u61c9\u5305\u542b\u5145\u8db3\u4f7f\u7528\u8005\u60c5\u5883\u4ee5\u8b58\u5225\u53ef\u7591\u6216\u60e1\u610f\u5e33\u865f\uff0c\u65e5\u8a8c\u61c9\u5b58\u7559\u5145\u8db3\u6642\u9593\u4ee5\u5229\u672a\u4f86\u53ef\u80fd\u4e4b\u9451\u8b58\u5206\u6790\u8981\u6c42\u3002</p> </li> <li> <p>Ensure that logs are generated in a format that log management     solutions can easily consume.</p> </li> <li> <p>\u78ba\u4fdd\u65e5\u8a8c\u683c\u5f0f\u7b26\u5408\u4e00\u822c\u65e5\u8a8c\u7ba1\u7406\u7cfb\u7d71\u5e38\u7528\u683c\u5f0f\u3002</p> </li> <li> <p>Ensure log data is encoded correctly to prevent injections or     attacks on the logging or monitoring systems.</p> </li> <li> <p>\u78ba\u4fdd\u65e5\u8a8c\u7d93\u6b63\u78ba\u7de8\u78bc\u4ee5\u9632\u6b62\u906d\u53d7\u6ce8\u5165\u653b\u64ca\u6216\u65e5\u8a8c/\u76e3\u63a7\u7cfb\u7d71\u906d\u53d7\u653b\u64ca\u3002</p> </li> <li> <p>Ensure high-value transactions have an audit trail with integrity     controls to prevent tampering or deletion, such as append-only     database tables or similar.</p> </li> <li> <p>\u78ba\u4fdd\u9ad8\u50f9\u503c\u4ea4\u6613\u9032\u884c\u6642\u7522\u751f\u7a3d\u6838\u8ecc\u8de1(\u65e5\u8a8c)\u4e26\u5be6\u4f5c\u5b8c\u6574\u6027\u63a7\u5236\u4ee5\u907f\u514d\u7ac4\u6539\u6216\u522a\u9664\uff0c\u5982\u50c5\u9650\u9644\u52a0\u7684\u8cc7\u6599\u8868\u6216\u985e\u4f3c\u5de5\u5177\u3002</p> </li> <li> <p>DevSecOps teams should establish effective monitoring and alerting     such that suspicious activities are detected and responded to     quickly.</p> </li> <li> <p>DevSecOps\u5718\u968a\u61c9\u5efa\u7acb\u6709\u6548\u5730\u76e3\u63a7\u53ca\u544a\u8b66\u6a5f\u5236\u4ee5\u5229\u5075\u6e2c\u53ef\u7591\u6d3b\u52d5\u4e26\u5feb\u901f\u61c9\u8b8a\u3002</p> </li> <li> <p>Establish or adopt an incident response and recovery plan, such as     NIST 800-61r2 or later.</p> </li> <li> <p>\u5efa\u7acb\u6216\u5c0e\u5165\u4e8b\u4ef6\u61c9\u8b8a\u53ca\u5fa9\u539f\u8a08\u756b\uff0c\u5982NIST 800-61r2\u6216\u66f4\u65b0\u7248\u672c\u3002</p> </li> </ul> <p>There are commercial and open-source application protection frameworks such as the OWASP ModSecurity Core Rule Set, and open-source log correlation software, such as the ELK stack, that feature custom dashboards and alerting.</p> <p>\u73fe\u6709\u591a\u7a2e\u5546\u696d\u5316\u53ca\u958b\u653e\u539f\u59cb\u78bc\u61c9\u7528\u7a0b\u5f0f\u4fdd\u8b77\u67b6\u69cb\uff0c\u5982OWASP ModSecurity Core Rule Set\u53ca\u958b\u653e\u539f\u59cb\u78bc\u65e5\u8a8c\u95dc\u806f\u8edf\u9ad4\u53ef\u5ba2\u88fd\u5316\u5100\u8868\u677f\u53ca\u544a\u8b66\uff0c\u5982 ELK stack\u3002</p>"},{"location":"zh-TW/A09_2021-Security_Logging_and_Monitoring_Failures/#example-attack-scenarios","title":"Example Attack Scenarios","text":"<p>Scenario #1: A childrens' health plan provider's website operator couldn't detect a breach due to a lack of monitoring and logging. An external party informed the health plan provider that an attacker had accessed and modified thousands of sensitive health records of more than 3.5 million children. A post-incident review found that the website developers had not addressed significant vulnerabilities. As there was no logging or monitoring of the system, the data breach could have been in progress since 2013, a period of more than seven years.</p> <p>\u60c5\u58831\uff1a\u4e00\u5bb6\u5152\u7ae5\u5065\u5eb7\u8a08\u5283\u4f9b\u61c9\u5546\u7684\u7db2\u7ad9\u904b\u71df\u5546\u56e0\u7f3a\u4e4f\u76e3\u63a7\u548c\u8a18\u9304\u7121\u6cd5\u5075\u6e2c\u8cc7\u5b89\u4e8b\u4ef6\u3002\u5916\u90e8\u901a\u77e5\u8a72\u5065\u5eb7\u8a08\u5283\u4f9b\u61c9\u5546\uff0c\u653b\u64ca\u8005\u5df2\u5b58\u53d6\u53ca\u4fee\u6539\u8d85\u904e 350 \u842c\u540d\u5152\u7ae5\u7684\u654f\u611f\u5065\u5eb7\u8a18\u9304\u3002\u4e8b\u5f8c\u5be9\u67e5\u767c\u73fe\u7db2\u7ad9\u958b\u767c\u8005\u6c92\u6709\u8655\u7406\u91cd\u5927\u5f31\u9ede\u3002\u7531\u65bc\u7cfb\u7d71\u6c92\u6709\u8a18\u9304\u6216\u76e3\u63a7\uff0c\u8cc7\u6599\u6d29\u6f0f\u53ef\u80fd\u5f9e 2013 \u5e74\u958b\u59cb\u81f3\u4eca\uff0c\u6642\u9593\u8d85\u904e\u4e03\u5e74\u3002</p> <p>Scenario #2: A major Indian airline had a data breach involving more than ten years' worth of personal data of millions of passengers, including passport and credit card data. The data breach occurred at a third-party cloud hosting provider, who notified the airline of the breach after some time.</p> <p>\u60c5\u58832\uff1a\u5370\u5ea6\u4e00\u5bb6\u5927\u578b\u822a\u7a7a\u516c\u53f8\u767c\u751f\u6d89\u53ca\u6578\u767e\u842c\u4e58\u5ba2\u8d85\u904e\u5341\u5e74\u5305\u62ec\u8b77\u7167\u53ca\u4fe1\u7528\u5361\u8cc7\u6599\u7b49\u500b\u4eba\u8cc7\u6599\u7684\u8cc7\u6599\u6d29\u6f0f\u3002\u8cc7\u6599\u6d29\u6f0f\u767c\u751f\u5728\u7b2c\u4e09\u65b9\u4f9b\u61c9\u5546\u63d0\u4f9b\u7684\u96f2\u7aef\u670d\u52d9\uff0c\u8a72\u4f9b\u61c9\u5546\u5728\u8cc7\u6599\u6d29\u6f0f\u767c\u751f\u4e00\u6bb5\u6642\u9593\u5f8c\u901a\u77e5\u822a\u7a7a\u516c\u53f8\u3002</p> <p>Scenario #3: A major European airline suffered a GDPR reportable breach. The breach was reportedly caused by payment application security vulnerabilities exploited by attackers, who harvested more than 400,000 customer payment records. The airline was fined 20 million pounds as a result by the privacy regulator.</p> <p>\u60c5\u58833\uff1a\u4e00\u5bb6\u5927\u578b\u6b50\u6d32\u822a\u7a7a\u516c\u53f8\u767c\u751f\u4f9dGDPR\u61c9\u5831\u544a\u4e4b\u500b\u8cc7\u4e8b\u6545\u3002 \u64da\u5831\u5c0e\uff0c\u653b\u64ca\u8005\u5229\u7528\u652f\u4ed8\u61c9\u7528\u7cfb\u7d71\u4e4b\u5b89\u5168\u6f0f\u6d1e\uff0c\u53d6\u5f97\u8d85\u904e40\u842c\u7b46\u5ba2\u6236\u652f\u4ed8\u7d00\u9304\u3002 \u8a72\u822a\u7a7a\u516c\u53f8\u906d\u96b1\u79c1\u4e3b\u7ba1\u6a5f\u95dc\u88c1\u7f70\u5169\u5343\u842c\u82f1\u938a\u3002</p>"},{"location":"zh-TW/A09_2021-Security_Logging_and_Monitoring_Failures/#references","title":"References","text":"<ul> <li> <p>OWASP Proactive Controls: Implement Logging and     Monitoring</p> </li> <li> <p>OWASP Application Security Verification Standard: V8 Logging and     Monitoring</p> </li> <li> <p>OWASP Testing Guide: Testing for Detailed Error     Code</p> </li> <li> <p>OWASP Cheat Sheet:     Logging</p> </li> <li> <p>Data Integrity: Recovering from Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Identifying and Protecting Assets Against     Ransomware and Other Destructive     Events</p> </li> <li> <p>Data Integrity: Detecting and Responding to Ransomware and Other     Destructive     Events</p> </li> </ul>"},{"location":"zh-TW/A09_2021-Security_Logging_and_Monitoring_Failures/#list-of-mapped-cwes","title":"List of Mapped CWEs","text":"<p>CWE-117 Improper Output Neutralization for Logs</p> <p>CWE-117 \u672a\u7d93\u9069\u7576\u8655\u7406\u4e4b\u65e5\u8a8c\u8f38\u51fa</p> <p>CWE-223 Omission of Security-relevant Information</p> <p>CWE-223 \u907a\u6f0f\u5b89\u5168\u76f8\u95dc\u8cc7\u8a0a</p> <p>CWE-532 Insertion of Sensitive Information into Log File</p> <p>CWE-532 \u65bc\u65e5\u8a8c\u6a94\u6848\u7f6e\u5165\u654f\u611f\u8cc7\u8a0a</p> <p>CWE-778 Insufficient Logging</p> <p>CWE-778 \u4e0d\u8db3\u5730\u8a18\u9304</p>"},{"location":"zh-TW/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#factors","title":"Factors","text":"CWEs Mapped Max Incidence Rate Avg Incidence Rate Max Coverage Avg Coverage Avg Weighted Exploit Avg Weighted Impact Total Occurrences Total CVEs 1 2.72% 2.72% 67.72% 67.72% 8.28 6.72 9,503 385 \u53ef\u5c0d\u7167 CWEs \u6578\u91cf \u6700\u5927\u767c\u751f\u7387 \u5e73\u5747\u767c\u751f\u7387 \u6700\u5927\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u52a0\u6b0a\u6f0f\u6d1e \u5e73\u5747\u52a0\u6b0a\u5f71\u97ff \u51fa\u73fe\u6b21\u6578 \u6240\u6709\u76f8\u95dc CVEs \u6578\u91cf 1 2.72% 2.72% 67.72% 67.72% 8.28 6.72 9,503 385"},{"location":"zh-TW/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#overview","title":"Overview (\u6982\u89bd)","text":"<p>This category is added from the industry survey (#1). The data shows a relatively low incidence rate with above average testing coverage and above-average Exploit and Impact potential ratings. As new entries are likely to be a single or small cluster of CWEs for attention and awareness, the hope is that they are subject to focus and can be rolled into a larger category in a future edition. \u9019\u500b\u985e\u5225\u662f\u5f9e\u7522\u696d\u8abf\u67e5\u7d50\u679c\u52a0\u5165\u81f3\u6b64\u7684(#1)\u3002\u8cc7\u6599\u986f\u793a\u5728\u6e2c\u8a66\u8986\u84cb\u7387\u9ad8\u65bc\u5e73\u5747\u6c34\u6e96\u4ee5\u53ca\u5229\u7528(Exploit)\u548c\u885d\u64ca(Impact)\u6f5b\u529b\u8a55\u7b49\u9ad8\u65bc\u5e73\u5747\u6c34\u6e96\u7684\u60c5\u6cc1\u4e0b\uff0c\u6b64\u985e\u5225\u767c\u751f\u6a5f\u7387\u76f8\u5c0d\u8f03\u4f4e\u3002\u56e0\u70ba\u65b0\u5831\u5230\u7684\u985e\u5225\u6709\u53ef\u80fd\u662f\u5728CWEs\u7576\u4e2d\u53d7\u5230\u55ae\u4e00\u6216\u5c0f\u7fa4\u95dc\u6ce8\u7684\u985e\u5225\u800c\u5df2\uff0c\u56e0\u6b64\u6211\u5011\u5e0c\u671b\u6b64\u9805\u76ee\u53ef\u4ee5\u5f15\u4f86\u66f4\u591a\u4eba\u95dc\u6ce8\uff0c\u9032\u800c\u5728\u672a\u4f86\u7248\u672c\u8b8a\u6210\u4e00\u500b\u8f03\u5927\u7684\u985e\u5225\u3002</p>"},{"location":"zh-TW/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#description","title":"Description (\u8aaa\u660e)","text":"<p>SSRF flaws occur whenever a web application is fetching a remote resource without validating the user-supplied URL. It allows an attacker to coerce the application to send a crafted request to an unexpected destination, even when protected by a firewall, VPN, or another type of network ACL. (\u7576\u7db2\u9801\u61c9\u7528\u7a0b\u5f0f\u6b63\u5728\u53d6\u5f97\u9060\u7aef\u8cc7\u6e90\uff0c\u537b\u672a\u9a57\u8b49\u7531\u4f7f\u7528\u8005\u63d0\u4f9b\u7684\u7db2\u5740\uff0c\u6b64\u6642\u5c31\u6703\u767c\u751f\u507d\u9020\u4f3a\u670d\u7aef\u8acb\u6c42\u3002\u5373\u4fbf\u6709\u9632\u706b\u7246\u3001VPN\u6216\u5176\u4ed6\u7db2\u8defACL\u4fdd\u8b77\u7684\u60c5\u6cc1\u4e0b\uff0c\u653b\u64ca\u8005\u4ecd\u5f97\u4ee5\u5f37\u8feb\u7db2\u9801\u61c9\u7528\u7a0b\u5f0f\u767c\u9001\u4e00\u500b\u7d93\u904e\u634f\u9020\u7684\u8acb\u6c42\u7d66\u4e00\u500b\u975e\u9810\u671f\u7684\u76ee\u7684\u7aef\u3002)</p> <p>As modern web applications provide end-users with convenient features, fetching a URL becomes a common scenario. As a result, the incidence of SSRF is increasing. Also, the severity of SSRF is becoming higher due to cloud services and the complexity of architectures. (\u73fe\u4eca\u7684\u7db2\u9801\u61c9\u7528\u7a0b\u5f0f\u63d0\u4f9b\u7d42\u7aef\u4f7f\u7528\u8005\u4fbf\u5229\u7684\u7279\u8272\uff0c\u53d6\u5f97\u7db2\u5740\u5df2\u7d93\u662f\u5e38\u898b\u7684\u4e86\u3002\u56e0\u6b64\uff0c\u507d\u9020\u4f3a\u670d\u7aef\u8acb\u6c42\u7684\u767c\u751f\u7387\u662f\u5728\u589e\u52a0\u7576\u4e2d\u7684\u3002\u800c\u4e14\uff0c\u56e0\u70ba\u96f2\u7aef\u670d\u52d9\u548c\u96f2\u7aef\u7d50\u69cb\u7684\u8907\u96dc\u6027\uff0c\u507d\u9020\u4f3a\u670d\u7aef\u8acb\u6c42\u7684\u56b4\u91cd\u6027\u5c07\u6703\u6108\u4f86\u6108\u56b4\u5cfb\u3002)</p>"},{"location":"zh-TW/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#how-to-prevent","title":"How to Prevent (\u5982\u4f55\u9810\u9632)","text":"<p>Developers can prevent SSRF by implementing some or all the following defense in depth controls: (\u958b\u767c\u8005\u53ef\u4ee5\u9810\u9632\u507d\u9020\u4f3a\u670d\u7aef\u8acb\u6c42\uff0c\u900f\u904e\u5be6\u65bd\u4e0b\u5217\u4e00\u90e8\u5206\u6216\u5168\u90e8\u7684\u7e31\u8eab\u9632\u79a6\u63a7\u5236\u63aa\u65bd\uff1a)</p>"},{"location":"zh-TW/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#from-network-layer","title":"From Network layer (\u5f9e\u7db2\u8def\u5c64\u8457\u624b)","text":"<ul> <li> <p>Segment remote resource access functionality in separate networks to     reduce the impact of SSRF (\u5c07\u9060\u7aef\u8cc7\u6e90\u5b58\u53d6\u529f\u80fd\u5207\u5272\u6210\u4e0d\u540c\u5b50\u7db2\u8def\u4ee5\u964d\u4f4e\u507d\u9020\u4f3a\u670d\u7aef\u8acb\u6c42\u4e4b\u885d\u64ca)</p> </li> <li> <p>Enforce \u201cdeny by default\u201d firewall policies or network access     control rules to block all but essential intranet traffic (\u65bc\u9632\u706b\u7246\u653f\u7b56\u6216\u65bc\u7db2\u8def\u5b58\u53d6\u63a7\u5236\u898f\u5247\u5be6\u65bd\"\u9810\u8a2d\u5168\u62d2\u7d55(deny by default)\" \uff0c\u4ee5\u5c01\u9396\u5168\u90e8\u4f86\u81ea\u5916\u90e8\u4e4b\u7db2\u8def\u6d41\u91cf)</p> </li> </ul>"},{"location":"zh-TW/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#from-application-layer","title":"From Application layer: (\u5f9e\u61c9\u7528\u5c64)","text":"<ul> <li> <p>Sanitize and validate all client-supplied input data (\u904e\u6ffe\u4e26\u9a57\u8b49\u4f86\u81ea\u65bc\u7528\u6236\u7aef\u63d0\u4f9b\u4e4b\u5168\u90e8\u8f38\u5165)</p> </li> <li> <p>Enforce the URL schema, port, and destination with a positive allow     list (\u4ee5\u6b63\u9762\u8868\u5217\u65b9\u5f0f\u5217\u51faURL\u3001port\u3001\u76ee\u7684\u5730\u6e05\u55ae)</p> </li> <li> <p>Do not send raw responses to clients (\u4e0d\u50b3\u9001\u539f\u59cb\u56de\u61c9\u7d66\u7528\u6236\u7aef)</p> </li> <li> <p>Disable HTTP redirections (\u505c\u7528HTTP\u91cd\u65b0\u5c0e\u5411)</p> </li> <li> <p>Be aware of the URL consistency to avoid attacks such as DNS     rebinding and \u201ctime of check, time of use\u201d (TOCTOU) race conditions (\u7559\u610f\u7db2\u5740\u4e4b\u4e00\u81f4\u6027\uff0c\u4ee5\u907f\u514d\u4f8b\u5982DNS rebinding\u653b\u64ca\u3001TOCTOU\u653b\u64ca)</p> </li> </ul> <p>Do not mitigate SSRF via the use of a deny list or regular expression. Attackers have payload lists, tools, and skills to bypass deny lists. (\u5225\u900f\u904e\u62d2\u7d55\u6e05\u55ae\u6216\u6b63\u898f\u8868\u793a\u5f0f\u4f86\u6e1b\u7de9\u507d\u9020\u4f3a\u670d\u7aef\u8acb\u6c42\u3002\u653b\u64ca\u8005\u6709 payload \u6e05\u55ae\u3001\u5de5\u5177\u548c\u6280\u5de7\u53ef\u4ee5\u7e5e\u904e\u9019\u4e9b\u62d2\u7d55\u6e05\u55ae\u3002)</p>"},{"location":"zh-TW/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/#example-attack-scenarios","title":"Example Attack Scenarios (\u653b\u64ca\u60c5\u5883\u7bc4\u4f8b)","text":"<p>Attackers can use SSRF to attack systems protected behind web application firewalls, firewalls, or network ACLs, using scenarios such as: (\u653b\u64ca\u8005\u53ef\u4ee5\u5229\u7528\u507d\u9020\u4f3a\u670d\u7aef\u8acb\u6c42\u4f86\u653b\u64ca\u5728WAF\u3001\u9632\u706b\u7246\u3001\u6216\u7db2\u8defACL\u5f8c\u9762\u7684\u7cfb\u7d71\uff0c\u53ef\u80fd\u63a1\u53d6\u4e4b\u60c5\u5883\u5982\u4e0b\uff1a)</p> <p>Scenario #1: Port scan internal servers. If the network architecture is unsegmented, attackers can map out internal networks and determine if ports are open or closed on internal servers from connection results or elapsed time to connect or reject SSRF payload connections. (\u60c5\u5883\u4e00\uff1a\u5c0d\u5167\u90e8\u4f3a\u670d\u5668 port scan\u3002\u5982\u679c\u7db2\u8def\u67b6\u69cb\u672a\u88ab\u5207\u5272\uff0c\u653b\u64ca\u8005\u53ef\u4ee5\u900f\u904e\u9023\u7dda\u7d50\u679c\u6216\u9023\u7dda\u6240\u7d93\u904e\u7684\u6642\u9593\u6216\u62d2\u7d55SSRF payload\u9023\u7dda\u7684\u72c0\u614b\uff0c\u52a0\u4ee5\u5c0d\u61c9\u51fa\u5167\u90e8\u7db2\u8def\u4e26\u4e14\u5224\u65b7\u8a72\u7b49 port\u5728\u5167\u90e8\u4f3a\u670d\u5668\u662f\u5426\u958b\u555f\u6216\u95dc\u9589\u72c0\u614b)</p> <p>Scenario #2: Sensitive data exposure. Attackers can access local files such as  or internal services to gain sensitive information. (\u60c5\u5883\u4e8c\uff1a\u6a5f\u654f\u8cc7\u6599\u6d29\u6f0f\u3002\u653b\u64ca\u8005\u53ef\u4ee5\u5b58\u53d6\u672c\u5730\u7aef\u6a94\u6848(\u4f8b\u5982 ) \u6216\u5167\u90e8\u670d\u52d9\u5df2\u53d6\u5f97\u6a5f\u654f\u8cc7\u6599\u3002) <p>Scenario #3: Access metadata storage of cloud services. Most cloud providers have metadata storage such as http://169.254.169.254/. An attacker can read the metadata to gain sensitive information. (\u60c5\u5883\u4e09\uff1a\u5b58\u53d6\u96f2\u670d\u52d9\u4e4b metadata storage\u3002\u5927\u90e8\u5206\u96f2\u7aef\u63d0\u4f9b\u8005\u90fd\u6709 metadata storage\uff0c\u4f8b\u5982http://169.254.169.254/\u3002\u653b\u64ca\u8005\u53ef\u4ee5\u8b80\u53d6metadata\u4ee5\u53d6\u5f97\u6a5f\u654f\u8cc7\u8a0a\u3002)</p> <p>Scenario #4: Compromise internal services \u2013 The attacker can abuse internal services to conduct further attacks such as Remote Code Execution (RCE) or Denial of Service (DoS). (\u60c5\u5883\u56db\uff1a\u6ef2\u900f\u5167\u90e8\u670d\u52d9 - \u653b\u64ca\u8005\u53ef\u4ee5\u6feb\u7528\u5167\u90e8\u670d\u52d9\u53bb\u57f7\u884c\u66f4\u9032\u4e00\u6b65\u7684\u653b\u64ca\uff0c\u4f8b\u5982RCE\u6216Dos\u3002</p>"},{"location":"zh-TW/A11_2021-Next_Steps/","title":"A11:2021 \u2013 \u4e0b\u4e00\u6b65","text":"<p>By design, the OWASP Top 10 is innately limited to the ten most significant risks. Every OWASP Top 10 has \u201con the cusp\u201d risks considered at length for inclusion, but in the end, they didn\u2019t make it. No matter how we tried to interpret or twist the data, the other risks were more prevalent and impactful.</p> <p>Organizations working towards a mature appsec program or security consultancies or tool vendors wishing to expand coverage for their offerings, the following four issues are well worth the effort to identify and remediate.</p>"},{"location":"zh-TW/A11_2021-Next_Steps/#_1","title":"\u7a0b\u5f0f\u78bc\u54c1\u8cea\u554f\u984c","text":"\u53ef\u5c0d\u7167 CWEs \u6578\u91cf \u6700\u5927\u767c\u751f\u7387 \u5e73\u5747\u767c\u751f\u7387 \u6700\u5927\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u52a0\u6b0a\u5f31\u9ede \u5e73\u5747\u52a0\u6b0a\u5f71\u97ff \u51fa\u73fe\u6b21\u6578 \u6240\u6709\u6709\u95dc CVEs \u6578\u91cf 38 49.46% 2.22% 60.85% 23.42% 101736 7564 <ul> <li> <p>Description. Code quality issues include known security defects     or patterns, reusing variables for multiple purposes, exposure of     sensitive information in debugging output, off-by-one errors, time     of check/time of use (TOCTOU) race conditions, unsigned or signed     conversion errors, use after free, and more. The hallmark of this     section is that they can usually be identified with stringent     compiler flags, static code analysis tools, and linter IDE plugins.     Modern languages by design eliminated many of these issues, such as     Rust\u2019s memory ownership and borrowing concept, Rust\u2019s threading     design, and Go\u2019s strict typing and bounds checking.</p> </li> <li> <p>How to prevent. Enable and use your editor and language\u2019s static     code analysis options. Consider using a static code analysis tool.     Consider if it might be possible to use or migrate to a language or     framework that eliminates bug classes, such as Rust or Go.</p> </li> <li> <p>Example attack scenarios. An attacker might obtain or update     sensitive information by exploiting a race condition using a     statically shared variable across multiple threads.</p> </li> <li> <p>References. TBA</p> </li> </ul>"},{"location":"zh-TW/A11_2021-Next_Steps/#_2","title":"\u963b\u65b7\u670d\u52d9\u653b\u64ca","text":"\u53ef\u5c0d\u7167 CWEs \u6578\u91cf \u6700\u5927\u767c\u751f\u7387 \u5e73\u5747\u767c\u751f\u7387 \u6700\u5927\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u52a0\u6b0a\u5f31\u9ede \u5e73\u5747\u52a0\u6b0a\u5f71\u97ff \u51fa\u73fe\u6b21\u6578 \u6240\u6709\u6709\u95dc CVEs \u6578\u91cf 8 17.54% 4.89% 79.58% 33.26% 66985 973 <ul> <li> <p>Description. Denial of service is always possible given     sufficient resources. However, design and coding practices have a     significant bearing on the magnitude of the denial of service.     Suppose anyone with the link can access a large file, or a     computationally expensive transaction occurs on every page. In that     case, denial of service requires less effort to conduct.</p> </li> <li> <p>How to prevent. Performance test code for CPU, I/O, and memory     usage, re-architect, optimize, or cache expensive operations.     Consider access controls for larger objects to ensure that only     authorized individuals can access huge files or objects or serve     them by an edge caching network.</p> </li> <li> <p>Example attack scenarios. An attacker might determine that an     operation takes 5-10 seconds to complete. When running four     concurrent threads, the server seems to stop responding. The     attacker uses 1000 threads and takes the entire system offline.</p> </li> <li> <p>References. TBA</p> </li> </ul>"},{"location":"zh-TW/A11_2021-Next_Steps/#_3","title":"\u8a18\u61b6\u9ad4\u7ba1\u7406\u932f\u8aa4","text":"\u53ef\u5c0d\u7167 CWEs \u6578\u91cf \u6700\u5927\u767c\u751f\u7387 \u5e73\u5747\u767c\u751f\u7387 \u6700\u5927\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u52a0\u6b0a\u5f31\u9ede \u5e73\u5747\u52a0\u6b0a\u5f71\u97ff \u51fa\u73fe\u6b21\u6578 \u6240\u6709\u6709\u95dc CVEs \u6578\u91cf 14 7.03% 1.16% 56.06% 31.74% 26576 16184 <ul> <li> <p>Description. Web applications tend to be written in managed     memory languages, such as Java, .NET, or node.js (JavaScript or     TypeScript). However, these languages are written in systems     languages that have memory management issues, such as buffer or heap     overflows, use after free, integer overflows, and more. There have     been many sandbox escapes over the years that prove that just     because the web application language is nominally memory \u201csafe,\u201d the     foundations are not.</p> </li> <li> <p>How to prevent. Many modern APIs are now written in memory-safe     languages such as Rust or Go. In the case of Rust, memory safety is     a crucial feature of the language. For existing code, the use of     strict compiler flags, strong typing, static code analysis, and fuzz     testing can be beneficial in identifying memory leaks, memory, and     array overruns, and more.</p> </li> <li> <p>Example attack scenarios. Buffer and heap overflows have been a     mainstay of</p> </li> <li> <p>References. TBA</p> </li> </ul>"},{"location":"zh-TW/A11_2021-Next_Steps/#_4","title":"\u5b89\u5168\u63a7\u5236\u5931\u8aa4","text":"\u53ef\u5c0d\u7167 CWEs \u6578\u91cf \u6700\u5927\u767c\u751f\u7387 \u5e73\u5747\u767c\u751f\u7387 \u6700\u5927\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u8986\u84cb\u7bc4\u570d \u5e73\u5747\u52a0\u6b0a\u5f31\u9ede \u5e73\u5747\u52a0\u6b0a\u5f71\u97ff \u51fa\u73fe\u6b21\u6578 \u6240\u6709\u6709\u95dc CVEs \u6578\u91cf 2 11.35% 9.64% 76.60% 45.23% 44911 329 <ul> <li> <p>Description.</p> </li> <li> <p>How to prevent.</p> </li> <li> <p>Example attack scenarios.</p> </li> <li> <p>References. TBA</p> </li> </ul>"}]}