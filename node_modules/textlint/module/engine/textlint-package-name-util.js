/**
 * Remove `prefix` from `text`.
 */
export var removePrefixFromPackageName = function (prefixList, packageName) {
    for (var i = 0; i < prefixList.length; i++) {
        var prefix = prefixList[i];
        // @scope/name -> @scope/name
        // @scope/textlint-rule-name -> @scope/name
        if (packageName.charAt(0) === "@") {
            var _a = packageName.split("/"), namespace = _a[0], name_1 = _a[1];
            if (name_1.startsWith(prefix)) {
                return namespace + "/" + name_1.slice(prefix.length);
            }
        }
        // name -> name
        // textlint-rule-name -> name
        else if (packageName.startsWith(prefix)) {
            return packageName.slice(prefix.length);
        }
    }
    // No match
    return packageName;
};
/**
 * Create full package name and return
 * @param {string} prefix
 * @param {string} name
 * @returns {string}
 */
export var createFullPackageName = function (prefix, name) {
    if (name.charAt(0) === "@") {
        var scopedPackageNameRegex = new RegExp("^" + prefix + "(-|$)");
        // if @scope/<name> -> @scope/<prefix><name>
        if (!scopedPackageNameRegex.test(name.split("/")[1])) {
            /*
             * for scoped packages, insert the textlint-rule after the first / unless
             * the path is already @scope/<name> or @scope/textlint-rule-<name>
             */
            return name.replace(/^@([^/]+)\/(.*)$/, "@$1/" + prefix + "$2");
        }
    }
    return "" + prefix + name;
};
//# sourceMappingURL=textlint-package-name-util.js.map