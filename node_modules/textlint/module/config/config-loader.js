import { moduleInterop } from "@textlint/module-interop";
import { rcFile } from "rc-config-loader";
/**
 * @param configFileName "textlint" for .textlinrc
 * @param cwd current working dir
 * @param configFilePath it is preferred than configFileName
 * @param moduleResolver
 */
export function loadConfig(_a) {
    var cwd = _a.cwd, configFileName = _a.configFileName, configFilePath = _a.configFilePath, moduleResolver = _a.moduleResolver;
    // if specify Config module, use it
    if (configFilePath) {
        try {
            var modulePath = moduleResolver.resolveConfigPackageName(configFilePath);
            return {
                config: moduleInterop(require(modulePath)),
                filePath: modulePath
            };
        }
        catch (error) {
            // not found config module
        }
    }
    // auto or specify path to config file
    var result = rcFile(configFileName, {
        configFileName: configFilePath,
        defaultExtension: [".json", ".js", ".yml"],
        packageJSON: {
            fieldName: "textlint"
        },
        cwd: cwd
    });
    if (result === undefined) {
        return {
            config: {},
            filePath: undefined
        };
    }
    return {
        config: result.config,
        filePath: result.filePath
    };
}
//# sourceMappingURL=config-loader.js.map