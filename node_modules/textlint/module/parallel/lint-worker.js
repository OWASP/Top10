import { parentPort, threadId, isMainThread, workerData } from "worker_threads";
import { TextLintEngine } from "../textlint-engine";
import { TextFixEngine } from "../textfix-engine";
var debug = require("debug")("textlint:parallel/lint-worker");
var _a = workerData, config = _a.config, type = _a.type, files = _a.files;
debug("Worker(%s) Start", threadId);
// Worker Main
if (isMainThread) {
    throw new Error("Worker should not be worked in mainThread");
}
var engine = type === "lint" ? new TextLintEngine(config) : new TextFixEngine(config);
engine
    .executeOnFiles(files)
    .then(function (results) {
    debug("Worker(%s) Done", threadId);
    if (parentPort) {
        parentPort.postMessage(results);
    }
})
    .catch(function (error) {
    debug("Worker(%s) Error", error.stack);
    process.exitCode = 1;
});
//# sourceMappingURL=lint-worker.js.map