// LICENSE : MIT
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextLintCore = exports.TextFixEngine = exports.TextLintEngine = exports.textlint = exports.cli = void 0;
// Level of abstraction(descending order)
// cli > TextLintEngine > TextLintCore(textlint)
// See: https://github.com/textlint/textlint/blob/master/docs/use-as-modules.md
// Command line interface
var cli_1 = require("./cli");
Object.defineProperty(exports, "cli", { enumerable: true, get: function () { return cli_1.cli; } });
// It is a singleton object of TextLintCore
// Recommend: use TextLintCore
var textlint_1 = require("./textlint");
Object.defineProperty(exports, "textlint", { enumerable: true, get: function () { return textlint_1.textlint; } });
// TextLintEngine is a wrapper around `textlint` for linting **multiple** files
// include formatter, detecting utils
// <Recommend>: It is easy to use
// You can see engine/textlint-engine-core.js for more detail
var textlint_engine_1 = require("./textlint-engine");
Object.defineProperty(exports, "TextLintEngine", { enumerable: true, get: function () { return textlint_engine_1.TextLintEngine; } });
// TextFixEngine is a wrapper around `textlint` for linting **multiple** files
// include formatter, detecting utils
// <Recommend>: It is easy to use
// You can see engine/textlint-engine-core.js for more detail
var textfix_engine_1 = require("./textfix-engine");
Object.defineProperty(exports, "TextFixEngine", { enumerable: true, get: function () { return textfix_engine_1.TextFixEngine; } });
// Core API for linting a **single** text or file.
var textlint_core_1 = require("./textlint-core");
Object.defineProperty(exports, "TextLintCore", { enumerable: true, get: function () { return textlint_core_1.TextLintCore; } });
//# sourceMappingURL=index.js.map