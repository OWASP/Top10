"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeTextlintPluginKey = exports.normalizeTextlintRulePresetKey = exports.normalizeTextlintFilterRuleKey = exports.normalizeTextlintRuleKey = exports.normalizeTextlintPresetSubRuleKey = exports.normalizeTextlintKeyPath = void 0;
var TextlintPackagePrefix_1 = require("./TextlintPackagePrefix");
var KeyPathUtil_1 = require("./KeyPathUtil");
/**
 * normalize `keyPath` that is specific path for rule
 * This normalize function handle ambiguity `key`
 * `keyPath` is one of "preset/rule` key, or "rule" key
 *
 * Note: `textlint-rule-textlint-rule-x`(twice!) is normalized at once.
 * It is edge case and this function can not treat it.
 * @param keyPath
 */
var normalizeTextlintKeyPath = function (keyPath) {
    var _a = KeyPathUtil_1.splitKeyToPresetSubRule(keyPath), preset = _a.preset, rule = _a.rule;
    if (!preset) {
        return exports.normalizeTextlintRuleKey(rule);
    }
    return exports.normalizeTextlintRulePresetKey(preset) + "/" + exports.normalizeTextlintRuleKey(rule);
};
exports.normalizeTextlintKeyPath = normalizeTextlintKeyPath;
/**
 * Normalize to preset-name/rule-name
 */
var normalizeTextlintPresetSubRuleKey = function (names) {
    var preset = names.preset, rule = names.rule;
    return exports.normalizeTextlintRulePresetKey(preset) + "/" + exports.normalizeTextlintRuleKey(rule);
};
exports.normalizeTextlintPresetSubRuleKey = normalizeTextlintPresetSubRuleKey;
/**
 * Normalize rule key
 * @param name
 */
var normalizeTextlintRuleKey = function (name) {
    return KeyPathUtil_1.removePrefixFromPackageName([TextlintPackagePrefix_1.TextlintPackageNamePrefix.rule], name);
};
exports.normalizeTextlintRuleKey = normalizeTextlintRuleKey;
/**
 * Normalize filter rule key
 * @param name
 */
var normalizeTextlintFilterRuleKey = function (name) {
    return KeyPathUtil_1.removePrefixFromPackageName([TextlintPackagePrefix_1.TextlintPackageNamePrefix.filterRule], name);
};
exports.normalizeTextlintFilterRuleKey = normalizeTextlintFilterRuleKey;
/**
 * Normalize rule preset key
 * @param name
 */
var normalizeTextlintRulePresetKey = function (name) {
    // "preset-<name>" and "textlint-rule-preset-"
    return KeyPathUtil_1.removePrefixFromPackageName([TextlintPackagePrefix_1.TextlintPackageNamePrefix.rulePreset, "preset-"], name);
};
exports.normalizeTextlintRulePresetKey = normalizeTextlintRulePresetKey;
/**
 * Normalize plugin key
 * @param name
 */
var normalizeTextlintPluginKey = function (name) {
    return KeyPathUtil_1.removePrefixFromPackageName([TextlintPackagePrefix_1.TextlintPackageNamePrefix.plugin], name);
};
exports.normalizeTextlintPluginKey = normalizeTextlintPluginKey;
//# sourceMappingURL=TextlintKeyPath.js.map