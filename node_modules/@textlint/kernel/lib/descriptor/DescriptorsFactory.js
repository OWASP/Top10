// LICENSE : MIT
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTextlintPluginDescriptors = exports.createTextlintFilterRuleDescriptors = exports.createTextlintRuleDescriptors = void 0;
var TextlintFilterRuleDescriptor_1 = require("./TextlintFilterRuleDescriptor");
var TextlintFilterRuleDescriptors_1 = require("./TextlintFilterRuleDescriptors");
var TextlintRuleDescriptors_1 = require("./TextlintRuleDescriptors");
var TextlintLintableRuleDescriptor_1 = require("./TextlintLintableRuleDescriptor");
var TextlintPluginDescriptors_1 = require("./TextlintPluginDescriptors");
var TextlintPluginDescriptor_1 = require("./TextlintPluginDescriptor");
var rule_creator_helper_1 = require("./rule-creator-helper");
var TextlintFixableRuleDescriptor_1 = require("./TextlintFixableRuleDescriptor");
exports.createTextlintRuleDescriptors = function (rules) {
    var ruleOrFixableRuleDescriptorList = rules.map(function (rule) {
        if (rule_creator_helper_1.hasFixer(rule.rule)) {
            return new TextlintFixableRuleDescriptor_1.TextlintFixableRuleDescriptor(rule);
        }
        else {
            return new TextlintLintableRuleDescriptor_1.TextlintLintableRuleDescriptor(rule);
        }
    });
    return new TextlintRuleDescriptors_1.TextlintRuleDescriptors(ruleOrFixableRuleDescriptorList);
};
exports.createTextlintFilterRuleDescriptors = function (rules) {
    return new TextlintFilterRuleDescriptors_1.TextlintFilterRuleDescriptors(rules.map(function (rule) { return new TextlintFilterRuleDescriptor_1.TextlintFilterRuleDescriptor(rule); }));
};
exports.createTextlintPluginDescriptors = function (rules) {
    return new TextlintPluginDescriptors_1.TextlintPluginDescriptors(rules.map(function (rule) { return new TextlintPluginDescriptor_1.TextlintPluginDescriptor(rule); }));
};
//# sourceMappingURL=DescriptorsFactory.js.map