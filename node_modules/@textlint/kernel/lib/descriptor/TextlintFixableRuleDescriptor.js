// LICENSE : MIT
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextlintFixableRuleDescriptor = void 0;
var rule_creator_helper_1 = require("./rule-creator-helper");
var TextlintLintableRuleDescriptor_1 = require("./TextlintLintableRuleDescriptor");
/**
 * Textlint Fixable Rule Descriptor.
 * It is inherit **Rule** Descriptor and add fixer() method.
 * It handle RuleCreator and RuleOption.
 */
var TextlintFixableRuleDescriptor = /** @class */ (function (_super) {
    __extends(TextlintFixableRuleDescriptor, _super);
    function TextlintFixableRuleDescriptor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(TextlintFixableRuleDescriptor.prototype, "fixer", {
        /**
         * Return fixer function
         * You should check hasFixer before call this.
         */
        get: function () {
            return rule_creator_helper_1.getFixer(this.rule);
        },
        enumerable: false,
        configurable: true
    });
    return TextlintFixableRuleDescriptor;
}(TextlintLintableRuleDescriptor_1.TextlintLintableRuleDescriptor));
exports.TextlintFixableRuleDescriptor = TextlintFixableRuleDescriptor;
//# sourceMappingURL=TextlintFixableRuleDescriptor.js.map