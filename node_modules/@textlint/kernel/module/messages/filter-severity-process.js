// LICENSE : MIT
"use strict";
import { TextlintRuleSeverityLevelKeys } from "../context/TextlintRuleSeverityLevelKeys";
/**
 * Filter messages by their severity.
 * @param {TextlintMessage[]} messages
 * @returns {TextlintMessage[]} filtered messages
 */
export function filterWarningMessages(messages) {
    if (messages === void 0) { messages = []; }
    return messages.filter(function (message) {
        return message.severity === TextlintRuleSeverityLevelKeys.error;
    });
}
/**
 * Pass through all messages.
 * @param {TextlintMessage[]} messages
 * @returns {TextlintMessage[]}
 */
export function through(messages) {
    if (messages === void 0) { messages = []; }
    return messages;
}
/**
 * Create message filter by config.quiet.
 * @param {Config} config
 * @returns {Function} filter function for messages
 */
export default function createSeverityFilter(config) {
    if (config.quiet) {
        return filterWarningMessages;
    }
    else {
        return through;
    }
}
//# sourceMappingURL=filter-severity-process.js.map