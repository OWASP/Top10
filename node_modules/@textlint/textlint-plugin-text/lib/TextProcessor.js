/* eslint-disable no-unused-vars */
// LICENSE : MIT
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextProcessor = void 0;
var text_to_ast_1 = require("@textlint/text-to-ast");
var TextProcessor = /** @class */ (function () {
    function TextProcessor(config) {
        if (config === void 0) { config = {}; }
        this.config = config;
        // support "extension" option
        this.extensions = this.config.extensions ? this.config.extensions : [];
    }
    TextProcessor.prototype.availableExtensions = function () {
        return [".txt", ".text"].concat(this.extensions);
    };
    TextProcessor.prototype.processor = function (_ext) {
        return {
            preProcess: function (text, _filePath) {
                return text_to_ast_1.parse(text);
            },
            postProcess: function (messages, filePath) {
                return {
                    messages: messages,
                    filePath: filePath ? filePath : "<text>"
                };
            }
        };
    };
    return TextProcessor;
}());
exports.TextProcessor = TextProcessor;
//# sourceMappingURL=TextProcessor.js.map