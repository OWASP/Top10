/* eslint-disable no-unused-vars */
// LICENSE : MIT
"use strict";
import { parse } from "@textlint/text-to-ast";
var TextProcessor = /** @class */ (function () {
    function TextProcessor(config) {
        if (config === void 0) { config = {}; }
        this.config = config;
        // support "extension" option
        this.extensions = this.config.extensions ? this.config.extensions : [];
    }
    TextProcessor.prototype.availableExtensions = function () {
        return [".txt", ".text"].concat(this.extensions);
    };
    TextProcessor.prototype.processor = function (_ext) {
        return {
            preProcess: function (text, _filePath) {
                return parse(text);
            },
            postProcess: function (messages, filePath) {
                return {
                    messages: messages,
                    filePath: filePath ? filePath : "<text>"
                };
            }
        };
    };
    return TextProcessor;
}());
export { TextProcessor };
//# sourceMappingURL=TextProcessor.js.map