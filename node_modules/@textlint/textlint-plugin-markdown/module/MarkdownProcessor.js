/* eslint-disable no-unused-vars */
// LICENSE : MIT
"use strict";
import { parse } from "@textlint/markdown-to-ast";
var MarkdownProcessor = /** @class */ (function () {
    function MarkdownProcessor(config) {
        if (config === void 0) { config = {}; }
        this.config = config;
        this.extensions = this.config.extensions ? this.config.extensions : [];
    }
    MarkdownProcessor.prototype.availableExtensions = function () {
        return [".md", ".markdown", ".mdown", ".mkdn", ".mkd", ".mdwn", ".mkdown", ".ron"].concat(this.extensions);
    };
    MarkdownProcessor.prototype.processor = function (_ext) {
        return {
            preProcess: function (text, _filePath) {
                return parse(text);
            },
            postProcess: function (messages, filePath) {
                return {
                    messages: messages,
                    filePath: filePath ? filePath : "<markdown>"
                };
            }
        };
    };
    return MarkdownProcessor;
}());
export { MarkdownProcessor };
//# sourceMappingURL=MarkdownProcessor.js.map