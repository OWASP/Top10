/**
 * IT IS FOR TESTING
 */
export declare const resetFlags: () => void;
/**
 * set feature flag
 * @param {string} flagName
 * @param {boolean} status
 */
export declare const setFeature: (flagName: string, status: boolean) => void;
/**
 * If the feature flag of `flagName` is enabled, return true.
 * @param {string} flagName
 * @param {boolean=false} [loose]
 * @returns {boolean}
 */
export declare const isFeatureEnabled: (flagName: string, { loose }?: {
    loose?: boolean | undefined;
}) => boolean;
/**
 * Core flags
 * @type {{experimental, experimental, runningCLI, runningCLI, runningTester, runningTester}}
 */
export declare const coreFlags: {
    experimental: boolean;
    runningCLI: boolean;
    runningTester: boolean;
};
/**
 * if current is not experimental, throw error message.
 * @param message
 */
export declare function throwWithoutExperimental(message: string): void;
/**
 * if current is in testing, throw error message.
 * @param {string} message
 */
export declare function throwIfTesting(message: string): void;
