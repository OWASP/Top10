{"version":3,"sources":["../src/parse-comment.js"],"names":[],"mappings":";AACA;;;;;QAEgB,a,GAAA,a;QASA,wB,GAAA,wB;QAYA,e,GAAA,e;QAoBA,Y,GAAA,Y;AA1ChB,IAAM,sBAAsB,sBAA5B;AACO,SAAS,aAAT,CAAuB,UAAvB,EAAmC;AACtC,WAAO,oBAAoB,IAApB,CAAyB,UAAzB,CAAP;AACH;;;;;;;AAOM,SAAS,wBAAT,CAAkC,YAAlC,EAAgD;AACnD,QAAM,UAAU,EAAhB;AACA,iBAAa,OAAb,CAAqB,mBAArB,EAA0C,UAAS,GAAT,EAAc,OAAd,EAAsB;AAC5D,gBAAQ,IAAR,CAAa,OAAb;AACH,KAFD;AAGA,WAAO,OAAP;AACH;;;;;;AAMM,SAAS,eAAT,CAAyB,MAAzB,EAAiC;AACpC,QAAM,QAAQ,EAAd;;;AAGA,aAAS,OAAO,OAAP,CAAe,UAAf,EAA2B,GAA3B,CAAT;AACA,WAAO,KAAP,CAAa,IAAb,EAAmB,OAAnB,CAA2B,UAAU,IAAV,EAAgB;AACvC,eAAO,KAAK,IAAL,EAAP;AACA,YAAI,CAAC,IAAL,EAAW;AACP;AACH;AACD,cAAM,IAAN,IAAc,IAAd;AACH,KAND;AAOA,WAAO,KAAP;AACH;;;;;;;AAOM,SAAS,YAAT,CAAsB,MAAtB,EAA8B;AACjC,WAAO,OAAO,IAAP,CAAY,gBAAgB,MAAhB,CAAZ,CAAP;AACH","file":"parse-comment.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst HTML_COMMENT_REGEXP = /<!--((?:.|\\s)*?)-->/g;\nexport function isHTMLComment(htmlString) {\n    return HTML_COMMENT_REGEXP.test(htmlString);\n}\n\n/**\n * get comment value from html comment tag\n * @param {string} commentValue <!-- comment -->\n * @returns {string[]}\n */\nexport function getValuesFromHTMLComment(commentValue) {\n    const results = [];\n    commentValue.replace(HTML_COMMENT_REGEXP, function(all, comment){\n        results.push(comment);\n    });\n    return results;\n}\n/**\n * Parses a config of values separated by comma.\n * @param {string} string The string to parse.\n * @returns {Object} Result map of values and true values\n */\nexport function parseListConfig(string) {\n    const items = {};\n\n    // Collapse whitespace around ,\n    string = string.replace(/\\s*,\\s*/g, \",\");\n    string.split(/,+/).forEach(function (name) {\n        name = name.trim();\n        if (!name) {\n            return;\n        }\n        items[name] = true;\n    });\n    return items;\n}\n\n/**\n * parse \"textlint-enable aRule, bRule\" and return [\"aRule\", \"bRule\"]\n * @param {string} string\n * @returns {string[]}\n */\nexport function parseRuleIds(string) {\n    return Object.keys(parseListConfig(string));\n}"]}