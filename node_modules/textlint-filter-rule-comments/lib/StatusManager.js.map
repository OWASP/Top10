{"version":3,"sources":["../src/StatusManager.js"],"names":[],"mappings":";AACA;;;;;;;;;;IACqB,a;AACjB,2BAAY,QAAZ,EAAsB;AAAA;;;;;;;;;;;AAUlB,aAAK,eAAL,GAAuB,EAAvB;;;;;AAKA,aAAK,QAAL,GAAgB,QAAhB;AACH;;;;8CAEqB;AAAA;;AAClB,mBAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,qBAAa;AACzC,oBAAI,UAAU,QAAV,KAAuB,IAA3B,EAAiC;;;AAG7B,8BAAU,QAAV,GAAqB,MAAK,QAA1B;AACH;AACD,uBAAO,SAAP;AACH,aAPM,CAAP;AAQH;;;;;;;;;;;;yCASgB,S,EAAW,c,EAAgB;AACxC,gBAAM,kBAAkB,KAAK,eAA7B;AACA,gBAAI,eAAe,MAAnB,EAA2B;AACvB,+BAAe,OAAf,CAAuB,UAAU,MAAV,EAAkB;AACrC,oCAAgB,IAAhB,CAAqB;AACjB,oCAAY,UAAU,KAAV,CAAgB,CAAhB,CADK;AAEjB,kCAAU,IAFO;AAGjB,gCAAQ;AAHS,qBAArB;AAKH,iBAND;AAOH,aARD,MAQO;AACH,gCAAgB,IAAhB,CAAqB;AACjB,gCAAY,UAAU,KAAV,CAAgB,CAAhB,CADK;AAEjB,8BAAU,IAFO;AAGjB,4BAAQ;AAHS,iBAArB;AAKH;AACJ;;;;;;;;;;;;wCASe,S,EAAW,a,EAAe;AACtC,gBAAI,CAAJ;AACA,gBAAM,WAAW,UAAU,KAAV,CAAgB,CAAhB,CAAjB;AACA,gBAAM,kBAAkB,KAAK,eAA7B;AACA,gBAAI,cAAc,MAAlB,EAA0B;AACtB,8BAAc,OAAd,CAAsB,UAAU,MAAV,EAAkB;AACpC,yBAAK,IAAI,gBAAgB,MAAhB,GAAyB,CAAlC,EAAqC,KAAK,CAA1C,EAA6C,GAA7C,EAAkD;AAC9C,4BAAI,CAAC,gBAAgB,CAAhB,EAAmB,QAApB,IAAgC,gBAAgB,CAAhB,EAAmB,MAAnB,KAA8B,MAAlE,EAA0E;AACtE,4CAAgB,CAAhB,EAAmB,QAAnB,GAA8B,QAA9B;AACA;AACH;AACJ;AACJ,iBAPD;AAQH,aATD,MASO;;;AAGH,oBAAI,SAAJ;;AAEA,qBAAK,IAAI,gBAAgB,MAAhB,GAAyB,CAAlC,EAAqC,KAAK,CAA1C,EAA6C,GAA7C,EAAkD;AAC9C,wBAAI,aAAa,cAAc,gBAAgB,CAAhB,EAAmB,KAAlD,EAAyD;AACrD;AACH;;AAED,wBAAI,CAAC,gBAAgB,CAAhB,EAAmB,QAAxB,EAAkC;AAC9B,wCAAgB,CAAhB,EAAmB,QAAnB,GAA8B,QAA9B;AACA,oCAAY,gBAAgB,CAAhB,EAAmB,KAA/B;AACH;AACJ;AACJ;AACJ;;;;;;kBA5FgB,a","file":"StatusManager.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nexport default class StatusManager {\n    constructor(endIndex) {\n        /**\n         * @typedef {Object} IgnoringCommentObject\n         * @property {number|null} startIndex\n         * @property {number|null} endIndex\n         * @property {string|null} ruleId\n         */\n        /**\n         * @type {IgnoringCommentObject[]}\n         */\n        this.reportingConfig = [];\n\n        /**\n         * @type {TxtNode}\n         */\n        this.endIndex = endIndex;\n    }\n\n    getIgnoringMessages() {\n        return this.reportingConfig.map(reporting => {\n            if (reporting.endIndex === null) {\n                // [start, ?= document-end]\n                // filled with document's end\n                reporting.endIndex = this.endIndex;\n            }\n            return reporting;\n        });\n    }\n\n    /**\n     * Add data to reporting configuration to disable reporting for list of rules\n     * starting from start location\n     * @param  {Object} startNode Node to start\n     * @param  {string[]} rulesToDisable List of rules\n     * @returns {void}\n     */\n    disableReporting(startNode, rulesToDisable) {\n        const reportingConfig = this.reportingConfig;\n        if (rulesToDisable.length) {\n            rulesToDisable.forEach(function (ruleId) {\n                reportingConfig.push({\n                    startIndex: startNode.range[0],\n                    endIndex: null,\n                    ruleId: ruleId\n                });\n            });\n        } else {\n            reportingConfig.push({\n                startIndex: startNode.range[0],\n                endIndex: null,\n                ruleId: null\n            });\n        }\n    }\n\n    /**\n     * Add data to reporting configuration to enable reporting for list of rules\n     * starting from start location\n     * @param  {Object} startNode Node to start\n     * @param  {string[]} rulesToEnable List of rules\n     * @returns {void}\n     */\n    enableReporting(startNode, rulesToEnable) {\n        var i;\n        const endIndex = startNode.range[0];\n        const reportingConfig = this.reportingConfig;\n        if (rulesToEnable.length) {\n            rulesToEnable.forEach(function (ruleId) {\n                for (i = reportingConfig.length - 1; i >= 0; i--) {\n                    if (!reportingConfig[i].endIndex && reportingConfig[i].ruleId === ruleId) {\n                        reportingConfig[i].endIndex = endIndex;\n                        break;\n                    }\n                }\n            });\n        } else {\n\n            // find all previous disabled locations if they was started as list of rules\n            var prevStart;\n\n            for (i = reportingConfig.length - 1; i >= 0; i--) {\n                if (prevStart && prevStart !== reportingConfig[i].start) {\n                    break;\n                }\n\n                if (!reportingConfig[i].endIndex) {\n                    reportingConfig[i].endIndex = endIndex;\n                    prevStart = reportingConfig[i].start;\n                }\n            }\n        }\n    }\n\n}"]}